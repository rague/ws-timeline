// elm-watch hot {"version":"2.0.0-beta.3","targetName":"Widget","webSocketConnection":8180}
"use strict";
(() => {
  // node_modules/tiny-decoders/index.mjs
  function boolean(value) {
    if (typeof value !== "boolean") {
      throw new DecoderError({ tag: "boolean", got: value });
    }
    return value;
  }
  function number(value) {
    if (typeof value !== "number") {
      throw new DecoderError({ tag: "number", got: value });
    }
    return value;
  }
  function string(value) {
    if (typeof value !== "string") {
      throw new DecoderError({ tag: "string", got: value });
    }
    return value;
  }
  function stringUnion(mapping) {
    return function stringUnionDecoder(value) {
      const str = string(value);
      if (!Object.prototype.hasOwnProperty.call(mapping, str)) {
        throw new DecoderError({
          tag: "unknown stringUnion variant",
          knownVariants: Object.keys(mapping),
          got: str
        });
      }
      return str;
    };
  }
  function unknownArray(value) {
    if (!Array.isArray(value)) {
      throw new DecoderError({ tag: "array", got: value });
    }
    return value;
  }
  function unknownRecord(value) {
    if (typeof value !== "object" || value === null || Array.isArray(value)) {
      throw new DecoderError({ tag: "object", got: value });
    }
    return value;
  }
  function array(decoder) {
    return function arrayDecoder(value) {
      const arr = unknownArray(value);
      const result = [];
      for (let index = 0; index < arr.length; index++) {
        try {
          result.push(decoder(arr[index]));
        } catch (error) {
          throw DecoderError.at(error, index);
        }
      }
      return result;
    };
  }
  function record(decoder) {
    return function recordDecoder(value) {
      const object = unknownRecord(value);
      const keys = Object.keys(object);
      const result = {};
      for (const key of keys) {
        if (key === "__proto__") {
          continue;
        }
        try {
          result[key] = decoder(object[key]);
        } catch (error) {
          throw DecoderError.at(error, key);
        }
      }
      return result;
    };
  }
  function fields(callback, { exact = "allow extra", allow = "object" } = {}) {
    return function fieldsDecoder(value) {
      const object = allow === "array" ? unknownArray(value) : unknownRecord(value);
      const knownFields = /* @__PURE__ */ Object.create(null);
      function field(key, decoder) {
        try {
          const result2 = decoder(object[key]);
          knownFields[key] = null;
          return result2;
        } catch (error) {
          throw DecoderError.at(error, key);
        }
      }
      const result = callback(field, object);
      if (exact !== "allow extra") {
        const unknownFields = Object.keys(object).filter((key) => !Object.prototype.hasOwnProperty.call(knownFields, key));
        if (unknownFields.length > 0) {
          throw new DecoderError({
            tag: "exact fields",
            knownFields: Object.keys(knownFields),
            got: unknownFields
          });
        }
      }
      return result;
    };
  }
  function fieldsAuto(mapping, { exact = "allow extra" } = {}) {
    return function fieldsAutoDecoder(value) {
      const object = unknownRecord(value);
      const keys = Object.keys(mapping);
      const result = {};
      for (const key of keys) {
        if (key === "__proto__") {
          continue;
        }
        const decoder = mapping[key];
        try {
          result[key] = decoder(object[key]);
        } catch (error) {
          throw DecoderError.at(error, key);
        }
      }
      if (exact !== "allow extra") {
        const unknownFields = Object.keys(object).filter((key) => !Object.prototype.hasOwnProperty.call(mapping, key));
        if (unknownFields.length > 0) {
          throw new DecoderError({
            tag: "exact fields",
            knownFields: keys,
            got: unknownFields
          });
        }
      }
      return result;
    };
  }
  function fieldsUnion(key, mapping) {
    return fields(function fieldsUnionFields(field, object) {
      const tag = field(key, string);
      if (Object.prototype.hasOwnProperty.call(mapping, tag)) {
        const decoder = mapping[tag];
        return decoder(object);
      }
      throw new DecoderError({
        tag: "unknown fieldsUnion tag",
        knownTags: Object.keys(mapping),
        got: tag,
        key
      });
    });
  }
  function multi(mapping) {
    return function multiDecoder(value) {
      if (value === void 0) {
        if (mapping.undefined !== void 0) {
          return mapping.undefined(value);
        }
      } else if (value === null) {
        if (mapping.null !== void 0) {
          return mapping.null(value);
        }
      } else if (typeof value === "boolean") {
        if (mapping.boolean !== void 0) {
          return mapping.boolean(value);
        }
      } else if (typeof value === "number") {
        if (mapping.number !== void 0) {
          return mapping.number(value);
        }
      } else if (typeof value === "string") {
        if (mapping.string !== void 0) {
          return mapping.string(value);
        }
      } else if (Array.isArray(value)) {
        if (mapping.array !== void 0) {
          return mapping.array(value);
        }
      } else {
        if (mapping.object !== void 0) {
          return mapping.object(value);
        }
      }
      throw new DecoderError({
        tag: "unknown multi type",
        knownTypes: Object.keys(mapping),
        got: value
      });
    };
  }
  function optional(decoder, defaultValue) {
    return function optionalDecoder(value) {
      if (value === void 0) {
        return defaultValue;
      }
      try {
        return decoder(value);
      } catch (error) {
        const newError = DecoderError.at(error);
        if (newError.path.length === 0) {
          newError.optional = true;
        }
        throw newError;
      }
    };
  }
  function chain(decoder, next) {
    return function chainDecoder(value) {
      return next(decoder(value));
    };
  }
  function formatDecoderErrorVariant(variant, options) {
    const formatGot = (value) => {
      const formatted = repr(value, options);
      return (options === null || options === void 0 ? void 0 : options.sensitive) === true ? `${formatted}
(Actual values are hidden in sensitive mode.)` : formatted;
    };
    const stringList = (strings) => strings.length === 0 ? "(none)" : strings.map((s) => JSON.stringify(s)).join(", ");
    const got = (message, value) => value === DecoderError.MISSING_VALUE ? message : `${message}
Got: ${formatGot(value)}`;
    switch (variant.tag) {
      case "boolean":
      case "number":
      case "string":
        return got(`Expected a ${variant.tag}`, variant.got);
      case "array":
      case "object":
        return got(`Expected an ${variant.tag}`, variant.got);
      case "unknown multi type":
        return `Expected one of these types: ${variant.knownTypes.length === 0 ? "never" : variant.knownTypes.join(", ")}
Got: ${formatGot(variant.got)}`;
      case "unknown fieldsUnion tag":
        return `Expected one of these tags: ${stringList(variant.knownTags)}
Got: ${formatGot(variant.got)}`;
      case "unknown stringUnion variant":
        return `Expected one of these variants: ${stringList(variant.knownVariants)}
Got: ${formatGot(variant.got)}`;
      case "exact fields":
        return `Expected only these fields: ${stringList(variant.knownFields)}
Found extra fields: ${formatGot(variant.got).replace(/^\[|\]$/g, "")}`;
      case "tuple size":
        return `Expected ${variant.expected} items
Got: ${variant.got}`;
      case "custom":
        return got(variant.message, variant.got);
    }
  }
  var DecoderError = class extends TypeError {
    constructor({ key, ...params }) {
      const variant = "tag" in params ? params : { tag: "custom", message: params.message, got: params.value };
      super(`${formatDecoderErrorVariant(
        variant,
        { sensitive: true }
      )}

For better error messages, see https://github.com/lydell/tiny-decoders#error-messages`);
      this.path = key === void 0 ? [] : [key];
      this.variant = variant;
      this.nullable = false;
      this.optional = false;
    }
    static at(error, key) {
      if (error instanceof DecoderError) {
        if (key !== void 0) {
          error.path.unshift(key);
        }
        return error;
      }
      return new DecoderError({
        tag: "custom",
        message: error instanceof Error ? error.message : String(error),
        got: DecoderError.MISSING_VALUE,
        key
      });
    }
    format(options) {
      const path = this.path.map((part) => `[${JSON.stringify(part)}]`).join("");
      const nullableString = this.nullable ? " (nullable)" : "";
      const optionalString = this.optional ? " (optional)" : "";
      const variant = formatDecoderErrorVariant(this.variant, options);
      return `At root${path}${nullableString}${optionalString}:
${variant}`;
    }
  };
  DecoderError.MISSING_VALUE = Symbol("DecoderError.MISSING_VALUE");
  function repr(value, { recurse = true, maxArrayChildren = 5, maxObjectChildren = 3, maxLength = 100, recurseMaxLength = 20, sensitive = false } = {}) {
    const type = typeof value;
    const toStringType = Object.prototype.toString.call(value).replace(/^\[object\s+(.+)\]$/, "$1");
    try {
      if (value == null || type === "number" || type === "boolean" || type === "symbol" || toStringType === "RegExp") {
        return sensitive ? toStringType.toLowerCase() : truncate(String(value), maxLength);
      }
      if (type === "string") {
        return sensitive ? type : truncate(JSON.stringify(value), maxLength);
      }
      if (typeof value === "function") {
        return `function ${truncate(JSON.stringify(value.name), maxLength)}`;
      }
      if (Array.isArray(value)) {
        const arr = value;
        if (!recurse && arr.length > 0) {
          return `${toStringType}(${arr.length})`;
        }
        const lastIndex = arr.length - 1;
        const items = [];
        const end = Math.min(maxArrayChildren - 1, lastIndex);
        for (let index = 0; index <= end; index++) {
          const item = index in arr ? repr(arr[index], {
            recurse: false,
            maxLength: recurseMaxLength,
            sensitive
          }) : "<empty>";
          items.push(item);
        }
        if (end < lastIndex) {
          items.push(`(${lastIndex - end} more)`);
        }
        return `[${items.join(", ")}]`;
      }
      if (toStringType === "Object") {
        const object = value;
        const keys = Object.keys(object);
        const { name } = object.constructor;
        if (!recurse && keys.length > 0) {
          return `${name}(${keys.length})`;
        }
        const numHidden = Math.max(0, keys.length - maxObjectChildren);
        const items = keys.slice(0, maxObjectChildren).map((key2) => `${truncate(JSON.stringify(key2), recurseMaxLength)}: ${repr(object[key2], {
          recurse: false,
          maxLength: recurseMaxLength,
          sensitive
        })}`).concat(numHidden > 0 ? `(${numHidden} more)` : []);
        const prefix = name === "Object" ? "" : `${name} `;
        return `${prefix}{${items.join(", ")}}`;
      }
      return toStringType;
    } catch (_error) {
      return toStringType;
    }
  }
  function truncate(str, maxLength) {
    const half = Math.floor(maxLength / 2);
    return str.length <= maxLength ? str : `${str.slice(0, half)}\u2026${str.slice(-half)}`;
  }

  // src/Helpers.ts
  function join(array2, separator) {
    return array2.join(separator);
  }
  function pad(number2) {
    return number2.toString().padStart(2, "0");
  }
  function formatDate(date) {
    return join(
      [pad(date.getFullYear()), pad(date.getMonth() + 1), pad(date.getDate())],
      "-"
    );
  }
  function formatTime(date) {
    return join(
      [pad(date.getHours()), pad(date.getMinutes()), pad(date.getSeconds())],
      ":"
    );
  }

  // src/TeaProgram.ts
  async function runTeaProgram(options) {
    return new Promise((resolve, reject) => {
      const [initialModel, initialCmds] = options.init;
      let model = initialModel;
      const msgQueue = [];
      let killed = false;
      const dispatch = (dispatchedMsg) => {
        if (killed) {
          return;
        }
        const alreadyRunning = msgQueue.length > 0;
        msgQueue.push(dispatchedMsg);
        if (alreadyRunning) {
          return;
        }
        for (const msg of msgQueue) {
          const [newModel, cmds] = options.update(msg, model);
          model = newModel;
          runCmds(cmds);
        }
        msgQueue.length = 0;
      };
      const runCmds = (cmds) => {
        for (const cmd of cmds) {
          options.runCmd(
            cmd,
            mutable,
            dispatch,
            (result) => {
              cmds.length = 0;
              killed = true;
              resolve(result);
            },
            (error) => {
              cmds.length = 0;
              killed = true;
              reject(error);
            }
          );
          if (killed) {
            break;
          }
        }
      };
      const mutable = options.initMutable(
        dispatch,
        (result) => {
          killed = true;
          resolve(result);
        },
        (error) => {
          killed = true;
          reject(error);
        }
      );
      runCmds(initialCmds);
    });
  }

  // src/Types.ts
  var AbsolutePath = fieldsAuto({
    tag: () => "AbsolutePath",
    absolutePath: string
  });
  var CompilationMode = stringUnion({
    debug: null,
    standard: null,
    optimize: null
  });
  var BrowserUiPosition = stringUnion({
    TopLeft: null,
    TopRight: null,
    BottomLeft: null,
    BottomRight: null
  });

  // client/css.ts
  async function reloadAllCssIfNeeded(originalStyles) {
    const results = await Promise.allSettled(
      Array.from(
        document.styleSheets,
        (styleSheet) => reloadCssIfNeeded(originalStyles, styleSheet)
      )
    );
    return results.some(
      (result) => result.status === "fulfilled" && result.value
    );
  }
  async function reloadCssIfNeeded(originalStyles, styleSheet) {
    if (styleSheet.href === null) {
      return false;
    }
    const url = makeUrl(styleSheet.href);
    if (url === void 0 || url.host !== window.location.host) {
      return false;
    }
    const response = await fetch(url, { cache: "reload" });
    if (!response.ok) {
      return false;
    }
    const newCss = await response.text();
    let newStyleSheet;
    const isFirefox = "MozAppearance" in document.documentElement.style;
    if (isFirefox) {
      if (/@import\b/i.test(newCss)) {
        console.warn(
          "elm-watch: Reloading CSS with @import is not possible in Firefox (not even in a comment or string). Style sheet:",
          url.href
        );
        return false;
      }
      newStyleSheet = new CSSStyleSheet();
      await newStyleSheet.replace(newCss);
    } else {
      const importUrls = getAllCssImports(url, styleSheet);
      await Promise.allSettled(
        importUrls.map((importUrl) => fetch(importUrl, { cache: "reload" }))
      );
      newStyleSheet = await parseCssWithImports(newCss);
    }
    return newStyleSheet === void 0 ? false : updateStyleSheetIfNeeded(originalStyles, styleSheet, newStyleSheet);
  }
  async function parseCssWithImports(css) {
    return new Promise((resolve) => {
      const style = document.createElement("style");
      style.media = "print";
      style.textContent = css;
      style.onerror = style.onload = () => {
        resolve(style.sheet ?? void 0);
        style.remove();
      };
      document.head.append(style);
    });
  }
  function makeUrl(urlString, base) {
    try {
      return new URL(urlString, base);
    } catch {
      return void 0;
    }
  }
  function getAllCssImports(styleSheetUrl, styleSheet) {
    return Array.from(styleSheet.cssRules).flatMap((rule) => {
      if (rule instanceof CSSImportRule) {
        const url = makeUrl(rule.href, styleSheetUrl);
        if (url !== void 0 && url.host === styleSheetUrl.host) {
          return [url, ...getAllCssImports(url, rule.styleSheet)];
        }
      }
      return [];
    });
  }
  function updateStyleSheetIfNeeded(originalStyles, oldStyleSheet, newStyleSheet) {
    let changed = false;
    const length = Math.min(
      oldStyleSheet.cssRules.length,
      newStyleSheet.cssRules.length
    );
    let index = 0;
    for (; index < length; index++) {
      const oldRule = oldStyleSheet.cssRules[index];
      const newRule = newStyleSheet.cssRules[index];
      if (oldRule instanceof CSSStyleRule && newRule instanceof CSSStyleRule) {
        if (oldRule.selectorText !== newRule.selectorText) {
          oldRule.selectorText = newRule.selectorText;
          changed = true;
        }
        let originals = originalStyles.get(oldRule);
        if (originals === void 0) {
          originals = oldRule.style.cssText;
          originalStyles.set(oldRule, originals);
        }
        if (originals !== newRule.style.cssText) {
          oldStyleSheet.deleteRule(index);
          oldStyleSheet.insertRule(newRule.cssText, index);
          originalStyles.set(
            oldStyleSheet.cssRules[index],
            newRule.style.cssText
          );
          changed = true;
        } else {
          const nestedChanged = updateStyleSheetIfNeeded(
            originalStyles,
            oldRule,
            newRule
          );
          if (nestedChanged) {
            changed = true;
            oldRule.selectorText = oldRule.selectorText;
          }
        }
      } else if (oldRule instanceof CSSImportRule && newRule instanceof CSSImportRule && oldRule.cssText === newRule.cssText) {
        const nestedChanged = updateStyleSheetIfNeeded(
          originalStyles,
          oldRule.styleSheet,
          newRule.styleSheet
        );
        if (nestedChanged) {
          changed = true;
          oldRule.media = oldRule.media;
        }
      } else if (oldRule instanceof CSSConditionRule && newRule instanceof CSSConditionRule && oldRule.conditionText === newRule.conditionText || oldRule instanceof CSSLayerBlockRule && newRule instanceof CSSLayerBlockRule && oldRule.name === newRule.name || oldRule instanceof CSSPageRule && newRule instanceof CSSPageRule && oldRule.selectorText === newRule.selectorText) {
        const nestedChanged = updateStyleSheetIfNeeded(
          originalStyles,
          oldRule,
          newRule
        );
        if (nestedChanged) {
          changed = true;
        }
      } else if (oldRule.cssText !== newRule.cssText) {
        oldStyleSheet.deleteRule(index);
        oldStyleSheet.insertRule(newRule.cssText, index);
        changed = true;
      }
    }
    while (index < oldStyleSheet.cssRules.length) {
      oldStyleSheet.deleteRule(index);
      changed = true;
    }
    for (; index < newStyleSheet.cssRules.length; index++) {
      const newRule = newStyleSheet.cssRules[index];
      oldStyleSheet.insertRule(newRule.cssText, index);
      changed = true;
    }
    return changed;
  }

  // src/NonEmptyArray.ts
  function NonEmptyArray(decoder) {
    return chain(array(decoder), (array2) => {
      if (isNonEmptyArray(array2)) {
        return array2;
      }
      throw new DecoderError({
        message: "Expected a non-empty array",
        value: array2
      });
    });
  }
  function isNonEmptyArray(array2) {
    return array2.length >= 1;
  }

  // client/WebSocketMessages.ts
  var FocusedTabAcknowledged = fieldsAuto({
    tag: () => "FocusedTabAcknowledged"
  });
  var OpenEditorError = fieldsUnion("tag", {
    EnvNotSet: fieldsAuto({
      tag: () => "EnvNotSet"
    }),
    CommandFailed: fieldsAuto({
      tag: () => "CommandFailed",
      message: string
    })
  });
  var OpenEditorFailed = fieldsAuto({
    tag: () => "OpenEditorFailed",
    error: OpenEditorError
  });
  var ErrorLocation = fieldsUnion("tag", {
    FileOnly: fieldsAuto({
      tag: () => "FileOnly",
      file: AbsolutePath
    }),
    FileWithLineAndColumn: fieldsAuto({
      tag: () => "FileWithLineAndColumn",
      file: AbsolutePath,
      line: number,
      column: number
    }),
    Target: fieldsAuto({
      tag: () => "Target",
      targetName: string
    })
  });
  var CompileError = fieldsAuto({
    title: string,
    location: optional(ErrorLocation),
    htmlContent: string
  });
  var StaticFilesChanged = fieldsAuto({
    tag: () => "StaticFilesChanged",
    changedFileUrlPaths: NonEmptyArray(string)
  });
  var StaticFilesMayHaveChangedWhileDisconnected = fieldsAuto({
    tag: () => "StaticFilesMayHaveChangedWhileDisconnected"
  });
  var StatusChanged = fieldsAuto({
    tag: () => "StatusChanged",
    status: fieldsUnion("tag", {
      AlreadyUpToDate: fieldsAuto({
        tag: () => "AlreadyUpToDate",
        compilationMode: CompilationMode,
        browserUiPosition: BrowserUiPosition
      }),
      Busy: fieldsAuto({
        tag: () => "Busy",
        compilationMode: CompilationMode,
        browserUiPosition: BrowserUiPosition
      }),
      CompileError: fieldsAuto({
        tag: () => "CompileError",
        compilationMode: CompilationMode,
        browserUiPosition: BrowserUiPosition,
        openErrorOverlay: boolean,
        errors: array(CompileError),
        foregroundColor: string,
        backgroundColor: string
      }),
      ElmJsonError: fieldsAuto({
        tag: () => "ElmJsonError",
        error: string
      }),
      ClientError: fieldsAuto({
        tag: () => "ClientError",
        message: string
      })
    })
  });
  var SuccessfullyCompiled = fieldsAuto({
    tag: () => "SuccessfullyCompiled",
    code: string,
    elmCompiledTimestamp: number,
    compilationMode: CompilationMode,
    browserUiPosition: BrowserUiPosition
  });
  var SuccessfullyCompiledButRecordFieldsChanged = fieldsAuto({
    tag: () => "SuccessfullyCompiledButRecordFieldsChanged"
  });
  var WebSocketToClientMessage = fieldsUnion("tag", {
    FocusedTabAcknowledged,
    OpenEditorFailed,
    StaticFilesChanged,
    StaticFilesMayHaveChangedWhileDisconnected,
    StatusChanged,
    SuccessfullyCompiled,
    SuccessfullyCompiledButRecordFieldsChanged
  });
  var WebSocketToServerMessage = fieldsUnion("tag", {
    ChangedCompilationMode: fieldsAuto({
      tag: () => "ChangedCompilationMode",
      compilationMode: CompilationMode
    }),
    ChangedBrowserUiPosition: fieldsAuto({
      tag: () => "ChangedBrowserUiPosition",
      browserUiPosition: BrowserUiPosition
    }),
    ChangedOpenErrorOverlay: fieldsAuto({
      tag: () => "ChangedOpenErrorOverlay",
      openErrorOverlay: boolean
    }),
    FocusedTab: fieldsAuto({
      tag: () => "FocusedTab"
    }),
    PressedOpenEditor: fieldsAuto({
      tag: () => "PressedOpenEditor",
      file: AbsolutePath,
      line: number,
      column: number
    })
  });
  function decodeWebSocketToClientMessage(message) {
    if (message.startsWith("//")) {
      const newlineIndexRaw = message.indexOf("\n");
      const newlineIndex = newlineIndexRaw === -1 ? message.length : newlineIndexRaw;
      const jsonString = message.slice(2, newlineIndex);
      const parsed = SuccessfullyCompiled(JSON.parse(jsonString));
      return { ...parsed, code: message };
    } else {
      return WebSocketToClientMessage(JSON.parse(message));
    }
  }

  // client/client.ts
  var window2 = globalThis;
  var IS_WEB_WORKER = window2.window === void 0;
  var RELOAD_MESSAGE_KEY = "__elmWatchReloadMessage";
  var RELOAD_TARGET_NAME_KEY_PREFIX = "__elmWatchReloadTarget__";
  var DEFAULT_ELM_WATCH = {
    MOCKED_TIMINGS: false,
    WEBSOCKET_TIMEOUT: 1e3,
    ON_INIT: () => {
    },
    ON_RENDER: () => {
    },
    ON_REACHED_IDLE_STATE: () => {
    },
    CHANGED_CSS: new Date(0),
    CHANGED_FILE_URL_PATHS: { timestamp: new Date(0), changed: /* @__PURE__ */ new Set() },
    ORIGINAL_STYLES: /* @__PURE__ */ new WeakMap(),
    RELOAD_STATUSES: {},
    RELOAD_PAGE: (message) => {
      if (message !== void 0) {
        try {
          window2.sessionStorage.setItem(RELOAD_MESSAGE_KEY, message);
        } catch {
        }
      }
      if (IS_WEB_WORKER) {
        if (message !== void 0) {
          console.info(message);
        }
        console.error(
          message === void 0 ? "elm-watch: You need to reload the page! I seem to be running in a Web Worker, so I can\u2019t do it for you." : `elm-watch: You need to reload the page! I seem to be running in a Web Worker, so I couldn\u2019t actually reload the page (see above).`
        );
      } else {
        window2.location.reload();
      }
    },
    KILL_MATCHING: () => Promise.resolve(),
    DISCONNECT: () => {
    },
    LOG_DEBUG: console.debug
  };
  var { __ELM_WATCH } = window2;
  if (typeof __ELM_WATCH !== "object" || __ELM_WATCH === null) {
    __ELM_WATCH = {};
    Object.defineProperty(window2, "__ELM_WATCH", { value: __ELM_WATCH });
  }
  for (const [key, value] of Object.entries(DEFAULT_ELM_WATCH)) {
    if (__ELM_WATCH[key] === void 0) {
      __ELM_WATCH[key] = value;
    }
  }
  var VERSION = "2.0.0-beta.3";
  var TARGET_NAME = "Widget";
  var INITIAL_ELM_COMPILED_TIMESTAMP = Number(
    "1743367642218"
  );
  var ORIGINAL_COMPILATION_MODE = "standard";
  var ORIGINAL_BROWSER_UI_POSITION = "BottomLeft";
  var WEBSOCKET_CONNECTION = "8180";
  var CONTAINER_ID = "elm-watch";
  var DEBUG = String("false") === "true";
  var ELM_WATCH_CHANGED_FILE_URL_PATHS_EVENT = "elm-watch:changed-file-url-paths";
  var BROWSER_UI_MOVED_EVENT = "BROWSER_UI_MOVED_EVENT";
  var CLOSE_ALL_ERROR_OVERLAYS_EVENT = "CLOSE_ALL_ERROR_OVERLAYS_EVENT";
  var ELM_WATCH_CHANGED_FILE_URL_BATCH_TIME = 10;
  var JUST_CHANGED_BROWSER_UI_POSITION_TIMEOUT = 2e3;
  var SEND_KEY_DO_NOT_USE_ALL_THE_TIME = Symbol(
    "This value is supposed to only be obtained via `Status`."
  );
  function logDebug(...args) {
    if (DEBUG) {
      __ELM_WATCH.LOG_DEBUG(...args);
    }
  }
  function parseBrowseUiPositionWithFallback(value) {
    try {
      return BrowserUiPosition(value);
    } catch {
      return ORIGINAL_BROWSER_UI_POSITION;
    }
  }
  function removeElmWatchIndexHtmlComment() {
    const node = document.firstChild;
    if (node instanceof Comment && node.data.trimStart().startsWith("elm-watch debug information:")) {
      node.remove();
    }
  }
  function run() {
    let elmCompiledTimestampBeforeReload = void 0;
    try {
      const message = window2.sessionStorage.getItem(RELOAD_MESSAGE_KEY);
      if (message !== null) {
        console.info(message);
        window2.sessionStorage.removeItem(RELOAD_MESSAGE_KEY);
      }
      const key = RELOAD_TARGET_NAME_KEY_PREFIX + TARGET_NAME;
      const previous = window2.sessionStorage.getItem(key);
      if (previous !== null) {
        const number2 = Number(previous);
        if (Number.isFinite(number2)) {
          elmCompiledTimestampBeforeReload = number2;
        }
        window2.sessionStorage.removeItem(key);
      }
    } catch {
    }
    const elements = IS_WEB_WORKER ? void 0 : getOrCreateTargetRoot();
    const browserUiPosition = elements === void 0 ? ORIGINAL_BROWSER_UI_POSITION : parseBrowseUiPositionWithFallback(elements.container.dataset.position);
    const getNow = () => new Date();
    if (!IS_WEB_WORKER) {
      removeElmWatchIndexHtmlComment();
    }
    runTeaProgram({
      initMutable: initMutable(getNow, elements),
      init: init(getNow(), browserUiPosition, elmCompiledTimestampBeforeReload),
      update: (msg, model) => {
        const [updatedModel, cmds] = update(msg, model);
        const modelChanged = updatedModel !== model;
        const reloadTrouble = model.status.tag !== updatedModel.status.tag && updatedModel.status.tag === "WaitingForReload" && updatedModel.elmCompiledTimestamp === updatedModel.elmCompiledTimestampBeforeReload;
        const newModel = modelChanged ? {
          ...updatedModel,
          uiExpanded: reloadTrouble ? true : updatedModel.uiExpanded
        } : model;
        const oldErrorOverlay = getErrorOverlay(model.status);
        const newErrorOverlay = getErrorOverlay(newModel.status);
        const statusType = statusToStatusType(newModel.status.tag);
        const statusTypeChanged = statusType !== statusToStatusType(model.status.tag);
        const statusFlashType = getStatusFlashType({
          statusType,
          statusTypeChanged,
          hasReceivedHotReload: newModel.elmCompiledTimestamp !== INITIAL_ELM_COMPILED_TIMESTAMP,
          uiRelatedUpdate: msg.tag === "UiMsg",
          errorOverlayVisible: elements !== void 0 && !elements.overlay.hidden
        });
        const flashCmd = statusFlashType === void 0 || cmds.some((cmd) => cmd.tag === "Flash") ? [] : [{ tag: "Flash", flashType: statusFlashType }];
        const allCmds = modelChanged ? [
          ...cmds,
          {
            tag: "UpdateGlobalStatus",
            reloadStatus: statusToReloadStatus(newModel),
            elmCompiledTimestamp: newModel.elmCompiledTimestamp
          },
          newModel.status.tag === model.status.tag && oldErrorOverlay?.openErrorOverlay === newErrorOverlay?.openErrorOverlay ? { tag: "NoCmd" } : {
            tag: "UpdateErrorOverlay",
            errors: newErrorOverlay === void 0 || !newErrorOverlay.openErrorOverlay ? /* @__PURE__ */ new Map() : newErrorOverlay.errors,
            sendKey: statusToSpecialCaseSendKey(newModel.status)
          },
          ...elements !== void 0 || newModel.status.tag !== model.status.tag ? [
            {
              tag: "Render",
              model: newModel,
              manageFocus: msg.tag === "UiMsg"
            }
          ] : [],
          ...flashCmd,
          model.browserUiPosition === newModel.browserUiPosition ? { tag: "NoCmd" } : {
            tag: "SetBrowserUiPosition",
            browserUiPosition: newModel.browserUiPosition
          },
          reloadTrouble ? { tag: "TriggerReachedIdleState", reason: "ReloadTrouble" } : { tag: "NoCmd" }
        ] : [...cmds, ...flashCmd];
        logDebug(`${msg.tag} (${TARGET_NAME})`, msg, newModel, allCmds);
        return [newModel, allCmds];
      },
      runCmd: runCmd(getNow, elements)
    }).catch((error) => {
      console.error("elm-watch: Unexpectedly exited with error:", error);
    });
  }
  function getErrorOverlay(status) {
    return "errorOverlay" in status ? status.errorOverlay : void 0;
  }
  function statusToReloadStatus(model) {
    switch (model.status.tag) {
      case "Busy":
      case "Connecting":
        return { tag: "MightWantToReload" };
      case "CompileError":
      case "ElmJsonError":
      case "EvalError":
      case "Idle":
      case "SleepingBeforeReconnect":
      case "UnexpectedError":
        return { tag: "NoReloadWanted" };
      case "WaitingForReload":
        return model.elmCompiledTimestamp === model.elmCompiledTimestampBeforeReload ? { tag: "NoReloadWanted" } : { tag: "ReloadRequested", reasons: model.status.reasons };
    }
  }
  function statusToStatusType(statusTag) {
    switch (statusTag) {
      case "Idle":
        return "Success";
      case "Busy":
      case "Connecting":
      case "SleepingBeforeReconnect":
      case "WaitingForReload":
        return "Waiting";
      case "CompileError":
      case "ElmJsonError":
      case "EvalError":
      case "UnexpectedError":
        return "Error";
    }
  }
  function statusToSpecialCaseSendKey(status) {
    switch (status.tag) {
      case "CompileError":
      case "Idle":
        return status.sendKey;
      case "Busy":
        return SEND_KEY_DO_NOT_USE_ALL_THE_TIME;
      case "Connecting":
      case "SleepingBeforeReconnect":
      case "WaitingForReload":
      case "ElmJsonError":
      case "EvalError":
      case "UnexpectedError":
        return void 0;
    }
  }
  function getOrCreateContainer() {
    const existing = document.getElementById(CONTAINER_ID);
    if (existing !== null) {
      return existing;
    }
    const container = h(HTMLDivElement, { id: CONTAINER_ID });
    container.style.all = "unset";
    container.style.position = "fixed";
    container.style.zIndex = "2147483647";
    const shadowRoot = container.attachShadow({ mode: "open" });
    shadowRoot.append(h(HTMLStyleElement, {}, CSS));
    document.documentElement.append(container);
    return container;
  }
  function getOrCreateTargetRoot() {
    const container = getOrCreateContainer();
    const { shadowRoot } = container;
    if (shadowRoot === null) {
      throw new Error(
        `elm-watch: Cannot set up hot reload, because an element with ID ${CONTAINER_ID} exists, but \`.shadowRoot\` is null!`
      );
    }
    let overlay = shadowRoot.querySelector(`.${CLASS.overlay}`);
    if (overlay === null) {
      overlay = h(HTMLDivElement, {
        className: CLASS.overlay,
        attrs: { "data-test-id": "Overlay" }
      });
      shadowRoot.append(overlay);
    }
    let overlayCloseButton = shadowRoot.querySelector(
      `.${CLASS.overlayCloseButton}`
    );
    if (overlayCloseButton === null) {
      const closeAllErrorOverlays = () => {
        shadowRoot.dispatchEvent(new CustomEvent(CLOSE_ALL_ERROR_OVERLAYS_EVENT));
      };
      overlayCloseButton = h(HTMLButtonElement, {
        className: CLASS.overlayCloseButton,
        attrs: {
          "aria-label": "Close error overlay",
          "data-test-id": "OverlayCloseButton"
        },
        onclick: closeAllErrorOverlays
      });
      shadowRoot.append(overlayCloseButton);
      const overlayNonNull = overlay;
      window2.addEventListener(
        "keydown",
        (event) => {
          if (overlayNonNull.hasChildNodes() && event.key === "Escape") {
            event.preventDefault();
            event.stopImmediatePropagation();
            closeAllErrorOverlays();
          }
        },
        true
      );
    }
    let root = shadowRoot.querySelector(`.${CLASS.root}`);
    if (root === null) {
      root = h(HTMLDivElement, { className: CLASS.root });
      shadowRoot.append(root);
    }
    const targetRoot = createTargetRoot(TARGET_NAME);
    root.append(targetRoot);
    const elements = {
      container,
      shadowRoot,
      overlay,
      overlayCloseButton,
      root,
      targetRoot
    };
    setBrowserUiPosition(ORIGINAL_BROWSER_UI_POSITION, elements);
    return elements;
  }
  function createTargetRoot(targetName) {
    return h(HTMLDivElement, {
      className: CLASS.targetRoot,
      attrs: { "data-target": targetName }
    });
  }
  function browserUiPositionToCss(browserUiPosition) {
    switch (browserUiPosition) {
      case "TopLeft":
        return { top: "-1px", bottom: "auto", left: "-1px", right: "auto" };
      case "TopRight":
        return { top: "-1px", bottom: "auto", left: "auto", right: "-1px" };
      case "BottomLeft":
        return { top: "auto", bottom: "-1px", left: "-1px", right: "auto" };
      case "BottomRight":
        return { top: "auto", bottom: "-1px", left: "auto", right: "-1px" };
    }
  }
  function browserUiPositionToCssForChooser(browserUiPosition) {
    switch (browserUiPosition) {
      case "TopLeft":
        return { top: "auto", bottom: "0", left: "auto", right: "0" };
      case "TopRight":
        return { top: "auto", bottom: "0", left: "0", right: "auto" };
      case "BottomLeft":
        return { top: "0", bottom: "auto", left: "auto", right: "0" };
      case "BottomRight":
        return { top: "0", bottom: "auto", left: "0", right: "auto" };
    }
  }
  function setBrowserUiPosition(browserUiPosition, elements) {
    const isFirstTargetRoot = elements.targetRoot.previousElementSibling === null;
    if (!isFirstTargetRoot) {
      return;
    }
    elements.container.dataset.position = browserUiPosition;
    for (const [key, value] of Object.entries(
      browserUiPositionToCss(browserUiPosition)
    )) {
      elements.container.style.setProperty(key, value);
    }
    const isInBottomHalf = browserUiPosition === "BottomLeft" || browserUiPosition === "BottomRight";
    elements.root.classList.toggle(CLASS.rootBottomHalf, isInBottomHalf);
    elements.shadowRoot.dispatchEvent(
      new CustomEvent(BROWSER_UI_MOVED_EVENT, { detail: browserUiPosition })
    );
  }
  var initMutable = (getNow, elements) => (dispatch, resolvePromise) => {
    let removeListeners = [];
    const mutable = {
      removeListeners: () => {
        for (const removeListener of removeListeners) {
          removeListener();
        }
      },
      webSocket: initWebSocket(
        getNow,
        INITIAL_ELM_COMPILED_TIMESTAMP,
        dispatch
      ),
      webSocketTimeoutId: void 0
    };
    mutable.webSocket.addEventListener(
      "open",
      () => {
        removeListeners = [
          addEventListener(window2, "focus", (event) => {
            if (event instanceof CustomEvent && event.detail !== TARGET_NAME) {
              return;
            }
            dispatch({ tag: "FocusedTab" });
          }),
          addEventListener(window2, "visibilitychange", () => {
            if (document.visibilityState === "visible") {
              dispatch({
                tag: "PageVisibilityChangedToVisible",
                date: getNow()
              });
            }
          }),
          ...elements === void 0 ? [] : [
            addEventListener(
              elements.shadowRoot,
              BROWSER_UI_MOVED_EVENT,
              (event) => {
                dispatch({
                  tag: "BrowserUiMoved",
                  browserUiPosition: fields(
                    (field) => field("detail", parseBrowseUiPositionWithFallback)
                  )(event)
                });
              }
            ),
            addEventListener(
              elements.shadowRoot,
              CLOSE_ALL_ERROR_OVERLAYS_EVENT,
              () => {
                dispatch({
                  tag: "UiMsg",
                  date: getNow(),
                  msg: {
                    tag: "ChangedOpenErrorOverlay",
                    openErrorOverlay: false
                  }
                });
              }
            )
          ]
        ];
      },
      { once: true }
    );
    __ELM_WATCH.RELOAD_STATUSES[TARGET_NAME] = {
      tag: "MightWantToReload"
    };
    const originalOnInit = __ELM_WATCH.ON_INIT;
    __ELM_WATCH.ON_INIT = () => {
      dispatch({ tag: "AppInit" });
      originalOnInit();
    };
    const originalKillMatching = __ELM_WATCH.KILL_MATCHING;
    __ELM_WATCH.KILL_MATCHING = (targetName) => new Promise((resolve, reject) => {
      if (targetName.test(TARGET_NAME) && mutable.webSocket.readyState !== WebSocket.CLOSED) {
        mutable.webSocket.addEventListener("close", () => {
          originalKillMatching(targetName).then(resolve).catch(reject);
        });
        mutable.removeListeners();
        mutable.webSocket.close();
        if (mutable.webSocketTimeoutId !== void 0) {
          clearTimeout(mutable.webSocketTimeoutId);
          mutable.webSocketTimeoutId = void 0;
        }
        elements?.targetRoot.remove();
        resolvePromise(void 0);
      } else {
        originalKillMatching(targetName).then(resolve).catch(reject);
      }
    });
    const originalDisconnect = __ELM_WATCH.DISCONNECT;
    __ELM_WATCH.DISCONNECT = (targetName) => {
      if (targetName.test(TARGET_NAME) && mutable.webSocket.readyState !== WebSocket.CLOSED) {
        mutable.webSocket.close();
      } else {
        originalDisconnect(targetName);
      }
    };
    return mutable;
  };
  function addEventListener(target, eventName, listener) {
    target.addEventListener(eventName, listener);
    return () => {
      target.removeEventListener(eventName, listener);
    };
  }
  function initWebSocket(getNow, elmCompiledTimestamp, dispatch) {
    const hostname = window2.location.hostname === "" ? "localhost" : window2.location.hostname;
    const protocol = window2.location.protocol === "https:" ? "wss" : "ws";
    const url = new URL(
      /^\d+$/.test(WEBSOCKET_CONNECTION) ? `${protocol}://${hostname}:${WEBSOCKET_CONNECTION}/elm-watch` : WEBSOCKET_CONNECTION
    );
    url.searchParams.set("elmWatchVersion", VERSION);
    url.searchParams.set("targetName", TARGET_NAME);
    url.searchParams.set("elmCompiledTimestamp", elmCompiledTimestamp.toString());
    const webSocket = new WebSocket(url);
    webSocket.addEventListener("open", () => {
      dispatch({ tag: "WebSocketConnected", date: getNow() });
    });
    webSocket.addEventListener("close", () => {
      dispatch({
        tag: "WebSocketClosed",
        date: getNow()
      });
    });
    webSocket.addEventListener("message", (event) => {
      dispatch({
        tag: "WebSocketMessageReceived",
        date: getNow(),
        data: event.data
      });
    });
    return webSocket;
  }
  var init = (date, browserUiPosition, elmCompiledTimestampBeforeReload) => {
    const model = {
      status: { tag: "Connecting", date, attemptNumber: 1 },
      compilationMode: ORIGINAL_COMPILATION_MODE,
      browserUiPosition,
      lastBrowserUiPositionChangeDate: void 0,
      elmCompiledTimestamp: INITIAL_ELM_COMPILED_TIMESTAMP,
      elmCompiledTimestampBeforeReload,
      uiExpanded: false
    };
    return [model, [{ tag: "Render", model, manageFocus: false }]];
  };
  function update(msg, model) {
    switch (msg.tag) {
      case "AppInit":
        return [{ ...model }, []];
      case "BrowserUiMoved":
        return [{ ...model, browserUiPosition: msg.browserUiPosition }, []];
      case "EvalErrored":
        return [
          {
            ...model,
            status: { tag: "EvalError", date: msg.date },
            uiExpanded: true
          },
          [
            {
              tag: "TriggerReachedIdleState",
              reason: "EvalErrored"
            }
          ]
        ];
      case "EvalNeedsReload":
        return [
          {
            ...model,
            status: {
              tag: "WaitingForReload",
              date: msg.date,
              reasons: msg.reasons
            }
          },
          []
        ];
      case "EvalSucceeded":
        return [
          {
            ...model,
            status: {
              tag: "Idle",
              date: msg.date,
              sendKey: SEND_KEY_DO_NOT_USE_ALL_THE_TIME
            }
          },
          [
            {
              tag: "TriggerReachedIdleState",
              reason: "EvalSucceeded"
            }
          ]
        ];
      case "FocusedTab":
        return [
          model,
          [
            ...statusToStatusType(model.status.tag) === "Error" ? [{ tag: "Flash", flashType: "error" }] : [],
            {
              tag: "SendMessage",
              message: { tag: "FocusedTab" },
              sendKey: SEND_KEY_DO_NOT_USE_ALL_THE_TIME
            },
            {
              tag: "WebSocketTimeoutBegin"
            }
          ]
        ];
      case "PageVisibilityChangedToVisible":
        return reconnect(model, msg.date, { force: true });
      case "ReloadAllCssDone":
        return [
          model,
          msg.didChange ? [{ tag: "Flash", flashType: "success" }] : []
        ];
      case "SleepBeforeReconnectDone":
        return reconnect(model, msg.date, { force: false });
      case "UiMsg":
        return onUiMsg(msg.date, msg.msg, model);
      case "WebSocketClosed": {
        const attemptNumber = "attemptNumber" in model.status ? model.status.attemptNumber + 1 : 1;
        return [
          {
            ...model,
            status: {
              tag: "SleepingBeforeReconnect",
              date: msg.date,
              attemptNumber
            }
          },
          [{ tag: "SleepBeforeReconnect", attemptNumber }]
        ];
      }
      case "WebSocketConnected":
        return [
          {
            ...model,
            status: { tag: "Busy", date: msg.date, errorOverlay: void 0 }
          },
          []
        ];
      case "WebSocketMessageReceived": {
        const result = parseWebSocketMessageData(msg.data);
        switch (result.tag) {
          case "Success":
            return onWebSocketToClientMessage(msg.date, result.message, model);
          case "Error":
            return [
              {
                ...model,
                status: {
                  tag: "UnexpectedError",
                  date: msg.date,
                  message: result.message
                },
                uiExpanded: true
              },
              []
            ];
        }
      }
    }
  }
  function onUiMsg(date, msg, model) {
    switch (msg.tag) {
      case "ChangedBrowserUiPosition":
        return [
          {
            ...model,
            browserUiPosition: msg.browserUiPosition,
            lastBrowserUiPositionChangeDate: date
          },
          [
            {
              tag: "SendMessage",
              message: {
                tag: "ChangedBrowserUiPosition",
                browserUiPosition: msg.browserUiPosition
              },
              sendKey: msg.sendKey
            }
          ]
        ];
      case "ChangedCompilationMode":
        return [
          {
            ...model,
            status: {
              tag: "Busy",
              date,
              errorOverlay: getErrorOverlay(model.status)
            },
            compilationMode: msg.compilationMode
          },
          [
            {
              tag: "SendMessage",
              message: {
                tag: "ChangedCompilationMode",
                compilationMode: msg.compilationMode
              },
              sendKey: msg.sendKey
            }
          ]
        ];
      case "ChangedOpenErrorOverlay":
        return "errorOverlay" in model.status && model.status.errorOverlay !== void 0 ? [
          {
            ...model,
            status: {
              ...model.status,
              errorOverlay: {
                ...model.status.errorOverlay,
                openErrorOverlay: msg.openErrorOverlay
              }
            },
            uiExpanded: false
          },
          [
            {
              tag: "SendMessage",
              message: {
                tag: "ChangedOpenErrorOverlay",
                openErrorOverlay: msg.openErrorOverlay
              },
              sendKey: model.status.tag === "Busy" ? SEND_KEY_DO_NOT_USE_ALL_THE_TIME : model.status.sendKey
            }
          ]
        ] : [model, []];
      case "PressedChevron":
        return [{ ...model, uiExpanded: !model.uiExpanded }, []];
      case "PressedOpenEditor":
        return [
          model,
          [
            {
              tag: "SendMessage",
              message: {
                tag: "PressedOpenEditor",
                file: msg.file,
                line: msg.line,
                column: msg.column
              },
              sendKey: msg.sendKey
            }
          ]
        ];
      case "PressedReconnectNow":
        return reconnect(model, date, { force: true });
    }
  }
  function onWebSocketToClientMessage(date, msg, model) {
    switch (msg.tag) {
      case "FocusedTabAcknowledged":
        return [model, [{ tag: "WebSocketTimeoutClear" }]];
      case "OpenEditorFailed":
        return [
          model.status.tag === "CompileError" ? {
            ...model,
            status: { ...model.status, openEditorError: msg.error },
            uiExpanded: true
          } : model,
          [
            {
              tag: "TriggerReachedIdleState",
              reason: "OpenEditorFailed"
            }
          ]
        ];
      case "StaticFilesChanged":
        return [
          { ...model, status: { ...model.status, date } },
          [
            {
              tag: "HandleStaticFilesChanged",
              changedFileUrlPaths: msg.changedFileUrlPaths
            }
          ]
        ];
      case "StaticFilesMayHaveChangedWhileDisconnected":
        return [
          { ...model, status: { ...model.status, date } },
          [
            {
              tag: "HandleStaticFilesChanged",
              changedFileUrlPaths: "AnyFileMayHaveChanged"
            }
          ]
        ];
      case "StatusChanged":
        return statusChanged(date, msg, model);
      case "SuccessfullyCompiled": {
        const justChangedBrowserUiPosition = model.lastBrowserUiPositionChangeDate !== void 0 && date.getTime() - model.lastBrowserUiPositionChangeDate.getTime() < JUST_CHANGED_BROWSER_UI_POSITION_TIMEOUT;
        return msg.compilationMode !== ORIGINAL_COMPILATION_MODE ? [
          {
            ...model,
            status: {
              tag: "WaitingForReload",
              date,
              reasons: ORIGINAL_COMPILATION_MODE === "proxy" ? [] : [
                `compilation mode changed from ${ORIGINAL_COMPILATION_MODE} to ${msg.compilationMode}.`
              ]
            },
            compilationMode: msg.compilationMode
          },
          []
        ] : [
          {
            ...model,
            compilationMode: msg.compilationMode,
            elmCompiledTimestamp: msg.elmCompiledTimestamp,
            browserUiPosition: msg.browserUiPosition,
            lastBrowserUiPositionChangeDate: void 0
          },
          [
            { tag: "Eval", code: msg.code },
            justChangedBrowserUiPosition ? {
              tag: "SetBrowserUiPosition",
              browserUiPosition: msg.browserUiPosition
            } : { tag: "NoCmd" }
          ]
        ];
      }
      case "SuccessfullyCompiledButRecordFieldsChanged":
        return [
          {
            ...model,
            status: {
              tag: "WaitingForReload",
              date,
              reasons: [
                `record field mangling in optimize mode was different than last time.`
              ]
            }
          },
          []
        ];
    }
  }
  function statusChanged(date, { status }, model) {
    switch (status.tag) {
      case "AlreadyUpToDate":
        return [
          {
            ...model,
            status: {
              tag: "Idle",
              date,
              sendKey: SEND_KEY_DO_NOT_USE_ALL_THE_TIME
            },
            compilationMode: status.compilationMode,
            browserUiPosition: status.browserUiPosition
          },
          [
            {
              tag: "TriggerReachedIdleState",
              reason: "AlreadyUpToDate"
            }
          ]
        ];
      case "Busy":
        return [
          {
            ...model,
            status: {
              tag: "Busy",
              date,
              errorOverlay: getErrorOverlay(model.status)
            },
            compilationMode: status.compilationMode,
            browserUiPosition: status.browserUiPosition
          },
          []
        ];
      case "ClientError":
        return [
          {
            ...model,
            status: { tag: "UnexpectedError", date, message: status.message },
            uiExpanded: true
          },
          [
            {
              tag: "TriggerReachedIdleState",
              reason: "ClientError"
            }
          ]
        ];
      case "CompileError":
        return [
          {
            ...model,
            status: {
              tag: "CompileError",
              date,
              sendKey: SEND_KEY_DO_NOT_USE_ALL_THE_TIME,
              errorOverlay: {
                errors: new Map(
                  status.errors.map((error) => {
                    const overlayError = {
                      title: error.title,
                      location: error.location,
                      htmlContent: error.htmlContent,
                      foregroundColor: status.foregroundColor,
                      backgroundColor: status.backgroundColor
                    };
                    const id = JSON.stringify(overlayError);
                    return [id, overlayError];
                  })
                ),
                openErrorOverlay: status.openErrorOverlay
              },
              openEditorError: void 0
            },
            compilationMode: status.compilationMode,
            browserUiPosition: status.browserUiPosition
          },
          [
            {
              tag: "TriggerReachedIdleState",
              reason: "CompileError"
            }
          ]
        ];
      case "ElmJsonError":
        return [
          {
            ...model,
            status: { tag: "ElmJsonError", date, error: status.error }
          },
          [
            {
              tag: "TriggerReachedIdleState",
              reason: "ElmJsonError"
            }
          ]
        ];
    }
  }
  function reconnect(model, date, { force }) {
    return model.status.tag === "SleepingBeforeReconnect" && (date.getTime() - model.status.date.getTime() >= retryWaitMs(model.status.attemptNumber) || force) ? [
      {
        ...model,
        status: {
          tag: "Connecting",
          date,
          attemptNumber: model.status.attemptNumber
        }
      },
      [
        {
          tag: "Reconnect",
          elmCompiledTimestamp: model.elmCompiledTimestamp
        }
      ]
    ] : [model, []];
  }
  function retryWaitMs(attemptNumber) {
    return Math.min(1e3 + 10 * attemptNumber ** 2, 1e3 * 60);
  }
  function printRetryWaitMs(attemptNumber) {
    return `${retryWaitMs(attemptNumber) / 1e3} seconds`;
  }
  var runCmd = (getNow, elements) => (cmd, mutable, dispatch, _resolvePromise, rejectPromise) => {
    switch (cmd.tag) {
      case "Eval": {
        try {
          const f = new Function(cmd.code);
          f();
          dispatch({ tag: "EvalSucceeded", date: getNow() });
        } catch (unknownError) {
          if (unknownError instanceof Error && unknownError.message.startsWith("ELM_WATCH_RELOAD_NEEDED")) {
            dispatch({
              tag: "EvalNeedsReload",
              date: getNow(),
              reasons: unknownError.message.split("\n\n---\n\n").slice(1)
            });
          } else {
            void Promise.reject(unknownError);
            dispatch({ tag: "EvalErrored", date: getNow() });
          }
        }
        return;
      }
      case "Flash":
        if (elements !== void 0) {
          flash(elements, cmd.flashType);
        }
        return;
      case "HandleStaticFilesChanged": {
        const now = getNow();
        let shouldReloadCss = false;
        if (cmd.changedFileUrlPaths === "AnyFileMayHaveChanged") {
          shouldReloadCss = true;
        } else {
          if (now.getTime() - __ELM_WATCH.CHANGED_FILE_URL_PATHS.timestamp.getTime() > ELM_WATCH_CHANGED_FILE_URL_BATCH_TIME) {
            __ELM_WATCH.CHANGED_FILE_URL_PATHS = {
              timestamp: now,
              changed: /* @__PURE__ */ new Set()
            };
          }
          const justChangedFileUrlPaths = /* @__PURE__ */ new Set();
          for (const path of cmd.changedFileUrlPaths) {
            if (path.toLowerCase().endsWith(".css")) {
              shouldReloadCss = true;
            } else if (!__ELM_WATCH.CHANGED_FILE_URL_PATHS.changed.has(path)) {
              justChangedFileUrlPaths.add(path);
            }
          }
          if (justChangedFileUrlPaths.size > 0) {
            for (const path of justChangedFileUrlPaths) {
              __ELM_WATCH.CHANGED_FILE_URL_PATHS.changed.add(path);
            }
            window2.dispatchEvent(
              new CustomEvent(ELM_WATCH_CHANGED_FILE_URL_PATHS_EVENT, {
                detail: justChangedFileUrlPaths
              })
            );
          }
        }
        if (shouldReloadCss && now.getTime() - __ELM_WATCH.CHANGED_CSS.getTime() > ELM_WATCH_CHANGED_FILE_URL_BATCH_TIME) {
          __ELM_WATCH.CHANGED_CSS = now;
          reloadAllCssIfNeeded(__ELM_WATCH.ORIGINAL_STYLES).then((didChange) => {
            dispatch({ tag: "ReloadAllCssDone", didChange });
          }).catch(rejectPromise);
        }
        return;
      }
      case "NoCmd":
        return;
      case "Reconnect":
        mutable.webSocket = initWebSocket(
          getNow,
          cmd.elmCompiledTimestamp,
          dispatch
        );
        return;
      case "Render": {
        const { model } = cmd;
        const info = {
          version: VERSION,
          webSocketUrl: new URL(mutable.webSocket.url),
          targetName: TARGET_NAME,
          originalCompilationMode: ORIGINAL_COMPILATION_MODE,
          initializedElmAppsStatus: checkInitializedElmAppsStatus()
        };
        if (elements === void 0) {
          const isError = statusToStatusType(model.status.tag) === "Error";
          const consoleMethod = isError ? console.error : console.info;
          consoleMethod(renderWebWorker(model, info));
        } else {
          const { targetRoot } = elements;
          render(getNow, targetRoot, dispatch, model, info, cmd.manageFocus);
        }
        return;
      }
      case "SendMessage": {
        const json = JSON.stringify(cmd.message);
        try {
          mutable.webSocket.send(json);
        } catch (error) {
          console.error("elm-watch: Failed to send WebSocket message:", error);
        }
        return;
      }
      case "SetBrowserUiPosition":
        if (elements !== void 0) {
          setBrowserUiPosition(cmd.browserUiPosition, elements);
        }
        return;
      case "SleepBeforeReconnect":
        setTimeout(() => {
          if (typeof document === "undefined" || document.visibilityState === "visible") {
            dispatch({ tag: "SleepBeforeReconnectDone", date: getNow() });
          }
        }, retryWaitMs(cmd.attemptNumber));
        return;
      case "TriggerReachedIdleState":
        Promise.resolve().then(() => {
          __ELM_WATCH.ON_REACHED_IDLE_STATE(cmd.reason);
        }).catch(rejectPromise);
        return;
      case "UpdateErrorOverlay":
        if (elements !== void 0) {
          updateErrorOverlay(
            TARGET_NAME,
            (msg) => {
              dispatch({ tag: "UiMsg", date: getNow(), msg });
            },
            cmd.sendKey,
            cmd.errors,
            elements.overlay,
            elements.overlayCloseButton
          );
        }
        return;
      case "UpdateGlobalStatus":
        __ELM_WATCH.RELOAD_STATUSES[TARGET_NAME] = cmd.reloadStatus;
        switch (cmd.reloadStatus.tag) {
          case "NoReloadWanted":
          case "MightWantToReload":
            break;
          case "ReloadRequested":
            try {
              window2.sessionStorage.setItem(
                RELOAD_TARGET_NAME_KEY_PREFIX + TARGET_NAME,
                cmd.elmCompiledTimestamp.toString()
              );
            } catch {
            }
        }
        reloadPageIfNeeded();
        return;
      case "WebSocketTimeoutBegin":
        if (mutable.webSocketTimeoutId === void 0) {
          mutable.webSocketTimeoutId = setTimeout(() => {
            mutable.webSocketTimeoutId = void 0;
            mutable.webSocket.close();
            dispatch({
              tag: "WebSocketClosed",
              date: getNow()
            });
          }, __ELM_WATCH.WEBSOCKET_TIMEOUT);
        }
        return;
      case "WebSocketTimeoutClear":
        if (mutable.webSocketTimeoutId !== void 0) {
          clearTimeout(mutable.webSocketTimeoutId);
          mutable.webSocketTimeoutId = void 0;
        }
        return;
    }
  };
  function parseWebSocketMessageData(data) {
    try {
      return {
        tag: "Success",
        message: decodeWebSocketToClientMessage(string(data))
      };
    } catch (unknownError) {
      return {
        tag: "Error",
        message: `Failed to decode web socket message sent from the server:
${possiblyDecodeErrorToString(
          unknownError
        )}`
      };
    }
  }
  function possiblyDecodeErrorToString(unknownError) {
    return unknownError instanceof DecoderError ? unknownError.format() : unknownError instanceof Error ? unknownError.message : repr(unknownError);
  }
  function functionToNull(value) {
    return typeof value === "function" ? null : value;
  }
  var ProgramType = stringUnion({
    "Platform.worker": null,
    "Browser.sandbox": null,
    "Browser.element": null,
    "Browser.document": null,
    "Browser.application": null,
    Html: null
  });
  var ElmModule = chain(
    record(
      chain(
        functionToNull,
        multi({
          null: () => [],
          array: array(
            fields((field) => field("__elmWatchProgramType", ProgramType))
          ),
          object: (value) => ElmModule(value)
        })
      )
    ),
    (record2) => Object.values(record2).flat()
  );
  var ProgramTypes = fields((field) => field("Elm", ElmModule));
  function checkInitializedElmAppsStatus() {
    if (window2.Elm !== void 0 && "__elmWatchProxy" in window2.Elm) {
      return {
        tag: "DebuggerModeStatus",
        status: {
          tag: "Disabled",
          reason: noDebuggerYetReason
        }
      };
    }
    if (window2.Elm === void 0) {
      return { tag: "MissingWindowElm" };
    }
    let programTypes;
    try {
      programTypes = ProgramTypes(window2);
    } catch (unknownError) {
      return {
        tag: "DecodeError",
        message: possiblyDecodeErrorToString(unknownError)
      };
    }
    if (programTypes.length === 0) {
      return { tag: "NoProgramsAtAll" };
    }
    const noDebugger = programTypes.filter((programType) => {
      switch (programType) {
        case "Platform.worker":
        case "Html":
          return true;
        case "Browser.sandbox":
        case "Browser.element":
        case "Browser.document":
        case "Browser.application":
          return false;
      }
    });
    return {
      tag: "DebuggerModeStatus",
      status: noDebugger.length === programTypes.length ? {
        tag: "Disabled",
        reason: noDebuggerReason(new Set(noDebugger))
      } : { tag: "Enabled" }
    };
  }
  function reloadPageIfNeeded() {
    let shouldReload = false;
    const reasons = [];
    for (const [targetName, reloadStatus] of Object.entries(
      __ELM_WATCH.RELOAD_STATUSES
    )) {
      switch (reloadStatus.tag) {
        case "MightWantToReload":
          return;
        case "NoReloadWanted":
          break;
        case "ReloadRequested":
          shouldReload = true;
          if (reloadStatus.reasons.length > 0) {
            reasons.push([targetName, reloadStatus.reasons]);
          }
          break;
      }
    }
    if (!shouldReload) {
      return;
    }
    const first = reasons[0];
    const [separator, reasonString] = reasons.length === 1 && first !== void 0 && first[1].length === 1 ? [" ", `${first[1].join("")}
(target: ${first[0]})`] : [
      ":\n\n",
      reasons.map(
        ([targetName, subReasons]) => [
          targetName,
          ...subReasons.map((subReason) => `- ${subReason}`)
        ].join("\n")
      ).join("\n\n")
    ];
    const message = reasons.length === 0 ? void 0 : `elm-watch: I did a full page reload because${separator}${reasonString}`;
    __ELM_WATCH.RELOAD_STATUSES = {};
    __ELM_WATCH.RELOAD_PAGE(message);
  }
  function h(t, {
    attrs,
    style,
    localName,
    ...props
  }, ...children) {
    const element = document.createElement(
      localName ?? t.name.replace(/^HTML(\w+)Element$/, "$1").replace("Anchor", "a").replace("Paragraph", "p").replace(/^([DOU])List$/, "$1l").toLowerCase()
    );
    Object.assign(element, props);
    if (attrs !== void 0) {
      for (const [key, value] of Object.entries(attrs)) {
        element.setAttribute(key, value);
      }
    }
    if (style !== void 0) {
      for (const [key, value] of Object.entries(style)) {
        element.style[key] = value;
      }
    }
    for (const child of children) {
      if (child !== void 0) {
        element.append(
          typeof child === "string" ? document.createTextNode(child) : child
        );
      }
    }
    return element;
  }
  function renderWebWorker(model, info) {
    const statusData = statusIconAndText(model, info);
    return `${statusData.icon} elm-watch: ${statusData.status} ${formatTime(
      model.status.date
    )} (${info.targetName})`;
  }
  function render(getNow, targetRoot, dispatch, model, info, manageFocus) {
    targetRoot.replaceChildren(
      view(
        (msg) => {
          dispatch({ tag: "UiMsg", date: getNow(), msg });
        },
        model,
        info
      )
    );
    const firstFocusableElement = targetRoot.querySelector(`button, [tabindex]`);
    if (manageFocus && firstFocusableElement instanceof HTMLElement) {
      firstFocusableElement.focus();
    }
    __ELM_WATCH.ON_RENDER(TARGET_NAME);
  }
  var CLASS = {
    browserUiPositionButton: "browserUiPositionButton",
    browserUiPositionChooser: "browserUiPositionChooser",
    chevronButton: "chevronButton",
    compilationModeWithIcon: "compilationModeWithIcon",
    container: "container",
    debugModeIcon: "debugModeIcon",
    envNotSet: "envNotSet",
    errorLocationButton: "errorLocationButton",
    errorTitle: "errorTitle",
    expandedUiContainer: "expandedUiContainer",
    flash: "flash",
    overlay: "overlay",
    overlayCloseButton: "overlayCloseButton",
    root: "root",
    rootBottomHalf: "rootBottomHalf",
    shortStatusContainer: "shortStatusContainer",
    targetName: "targetName",
    targetRoot: "targetRoot"
  };
  function getStatusFlashType({
    statusType,
    statusTypeChanged,
    hasReceivedHotReload,
    uiRelatedUpdate,
    errorOverlayVisible
  }) {
    switch (statusType) {
      case "Success":
        return statusTypeChanged && hasReceivedHotReload ? "success" : void 0;
      case "Error":
        return errorOverlayVisible ? statusTypeChanged && hasReceivedHotReload ? "error" : void 0 : uiRelatedUpdate ? void 0 : "error";
      case "Waiting":
        return void 0;
    }
  }
  function flash(elements, flashType) {
    for (const element of elements.targetRoot.querySelectorAll(
      `.${CLASS.flash}`
    )) {
      element.setAttribute("data-flash", flashType);
    }
  }
  var CHEVRON_UP = "\u25B2";
  var CHEVRON_DOWN = "\u25BC";
  var CSS = `
input,
button,
select,
textarea {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
  letter-spacing: inherit;
  line-height: inherit;
  color: inherit;
  margin: 0;
}

fieldset {
  display: grid;
  gap: 0.25em;
  margin: 0;
  border: 1px solid var(--grey);
  padding: 0.25em 0.75em 0.5em;
}

fieldset:disabled {
  color: var(--grey);
}

p,
dd {
  margin: 0;
}

dl {
  display: grid;
  grid-template-columns: auto auto;
  gap: 0.25em 1em;
  margin: 0;
  white-space: nowrap;
}

dt {
  text-align: right;
  color: var(--grey);
}

time {
  display: inline-grid;
  overflow: hidden;
}

time::after {
  content: attr(data-format);
  visibility: hidden;
  height: 0;
}

.${CLASS.overlay} {
  position: fixed;
  z-index: -2;
  inset: 0;
  overflow-y: auto;
  padding: 2ch 0;
}

.${CLASS.overlayCloseButton} {
  position: fixed;
  z-index: -1;
  top: 0;
  right: 0;
  appearance: none;
  padding: 1em;
  border: none;
  border-radius: 0;
  background: none;
  cursor: pointer;
  font-size: 1.25em;
  filter: drop-shadow(0 0 0.125em var(--backgroundColor));
}

.${CLASS.overlayCloseButton}::before,
.${CLASS.overlayCloseButton}::after {
  content: "";
  display: block;
  position: absolute;
  top: 50%;
  left: 50%;
  width: 0.125em;
  height: 1em;
  background-color: var(--foregroundColor);
  transform: translate(-50%, -50%) rotate(45deg);
}

.${CLASS.overlayCloseButton}::after {
  transform: translate(-50%, -50%) rotate(-45deg);
}

.${CLASS.overlay},
.${CLASS.overlay} pre {
  font-family: ui-monospace, SFMono-Regular, SF Mono, Menlo, Consolas, Liberation Mono, monospace;
}

.${CLASS.overlay} details {
  --border-thickness: 0.125em;
  border-top: var(--border-thickness) solid;
  margin: 2ch 0;
}

.${CLASS.overlay} summary {
  cursor: pointer;
  pointer-events: none;
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: 0 2ch;
  word-break: break-word;
}

.${CLASS.overlay} summary::-webkit-details-marker {
  display: none;
}

.${CLASS.overlay} summary::marker {
  content: none;
}

.${CLASS.overlay} summary > * {
  pointer-events: auto;
}

.${CLASS.errorTitle} {
  display: inline-block;
  font-weight: bold;
  --padding: 1ch;
  padding: 0 var(--padding);
  transform: translate(calc(var(--padding) * -1), calc(-50% - var(--border-thickness) / 2));
}

.${CLASS.errorTitle}::before {
  content: "${CHEVRON_DOWN}";
  display: inline-block;
  margin-right: 1ch;
  transform: translateY(-0.0625em);
}

details[open] > summary > .${CLASS.errorTitle}::before {
  content: "${CHEVRON_UP}";
}

.${CLASS.errorLocationButton} {
  appearance: none;
  padding: 0;
  border: none;
  border-radius: 0;
  background: none;
  text-align: left;
  text-decoration: underline;
  cursor: pointer;
}

.${CLASS.overlay} pre {
  margin: 0;
  padding: 2ch;
  overflow-x: auto;
}

.${CLASS.root} {
  all: initial;
  --grey: #767676;
  display: flex;
  align-items: start;
  overflow: auto;
  max-height: 100vh;
  max-width: 100vw;
  color: black;
  font-family: system-ui;
}

.${CLASS.rootBottomHalf} {
  align-items: end;
}

.${CLASS.targetRoot} + .${CLASS.targetRoot} {
  margin-left: -1px;
}

.${CLASS.targetRoot}:only-of-type .${CLASS.debugModeIcon},
.${CLASS.targetRoot}:only-of-type .${CLASS.targetName} {
  display: none;
}

.${CLASS.container} {
  display: flex;
  flex-direction: column-reverse;
  background-color: white;
  border: 1px solid var(--grey);
}

.${CLASS.rootBottomHalf} .${CLASS.container} {
  flex-direction: column;
}

.${CLASS.envNotSet} {
  display: grid;
  gap: 0.75em;
  margin: 2em 0;
}

.${CLASS.envNotSet},
.${CLASS.root} pre {
  border-left: 0.25em solid var(--grey);
  padding-left: 0.5em;
}

.${CLASS.root} pre {
  margin: 0;
  white-space: pre-wrap;
}

.${CLASS.expandedUiContainer} {
  padding: 1em;
  padding-top: 0.75em;
  display: grid;
  gap: 0.75em;
  outline: none;
  contain: paint;
}

.${CLASS.rootBottomHalf} .${CLASS.expandedUiContainer} {
  padding-bottom: 0.75em;
}

.${CLASS.expandedUiContainer}:is(.length0, .length1) {
  grid-template-columns: min-content;
}

.${CLASS.expandedUiContainer} > dl {
  justify-self: start;
}

.${CLASS.expandedUiContainer} label {
  display: grid;
  grid-template-columns: min-content auto;
  align-items: center;
  gap: 0.25em;
}

.${CLASS.expandedUiContainer} label.Disabled {
  color: var(--grey);
}

.${CLASS.expandedUiContainer} label > small {
  grid-column: 2;
}

.${CLASS.compilationModeWithIcon} {
  display: flex;
  align-items: center;
  gap: 0.25em;
}

.${CLASS.browserUiPositionChooser} {
  position: absolute;
  display: grid;
  grid-template-columns: min-content min-content;
  pointer-events: none;
}

.${CLASS.browserUiPositionButton} {
  appearance: none;
  padding: 0;
  border: none;
  background: none;
  border-radius: none;
  pointer-events: auto;
  width: 1em;
  height: 1em;
  text-align: center;
  line-height: 1em;
}

.${CLASS.browserUiPositionButton}:hover {
  background-color: rgba(0, 0, 0, 0.25);
}

.${CLASS.targetRoot}:not(:first-child) .${CLASS.browserUiPositionChooser} {
  display: none;
}

.${CLASS.shortStatusContainer} {
  line-height: 1;
  padding: 0.25em;
  cursor: pointer;
  user-select: none;
  display: flex;
  align-items: center;
  gap: 0.25em;
}

[data-flash]::before {
  content: "";
  position: absolute;
  margin-top: 0.5em;
  margin-left: 0.5em;
  --size: min(500px, 100vmin);
  width: var(--size);
  height: var(--size);
  border-radius: 50%;
  animation: flash 0.7s 0.05s ease-out both;
  pointer-events: none;
}

[data-flash="error"]::before {
  background-color: #eb0000;
}

[data-flash="success"]::before {
  background-color: #00b600;
}

@keyframes flash {
  from {
    transform: translate(-50%, -50%) scale(0);
    opacity: 0.9;
  }

  to {
    transform: translate(-50%, -50%) scale(1);
    opacity: 0;
  }
}

@keyframes nudge {
  from {
    opacity: 0;
  }

  to {
    opacity: 0.8;
  }
}

@media (prefers-reduced-motion: reduce) {
  [data-flash]::before {
    transform: translate(-50%, -50%);
    width: 2em;
    height: 2em;
    animation: nudge 0.25s ease-in-out 4 alternate forwards;
  }
}

.${CLASS.chevronButton} {
  appearance: none;
  border: none;
  border-radius: 0;
  background: none;
  padding: 0;
  cursor: pointer;
}
`;
  function view(dispatch, passedModel, info) {
    const model = __ELM_WATCH.MOCKED_TIMINGS ? {
      ...passedModel,
      status: {
        ...passedModel.status,
        date: new Date("2022-02-05T13:10:05Z")
      }
    } : passedModel;
    const statusData = {
      ...statusIconAndText(model, info),
      ...viewStatus(dispatch, model, info)
    };
    return h(
      HTMLDivElement,
      { className: CLASS.container },
      model.uiExpanded ? viewExpandedUi(
        model.status,
        statusData,
        info,
        model.browserUiPosition,
        dispatch
      ) : void 0,
      h(
        HTMLDivElement,
        {
          className: CLASS.shortStatusContainer,
          onclick: () => {
            dispatch({ tag: "PressedChevron" });
          }
        },
        h(
          HTMLButtonElement,
          {
            className: CLASS.chevronButton,
            attrs: { "aria-expanded": model.uiExpanded.toString() }
          },
          icon(
            model.uiExpanded ? CHEVRON_UP : CHEVRON_DOWN,
            model.uiExpanded ? "Collapse elm-watch" : "Expand elm-watch"
          )
        ),
        compilationModeIcon(model.compilationMode),
        icon(statusData.icon, statusData.status, {
          className: CLASS.flash,
          onanimationend: (event) => {
            if (event.currentTarget instanceof HTMLElement) {
              event.currentTarget.removeAttribute("data-flash");
            }
          }
        }),
        h(
          HTMLTimeElement,
          { dateTime: model.status.date.toISOString() },
          formatTime(model.status.date)
        ),
        h(HTMLSpanElement, { className: CLASS.targetName }, TARGET_NAME)
      )
    );
  }
  function icon(emoji, alt, props) {
    return h(
      HTMLSpanElement,
      { attrs: { "aria-label": alt }, ...props },
      h(HTMLSpanElement, { attrs: { "aria-hidden": "true" } }, emoji)
    );
  }
  function viewExpandedUi(status, statusData, info, browserUiPosition, dispatch) {
    const items = [
      ["target", info.targetName],
      ["elm-watch", info.version],
      ["web socket", printWebSocketUrl(info.webSocketUrl)],
      [
        "updated",
        h(
          HTMLTimeElement,
          {
            dateTime: status.date.toISOString(),
            attrs: { "data-format": "2044-04-30 04:44:44" }
          },
          `${formatDate(status.date)} ${formatTime(status.date)}`
        )
      ],
      ["status", statusData.status],
      ...statusData.dl
    ];
    const browserUiPositionSendKey = statusToSpecialCaseSendKey(status);
    return h(
      HTMLDivElement,
      {
        className: `${CLASS.expandedUiContainer} length${statusData.content.length}`,
        attrs: {
          tabindex: "-1"
        }
      },
      h(
        HTMLDListElement,
        {},
        ...items.flatMap(([key, value]) => [
          h(HTMLElement, { localName: "dt" }, key),
          h(HTMLElement, { localName: "dd" }, value)
        ])
      ),
      ...statusData.content,
      browserUiPositionSendKey === void 0 ? void 0 : viewBrowserUiPositionChooser(
        browserUiPosition,
        dispatch,
        browserUiPositionSendKey
      )
    );
  }
  var allBrowserUiPositionsInOrder = [
    "TopLeft",
    "TopRight",
    "BottomLeft",
    "BottomRight"
  ];
  function viewBrowserUiPositionChooser(currentPosition, dispatch, sendKey) {
    const arrows = getBrowserUiPositionArrows(currentPosition);
    return h(
      HTMLDivElement,
      {
        className: CLASS.browserUiPositionChooser,
        style: browserUiPositionToCssForChooser(currentPosition)
      },
      ...allBrowserUiPositionsInOrder.map((position) => {
        const arrow = arrows[position];
        return arrow === void 0 ? h(HTMLDivElement, { style: { visibility: "hidden" } }, "\xB7") : h(
          HTMLButtonElement,
          {
            className: CLASS.browserUiPositionButton,
            attrs: { "data-position": position },
            onclick: () => {
              dispatch({
                tag: "ChangedBrowserUiPosition",
                browserUiPosition: position,
                sendKey
              });
            }
          },
          arrow
        );
      })
    );
  }
  var ARROW_UP = "\u2191";
  var ARROW_DOWN = "\u2193";
  var ARROW_LEFT = "\u2190";
  var ARROW_RIGHT = "\u2192";
  var ARROW_UP_LEFT = "\u2196";
  var ARROW_UP_RIGHT = "\u2197";
  var ARROW_DOWN_LEFT = "\u2199";
  var ARROW_DOWN_RIGHT = "\u2198";
  function getBrowserUiPositionArrows(browserUiPosition) {
    switch (browserUiPosition) {
      case "TopLeft":
        return {
          TopLeft: void 0,
          TopRight: ARROW_RIGHT,
          BottomLeft: ARROW_DOWN,
          BottomRight: ARROW_DOWN_RIGHT
        };
      case "TopRight":
        return {
          TopLeft: ARROW_LEFT,
          TopRight: void 0,
          BottomLeft: ARROW_DOWN_LEFT,
          BottomRight: ARROW_DOWN
        };
      case "BottomLeft":
        return {
          TopLeft: ARROW_UP,
          TopRight: ARROW_UP_RIGHT,
          BottomLeft: void 0,
          BottomRight: ARROW_RIGHT
        };
      case "BottomRight":
        return {
          TopLeft: ARROW_UP_LEFT,
          TopRight: ARROW_UP,
          BottomLeft: ARROW_LEFT,
          BottomRight: void 0
        };
    }
  }
  function statusIconAndText(model, info) {
    switch (model.status.tag) {
      case "Busy":
        return {
          icon: "\u23F3",
          status: "Waiting for compilation"
        };
      case "CompileError":
        return {
          icon: "\u{1F6A8}",
          status: "Compilation error"
        };
      case "Connecting":
        return {
          icon: "\u{1F50C}",
          status: "Connecting"
        };
      case "ElmJsonError":
        return {
          icon: "\u{1F6A8}",
          status: "elm.json or inputs error"
        };
      case "EvalError":
        return {
          icon: "\u26D4\uFE0F",
          status: "Eval error"
        };
      case "Idle":
        return {
          icon: idleIcon(info.initializedElmAppsStatus),
          status: "Successfully compiled"
        };
      case "SleepingBeforeReconnect":
        return {
          icon: "\u{1F50C}",
          status: "Sleeping"
        };
      case "UnexpectedError":
        return {
          icon: "\u274C",
          status: "Unexpected error"
        };
      case "WaitingForReload":
        return model.elmCompiledTimestamp === model.elmCompiledTimestampBeforeReload ? {
          icon: "\u274C",
          status: "Reload trouble"
        } : {
          icon: "\u23F3",
          status: "Waiting for reload"
        };
    }
  }
  function viewStatus(dispatch, model, info) {
    const { status, compilationMode } = model;
    switch (status.tag) {
      case "Busy":
        return {
          dl: [],
          content: [
            ...viewCompilationModeChooser({
              dispatch,
              sendKey: void 0,
              compilationMode,
              warnAboutCompilationModeMismatch: false,
              info
            }),
            ...status.errorOverlay === void 0 ? [] : [viewErrorOverlayToggleButton(dispatch, status.errorOverlay)]
          ]
        };
      case "CompileError":
        return {
          dl: [],
          content: [
            ...viewCompilationModeChooser({
              dispatch,
              sendKey: status.sendKey,
              compilationMode,
              warnAboutCompilationModeMismatch: true,
              info
            }),
            viewErrorOverlayToggleButton(dispatch, status.errorOverlay),
            ...status.openEditorError === void 0 ? [] : viewOpenEditorError(status.openEditorError)
          ]
        };
      case "Connecting":
        return {
          dl: [
            ["attempt", status.attemptNumber.toString()],
            ["sleep", printRetryWaitMs(status.attemptNumber)]
          ],
          content: [
            ...viewHttpsInfo(info.webSocketUrl),
            h(HTMLButtonElement, { disabled: true }, "Connecting web socket\u2026")
          ]
        };
      case "ElmJsonError":
        return {
          dl: [],
          content: [
            h(HTMLPreElement, { style: { minWidth: "80ch" } }, status.error)
          ]
        };
      case "EvalError":
        return {
          dl: [],
          content: [
            h(
              HTMLParagraphElement,
              {},
              "Check the console in the browser developer tools to see errors!"
            )
          ]
        };
      case "Idle":
        return {
          dl: [],
          content: viewCompilationModeChooser({
            dispatch,
            sendKey: status.sendKey,
            compilationMode,
            warnAboutCompilationModeMismatch: true,
            info
          })
        };
      case "SleepingBeforeReconnect":
        return {
          dl: [
            ["attempt", status.attemptNumber.toString()],
            ["sleep", printRetryWaitMs(status.attemptNumber)]
          ],
          content: [
            ...viewHttpsInfo(info.webSocketUrl),
            h(
              HTMLButtonElement,
              {
                onclick: () => {
                  dispatch({ tag: "PressedReconnectNow" });
                }
              },
              "Reconnect web socket now"
            )
          ]
        };
      case "UnexpectedError":
        return {
          dl: [],
          content: [
            h(
              HTMLParagraphElement,
              {},
              "I ran into an unexpected error! This is the error message:"
            ),
            h(HTMLPreElement, {}, status.message)
          ]
        };
      case "WaitingForReload":
        return {
          dl: [],
          content: model.elmCompiledTimestamp === model.elmCompiledTimestampBeforeReload ? [
            "A while ago I reloaded the page to get new compiled JavaScript.",
            "But it looks like after the last page reload I got the same JavaScript as before, instead of new stuff!",
            `The old JavaScript was compiled ${new Date(
              model.elmCompiledTimestamp
            ).toLocaleString()}, and so was the JavaScript currently running.`,
            "I currently need to reload the page again, but fear a reload loop if I try.",
            "Do you have accidental HTTP caching enabled maybe?",
            "Try hard refreshing the page and see if that helps, and consider disabling HTTP caching during development."
          ].map((text) => h(HTMLParagraphElement, {}, text)) : [h(HTMLParagraphElement, {}, "Waiting for other targets\u2026")]
        };
    }
  }
  function viewErrorOverlayToggleButton(dispatch, errorOverlay) {
    return h(
      HTMLButtonElement,
      {
        attrs: {
          "data-test-id": errorOverlay.openErrorOverlay ? "HideErrorOverlayButton" : "ShowErrorOverlayButton"
        },
        onclick: () => {
          dispatch({
            tag: "ChangedOpenErrorOverlay",
            openErrorOverlay: !errorOverlay.openErrorOverlay
          });
        }
      },
      errorOverlay.openErrorOverlay ? "Hide errors" : "Show errors"
    );
  }
  function viewOpenEditorError(error) {
    switch (error.tag) {
      case "EnvNotSet":
        return [
          h(
            HTMLDivElement,
            { className: CLASS.envNotSet },
            h(
              HTMLParagraphElement,
              {},
              "\u2139\uFE0F Clicking error locations only works if you set it up."
            ),
            h(
              HTMLParagraphElement,
              {},
              "Check this out: ",
              h(
                HTMLAnchorElement,
                {
                  href: "https://lydell.github.io/elm-watch/browser-ui/#clickable-error-locations",
                  target: "_blank",
                  rel: "noreferrer"
                },
                h(
                  HTMLElement,
                  { localName: "strong" },
                  "Clickable error locations"
                )
              )
            )
          )
        ];
      case "CommandFailed":
        return [
          h(
            HTMLParagraphElement,
            {},
            h(
              HTMLElement,
              { localName: "strong" },
              "Opening the location in your editor failed!"
            )
          ),
          h(HTMLPreElement, {}, error.message)
        ];
    }
  }
  function idleIcon(status) {
    switch (status.tag) {
      case "DecodeError":
      case "MissingWindowElm":
        return "\u274C";
      case "NoProgramsAtAll":
        return "\u2753";
      case "DebuggerModeStatus":
        return "\u2705";
    }
  }
  function compilationModeIcon(compilationMode) {
    switch (compilationMode) {
      case "proxy":
        return void 0;
      case "debug":
        return icon("\u{1F41B}", "Debug mode", { className: CLASS.debugModeIcon });
      case "standard":
        return void 0;
      case "optimize":
        return icon("\u{1F680}", "Optimize mode");
    }
  }
  function printWebSocketUrl(url) {
    const hostname = url.hostname.endsWith(".localhost") ? "localhost" : url.hostname;
    return `${url.protocol}//${hostname}:${url.port}${url.pathname}`;
  }
  function viewHttpsInfo(webSocketUrl) {
    return webSocketUrl.protocol === "wss:" ? [
      h(
        HTMLParagraphElement,
        {},
        h(HTMLElement, { localName: "strong" }, "Having trouble connecting?")
      ),
      h(HTMLParagraphElement, {}, "Setting up HTTPS can be a bit tricky."),
      h(
        HTMLParagraphElement,
        {},
        "Read all about ",
        h(
          HTMLAnchorElement,
          {
            href: "https://lydell.github.io/elm-watch/https/",
            target: "_blank",
            rel: "noreferrer"
          },
          "HTTPS with elm-watch"
        ),
        "."
      )
    ] : [];
  }
  var noDebuggerYetReason = "The Elm debugger isn't available at this point.";
  function noDebuggerReason(noDebuggerProgramTypes) {
    return `The Elm debugger isn't supported by ${humanList(
      Array.from(noDebuggerProgramTypes, (programType) => `\`${programType}\``),
      "and"
    )} programs.`;
  }
  function humanList(list, joinWord) {
    const { length } = list;
    return length <= 1 ? list.join("") : length === 2 ? list.join(` ${joinWord} `) : `${list.slice(0, length - 2).join(", ")}, ${list.slice(-2).join(` ${joinWord} `)}`;
  }
  function viewCompilationModeChooser({
    dispatch,
    sendKey,
    compilationMode: selectedMode,
    warnAboutCompilationModeMismatch,
    info
  }) {
    switch (info.initializedElmAppsStatus.tag) {
      case "DecodeError":
        return [
          h(
            HTMLParagraphElement,
            {},
            "window.Elm does not look like expected! This is the error message:"
          ),
          h(HTMLPreElement, {}, info.initializedElmAppsStatus.message)
        ];
      case "MissingWindowElm":
        return [
          h(
            HTMLParagraphElement,
            {},
            "elm-watch requires ",
            h(
              HTMLAnchorElement,
              {
                href: "https://lydell.github.io/elm-watch/window.Elm/",
                target: "_blank",
                rel: "noreferrer"
              },
              "window.Elm"
            ),
            " to exist, but it is undefined!"
          )
        ];
      case "NoProgramsAtAll":
        return [
          h(
            HTMLParagraphElement,
            {},
            "It looks like no Elm apps were initialized by elm-watch. Check the console in the browser developer tools to see potential errors!"
          )
        ];
      case "DebuggerModeStatus": {
        const compilationModes = [
          {
            mode: "debug",
            name: "Debug",
            status: info.initializedElmAppsStatus.status
          },
          { mode: "standard", name: "Standard", status: { tag: "Enabled" } },
          { mode: "optimize", name: "Optimize", status: { tag: "Enabled" } }
        ];
        return [
          h(
            HTMLFieldSetElement,
            { disabled: sendKey === void 0 },
            h(HTMLLegendElement, {}, "Compilation mode"),
            ...compilationModes.map(({ mode, name, status }) => {
              const nameWithIcon = h(
                HTMLSpanElement,
                { className: CLASS.compilationModeWithIcon },
                name,
                mode === selectedMode ? compilationModeIcon(mode) : void 0
              );
              return h(
                HTMLLabelElement,
                { className: status.tag },
                h(HTMLInputElement, {
                  type: "radio",
                  name: `CompilationMode-${info.targetName}`,
                  value: mode,
                  checked: mode === selectedMode,
                  disabled: sendKey === void 0 || status.tag === "Disabled",
                  onchange: sendKey === void 0 ? void 0 : () => {
                    dispatch({
                      tag: "ChangedCompilationMode",
                      compilationMode: mode,
                      sendKey
                    });
                  }
                }),
                ...status.tag === "Enabled" ? [
                  nameWithIcon,
                  warnAboutCompilationModeMismatch && mode === selectedMode && selectedMode !== info.originalCompilationMode && info.originalCompilationMode !== "proxy" ? h(
                    HTMLElement,
                    { localName: "small" },
                    `Note: The code currently running is in ${ORIGINAL_COMPILATION_MODE} mode.`
                  ) : void 0
                ] : [
                  nameWithIcon,
                  h(HTMLElement, { localName: "small" }, status.reason)
                ]
              );
            })
          )
        ];
      }
    }
  }
  var DATA_TARGET_NAMES = "data-target-names";
  function updateErrorOverlay(targetName, dispatch, sendKey, errors, overlay, overlayCloseButton) {
    const existingErrorElements = new Map(
      Array.from(overlay.children, (element) => [
        element.id,
        {
          targetNames: new Set(
            (element.getAttribute(DATA_TARGET_NAMES) ?? "").split("\n")
          ),
          element
        }
      ])
    );
    for (const [id, { targetNames, element }] of existingErrorElements) {
      if (targetNames.has(targetName) && !errors.has(id)) {
        targetNames.delete(targetName);
        if (targetNames.size === 0) {
          element.remove();
        } else {
          element.setAttribute(DATA_TARGET_NAMES, [...targetNames].join("\n"));
        }
      }
    }
    let previousElement = void 0;
    for (const [id, error] of errors) {
      const maybeExisting = existingErrorElements.get(id);
      if (maybeExisting === void 0) {
        const element = viewOverlayError(
          targetName,
          dispatch,
          sendKey,
          id,
          error
        );
        if (previousElement === void 0) {
          overlay.prepend(element);
        } else {
          previousElement.after(element);
        }
        overlay.style.backgroundColor = error.backgroundColor;
        overlayCloseButton.style.setProperty(
          "--foregroundColor",
          error.foregroundColor
        );
        overlayCloseButton.style.setProperty(
          "--backgroundColor",
          error.backgroundColor
        );
        previousElement = element;
      } else {
        if (!maybeExisting.targetNames.has(targetName)) {
          maybeExisting.element.setAttribute(
            DATA_TARGET_NAMES,
            [...maybeExisting.targetNames, targetName].join("\n")
          );
        }
        previousElement = maybeExisting.element;
      }
    }
    const hidden = !overlay.hasChildNodes();
    overlay.hidden = hidden;
    overlayCloseButton.hidden = hidden;
    overlayCloseButton.style.right = `${overlay.offsetWidth - overlay.clientWidth}px`;
  }
  function viewOverlayError(targetName, dispatch, sendKey, id, error) {
    return h(
      HTMLDetailsElement,
      {
        open: true,
        id,
        style: {
          backgroundColor: error.backgroundColor,
          color: error.foregroundColor
        },
        attrs: {
          [DATA_TARGET_NAMES]: targetName
        }
      },
      h(
        HTMLElement,
        { localName: "summary" },
        h(
          HTMLSpanElement,
          {
            className: CLASS.errorTitle,
            style: {
              backgroundColor: error.backgroundColor
            }
          },
          error.title
        ),
        error.location === void 0 ? void 0 : h(
          HTMLParagraphElement,
          {},
          viewErrorLocation(dispatch, sendKey, error.location)
        )
      ),
      h(HTMLPreElement, { innerHTML: error.htmlContent })
    );
  }
  function viewErrorLocation(dispatch, sendKey, location) {
    switch (location.tag) {
      case "FileOnly":
        return viewErrorLocationButton(
          dispatch,
          sendKey,
          {
            file: location.file,
            line: 1,
            column: 1
          },
          location.file.absolutePath
        );
      case "FileWithLineAndColumn": {
        return viewErrorLocationButton(
          dispatch,
          sendKey,
          location,
          `${location.file.absolutePath}:${location.line}:${location.column}`
        );
      }
      case "Target":
        return `Target: ${location.targetName}`;
    }
  }
  function viewErrorLocationButton(dispatch, sendKey, location, text) {
    return sendKey === void 0 ? text : h(
      HTMLButtonElement,
      {
        className: CLASS.errorLocationButton,
        onclick: () => {
          dispatch({
            tag: "PressedOpenEditor",
            file: location.file,
            line: location.line,
            column: location.column,
            sendKey
          });
        }
      },
      text
    );
  }
  if (typeof WebSocket !== "undefined") {
    run();
  }
})();
(function(scope){
'use strict';

var _Platform_effectManagers = {}, _Scheduler_enqueue; // added by elm-watch

function F(arity, fun, wrapper) {
  wrapper.a = arity;
  wrapper.f = fun;
  return wrapper;
}

function F2(fun) {
  return F(2, fun, function(a) { return function(b) { return fun(a,b); }; })
}
function F3(fun) {
  return F(3, fun, function(a) {
    return function(b) { return function(c) { return fun(a, b, c); }; };
  });
}
function F4(fun) {
  return F(4, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return fun(a, b, c, d); }; }; };
  });
}
function F5(fun) {
  return F(5, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return fun(a, b, c, d, e); }; }; }; };
  });
}
function F6(fun) {
  return F(6, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return fun(a, b, c, d, e, f); }; }; }; }; };
  });
}
function F7(fun) {
  return F(7, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return fun(a, b, c, d, e, f, g); }; }; }; }; }; };
  });
}
function F8(fun) {
  return F(8, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) {
    return fun(a, b, c, d, e, f, g, h); }; }; }; }; }; }; };
  });
}
function F9(fun) {
  return F(9, fun, function(a) { return function(b) { return function(c) {
    return function(d) { return function(e) { return function(f) {
    return function(g) { return function(h) { return function(i) {
    return fun(a, b, c, d, e, f, g, h, i); }; }; }; }; }; }; }; };
  });
}

function A2(fun, a, b) {
  return fun.a === 2 ? fun.f(a, b) : fun(a)(b);
}
function A3(fun, a, b, c) {
  return fun.a === 3 ? fun.f(a, b, c) : fun(a)(b)(c);
}
function A4(fun, a, b, c, d) {
  return fun.a === 4 ? fun.f(a, b, c, d) : fun(a)(b)(c)(d);
}
function A5(fun, a, b, c, d, e) {
  return fun.a === 5 ? fun.f(a, b, c, d, e) : fun(a)(b)(c)(d)(e);
}
function A6(fun, a, b, c, d, e, f) {
  return fun.a === 6 ? fun.f(a, b, c, d, e, f) : fun(a)(b)(c)(d)(e)(f);
}
function A7(fun, a, b, c, d, e, f, g) {
  return fun.a === 7 ? fun.f(a, b, c, d, e, f, g) : fun(a)(b)(c)(d)(e)(f)(g);
}
function A8(fun, a, b, c, d, e, f, g, h) {
  return fun.a === 8 ? fun.f(a, b, c, d, e, f, g, h) : fun(a)(b)(c)(d)(e)(f)(g)(h);
}
function A9(fun, a, b, c, d, e, f, g, h, i) {
  return fun.a === 9 ? fun.f(a, b, c, d, e, f, g, h, i) : fun(a)(b)(c)(d)(e)(f)(g)(h)(i);
}

console.warn('Compiled in DEV mode. Follow the advice at https://elm-lang.org/0.19.1/optimize for better performance and smaller assets.');


var _JsArray_empty = [];

function _JsArray_singleton(value)
{
    return [value];
}

function _JsArray_length(array)
{
    return array.length;
}

var _JsArray_initialize = F3(function(size, offset, func)
{
    var result = new Array(size);

    for (var i = 0; i < size; i++)
    {
        result[i] = func(offset + i);
    }

    return result;
});

var _JsArray_initializeFromList = F2(function (max, ls)
{
    var result = new Array(max);

    for (var i = 0; i < max && ls.b; i++)
    {
        result[i] = ls.a;
        ls = ls.b;
    }

    result.length = i;
    return _Utils_Tuple2(result, ls);
});

var _JsArray_unsafeGet = F2(function(index, array)
{
    return array[index];
});

var _JsArray_unsafeSet = F3(function(index, value, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[index] = value;
    return result;
});

var _JsArray_push = F2(function(value, array)
{
    var length = array.length;
    var result = new Array(length + 1);

    for (var i = 0; i < length; i++)
    {
        result[i] = array[i];
    }

    result[length] = value;
    return result;
});

var _JsArray_foldl = F3(function(func, acc, array)
{
    var length = array.length;

    for (var i = 0; i < length; i++)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_foldr = F3(function(func, acc, array)
{
    for (var i = array.length - 1; i >= 0; i--)
    {
        acc = A2(func, array[i], acc);
    }

    return acc;
});

var _JsArray_map = F2(function(func, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = func(array[i]);
    }

    return result;
});

var _JsArray_indexedMap = F3(function(func, offset, array)
{
    var length = array.length;
    var result = new Array(length);

    for (var i = 0; i < length; i++)
    {
        result[i] = A2(func, offset + i, array[i]);
    }

    return result;
});

var _JsArray_slice = F3(function(from, to, array)
{
    return array.slice(from, to);
});

var _JsArray_appendN = F3(function(n, dest, source)
{
    var destLen = dest.length;
    var itemsToCopy = n - destLen;

    if (itemsToCopy > source.length)
    {
        itemsToCopy = source.length;
    }

    var size = destLen + itemsToCopy;
    var result = new Array(size);

    for (var i = 0; i < destLen; i++)
    {
        result[i] = dest[i];
    }

    for (var i = 0; i < itemsToCopy; i++)
    {
        result[i + destLen] = source[i];
    }

    return result;
});



// LOG

var _Debug_log_UNUSED = F2(function(tag, value)
{
	return value;
});

var _Debug_log = F2(function(tag, value)
{
	console.log(tag + ': ' + _Debug_toString(value));
	return value;
});


// TODOS

function _Debug_todo(moduleName, region)
{
	return function(message) {
		_Debug_crash(8, moduleName, region, message);
	};
}

function _Debug_todoCase(moduleName, region, value)
{
	return function(message) {
		_Debug_crash(9, moduleName, region, value, message);
	};
}


// TO STRING

function _Debug_toString_UNUSED(value)
{
	return '<internals>';
}

function _Debug_toString(value)
{
	return _Debug_toAnsiString(false, value);
}

function _Debug_toAnsiString(ansi, value)
{
	if (typeof value === 'function')
	{
		return _Debug_internalColor(ansi, '<function>');
	}

	if (typeof value === 'boolean')
	{
		return _Debug_ctorColor(ansi, value ? 'True' : 'False');
	}

	if (typeof value === 'number')
	{
		return _Debug_numberColor(ansi, value + '');
	}

	if (value instanceof String)
	{
		return _Debug_charColor(ansi, "'" + _Debug_addSlashes(value, true) + "'");
	}

	if (typeof value === 'string')
	{
		return _Debug_stringColor(ansi, '"' + _Debug_addSlashes(value, false) + '"');
	}

	if (typeof value === 'object' && '$' in value)
	{
		var tag = value.$;

		if (typeof tag === 'number')
		{
			return _Debug_internalColor(ansi, '<internals>');
		}

		if (tag[0] === '#')
		{
			var output = [];
			for (var k in value)
			{
				if (k === '$') continue;
				output.push(_Debug_toAnsiString(ansi, value[k]));
			}
			return '(' + output.join(',') + ')';
		}

		if (tag === 'Set_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Set')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Set$toList(value));
		}

		if (tag === 'RBNode_elm_builtin' || tag === 'RBEmpty_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Dict')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Dict$toList(value));
		}

		if (tag === 'Array_elm_builtin')
		{
			return _Debug_ctorColor(ansi, 'Array')
				+ _Debug_fadeColor(ansi, '.fromList') + ' '
				+ _Debug_toAnsiString(ansi, $elm$core$Array$toList(value));
		}

		if (tag === '::' || tag === '[]')
		{
			var output = '[';

			value.b && (output += _Debug_toAnsiString(ansi, value.a), value = value.b)

			for (; value.b; value = value.b) // WHILE_CONS
			{
				output += ',' + _Debug_toAnsiString(ansi, value.a);
			}
			return output + ']';
		}

		var output = '';
		for (var i in value)
		{
			if (i === '$') continue;
			var str = _Debug_toAnsiString(ansi, value[i]);
			var c0 = str[0];
			var parenless = c0 === '{' || c0 === '(' || c0 === '[' || c0 === '<' || c0 === '"' || str.indexOf(' ') < 0;
			output += ' ' + (parenless ? str : '(' + str + ')');
		}
		return _Debug_ctorColor(ansi, tag) + output;
	}

	if (typeof DataView === 'function' && value instanceof DataView)
	{
		return _Debug_stringColor(ansi, '<' + value.byteLength + ' bytes>');
	}

	if (typeof File !== 'undefined' && value instanceof File)
	{
		return _Debug_internalColor(ansi, '<' + value.name + '>');
	}

	if (typeof value === 'object')
	{
		var output = [];
		for (var key in value)
		{
			var field = key[0] === '_' ? key.slice(1) : key;
			output.push(_Debug_fadeColor(ansi, field) + ' = ' + _Debug_toAnsiString(ansi, value[key]));
		}
		if (output.length === 0)
		{
			return '{}';
		}
		return '{ ' + output.join(', ') + ' }';
	}

	return _Debug_internalColor(ansi, '<internals>');
}

function _Debug_addSlashes(str, isChar)
{
	var s = str
		.replace(/\\/g, '\\\\')
		.replace(/\n/g, '\\n')
		.replace(/\t/g, '\\t')
		.replace(/\r/g, '\\r')
		.replace(/\v/g, '\\v')
		.replace(/\0/g, '\\0');

	if (isChar)
	{
		return s.replace(/\'/g, '\\\'');
	}
	else
	{
		return s.replace(/\"/g, '\\"');
	}
}

function _Debug_ctorColor(ansi, string)
{
	return ansi ? '\x1b[96m' + string + '\x1b[0m' : string;
}

function _Debug_numberColor(ansi, string)
{
	return ansi ? '\x1b[95m' + string + '\x1b[0m' : string;
}

function _Debug_stringColor(ansi, string)
{
	return ansi ? '\x1b[93m' + string + '\x1b[0m' : string;
}

function _Debug_charColor(ansi, string)
{
	return ansi ? '\x1b[92m' + string + '\x1b[0m' : string;
}

function _Debug_fadeColor(ansi, string)
{
	return ansi ? '\x1b[37m' + string + '\x1b[0m' : string;
}

function _Debug_internalColor(ansi, string)
{
	return ansi ? '\x1b[36m' + string + '\x1b[0m' : string;
}

function _Debug_toHexDigit(n)
{
	return String.fromCharCode(n < 10 ? 48 + n : 55 + n);
}


// CRASH


function _Debug_crash_UNUSED(identifier)
{
	throw new Error('https://github.com/elm/core/blob/1.0.0/hints/' + identifier + '.md');
}


function _Debug_crash(identifier, fact1, fact2, fact3, fact4)
{
	switch(identifier)
	{
		case 0:
			throw new Error('What node should I take over? In JavaScript I need something like:\n\n    Elm.Main.init({\n        node: document.getElementById("elm-node")\n    })\n\nYou need to do this with any Browser.sandbox or Browser.element program.');

		case 1:
			throw new Error('Browser.application programs cannot handle URLs like this:\n\n    ' + document.location.href + '\n\nWhat is the root? The root of your file system? Try looking at this program with `elm reactor` or some other server.');

		case 2:
			var jsonErrorString = fact1;
			throw new Error('Problem with the flags given to your Elm program on initialization.\n\n' + jsonErrorString);

		case 3:
			var portName = fact1;
			throw new Error('There can only be one port named `' + portName + '`, but your program has multiple.');

		case 4:
			var portName = fact1;
			var problem = fact2;
			throw new Error('Trying to send an unexpected type of value through port `' + portName + '`:\n' + problem);

		case 5:
			throw new Error('Trying to use `(==)` on functions.\nThere is no way to know if functions are "the same" in the Elm sense.\nRead more about this at https://package.elm-lang.org/packages/elm/core/latest/Basics#== which describes why it is this way and what the better version will look like.');

		case 6:
			var moduleName = fact1;
			throw new Error('Your page is loading multiple Elm scripts with a module named ' + moduleName + '. Maybe a duplicate script is getting loaded accidentally? If not, rename one of them so I know which is which!');

		case 8:
			var moduleName = fact1;
			var region = fact2;
			var message = fact3;
			throw new Error('TODO in module `' + moduleName + '` ' + _Debug_regionToString(region) + '\n\n' + message);

		case 9:
			var moduleName = fact1;
			var region = fact2;
			var value = fact3;
			var message = fact4;
			throw new Error(
				'TODO in module `' + moduleName + '` from the `case` expression '
				+ _Debug_regionToString(region) + '\n\nIt received the following value:\n\n    '
				+ _Debug_toString(value).replace('\n', '\n    ')
				+ '\n\nBut the branch that handles it says:\n\n    ' + message.replace('\n', '\n    ')
			);

		case 10:
			throw new Error('Bug in https://github.com/elm/virtual-dom/issues');

		case 11:
			throw new Error('Cannot perform mod 0. Division by zero error.');
	}
}

function _Debug_regionToString(region)
{
	if (region.start.line === region.end.line)
	{
		return 'on line ' + region.start.line;
	}
	return 'on lines ' + region.start.line + ' through ' + region.end.line;
}



// EQUALITY

function _Utils_eq(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

function _Utils_eqHelp(x, y, depth, stack)
{
	if (x === y)
	{
		return true;
	}

	if (typeof x !== 'object' || x === null || y === null)
	{
		typeof x === 'function' && _Debug_crash(5);
		return false;
	}

	if (depth > 100)
	{
		stack.push(_Utils_Tuple2(x,y));
		return true;
	}

	/**/
	if (x.$ === 'Set_elm_builtin')
	{
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	}
	if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin')
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	/**_UNUSED/
	if (x.$ < 0)
	{
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}
	//*/

	for (var key in x)
	{
		if (!_Utils_eqHelp(x[key], y[key], depth + 1, stack))
		{
			return false;
		}
	}
	return true;
}

var _Utils_equal = F2(_Utils_eq);
var _Utils_notEqual = F2(function(a, b) { return !_Utils_eq(a,b); });



// COMPARISONS

// Code in Generate/JavaScript.hs, Basics.js, and List.js depends on
// the particular integer values assigned to LT, EQ, and GT.

function _Utils_cmp(x, y, ord)
{
	if (typeof x !== 'object')
	{
		return x === y ? /*EQ*/ 0 : x < y ? /*LT*/ -1 : /*GT*/ 1;
	}

	/**/
	if (x instanceof String)
	{
		var a = x.valueOf();
		var b = y.valueOf();
		return a === b ? 0 : a < b ? -1 : 1;
	}
	//*/

	/**_UNUSED/
	if (typeof x.$ === 'undefined')
	//*/
	/**/
	if (x.$[0] === '#')
	//*/
	{
		return (ord = _Utils_cmp(x.a, y.a))
			? ord
			: (ord = _Utils_cmp(x.b, y.b))
				? ord
				: _Utils_cmp(x.c, y.c);
	}

	// traverse conses until end of a list or a mismatch
	for (; x.b && y.b && !(ord = _Utils_cmp(x.a, y.a)); x = x.b, y = y.b) {} // WHILE_CONSES
	return ord || (x.b ? /*GT*/ 1 : y.b ? /*LT*/ -1 : /*EQ*/ 0);
}

var _Utils_lt = F2(function(a, b) { return _Utils_cmp(a, b) < 0; });
var _Utils_le = F2(function(a, b) { return _Utils_cmp(a, b) < 1; });
var _Utils_gt = F2(function(a, b) { return _Utils_cmp(a, b) > 0; });
var _Utils_ge = F2(function(a, b) { return _Utils_cmp(a, b) >= 0; });

var _Utils_compare = F2(function(x, y)
{
	var n = _Utils_cmp(x, y);
	return n < 0 ? $elm$core$Basics$LT : n ? $elm$core$Basics$GT : $elm$core$Basics$EQ;
});


// COMMON VALUES

var _Utils_Tuple0_UNUSED = 0;
var _Utils_Tuple0 = { $: '#0' };

function _Utils_Tuple2_UNUSED(a, b) { return { a: a, b: b }; }
function _Utils_Tuple2(a, b) { return { $: '#2', a: a, b: b }; }

function _Utils_Tuple3_UNUSED(a, b, c) { return { a: a, b: b, c: c }; }
function _Utils_Tuple3(a, b, c) { return { $: '#3', a: a, b: b, c: c }; }

function _Utils_chr_UNUSED(c) { return c; }
function _Utils_chr(c) { return new String(c); }


// RECORDS

function _Utils_update(oldRecord, updatedFields)
{
	var newRecord = {};

	for (var key in oldRecord)
	{
		newRecord[key] = oldRecord[key];
	}

	for (var key in updatedFields)
	{
		newRecord[key] = updatedFields[key];
	}

	return newRecord;
}


// APPEND

var _Utils_append = F2(_Utils_ap);

function _Utils_ap(xs, ys)
{
	// append Strings
	if (typeof xs === 'string')
	{
		return xs + ys;
	}

	// append Lists
	if (!xs.b)
	{
		return ys;
	}
	var root = _List_Cons(xs.a, ys);
	xs = xs.b
	for (var curr = root; xs.b; xs = xs.b) // WHILE_CONS
	{
		curr = curr.b = _List_Cons(xs.a, ys);
	}
	return root;
}



var _List_Nil_UNUSED = { $: 0 };
var _List_Nil = { $: '[]' };

function _List_Cons_UNUSED(hd, tl) { return { $: 1, a: hd, b: tl }; }
function _List_Cons(hd, tl) { return { $: '::', a: hd, b: tl }; }


var _List_cons = F2(_List_Cons);

function _List_fromArray(arr)
{
	var out = _List_Nil;
	for (var i = arr.length; i--; )
	{
		out = _List_Cons(arr[i], out);
	}
	return out;
}

function _List_toArray(xs)
{
	for (var out = []; xs.b; xs = xs.b) // WHILE_CONS
	{
		out.push(xs.a);
	}
	return out;
}

var _List_map2 = F3(function(f, xs, ys)
{
	for (var arr = []; xs.b && ys.b; xs = xs.b, ys = ys.b) // WHILE_CONSES
	{
		arr.push(A2(f, xs.a, ys.a));
	}
	return _List_fromArray(arr);
});

var _List_map3 = F4(function(f, xs, ys, zs)
{
	for (var arr = []; xs.b && ys.b && zs.b; xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A3(f, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map4 = F5(function(f, ws, xs, ys, zs)
{
	for (var arr = []; ws.b && xs.b && ys.b && zs.b; ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A4(f, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_map5 = F6(function(f, vs, ws, xs, ys, zs)
{
	for (var arr = []; vs.b && ws.b && xs.b && ys.b && zs.b; vs = vs.b, ws = ws.b, xs = xs.b, ys = ys.b, zs = zs.b) // WHILE_CONSES
	{
		arr.push(A5(f, vs.a, ws.a, xs.a, ys.a, zs.a));
	}
	return _List_fromArray(arr);
});

var _List_sortBy = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		return _Utils_cmp(f(a), f(b));
	}));
});

var _List_sortWith = F2(function(f, xs)
{
	return _List_fromArray(_List_toArray(xs).sort(function(a, b) {
		var ord = A2(f, a, b);
		return ord === $elm$core$Basics$EQ ? 0 : ord === $elm$core$Basics$LT ? -1 : 1;
	}));
});



// MATH

var _Basics_add = F2(function(a, b) { return a + b; });
var _Basics_sub = F2(function(a, b) { return a - b; });
var _Basics_mul = F2(function(a, b) { return a * b; });
var _Basics_fdiv = F2(function(a, b) { return a / b; });
var _Basics_idiv = F2(function(a, b) { return (a / b) | 0; });
var _Basics_pow = F2(Math.pow);

var _Basics_remainderBy = F2(function(b, a) { return a % b; });

// https://www.microsoft.com/en-us/research/wp-content/uploads/2016/02/divmodnote-letter.pdf
var _Basics_modBy = F2(function(modulus, x)
{
	var answer = x % modulus;
	return modulus === 0
		? _Debug_crash(11)
		:
	((answer > 0 && modulus < 0) || (answer < 0 && modulus > 0))
		? answer + modulus
		: answer;
});


// TRIGONOMETRY

var _Basics_pi = Math.PI;
var _Basics_e = Math.E;
var _Basics_cos = Math.cos;
var _Basics_sin = Math.sin;
var _Basics_tan = Math.tan;
var _Basics_acos = Math.acos;
var _Basics_asin = Math.asin;
var _Basics_atan = Math.atan;
var _Basics_atan2 = F2(Math.atan2);


// MORE MATH

function _Basics_toFloat(x) { return x; }
function _Basics_truncate(n) { return n | 0; }
function _Basics_isInfinite(n) { return n === Infinity || n === -Infinity; }

var _Basics_ceiling = Math.ceil;
var _Basics_floor = Math.floor;
var _Basics_round = Math.round;
var _Basics_sqrt = Math.sqrt;
var _Basics_log = Math.log;
var _Basics_isNaN = isNaN;


// BOOLEANS

function _Basics_not(bool) { return !bool; }
var _Basics_and = F2(function(a, b) { return a && b; });
var _Basics_or  = F2(function(a, b) { return a || b; });
var _Basics_xor = F2(function(a, b) { return a !== b; });



var _String_cons = F2(function(chr, str)
{
	return chr + str;
});

function _String_uncons(string)
{
	var word = string.charCodeAt(0);
	return !isNaN(word)
		? $elm$core$Maybe$Just(
			0xD800 <= word && word <= 0xDBFF
				? _Utils_Tuple2(_Utils_chr(string[0] + string[1]), string.slice(2))
				: _Utils_Tuple2(_Utils_chr(string[0]), string.slice(1))
		)
		: $elm$core$Maybe$Nothing;
}

var _String_append = F2(function(a, b)
{
	return a + b;
});

function _String_length(str)
{
	return str.length;
}

var _String_map = F2(function(func, string)
{
	var len = string.length;
	var array = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = string.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			array[i] = func(_Utils_chr(string[i] + string[i+1]));
			i += 2;
			continue;
		}
		array[i] = func(_Utils_chr(string[i]));
		i++;
	}
	return array.join('');
});

var _String_filter = F2(function(isGood, str)
{
	var arr = [];
	var len = str.length;
	var i = 0;
	while (i < len)
	{
		var char = str[i];
		var word = str.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += str[i];
			i++;
		}

		if (isGood(_Utils_chr(char)))
		{
			arr.push(char);
		}
	}
	return arr.join('');
});

function _String_reverse(str)
{
	var len = str.length;
	var arr = new Array(len);
	var i = 0;
	while (i < len)
	{
		var word = str.charCodeAt(i);
		if (0xD800 <= word && word <= 0xDBFF)
		{
			arr[len - i] = str[i + 1];
			i++;
			arr[len - i] = str[i - 1];
			i++;
		}
		else
		{
			arr[len - i] = str[i];
			i++;
		}
	}
	return arr.join('');
}

var _String_foldl = F3(function(func, state, string)
{
	var len = string.length;
	var i = 0;
	while (i < len)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		i++;
		if (0xD800 <= word && word <= 0xDBFF)
		{
			char += string[i];
			i++;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_foldr = F3(function(func, state, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		state = A2(func, _Utils_chr(char), state);
	}
	return state;
});

var _String_split = F2(function(sep, str)
{
	return str.split(sep);
});

var _String_join = F2(function(sep, strs)
{
	return strs.join(sep);
});

var _String_slice = F3(function(start, end, str) {
	return str.slice(start, end);
});

function _String_trim(str)
{
	return str.trim();
}

function _String_trimLeft(str)
{
	return str.replace(/^\s+/, '');
}

function _String_trimRight(str)
{
	return str.replace(/\s+$/, '');
}

function _String_words(str)
{
	return _List_fromArray(str.trim().split(/\s+/g));
}

function _String_lines(str)
{
	return _List_fromArray(str.split(/\r\n|\r|\n/g));
}

function _String_toUpper(str)
{
	return str.toUpperCase();
}

function _String_toLower(str)
{
	return str.toLowerCase();
}

var _String_any = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (isGood(_Utils_chr(char)))
		{
			return true;
		}
	}
	return false;
});

var _String_all = F2(function(isGood, string)
{
	var i = string.length;
	while (i--)
	{
		var char = string[i];
		var word = string.charCodeAt(i);
		if (0xDC00 <= word && word <= 0xDFFF)
		{
			i--;
			char = string[i] + char;
		}
		if (!isGood(_Utils_chr(char)))
		{
			return false;
		}
	}
	return true;
});

var _String_contains = F2(function(sub, str)
{
	return str.indexOf(sub) > -1;
});

var _String_startsWith = F2(function(sub, str)
{
	return str.indexOf(sub) === 0;
});

var _String_endsWith = F2(function(sub, str)
{
	return str.length >= sub.length &&
		str.lastIndexOf(sub) === str.length - sub.length;
});

var _String_indexes = F2(function(sub, str)
{
	var subLen = sub.length;

	if (subLen < 1)
	{
		return _List_Nil;
	}

	var i = 0;
	var is = [];

	while ((i = str.indexOf(sub, i)) > -1)
	{
		is.push(i);
		i = i + subLen;
	}

	return _List_fromArray(is);
});


// TO STRING

function _String_fromNumber(number)
{
	return number + '';
}


// INT CONVERSIONS

function _String_toInt(str)
{
	var total = 0;
	var code0 = str.charCodeAt(0);
	var start = code0 == 0x2B /* + */ || code0 == 0x2D /* - */ ? 1 : 0;

	for (var i = start; i < str.length; ++i)
	{
		var code = str.charCodeAt(i);
		if (code < 0x30 || 0x39 < code)
		{
			return $elm$core$Maybe$Nothing;
		}
		total = 10 * total + code - 0x30;
	}

	return i == start
		? $elm$core$Maybe$Nothing
		: $elm$core$Maybe$Just(code0 == 0x2D ? -total : total);
}


// FLOAT CONVERSIONS

function _String_toFloat(s)
{
	// check if it is a hex, octal, or binary number
	if (s.length === 0 || /[\sxbo]/.test(s))
	{
		return $elm$core$Maybe$Nothing;
	}
	var n = +s;
	// faster isNaN check
	return n === n ? $elm$core$Maybe$Just(n) : $elm$core$Maybe$Nothing;
}

function _String_fromList(chars)
{
	return _List_toArray(chars).join('');
}




function _Char_toCode(char)
{
	var code = char.charCodeAt(0);
	if (0xD800 <= code && code <= 0xDBFF)
	{
		return (code - 0xD800) * 0x400 + char.charCodeAt(1) - 0xDC00 + 0x10000
	}
	return code;
}

function _Char_fromCode(code)
{
	return _Utils_chr(
		(code < 0 || 0x10FFFF < code)
			? '\uFFFD'
			:
		(code <= 0xFFFF)
			? String.fromCharCode(code)
			:
		(code -= 0x10000,
			String.fromCharCode(Math.floor(code / 0x400) + 0xD800, code % 0x400 + 0xDC00)
		)
	);
}

function _Char_toUpper(char)
{
	return _Utils_chr(char.toUpperCase());
}

function _Char_toLower(char)
{
	return _Utils_chr(char.toLowerCase());
}

function _Char_toLocaleUpper(char)
{
	return _Utils_chr(char.toLocaleUpperCase());
}

function _Char_toLocaleLower(char)
{
	return _Utils_chr(char.toLocaleLowerCase());
}



/**/
function _Json_errorToString(error)
{
	return $elm$json$Json$Decode$errorToString(error);
}
//*/


// CORE DECODERS

function _Json_succeed(msg)
{
	return {
		$: 0,
		a: msg
	};
}

function _Json_fail(msg)
{
	return {
		$: 1,
		a: msg
	};
}

function _Json_decodePrim(decoder)
{
	return { $: 2, b: decoder };
}

var _Json_decodeInt = _Json_decodePrim(function(value) {
	return (typeof value !== 'number')
		? _Json_expecting('an INT', value)
		:
	(-2147483647 < value && value < 2147483647 && (value | 0) === value)
		? $elm$core$Result$Ok(value)
		:
	(isFinite(value) && !(value % 1))
		? $elm$core$Result$Ok(value)
		: _Json_expecting('an INT', value);
});

var _Json_decodeBool = _Json_decodePrim(function(value) {
	return (typeof value === 'boolean')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a BOOL', value);
});

var _Json_decodeFloat = _Json_decodePrim(function(value) {
	return (typeof value === 'number')
		? $elm$core$Result$Ok(value)
		: _Json_expecting('a FLOAT', value);
});

var _Json_decodeValue = _Json_decodePrim(function(value) {
	return $elm$core$Result$Ok(_Json_wrap(value));
});

var _Json_decodeString = _Json_decodePrim(function(value) {
	return (typeof value === 'string')
		? $elm$core$Result$Ok(value)
		: (value instanceof String)
			? $elm$core$Result$Ok(value + '')
			: _Json_expecting('a STRING', value);
});

function _Json_decodeList(decoder) { return { $: 3, b: decoder }; }
function _Json_decodeArray(decoder) { return { $: 4, b: decoder }; }

function _Json_decodeNull(value) { return { $: 5, c: value }; }

var _Json_decodeField = F2(function(field, decoder)
{
	return {
		$: 6,
		d: field,
		b: decoder
	};
});

var _Json_decodeIndex = F2(function(index, decoder)
{
	return {
		$: 7,
		e: index,
		b: decoder
	};
});

function _Json_decodeKeyValuePairs(decoder)
{
	return {
		$: 8,
		b: decoder
	};
}

function _Json_mapMany(f, decoders)
{
	return {
		$: 9,
		f: f,
		g: decoders
	};
}

var _Json_andThen = F2(function(callback, decoder)
{
	return {
		$: 10,
		b: decoder,
		h: callback
	};
});

function _Json_oneOf(decoders)
{
	return {
		$: 11,
		g: decoders
	};
}


// DECODING OBJECTS

var _Json_map1 = F2(function(f, d1)
{
	return _Json_mapMany(f, [d1]);
});

var _Json_map2 = F3(function(f, d1, d2)
{
	return _Json_mapMany(f, [d1, d2]);
});

var _Json_map3 = F4(function(f, d1, d2, d3)
{
	return _Json_mapMany(f, [d1, d2, d3]);
});

var _Json_map4 = F5(function(f, d1, d2, d3, d4)
{
	return _Json_mapMany(f, [d1, d2, d3, d4]);
});

var _Json_map5 = F6(function(f, d1, d2, d3, d4, d5)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5]);
});

var _Json_map6 = F7(function(f, d1, d2, d3, d4, d5, d6)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6]);
});

var _Json_map7 = F8(function(f, d1, d2, d3, d4, d5, d6, d7)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7]);
});

var _Json_map8 = F9(function(f, d1, d2, d3, d4, d5, d6, d7, d8)
{
	return _Json_mapMany(f, [d1, d2, d3, d4, d5, d6, d7, d8]);
});


// DECODE

var _Json_runOnString = F2(function(decoder, string)
{
	try
	{
		var value = JSON.parse(string);
		return _Json_runHelp(decoder, value);
	}
	catch (e)
	{
		return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'This is not valid JSON! ' + e.message, _Json_wrap(string)));
	}
});

var _Json_run = F2(function(decoder, value)
{
	return _Json_runHelp(decoder, _Json_unwrap(value));
});

function _Json_runHelp(decoder, value)
{
	switch (decoder.$)
	{
		case 2:
			return decoder.b(value);

		case 5:
			return (value === null)
				? $elm$core$Result$Ok(decoder.c)
				: _Json_expecting('null', value);

		case 3:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('a LIST', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _List_fromArray);

		case 4:
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			return _Json_runArrayDecoder(decoder.b, value, _Json_toElmArray);

		case 6:
			var field = decoder.d;
			if (typeof value !== 'object' || value === null || !(field in value))
			{
				return _Json_expecting('an OBJECT with a field named `' + field + '`', value);
			}
			var result = _Json_runHelp(decoder.b, value[field]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, field, result.a));

		case 7:
			var index = decoder.e;
			if (!_Json_isArray(value))
			{
				return _Json_expecting('an ARRAY', value);
			}
			if (index >= value.length)
			{
				return _Json_expecting('a LONGER array. Need index ' + index + ' but only see ' + value.length + ' entries', value);
			}
			var result = _Json_runHelp(decoder.b, value[index]);
			return ($elm$core$Result$isOk(result)) ? result : $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, index, result.a));

		case 8:
			if (typeof value !== 'object' || value === null || _Json_isArray(value))
			{
				return _Json_expecting('an OBJECT', value);
			}

			var keyValuePairs = _List_Nil;
			// TODO test perf of Object.keys and switch when support is good enough
			for (var key in value)
			{
				if (value.hasOwnProperty(key))
				{
					var result = _Json_runHelp(decoder.b, value[key]);
					if (!$elm$core$Result$isOk(result))
					{
						return $elm$core$Result$Err(A2($elm$json$Json$Decode$Field, key, result.a));
					}
					keyValuePairs = _List_Cons(_Utils_Tuple2(key, result.a), keyValuePairs);
				}
			}
			return $elm$core$Result$Ok($elm$core$List$reverse(keyValuePairs));

		case 9:
			var answer = decoder.f;
			var decoders = decoder.g;
			for (var i = 0; i < decoders.length; i++)
			{
				var result = _Json_runHelp(decoders[i], value);
				if (!$elm$core$Result$isOk(result))
				{
					return result;
				}
				answer = answer(result.a);
			}
			return $elm$core$Result$Ok(answer);

		case 10:
			var result = _Json_runHelp(decoder.b, value);
			return (!$elm$core$Result$isOk(result))
				? result
				: _Json_runHelp(decoder.h(result.a), value);

		case 11:
			var errors = _List_Nil;
			for (var temp = decoder.g; temp.b; temp = temp.b) // WHILE_CONS
			{
				var result = _Json_runHelp(temp.a, value);
				if ($elm$core$Result$isOk(result))
				{
					return result;
				}
				errors = _List_Cons(result.a, errors);
			}
			return $elm$core$Result$Err($elm$json$Json$Decode$OneOf($elm$core$List$reverse(errors)));

		case 1:
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, decoder.a, _Json_wrap(value)));

		case 0:
			return $elm$core$Result$Ok(decoder.a);
	}
}

function _Json_runArrayDecoder(decoder, value, toElmValue)
{
	var len = value.length;
	var array = new Array(len);
	for (var i = 0; i < len; i++)
	{
		var result = _Json_runHelp(decoder, value[i]);
		if (!$elm$core$Result$isOk(result))
		{
			return $elm$core$Result$Err(A2($elm$json$Json$Decode$Index, i, result.a));
		}
		array[i] = result.a;
	}
	return $elm$core$Result$Ok(toElmValue(array));
}

function _Json_isArray(value)
{
	return Array.isArray(value) || (typeof FileList !== 'undefined' && value instanceof FileList);
}

function _Json_toElmArray(array)
{
	return A2($elm$core$Array$initialize, array.length, function(i) { return array[i]; });
}

function _Json_expecting(type, value)
{
	return $elm$core$Result$Err(A2($elm$json$Json$Decode$Failure, 'Expecting ' + type, _Json_wrap(value)));
}


// EQUALITY

function _Json_equality(x, y)
{
	if (x === y)
	{
		return true;
	}

	if (x.$ !== y.$)
	{
		return false;
	}

	switch (x.$)
	{
		case 0:
		case 1:
			return x.a === y.a;

		case 2:
			return x.b === y.b;

		case 5:
			return x.c === y.c;

		case 3:
		case 4:
		case 8:
			return _Json_equality(x.b, y.b);

		case 6:
			return x.d === y.d && _Json_equality(x.b, y.b);

		case 7:
			return x.e === y.e && _Json_equality(x.b, y.b);

		case 9:
			return x.f === y.f && _Json_listEquality(x.g, y.g);

		case 10:
			return x.h === y.h && _Json_equality(x.b, y.b);

		case 11:
			return _Json_listEquality(x.g, y.g);
	}
}

function _Json_listEquality(aDecoders, bDecoders)
{
	var len = aDecoders.length;
	if (len !== bDecoders.length)
	{
		return false;
	}
	for (var i = 0; i < len; i++)
	{
		if (!_Json_equality(aDecoders[i], bDecoders[i]))
		{
			return false;
		}
	}
	return true;
}


// ENCODE

var _Json_encode = F2(function(indentLevel, value)
{
	return JSON.stringify(_Json_unwrap(value), null, indentLevel) + '';
});

function _Json_wrap(value) { return { $: 0, a: value }; }
function _Json_unwrap(value) { return value.a; }

function _Json_wrap_UNUSED(value) { return value; }
function _Json_unwrap_UNUSED(value) { return value; }

function _Json_emptyArray() { return []; }
function _Json_emptyObject() { return {}; }

var _Json_addField = F3(function(key, value, object)
{
	object[key] = _Json_unwrap(value);
	return object;
});

function _Json_addEntry(func)
{
	return F2(function(entry, array)
	{
		array.push(_Json_unwrap(func(entry)));
		return array;
	});
}

var _Json_encodeNull = _Json_wrap(null);



// TASKS

function _Scheduler_succeed(value)
{
	return {
		$: 0,
		a: value
	};
}

function _Scheduler_fail(error)
{
	return {
		$: 1,
		a: error
	};
}

// This function was slightly modified by elm-watch.
function _Scheduler_binding(callback)
{
	return {
		$: 2,
		b: callback,
		// c: null // commented out by elm-watch
		c: Function.prototype // added by elm-watch
	};
}

var _Scheduler_andThen = F2(function(callback, task)
{
	return {
		$: 3,
		b: callback,
		d: task
	};
});

var _Scheduler_onError = F2(function(callback, task)
{
	return {
		$: 4,
		b: callback,
		d: task
	};
});

function _Scheduler_receive(callback)
{
	return {
		$: 5,
		b: callback
	};
}


// PROCESSES

var _Scheduler_guid = 0;

function _Scheduler_rawSpawn(task)
{
	var proc = {
		$: 0,
		e: _Scheduler_guid++,
		f: task,
		g: null,
		h: []
	};

	_Scheduler_enqueue(proc);

	return proc;
}

function _Scheduler_spawn(task)
{
	return _Scheduler_binding(function(callback) {
		callback(_Scheduler_succeed(_Scheduler_rawSpawn(task)));
	});
}

function _Scheduler_rawSend(proc, msg)
{
	proc.h.push(msg);
	_Scheduler_enqueue(proc);
}

var _Scheduler_send = F2(function(proc, msg)
{
	return _Scheduler_binding(function(callback) {
		_Scheduler_rawSend(proc, msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});

function _Scheduler_kill(proc)
{
	return _Scheduler_binding(function(callback) {
		var task = proc.f;
		if (task.$ === 2 && task.c)
		{
			task.c();
		}

		proc.f = null;

		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
}


/* STEP PROCESSES

type alias Process =
  { $ : tag
  , id : unique_id
  , root : Task
  , stack : null | { $: SUCCEED | FAIL, a: callback, b: stack }
  , mailbox : [msg]
  }

*/


var _Scheduler_working = false;
var _Scheduler_queue = [];


function _Scheduler_enqueue(proc)
{
	_Scheduler_queue.push(proc);
	if (_Scheduler_working)
	{
		return;
	}
	_Scheduler_working = true;
	while (proc = _Scheduler_queue.shift())
	{
		_Scheduler_step(proc);
	}
	_Scheduler_working = false;
}


function _Scheduler_step(proc)
{
	while (proc.f)
	{
		var rootTag = proc.f.$;
		if (rootTag === 0 || rootTag === 1)
		{
			while (proc.g && proc.g.$ !== rootTag)
			{
				proc.g = proc.g.i;
			}
			if (!proc.g)
			{
				return;
			}
			proc.f = proc.g.b(proc.f.a);
			proc.g = proc.g.i;
		}
		else if (rootTag === 2)
		{
			proc.f.c = proc.f.b(function(newRoot) {
				proc.f = newRoot;
				_Scheduler_enqueue(proc);
			// }); // commented out by elm-watch
			}) || Function.prototype; // added by elm-watch
			return;
		}
		else if (rootTag === 5)
		{
			if (proc.h.length === 0)
			{
				return;
			}
			proc.f = proc.f.b(proc.h.shift());
		}
		else // if (rootTag === 3 || rootTag === 4)
		{
			proc.g = {
				$: rootTag === 3 ? 0 : 1,
				b: proc.f.b,
				i: proc.g
			};
			proc.f = proc.f.d;
		}
	}
}



function _Process_sleep(time)
{
	return _Scheduler_binding(function(callback) {
		var id = setTimeout(function() {
			callback(_Scheduler_succeed(_Utils_Tuple0));
		}, time);

		return function() { clearTimeout(id); };
	});
}




// PROGRAMS


// This function was slightly modified by elm-watch.
var _Platform_worker = F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		"Platform.worker", // added by elm-watch
		false, // isDebug, added by elm-watch
		debugMetadata, // added by elm-watch
		flagDecoder,
		args,
		impl.init,
		// impl.update, // commented out by elm-watch
		// impl.subscriptions, // commented out by elm-watch
		impl, // added by elm-watch
		function() { return function() {} }
	);
});



// INITIALIZE A PROGRAM


// This whole function was changed by elm-watch.
function _Platform_initialize(programType, isDebug, debugMetadata, flagDecoder, args, init, impl, stepperBuilder)
{
	if (args === "__elmWatchReturnData") {
		return { impl: impl, debugMetadata: debugMetadata, flagDecoder : flagDecoder, programType: programType };
	}

	var flags = _Json_wrap(args ? args['flags'] : undefined);
	var flagResult = A2(_Json_run, flagDecoder, flags);
	$elm$core$Result$isOk(flagResult) || _Debug_crash(2 /**/, _Json_errorToString(flagResult.a) /**/);
	var managers = {};
	var initUrl = programType === "Browser.application" ? _Browser_getUrl() : undefined;
	globalThis.__ELM_WATCH.INIT_URL = initUrl;
	var initPair = init(flagResult.a);
	var model = initPair.a;
	var stepper = stepperBuilder(sendToApp, model);
	var ports = _Platform_setupEffects(managers, sendToApp);
	var update;
	var subscriptions;

	function setUpdateAndSubscriptions() {
		update = impl.update || impl._impl.update;
		subscriptions = impl.subscriptions || impl._impl.subscriptions;
		if (isDebug) {
			update = $elm$browser$Debugger$Main$wrapUpdate(update);
			subscriptions = $elm$browser$Debugger$Main$wrapSubs(subscriptions);
		}
	}

	function sendToApp(msg, viewMetadata) {
		var pair = A2(update, msg, model);
		stepper(model = pair.a, viewMetadata);
		_Platform_enqueueEffects(managers, pair.b, subscriptions(model));
	}

	setUpdateAndSubscriptions();
	_Platform_enqueueEffects(managers, initPair.b, subscriptions(model));

	function __elmWatchHotReload(newData, new_Platform_effectManagers, new_Scheduler_enqueue, moduleName) {
		_Platform_enqueueEffects(managers, _Platform_batch(_List_Nil), _Platform_batch(_List_Nil));
		_Scheduler_enqueue = new_Scheduler_enqueue;

		var reloadReasons = [];

		for (var key in new_Platform_effectManagers) {
			var manager = new_Platform_effectManagers[key];
			if (!(key in _Platform_effectManagers)) {
				_Platform_effectManagers[key] = manager;
				managers[key] = _Platform_instantiateManager(manager, sendToApp);
				if (manager.a) {
					reloadReasons.push("a new port '" + key + "' was added. The idea is to give JavaScript code a chance to set it up!");
					manager.a(key, sendToApp)
				}
			}
		}

		for (var key in newData.impl) {
			if (key === "_impl" && impl._impl) {
				for (var subKey in newData.impl[key]) {
					impl._impl[subKey] = newData.impl[key][subKey];
				}
			} else {
				impl[key] = newData.impl[key];
			}
		}

		var newFlagResult = A2(_Json_run, newData.flagDecoder, flags);
		if (!$elm$core$Result$isOk(newFlagResult)) {
			return reloadReasons.concat("the flags type in `" + moduleName + "` changed and now the passed flags aren't correct anymore. The idea is to try to run with new flags!\nThis is the error:\n" + _Json_errorToString(newFlagResult.a));
		}
		if (!_Utils_eq_elmWatchInternal(debugMetadata, newData.debugMetadata)) {
			return reloadReasons.concat("the message type in `" + moduleName + '` changed in debug mode ("debug metadata" changed).');
		}
		init = impl.init || impl._impl.init;
		if (isDebug) {
			init = A3($elm$browser$Debugger$Main$wrapInit, _Json_wrap(newData.debugMetadata), initPair.a.popout, init);
		}
		globalThis.__ELM_WATCH.INIT_URL = initUrl;
		var newInitPair = init(newFlagResult.a);
		if (!_Utils_eq_elmWatchInternal(initPair, newInitPair)) {
			return reloadReasons.concat("`" + moduleName + ".init` returned something different than last time. Let's start fresh!");
		}

		setUpdateAndSubscriptions();
		stepper(model, true /* isSync */);
		_Platform_enqueueEffects(managers, _Platform_batch(_List_Nil), subscriptions(model));
		return reloadReasons;
	}

	return Object.defineProperties(
		ports ? { ports: ports } : {},
		{
			__elmWatchHotReload: { value: __elmWatchHotReload },
			__elmWatchProgramType: { value: programType },
		}
	);
}

// This whole function was added by elm-watch.
// Copy-paste of _Utils_eq but does not assume that x and y have the same type,
// and considers functions to always be equal.
function _Utils_eq_elmWatchInternal(x, y)
{
	for (
		var pair, stack = [], isEqual = _Utils_eqHelp_elmWatchInternal(x, y, 0, stack);
		isEqual && (pair = stack.pop());
		isEqual = _Utils_eqHelp_elmWatchInternal(pair.a, pair.b, 0, stack)
		)
	{}

	return isEqual;
}

// This whole function was added by elm-watch.
function _Utils_eqHelp_elmWatchInternal(x, y, depth, stack)
{
	if (x === y) {
		return true;
	}

	var xType = _Utils_typeof_elmWatchInternal(x);
	var yType = _Utils_typeof_elmWatchInternal(y);

	if (xType !== yType) {
		return false;
	}

	switch (xType) {
		case "primitive":
			return false;
		case "function":
			return true;
	}

	if (x.$ !== y.$) {
		return false;
	}

	if (x.$ === 'Set_elm_builtin') {
		x = $elm$core$Set$toList(x);
		y = $elm$core$Set$toList(y);
	} else if (x.$ === 'RBNode_elm_builtin' || x.$ === 'RBEmpty_elm_builtin' || x.$ < 0) {
		x = $elm$core$Dict$toList(x);
		y = $elm$core$Dict$toList(y);
	}

	if (Object.keys(x).length !== Object.keys(y).length) {
		return false;
	}

	if (depth > 100) {
		stack.push(_Utils_Tuple2(x, y));
		return true;
	}

	for (var key in x) {
		if (!_Utils_eqHelp_elmWatchInternal(x[key], y[key], depth + 1, stack)) {
			return false;
		}
	}
	return true;
}

// This whole function was added by elm-watch.
function _Utils_typeof_elmWatchInternal(x)
{
	var type = typeof x;
	return type === "function"
		? "function"
		: type !== "object" || type === null
		? "primitive"
		: "objectOrArray";
}



// TRACK PRELOADS
//
// This is used by code in elm/browser and elm/http
// to register any HTTP requests that are triggered by init.
//


var _Platform_preload;


function _Platform_registerPreload(url)
{
	_Platform_preload.add(url);
}



// EFFECT MANAGERS


var _Platform_effectManagers = {};


function _Platform_setupEffects(managers, sendToApp)
{
	var ports;

	// setup all necessary effect managers
	for (var key in _Platform_effectManagers)
	{
		var manager = _Platform_effectManagers[key];

		if (manager.a)
		{
			ports = ports || {};
			ports[key] = manager.a(key, sendToApp);
		}

		managers[key] = _Platform_instantiateManager(manager, sendToApp);
	}

	return ports;
}


function _Platform_createManager(init, onEffects, onSelfMsg, cmdMap, subMap)
{
	return {
		b: init,
		c: onEffects,
		d: onSelfMsg,
		e: cmdMap,
		f: subMap
	};
}


function _Platform_instantiateManager(info, sendToApp)
{
	var router = {
		g: sendToApp,
		h: undefined
	};

	var onEffects = info.c;
	var onSelfMsg = info.d;
	var cmdMap = info.e;
	var subMap = info.f;

	function loop(state)
	{
		return A2(_Scheduler_andThen, loop, _Scheduler_receive(function(msg)
		{
			var value = msg.a;

			if (msg.$ === 0)
			{
				return A3(onSelfMsg, router, value, state);
			}

			return cmdMap && subMap
				? A4(onEffects, router, value.i, value.j, state)
				: A3(onEffects, router, cmdMap ? value.i : value.j, state);
		}));
	}

	return router.h = _Scheduler_rawSpawn(A2(_Scheduler_andThen, loop, info.b));
}



// ROUTING


var _Platform_sendToApp = F2(function(router, msg)
{
	return _Scheduler_binding(function(callback)
	{
		router.g(msg);
		callback(_Scheduler_succeed(_Utils_Tuple0));
	});
});


var _Platform_sendToSelf = F2(function(router, msg)
{
	return A2(_Scheduler_send, router.h, {
		$: 0,
		a: msg
	});
});



// BAGS


function _Platform_leaf(home)
{
	return function(value)
	{
		return {
			$: 1,
			k: home,
			l: value
		};
	};
}


function _Platform_batch(list)
{
	return {
		$: 2,
		m: list
	};
}


var _Platform_map = F2(function(tagger, bag)
{
	return {
		$: 3,
		n: tagger,
		o: bag
	}
});



// PIPE BAGS INTO EFFECT MANAGERS
//
// Effects must be queued!
//
// Say your init contains a synchronous command, like Time.now or Time.here
//
//   - This will produce a batch of effects (FX_1)
//   - The synchronous task triggers the subsequent `update` call
//   - This will produce a batch of effects (FX_2)
//
// If we just start dispatching FX_2, subscriptions from FX_2 can be processed
// before subscriptions from FX_1. No good! Earlier versions of this code had
// this problem, leading to these reports:
//
//   https://github.com/elm/core/issues/980
//   https://github.com/elm/core/pull/981
//   https://github.com/elm/compiler/issues/1776
//
// The queue is necessary to avoid ordering issues for synchronous commands.


// Why use true/false here? Why not just check the length of the queue?
// The goal is to detect "are we currently dispatching effects?" If we
// are, we need to bail and let the ongoing while loop handle things.
//
// Now say the queue has 1 element. When we dequeue the final element,
// the queue will be empty, but we are still actively dispatching effects.
// So you could get queue jumping in a really tricky category of cases.
//
var _Platform_effectsQueue = [];
var _Platform_effectsActive = false;


function _Platform_enqueueEffects(managers, cmdBag, subBag)
{
	_Platform_effectsQueue.push({ p: managers, q: cmdBag, r: subBag });

	if (_Platform_effectsActive) return;

	_Platform_effectsActive = true;
	for (var fx; fx = _Platform_effectsQueue.shift(); )
	{
		_Platform_dispatchEffects(fx.p, fx.q, fx.r);
	}
	_Platform_effectsActive = false;
}


function _Platform_dispatchEffects(managers, cmdBag, subBag)
{
	var effectsDict = {};
	_Platform_gatherEffects(true, cmdBag, effectsDict, null);
	_Platform_gatherEffects(false, subBag, effectsDict, null);

	for (var home in managers)
	{
		_Scheduler_rawSend(managers[home], {
			$: 'fx',
			a: effectsDict[home] || { i: _List_Nil, j: _List_Nil }
		});
	}
}


function _Platform_gatherEffects(isCmd, bag, effectsDict, taggers)
{
	switch (bag.$)
	{
		case 1:
			var home = bag.k;
			var effect = _Platform_toEffect(isCmd, home, taggers, bag.l);
			effectsDict[home] = _Platform_insert(isCmd, effect, effectsDict[home]);
			return;

		case 2:
			for (var list = bag.m; list.b; list = list.b) // WHILE_CONS
			{
				_Platform_gatherEffects(isCmd, list.a, effectsDict, taggers);
			}
			return;

		case 3:
			_Platform_gatherEffects(isCmd, bag.o, effectsDict, {
				s: bag.n,
				t: taggers
			});
			return;
	}
}


function _Platform_toEffect(isCmd, home, taggers, value)
{
	function applyTaggers(x)
	{
		for (var temp = taggers; temp; temp = temp.t)
		{
			x = temp.s(x);
		}
		return x;
	}

	var map = isCmd
		? _Platform_effectManagers[home].e
		: _Platform_effectManagers[home].f;

	return A2(map, applyTaggers, value)
}


function _Platform_insert(isCmd, newEffect, effects)
{
	effects = effects || { i: _List_Nil, j: _List_Nil };

	isCmd
		? (effects.i = _List_Cons(newEffect, effects.i))
		: (effects.j = _List_Cons(newEffect, effects.j));

	return effects;
}



// PORTS


function _Platform_checkPortName(name)
{
	if (_Platform_effectManagers[name])
	{
		_Debug_crash(3, name)
	}
}



// OUTGOING PORTS


function _Platform_outgoingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		e: _Platform_outgoingPortMap,
		u: converter,
		a: _Platform_setupOutgoingPort
	};
	return _Platform_leaf(name);
}


var _Platform_outgoingPortMap = F2(function(tagger, value) { return value; });


function _Platform_setupOutgoingPort(name)
{
	var subs = [];
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Process_sleep(0);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, cmdList, state)
	{
		for ( ; cmdList.b; cmdList = cmdList.b) // WHILE_CONS
		{
			// grab a separate reference to subs in case unsubscribe is called
			var currentSubs = subs;
			var value = _Json_unwrap(converter(cmdList.a));
			for (var i = 0; i < currentSubs.length; i++)
			{
				currentSubs[i](value);
			}
		}
		return init;
	});

	// PUBLIC API

	function subscribe(callback)
	{
		subs.push(callback);
	}

	function unsubscribe(callback)
	{
		// copy subs into a new array in case unsubscribe is called within a
		// subscribed callback
		subs = subs.slice();
		var index = subs.indexOf(callback);
		if (index >= 0)
		{
			subs.splice(index, 1);
		}
	}

	return {
		subscribe: subscribe,
		unsubscribe: unsubscribe
	};
}



// INCOMING PORTS


function _Platform_incomingPort(name, converter)
{
	_Platform_checkPortName(name);
	_Platform_effectManagers[name] = {
		f: _Platform_incomingPortMap,
		u: converter,
		a: _Platform_setupIncomingPort
	};
	return _Platform_leaf(name);
}


var _Platform_incomingPortMap = F2(function(tagger, finalTagger)
{
	return function(value)
	{
		return tagger(finalTagger(value));
	};
});


function _Platform_setupIncomingPort(name, sendToApp)
{
	var subs = _List_Nil;
	var converter = _Platform_effectManagers[name].u;

	// CREATE MANAGER

	var init = _Scheduler_succeed(null);

	_Platform_effectManagers[name].b = init;
	_Platform_effectManagers[name].c = F3(function(router, subList, state)
	{
		subs = subList;
		return init;
	});

	// PUBLIC API

	function send(incomingValue)
	{
		var result = A2(_Json_run, converter, _Json_wrap(incomingValue));

		$elm$core$Result$isOk(result) || _Debug_crash(4, name, result.a);

		var value = result.a;
		for (var temp = subs; temp.b; temp = temp.b) // WHILE_CONS
		{
			sendToApp(temp.a(value));
		}
	}

	return { send: send };
}



// EXPORT ELM MODULES
//
// Have DEBUG and PROD versions so that we can (1) give nicer errors in
// debug mode and (2) not pay for the bits needed for that in prod mode.
//


function _Platform_export_UNUSED(exports)
{
	scope['Elm']
		? _Platform_mergeExportsProd(scope['Elm'], exports)
		: scope['Elm'] = exports;
}


function _Platform_mergeExportsProd(obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6)
				: _Platform_mergeExportsProd(obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}


// This whole function was changed by elm-watch.
function _Platform_export(exports)
{
	var reloadReasons = _Platform_mergeExportsElmWatch('Elm', scope['Elm'] || (scope['Elm'] = {}), exports);
	if (reloadReasons.length > 0) {
		throw new Error(["ELM_WATCH_RELOAD_NEEDED"].concat(Array.from(new Set(reloadReasons))).join("\n\n---\n\n"));
	}
}

// This whole function was added by elm-watch.
function _Platform_mergeExportsElmWatch(moduleName, obj, exports)
{
	var reloadReasons = [];
	for (var name in exports) {
		if (name === "init") {
			if ("init" in obj) {
				if ("__elmWatchApps" in obj) {
					var data = exports.init("__elmWatchReturnData");
					for (var index = 0; index < obj.__elmWatchApps.length; index++) {
						var app = obj.__elmWatchApps[index];
						if (app.__elmWatchProgramType !== data.programType) {
							reloadReasons.push("`" + moduleName + ".main` changed from `" + app.__elmWatchProgramType + "` to `" + data.programType + "`.");
						} else {
							try {
								var innerReasons = app.__elmWatchHotReload(data, _Platform_effectManagers, _Scheduler_enqueue, moduleName);
								reloadReasons = reloadReasons.concat(innerReasons);
							} catch (error) {
								reloadReasons.push("hot reload for `" + moduleName + "` failed, probably because of incompatible model changes.\nThis is the error:\n" + error + "\n" + (error ? error.stack : ""));
							}
						}
					}
				} else {
					throw new Error("elm-watch: I'm trying to create `" + moduleName + ".init`, but it already exists and wasn't created by elm-watch. Maybe a duplicate script is getting loaded accidentally?");
				}
			} else {
				obj.__elmWatchApps = [];
				obj.init = function() {
					var app = exports.init.apply(exports, arguments);
					obj.__elmWatchApps.push(app);
					globalThis.__ELM_WATCH.ON_INIT();
					return app;
				};
			}
		} else {
			var innerReasons = _Platform_mergeExportsElmWatch(moduleName + "." + name, obj[name] || (obj[name] = {}), exports[name]);
			reloadReasons = reloadReasons.concat(innerReasons);
		}
	}
	return reloadReasons;
}


function _Platform_mergeExportsDebug(moduleName, obj, exports)
{
	for (var name in exports)
	{
		(name in obj)
			? (name == 'init')
				? _Debug_crash(6, moduleName)
				: _Platform_mergeExportsDebug(moduleName + '.' + name, obj[name], exports[name])
			: (obj[name] = exports[name]);
	}
}




// HELPERS


var _VirtualDom_divertHrefToApp;

var _VirtualDom_doc = typeof document !== 'undefined' ? document : {};


function _VirtualDom_appendChild(parent, child)
{
	parent.appendChild(child);
}

// This whole function was changed by elm-watch.
var _VirtualDom_init = F4(function(virtualNode, flagDecoder, debugMetadata, args)
{
	var programType = "Html";

	if (args === "__elmWatchReturnData") {
		return { virtualNode: virtualNode, programType: programType };
	}

	/**_UNUSED/ // always UNUSED with elm-watch
	var node = args['node'];
	//*/
	/**/
	var node = args && args['node'] ? args['node'] : _Debug_crash(0);
	//*/

	var nextNode = _VirtualDom_render(virtualNode, function() {});
	node.parentNode.replaceChild(nextNode, node);
	node = nextNode;
	var sendToApp = function() {};

	function __elmWatchHotReload(newData) {
		var patches = _VirtualDom_diff(virtualNode, newData.virtualNode);
		node = _VirtualDom_applyPatches(node, virtualNode, patches, sendToApp);
		virtualNode = newData.virtualNode;
		return [];
	}

	return Object.defineProperties(
		{},
		{
			__elmWatchHotReload: { value: __elmWatchHotReload },
			__elmWatchProgramType: { value: programType },
		}
	);
});



// TEXT


function _VirtualDom_text(string)
{
	return {
		$: 0,
		a: string
	};
}



// NODE


var _VirtualDom_nodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 1,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_node = _VirtualDom_nodeNS(undefined);



// KEYED NODE


var _VirtualDom_keyedNodeNS = F2(function(namespace, tag)
{
	return F2(function(factList, kidList)
	{
		for (var kids = [], descendantsCount = 0; kidList.b; kidList = kidList.b) // WHILE_CONS
		{
			var kid = kidList.a;
			descendantsCount += (kid.b.b || 0);
			kids.push(kid);
		}
		descendantsCount += kids.length;

		return {
			$: 2,
			c: tag,
			d: _VirtualDom_organizeFacts(factList),
			e: kids,
			f: namespace,
			b: descendantsCount
		};
	});
});


var _VirtualDom_keyedNode = _VirtualDom_keyedNodeNS(undefined);



// CUSTOM


function _VirtualDom_custom(factList, model, render, diff)
{
	return {
		$: 3,
		d: _VirtualDom_organizeFacts(factList),
		g: model,
		h: render,
		i: diff
	};
}



// MAP


var _VirtualDom_map = F2(function(tagger, node)
{
	return {
		$: 4,
		j: tagger,
		k: node,
		b: 1 + (node.b || 0)
	};
});



// LAZY


function _VirtualDom_thunk(refs, thunk)
{
	return {
		$: 5,
		l: refs,
		m: thunk,
		k: undefined
	};
}

var _VirtualDom_lazy = F2(function(func, a)
{
	return _VirtualDom_thunk([func, a], function() {
		return func(a);
	});
});

var _VirtualDom_lazy2 = F3(function(func, a, b)
{
	return _VirtualDom_thunk([func, a, b], function() {
		return A2(func, a, b);
	});
});

var _VirtualDom_lazy3 = F4(function(func, a, b, c)
{
	return _VirtualDom_thunk([func, a, b, c], function() {
		return A3(func, a, b, c);
	});
});

var _VirtualDom_lazy4 = F5(function(func, a, b, c, d)
{
	return _VirtualDom_thunk([func, a, b, c, d], function() {
		return A4(func, a, b, c, d);
	});
});

var _VirtualDom_lazy5 = F6(function(func, a, b, c, d, e)
{
	return _VirtualDom_thunk([func, a, b, c, d, e], function() {
		return A5(func, a, b, c, d, e);
	});
});

var _VirtualDom_lazy6 = F7(function(func, a, b, c, d, e, f)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f], function() {
		return A6(func, a, b, c, d, e, f);
	});
});

var _VirtualDom_lazy7 = F8(function(func, a, b, c, d, e, f, g)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g], function() {
		return A7(func, a, b, c, d, e, f, g);
	});
});

var _VirtualDom_lazy8 = F9(function(func, a, b, c, d, e, f, g, h)
{
	return _VirtualDom_thunk([func, a, b, c, d, e, f, g, h], function() {
		return A8(func, a, b, c, d, e, f, g, h);
	});
});



// FACTS


var _VirtualDom_on = F2(function(key, handler)
{
	return {
		$: 'a0',
		n: key,
		o: handler
	};
});
var _VirtualDom_style = F2(function(key, value)
{
	return {
		$: 'a1',
		n: key,
		o: value
	};
});
var _VirtualDom_property = F2(function(key, value)
{
	return {
		$: 'a2',
		n: key,
		o: value
	};
});
var _VirtualDom_attribute = F2(function(key, value)
{
	return {
		$: 'a3',
		n: key,
		o: value
	};
});
var _VirtualDom_attributeNS = F3(function(namespace, key, value)
{
	return {
		$: 'a4',
		n: key,
		o: { f: namespace, o: value }
	};
});



// XSS ATTACK VECTOR CHECKS
//
// For some reason, tabs can appear in href protocols and it still works.
// So '\tjava\tSCRIPT:alert("!!!")' and 'javascript:alert("!!!")' are the same
// in practice. That is why _VirtualDom_RE_js and _VirtualDom_RE_js_html look
// so freaky.
//
// Pulling the regular expressions out to the top level gives a slight speed
// boost in small benchmarks (4-10%) but hoisting values to reduce allocation
// can be unpredictable in large programs where JIT may have a harder time with
// functions are not fully self-contained. The benefit is more that the js and
// js_html ones are so weird that I prefer to see them near each other.


var _VirtualDom_RE_script = /^script$/i;
var _VirtualDom_RE_on_formAction = /^(on|formAction$)/i;
var _VirtualDom_RE_js = /^\s*j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:/i;
var _VirtualDom_RE_js_html = /^\s*(j\s*a\s*v\s*a\s*s\s*c\s*r\s*i\s*p\s*t\s*:|d\s*a\s*t\s*a\s*:\s*t\s*e\s*x\s*t\s*\/\s*h\s*t\s*m\s*l\s*(,|;))/i;


function _VirtualDom_noScript(tag)
{
	return _VirtualDom_RE_script.test(tag) ? 'p' : tag;
}

function _VirtualDom_noOnOrFormAction(key)
{
	return _VirtualDom_RE_on_formAction.test(key) ? 'data-' + key : key;
}

function _VirtualDom_noInnerHtmlOrFormAction(key)
{
	return key == 'innerHTML' || key == 'formAction' ? 'data-' + key : key;
}

function _VirtualDom_noJavaScriptUri(value)
{
	return _VirtualDom_RE_js.test(value)
		? /**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlUri(value)
{
	return _VirtualDom_RE_js_html.test(value)
		? /**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		: value;
}

function _VirtualDom_noJavaScriptOrHtmlJson(value)
{
	return (typeof _Json_unwrap(value) === 'string' && _VirtualDom_RE_js_html.test(_Json_unwrap(value)))
		? _Json_wrap(
			/**_UNUSED/''//*//**/'javascript:alert("This is an XSS vector. Please use ports or web components instead.")'//*/
		) : value;
}



// MAP FACTS


var _VirtualDom_mapAttribute = F2(function(func, attr)
{
	return (attr.$ === 'a0')
		? A2(_VirtualDom_on, attr.n, _VirtualDom_mapHandler(func, attr.o))
		: attr;
});

function _VirtualDom_mapHandler(func, handler)
{
	var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

	// 0 = Normal
	// 1 = MayStopPropagation
	// 2 = MayPreventDefault
	// 3 = Custom

	return {
		$: handler.$,
		a:
			!tag
				? A2($elm$json$Json$Decode$map, func, handler.a)
				:
			A3($elm$json$Json$Decode$map2,
				tag < 3
					? _VirtualDom_mapEventTuple
					: _VirtualDom_mapEventRecord,
				$elm$json$Json$Decode$succeed(func),
				handler.a
			)
	};
}

var _VirtualDom_mapEventTuple = F2(function(func, tuple)
{
	return _Utils_Tuple2(func(tuple.a), tuple.b);
});

var _VirtualDom_mapEventRecord = F2(function(func, record)
{
	return {
		message: func(record.message),
		stopPropagation: record.stopPropagation,
		preventDefault: record.preventDefault
	}
});



// ORGANIZE FACTS


function _VirtualDom_organizeFacts(factList)
{
	for (var facts = {}; factList.b; factList = factList.b) // WHILE_CONS
	{
		var entry = factList.a;

		var tag = entry.$;
		var key = entry.n;
		var value = entry.o;

		if (tag === 'a2')
		{
			(key === 'className')
				? _VirtualDom_addClass(facts, key, _Json_unwrap(value))
				: facts[key] = _Json_unwrap(value);

			continue;
		}

		var subFacts = facts[tag] || (facts[tag] = {});
		(tag === 'a3' && key === 'class')
			? _VirtualDom_addClass(subFacts, key, value)
			: subFacts[key] = value;
	}

	return facts;
}

function _VirtualDom_addClass(object, key, newClass)
{
	var classes = object[key];
	object[key] = classes ? classes + ' ' + newClass : newClass;
}



// RENDER


function _VirtualDom_render(vNode, eventNode)
{
	var tag = vNode.$;

	if (tag === 5)
	{
		return _VirtualDom_render(vNode.k || (vNode.k = vNode.m()), eventNode);
	}

	if (tag === 0)
	{
		return _VirtualDom_doc.createTextNode(vNode.a);
	}

	if (tag === 4)
	{
		var subNode = vNode.k;
		var tagger = vNode.j;

		while (subNode.$ === 4)
		{
			typeof tagger !== 'object'
				? tagger = [tagger, subNode.j]
				: tagger.push(subNode.j);

			subNode = subNode.k;
		}

		var subEventRoot = { j: tagger, p: eventNode };
		var domNode = _VirtualDom_render(subNode, subEventRoot);
		domNode.elm_event_node_ref = subEventRoot;
		return domNode;
	}

	if (tag === 3)
	{
		var domNode = vNode.h(vNode.g);
		_VirtualDom_applyFacts(domNode, eventNode, vNode.d);
		return domNode;
	}

	// at this point `tag` must be 1 or 2

	var domNode = vNode.f
		? _VirtualDom_doc.createElementNS(vNode.f, vNode.c)
		: _VirtualDom_doc.createElement(vNode.c);

	if (_VirtualDom_divertHrefToApp && vNode.c == 'a')
	{
		domNode.addEventListener('click', _VirtualDom_divertHrefToApp(domNode));
	}

	_VirtualDom_applyFacts(domNode, eventNode, vNode.d);

	for (var kids = vNode.e, i = 0; i < kids.length; i++)
	{
		_VirtualDom_appendChild(domNode, _VirtualDom_render(tag === 1 ? kids[i] : kids[i].b, eventNode));
	}

	return domNode;
}



// APPLY FACTS


function _VirtualDom_applyFacts(domNode, eventNode, facts)
{
	for (var key in facts)
	{
		var value = facts[key];

		key === 'a1'
			? _VirtualDom_applyStyles(domNode, value)
			:
		key === 'a0'
			? _VirtualDom_applyEvents(domNode, eventNode, value)
			:
		key === 'a3'
			? _VirtualDom_applyAttrs(domNode, value)
			:
		key === 'a4'
			? _VirtualDom_applyAttrsNS(domNode, value)
			:
		((key !== 'value' && key !== 'checked') || domNode[key] !== value) && (domNode[key] = value);
	}
}



// APPLY STYLES


function _VirtualDom_applyStyles(domNode, styles)
{
	var domNodeStyle = domNode.style;

	for (var key in styles)
	{
		domNodeStyle[key] = styles[key];
	}
}



// APPLY ATTRS


function _VirtualDom_applyAttrs(domNode, attrs)
{
	for (var key in attrs)
	{
		var value = attrs[key];
		typeof value !== 'undefined'
			? domNode.setAttribute(key, value)
			: domNode.removeAttribute(key);
	}
}



// APPLY NAMESPACED ATTRS


function _VirtualDom_applyAttrsNS(domNode, nsAttrs)
{
	for (var key in nsAttrs)
	{
		var pair = nsAttrs[key];
		var namespace = pair.f;
		var value = pair.o;

		typeof value !== 'undefined'
			? domNode.setAttributeNS(namespace, key, value)
			: domNode.removeAttributeNS(namespace, key);
	}
}



// APPLY EVENTS


function _VirtualDom_applyEvents(domNode, eventNode, events)
{
	var allCallbacks = domNode.elmFs || (domNode.elmFs = {});

	for (var key in events)
	{
		var newHandler = events[key];
		var oldCallback = allCallbacks[key];

		if (!newHandler)
		{
			domNode.removeEventListener(key, oldCallback);
			allCallbacks[key] = undefined;
			continue;
		}

		if (oldCallback)
		{
			var oldHandler = oldCallback.q;
			if (oldHandler.$ === newHandler.$)
			{
				oldCallback.q = newHandler;
				continue;
			}
			domNode.removeEventListener(key, oldCallback);
		}

		oldCallback = _VirtualDom_makeCallback(eventNode, newHandler);
		domNode.addEventListener(key, oldCallback,
			_VirtualDom_passiveSupported
			&& { passive: $elm$virtual_dom$VirtualDom$toHandlerInt(newHandler) < 2 }
		);
		allCallbacks[key] = oldCallback;
	}
}



// PASSIVE EVENTS


var _VirtualDom_passiveSupported;

try
{
	window.addEventListener('t', null, Object.defineProperty({}, 'passive', {
		get: function() { _VirtualDom_passiveSupported = true; }
	}));
}
catch(e) {}



// EVENT HANDLERS


function _VirtualDom_makeCallback(eventNode, initialHandler)
{
	function callback(event)
	{
		var handler = callback.q;
		var result = _Json_runHelp(handler.a, event);

		if (!$elm$core$Result$isOk(result))
		{
			return;
		}

		var tag = $elm$virtual_dom$VirtualDom$toHandlerInt(handler);

		// 0 = Normal
		// 1 = MayStopPropagation
		// 2 = MayPreventDefault
		// 3 = Custom

		var value = result.a;
		var message = !tag ? value : tag < 3 ? value.a : value.message;
		var stopPropagation = tag == 1 ? value.b : tag == 3 && value.stopPropagation;
		var currentEventNode = (
			stopPropagation && event.stopPropagation(),
			(tag == 2 ? value.b : tag == 3 && value.preventDefault) && event.preventDefault(),
			eventNode
		);
		var tagger;
		var i;
		while (tagger = currentEventNode.j)
		{
			if (typeof tagger == 'function')
			{
				message = tagger(message);
			}
			else
			{
				for (var i = tagger.length; i--; )
				{
					message = tagger[i](message);
				}
			}
			currentEventNode = currentEventNode.p;
		}
		currentEventNode(message, stopPropagation); // stopPropagation implies isSync
	}

	callback.q = initialHandler;

	return callback;
}

function _VirtualDom_equalEvents(x, y)
{
	return x.$ == y.$ && _Json_equality(x.a, y.a);
}



// DIFF


// TODO: Should we do patches like in iOS?
//
// type Patch
//   = At Int Patch
//   | Batch (List Patch)
//   | Change ...
//
// How could it not be better?
//
function _VirtualDom_diff(x, y)
{
	var patches = [];
	_VirtualDom_diffHelp(x, y, patches, 0);
	return patches;
}


function _VirtualDom_pushPatch(patches, type, index, data)
{
	var patch = {
		$: type,
		r: index,
		s: data,
		t: undefined,
		u: undefined
	};
	patches.push(patch);
	return patch;
}


function _VirtualDom_diffHelp(x, y, patches, index)
{
	if (x === y)
	{
		return;
	}

	var xType = x.$;
	var yType = y.$;

	// Bail if you run into different types of nodes. Implies that the
	// structure has changed significantly and it's not worth a diff.
	if (xType !== yType)
	{
		if (xType === 1 && yType === 2)
		{
			y = _VirtualDom_dekey(y);
			yType = 1;
		}
		else
		{
			_VirtualDom_pushPatch(patches, 0, index, y);
			return;
		}
	}

	// Now we know that both nodes are the same $.
	switch (yType)
	{
		case 5:
			var xRefs = x.l;
			var yRefs = y.l;
			var i = xRefs.length;
			var same = i === yRefs.length;
			while (same && i--)
			{
				same = xRefs[i] === yRefs[i];
			}
			if (same)
			{
				y.k = x.k;
				return;
			}
			y.k = y.m();
			var subPatches = [];
			_VirtualDom_diffHelp(x.k, y.k, subPatches, 0);
			subPatches.length > 0 && _VirtualDom_pushPatch(patches, 1, index, subPatches);
			return;

		case 4:
			// gather nested taggers
			var xTaggers = x.j;
			var yTaggers = y.j;
			var nesting = false;

			var xSubNode = x.k;
			while (xSubNode.$ === 4)
			{
				nesting = true;

				typeof xTaggers !== 'object'
					? xTaggers = [xTaggers, xSubNode.j]
					: xTaggers.push(xSubNode.j);

				xSubNode = xSubNode.k;
			}

			var ySubNode = y.k;
			while (ySubNode.$ === 4)
			{
				nesting = true;

				typeof yTaggers !== 'object'
					? yTaggers = [yTaggers, ySubNode.j]
					: yTaggers.push(ySubNode.j);

				ySubNode = ySubNode.k;
			}

			// Just bail if different numbers of taggers. This implies the
			// structure of the virtual DOM has changed.
			if (nesting && xTaggers.length !== yTaggers.length)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			// check if taggers are "the same"
			if (nesting ? !_VirtualDom_pairwiseRefEqual(xTaggers, yTaggers) : xTaggers !== yTaggers)
			{
				_VirtualDom_pushPatch(patches, 2, index, yTaggers);
			}

			// diff everything below the taggers
			_VirtualDom_diffHelp(xSubNode, ySubNode, patches, index + 1);
			return;

		case 0:
			if (x.a !== y.a)
			{
				_VirtualDom_pushPatch(patches, 3, index, y.a);
			}
			return;

		case 1:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKids);
			return;

		case 2:
			_VirtualDom_diffNodes(x, y, patches, index, _VirtualDom_diffKeyedKids);
			return;

		case 3:
			if (x.h !== y.h)
			{
				_VirtualDom_pushPatch(patches, 0, index, y);
				return;
			}

			var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
			factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

			var patch = y.i(x.g, y.g);
			patch && _VirtualDom_pushPatch(patches, 5, index, patch);

			return;
	}
}

// assumes the incoming arrays are the same length
function _VirtualDom_pairwiseRefEqual(as, bs)
{
	for (var i = 0; i < as.length; i++)
	{
		if (as[i] !== bs[i])
		{
			return false;
		}
	}

	return true;
}

function _VirtualDom_diffNodes(x, y, patches, index, diffKids)
{
	// Bail if obvious indicators have changed. Implies more serious
	// structural changes such that it's not worth it to diff.
	if (x.c !== y.c || x.f !== y.f)
	{
		_VirtualDom_pushPatch(patches, 0, index, y);
		return;
	}

	var factsDiff = _VirtualDom_diffFacts(x.d, y.d);
	factsDiff && _VirtualDom_pushPatch(patches, 4, index, factsDiff);

	diffKids(x, y, patches, index);
}



// DIFF FACTS


// TODO Instead of creating a new diff object, it's possible to just test if
// there *is* a diff. During the actual patch, do the diff again and make the
// modifications directly. This way, there's no new allocations. Worth it?
function _VirtualDom_diffFacts(x, y, category)
{
	var diff;

	// look for changes and removals
	for (var xKey in x)
	{
		if (xKey === 'a1' || xKey === 'a0' || xKey === 'a3' || xKey === 'a4')
		{
			var subDiff = _VirtualDom_diffFacts(x[xKey], y[xKey] || {}, xKey);
			if (subDiff)
			{
				diff = diff || {};
				diff[xKey] = subDiff;
			}
			continue;
		}

		// remove if not in the new facts
		if (!(xKey in y))
		{
			diff = diff || {};
			diff[xKey] =
				!category
					? (typeof x[xKey] === 'string' ? '' : null)
					:
				(category === 'a1')
					? ''
					:
				(category === 'a0' || category === 'a3')
					? undefined
					:
				{ f: x[xKey].f, o: undefined };

			continue;
		}

		var xValue = x[xKey];
		var yValue = y[xKey];

		// reference equal, so don't worry about it
		if (xValue === yValue && xKey !== 'value' && xKey !== 'checked'
			|| category === 'a0' && _VirtualDom_equalEvents(xValue, yValue))
		{
			continue;
		}

		diff = diff || {};
		diff[xKey] = yValue;
	}

	// add new stuff
	for (var yKey in y)
	{
		if (!(yKey in x))
		{
			diff = diff || {};
			diff[yKey] = y[yKey];
		}
	}

	return diff;
}



// DIFF KIDS


function _VirtualDom_diffKids(xParent, yParent, patches, index)
{
	var xKids = xParent.e;
	var yKids = yParent.e;

	var xLen = xKids.length;
	var yLen = yKids.length;

	// FIGURE OUT IF THERE ARE INSERTS OR REMOVALS

	if (xLen > yLen)
	{
		_VirtualDom_pushPatch(patches, 6, index, {
			v: yLen,
			i: xLen - yLen
		});
	}
	else if (xLen < yLen)
	{
		_VirtualDom_pushPatch(patches, 7, index, {
			v: xLen,
			e: yKids
		});
	}

	// PAIRWISE DIFF EVERYTHING ELSE

	for (var minLen = xLen < yLen ? xLen : yLen, i = 0; i < minLen; i++)
	{
		var xKid = xKids[i];
		_VirtualDom_diffHelp(xKid, yKids[i], patches, ++index);
		index += xKid.b || 0;
	}
}



// KEYED DIFF


function _VirtualDom_diffKeyedKids(xParent, yParent, patches, rootIndex)
{
	var localPatches = [];

	var changes = {}; // Dict String Entry
	var inserts = []; // Array { index : Int, entry : Entry }
	// type Entry = { tag : String, vnode : VNode, index : Int, data : _ }

	var xKids = xParent.e;
	var yKids = yParent.e;
	var xLen = xKids.length;
	var yLen = yKids.length;
	var xIndex = 0;
	var yIndex = 0;

	var index = rootIndex;

	while (xIndex < xLen && yIndex < yLen)
	{
		var x = xKids[xIndex];
		var y = yKids[yIndex];

		var xKey = x.a;
		var yKey = y.a;
		var xNode = x.b;
		var yNode = y.b;

		var newMatch = undefined;
		var oldMatch = undefined;

		// check if keys match

		if (xKey === yKey)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNode, localPatches, index);
			index += xNode.b || 0;

			xIndex++;
			yIndex++;
			continue;
		}

		// look ahead 1 to detect insertions and removals.

		var xNext = xKids[xIndex + 1];
		var yNext = yKids[yIndex + 1];

		if (xNext)
		{
			var xNextKey = xNext.a;
			var xNextNode = xNext.b;
			oldMatch = yKey === xNextKey;
		}

		if (yNext)
		{
			var yNextKey = yNext.a;
			var yNextNode = yNext.b;
			newMatch = xKey === yNextKey;
		}


		// swap x and y
		if (newMatch && oldMatch)
		{
			index++;
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			_VirtualDom_insertNode(changes, localPatches, xKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNextNode, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		// insert y
		if (newMatch)
		{
			index++;
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			_VirtualDom_diffHelp(xNode, yNextNode, localPatches, index);
			index += xNode.b || 0;

			xIndex += 1;
			yIndex += 2;
			continue;
		}

		// remove x
		if (oldMatch)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 1;
			continue;
		}

		// remove x, insert y
		if (xNext && xNextKey === yNextKey)
		{
			index++;
			_VirtualDom_removeNode(changes, localPatches, xKey, xNode, index);
			_VirtualDom_insertNode(changes, localPatches, yKey, yNode, yIndex, inserts);
			index += xNode.b || 0;

			index++;
			_VirtualDom_diffHelp(xNextNode, yNextNode, localPatches, index);
			index += xNextNode.b || 0;

			xIndex += 2;
			yIndex += 2;
			continue;
		}

		break;
	}

	// eat up any remaining nodes with removeNode and insertNode

	while (xIndex < xLen)
	{
		index++;
		var x = xKids[xIndex];
		var xNode = x.b;
		_VirtualDom_removeNode(changes, localPatches, x.a, xNode, index);
		index += xNode.b || 0;
		xIndex++;
	}

	while (yIndex < yLen)
	{
		var endInserts = endInserts || [];
		var y = yKids[yIndex];
		_VirtualDom_insertNode(changes, localPatches, y.a, y.b, undefined, endInserts);
		yIndex++;
	}

	if (localPatches.length > 0 || inserts.length > 0 || endInserts)
	{
		_VirtualDom_pushPatch(patches, 8, rootIndex, {
			w: localPatches,
			x: inserts,
			y: endInserts
		});
	}
}



// CHANGES FROM KEYED DIFF


var _VirtualDom_POSTFIX = '_elmW6BL';


function _VirtualDom_insertNode(changes, localPatches, key, vnode, yIndex, inserts)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		entry = {
			c: 0,
			z: vnode,
			r: yIndex,
			s: undefined
		};

		inserts.push({ r: yIndex, A: entry });
		changes[key] = entry;

		return;
	}

	// this key was removed earlier, a match!
	if (entry.c === 1)
	{
		inserts.push({ r: yIndex, A: entry });

		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(entry.z, vnode, subPatches, entry.r);
		entry.r = yIndex;
		entry.s.s = {
			w: subPatches,
			A: entry
		};

		return;
	}

	// this key has already been inserted or moved, a duplicate!
	_VirtualDom_insertNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, yIndex, inserts);
}


function _VirtualDom_removeNode(changes, localPatches, key, vnode, index)
{
	var entry = changes[key];

	// never seen this key before
	if (!entry)
	{
		var patch = _VirtualDom_pushPatch(localPatches, 9, index, undefined);

		changes[key] = {
			c: 1,
			z: vnode,
			r: index,
			s: patch
		};

		return;
	}

	// this key was inserted earlier, a match!
	if (entry.c === 0)
	{
		entry.c = 2;
		var subPatches = [];
		_VirtualDom_diffHelp(vnode, entry.z, subPatches, index);

		_VirtualDom_pushPatch(localPatches, 9, index, {
			w: subPatches,
			A: entry
		});

		return;
	}

	// this key has already been removed or moved, a duplicate!
	_VirtualDom_removeNode(changes, localPatches, key + _VirtualDom_POSTFIX, vnode, index);
}



// ADD DOM NODES
//
// Each DOM node has an "index" assigned in order of traversal. It is important
// to minimize our crawl over the actual DOM, so these indexes (along with the
// descendantsCount of virtual nodes) let us skip touching entire subtrees of
// the DOM if we know there are no patches there.


function _VirtualDom_addDomNodes(domNode, vNode, patches, eventNode)
{
	_VirtualDom_addDomNodesHelp(domNode, vNode, patches, 0, 0, vNode.b, eventNode);
}


// assumes `patches` is non-empty and indexes increase monotonically.
function _VirtualDom_addDomNodesHelp(domNode, vNode, patches, i, low, high, eventNode)
{
	var patch = patches[i];
	var index = patch.r;

	while (index === low)
	{
		var patchType = patch.$;

		if (patchType === 1)
		{
			_VirtualDom_addDomNodes(domNode, vNode.k, patch.s, eventNode);
		}
		else if (patchType === 8)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var subPatches = patch.s.w;
			if (subPatches.length > 0)
			{
				_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
			}
		}
		else if (patchType === 9)
		{
			patch.t = domNode;
			patch.u = eventNode;

			var data = patch.s;
			if (data)
			{
				data.A.s = domNode;
				var subPatches = data.w;
				if (subPatches.length > 0)
				{
					_VirtualDom_addDomNodesHelp(domNode, vNode, subPatches, 0, low, high, eventNode);
				}
			}
		}
		else
		{
			patch.t = domNode;
			patch.u = eventNode;
		}

		i++;

		if (!(patch = patches[i]) || (index = patch.r) > high)
		{
			return i;
		}
	}

	var tag = vNode.$;

	if (tag === 4)
	{
		var subNode = vNode.k;

		while (subNode.$ === 4)
		{
			subNode = subNode.k;
		}

		return _VirtualDom_addDomNodesHelp(domNode, subNode, patches, i, low + 1, high, domNode.elm_event_node_ref);
	}

	// tag must be 1 or 2 at this point

	var vKids = vNode.e;
	var childNodes = domNode.childNodes;
	for (var j = 0; j < vKids.length; j++)
	{
		low++;
		var vKid = tag === 1 ? vKids[j] : vKids[j].b;
		var nextLow = low + (vKid.b || 0);
		if (low <= index && index <= nextLow)
		{
			i = _VirtualDom_addDomNodesHelp(childNodes[j], vKid, patches, i, low, nextLow, eventNode);
			if (!(patch = patches[i]) || (index = patch.r) > high)
			{
				return i;
			}
		}
		low = nextLow;
	}
	return i;
}



// APPLY PATCHES


function _VirtualDom_applyPatches(rootDomNode, oldVirtualNode, patches, eventNode)
{
	if (patches.length === 0)
	{
		return rootDomNode;
	}

	_VirtualDom_addDomNodes(rootDomNode, oldVirtualNode, patches, eventNode);
	return _VirtualDom_applyPatchesHelp(rootDomNode, patches);
}

function _VirtualDom_applyPatchesHelp(rootDomNode, patches)
{
	for (var i = 0; i < patches.length; i++)
	{
		var patch = patches[i];
		var localDomNode = patch.t
		var newNode = _VirtualDom_applyPatch(localDomNode, patch);
		if (localDomNode === rootDomNode)
		{
			rootDomNode = newNode;
		}
	}
	return rootDomNode;
}

function _VirtualDom_applyPatch(domNode, patch)
{
	switch (patch.$)
	{
		case 0:
			return _VirtualDom_applyPatchRedraw(domNode, patch.s, patch.u);

		case 4:
			_VirtualDom_applyFacts(domNode, patch.u, patch.s);
			return domNode;

		case 3:
			domNode.replaceData(0, domNode.length, patch.s);
			return domNode;

		case 1:
			return _VirtualDom_applyPatchesHelp(domNode, patch.s);

		case 2:
			if (domNode.elm_event_node_ref)
			{
				domNode.elm_event_node_ref.j = patch.s;
			}
			else
			{
				domNode.elm_event_node_ref = { j: patch.s, p: patch.u };
			}
			return domNode;

		case 6:
			var data = patch.s;
			for (var i = 0; i < data.i; i++)
			{
				domNode.removeChild(domNode.childNodes[data.v]);
			}
			return domNode;

		case 7:
			var data = patch.s;
			var kids = data.e;
			var i = data.v;
			var theEnd = domNode.childNodes[i];
			for (; i < kids.length; i++)
			{
				domNode.insertBefore(_VirtualDom_render(kids[i], patch.u), theEnd);
			}
			return domNode;

		case 9:
			var data = patch.s;
			if (!data)
			{
				domNode.parentNode.removeChild(domNode);
				return domNode;
			}
			var entry = data.A;
			if (typeof entry.r !== 'undefined')
			{
				domNode.parentNode.removeChild(domNode);
			}
			entry.s = _VirtualDom_applyPatchesHelp(domNode, data.w);
			return domNode;

		case 8:
			return _VirtualDom_applyPatchReorder(domNode, patch);

		case 5:
			return patch.s(domNode);

		default:
			_Debug_crash(10); // 'Ran into an unknown patch!'
	}
}


function _VirtualDom_applyPatchRedraw(domNode, vNode, eventNode)
{
	var parentNode = domNode.parentNode;
	var newNode = _VirtualDom_render(vNode, eventNode);

	if (!newNode.elm_event_node_ref)
	{
		newNode.elm_event_node_ref = domNode.elm_event_node_ref;
	}

	if (parentNode && newNode !== domNode)
	{
		parentNode.replaceChild(newNode, domNode);
	}
	return newNode;
}


function _VirtualDom_applyPatchReorder(domNode, patch)
{
	var data = patch.s;

	// remove end inserts
	var frag = _VirtualDom_applyPatchReorderEndInsertsHelp(data.y, patch);

	// removals
	domNode = _VirtualDom_applyPatchesHelp(domNode, data.w);

	// inserts
	var inserts = data.x;
	for (var i = 0; i < inserts.length; i++)
	{
		var insert = inserts[i];
		var entry = insert.A;
		var node = entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u);
		domNode.insertBefore(node, domNode.childNodes[insert.r]);
	}

	// add end inserts
	if (frag)
	{
		_VirtualDom_appendChild(domNode, frag);
	}

	return domNode;
}


function _VirtualDom_applyPatchReorderEndInsertsHelp(endInserts, patch)
{
	if (!endInserts)
	{
		return;
	}

	var frag = _VirtualDom_doc.createDocumentFragment();
	for (var i = 0; i < endInserts.length; i++)
	{
		var insert = endInserts[i];
		var entry = insert.A;
		_VirtualDom_appendChild(frag, entry.c === 2
			? entry.s
			: _VirtualDom_render(entry.z, patch.u)
		);
	}
	return frag;
}


function _VirtualDom_virtualize(node)
{
	// TEXT NODES

	if (node.nodeType === 3)
	{
		return _VirtualDom_text(node.textContent);
	}


	// WEIRD NODES

	if (node.nodeType !== 1)
	{
		return _VirtualDom_text('');
	}


	// ELEMENT NODES

	var attrList = _List_Nil;
	var attrs = node.attributes;
	for (var i = attrs.length; i--; )
	{
		var attr = attrs[i];
		var name = attr.name;
		var value = attr.value;
		attrList = _List_Cons( A2(_VirtualDom_attribute, name, value), attrList );
	}

	var tag = node.tagName.toLowerCase();
	var kidList = _List_Nil;
	var kids = node.childNodes;

	for (var i = kids.length; i--; )
	{
		kidList = _List_Cons(_VirtualDom_virtualize(kids[i]), kidList);
	}
	return A3(_VirtualDom_node, tag, attrList, kidList);
}

function _VirtualDom_dekey(keyedNode)
{
	var keyedKids = keyedNode.e;
	var len = keyedKids.length;
	var kids = new Array(len);
	for (var i = 0; i < len; i++)
	{
		kids[i] = keyedKids[i].b;
	}

	return {
		$: 1,
		c: keyedNode.c,
		d: keyedNode.d,
		e: kids,
		f: keyedNode.f,
		b: keyedNode.b
	};
}




// ELEMENT


var _Debugger_element;

// This function was slightly modified by elm-watch.
var _Browser_element = _Debugger_element || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		impl._impl ? "Browser.sandbox" : "Browser.element", // added by elm-watch
		false, // isDebug, added by elm-watch
		debugMetadata, // added by elm-watch
		flagDecoder,
		args,
		impl.init,
		// impl.update, // commented out by elm-watch
		// impl.subscriptions, // commented out by elm-watch
		impl, // added by elm-watch
		function(sendToApp, initialModel) {
			// var view = impl.view; // commented out by elm-watch
			/**_UNUSED/ // always UNUSED with elm-watch
			var domNode = args['node'];
			//*/
			/**/
			var domNode = args && args['node'] ? args['node'] : _Debug_crash(0);
			//*/
			var currNode = _VirtualDom_virtualize(domNode);

			return _Browser_makeAnimator(initialModel, function(model)
			{
				// var nextNode = view(model); // commented out by elm-watch
				var nextNode = impl.view(model); // added by elm-watch
				var patches = _VirtualDom_diff(currNode, nextNode);
				domNode = _VirtualDom_applyPatches(domNode, currNode, patches, sendToApp);
				currNode = nextNode;
			});
		}
	);
});



// DOCUMENT


var _Debugger_document;

// This function was slightly modified by elm-watch.
var _Browser_document = _Debugger_document || F4(function(impl, flagDecoder, debugMetadata, args)
{
	return _Platform_initialize(
		impl._impl ? "Browser.application" : "Browser.document", // added by elm-watch
		false, // isDebug, added by elm-watch
		debugMetadata, // added by elm-watch
		flagDecoder,
		args,
		impl.init,
		// impl.update, // commented out by elm-watch
		// impl.subscriptions, // commented out by elm-watch
		impl, // added by elm-watch
		function(sendToApp, initialModel) {
			var divertHrefToApp = impl.setup && impl.setup(sendToApp)
			// var view = impl.view; // commented out by elm-watch
			var title = _VirtualDom_doc.title;
			var bodyNode = _VirtualDom_doc.body;
			var currNode = _VirtualDom_virtualize(bodyNode);
			return _Browser_makeAnimator(initialModel, function(model)
			{
				_VirtualDom_divertHrefToApp = divertHrefToApp;
				// var doc = view(model); // commented out by elm-watch
				var doc = impl.view(model); // added by elm-watch
				var nextNode = _VirtualDom_node('body')(_List_Nil)(doc.body);
				var patches = _VirtualDom_diff(currNode, nextNode);
				bodyNode = _VirtualDom_applyPatches(bodyNode, currNode, patches, sendToApp);
				currNode = nextNode;
				_VirtualDom_divertHrefToApp = 0;
				(title !== doc.title) && (_VirtualDom_doc.title = title = doc.title);
			});
		}
	);
});



// ANIMATION


var _Browser_cancelAnimationFrame =
	typeof cancelAnimationFrame !== 'undefined'
		? cancelAnimationFrame
		: function(id) { clearTimeout(id); };

var _Browser_requestAnimationFrame =
	typeof requestAnimationFrame !== 'undefined'
		? requestAnimationFrame
		: function(callback) { return setTimeout(callback, 1000 / 60); };


function _Browser_makeAnimator(model, draw)
{
	draw(model);

	var state = 0;

	function updateIfNeeded()
	{
		state = state === 1
			? 0
			: ( _Browser_requestAnimationFrame(updateIfNeeded), draw(model), 1 );
	}

	return function(nextModel, isSync)
	{
		model = nextModel;

		isSync
			? ( draw(model),
				state === 2 && (state = 1)
				)
			: ( state === 0 && _Browser_requestAnimationFrame(updateIfNeeded),
				state = 2
				);
	};
}



// APPLICATION


// This function was slightly modified by elm-watch.
function _Browser_application(impl)
{
	// var onUrlChange = impl.onUrlChange; // commented out by elm-watch
	// var onUrlRequest = impl.onUrlRequest; // commented out by elm-watch
	// var key = function() { key.a(onUrlChange(_Browser_getUrl())); }; // commented out by elm-watch
	var key = function() { key.a(impl.onUrlChange(_Browser_getUrl())); }; // added by elm-watch

	return _Browser_document({
		setup: function(sendToApp)
		{
			key.a = sendToApp;
			_Browser_window.addEventListener('popstate', key);
			_Browser_window.navigator.userAgent.indexOf('Trident') < 0 || _Browser_window.addEventListener('hashchange', key);

			return F2(function(domNode, event)
			{
				if (!event.ctrlKey && !event.metaKey && !event.shiftKey && event.button < 1 && !domNode.target && !domNode.hasAttribute('download'))
				{
					event.preventDefault();
					var href = domNode.href;
					var curr = _Browser_getUrl();
					var next = $elm$url$Url$fromString(href).a;
					sendToApp(impl.onUrlRequest(
						(next
							&& curr.protocol === next.protocol
							&& curr.host === next.host
							&& curr.port_.a === next.port_.a
						)
							? $elm$browser$Browser$Internal(next)
							: $elm$browser$Browser$External(href)
					));
				}
			});
		},
		init: function(flags)
		{
			// return A3(impl.init, flags, _Browser_getUrl(), key); // commented out by elm-watch
			return A3(impl.init, flags, globalThis.__ELM_WATCH.INIT_URL, key); // added by elm-watch
		},
		// view: impl.view, // commented out by elm-watch
		// update: impl.update, // commented out by elm-watch
		// subscriptions: impl.subscriptions // commented out by elm-watch
		view: function(model) { return impl.view(model); }, // added by elm-watch
		_impl: impl // added by elm-watch
	});
}

function _Browser_getUrl()
{
	return $elm$url$Url$fromString(_VirtualDom_doc.location.href).a || _Debug_crash(1);
}

var _Browser_go = F2(function(key, n)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		n && history.go(n);
		key();
	}));
});

var _Browser_pushUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.pushState({}, '', url);
		key();
	}));
});

var _Browser_replaceUrl = F2(function(key, url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function() {
		history.replaceState({}, '', url);
		key();
	}));
});



// GLOBAL EVENTS


var _Browser_fakeNode = { addEventListener: function() {}, removeEventListener: function() {} };
var _Browser_doc = typeof document !== 'undefined' ? document : _Browser_fakeNode;
var _Browser_window = typeof window !== 'undefined' ? window : _Browser_fakeNode;

var _Browser_on = F3(function(node, eventName, sendToSelf)
{
	return _Scheduler_spawn(_Scheduler_binding(function(callback)
	{
		function handler(event)	{ _Scheduler_rawSpawn(sendToSelf(event)); }
		node.addEventListener(eventName, handler, _VirtualDom_passiveSupported && { passive: true });
		return function() { node.removeEventListener(eventName, handler); };
	}));
});

var _Browser_decodeEvent = F2(function(decoder, event)
{
	var result = _Json_runHelp(decoder, event);
	return $elm$core$Result$isOk(result) ? $elm$core$Maybe$Just(result.a) : $elm$core$Maybe$Nothing;
});



// PAGE VISIBILITY


function _Browser_visibilityInfo()
{
	return (typeof _VirtualDom_doc.hidden !== 'undefined')
		? { hidden: 'hidden', change: 'visibilitychange' }
		:
	(typeof _VirtualDom_doc.mozHidden !== 'undefined')
		? { hidden: 'mozHidden', change: 'mozvisibilitychange' }
		:
	(typeof _VirtualDom_doc.msHidden !== 'undefined')
		? { hidden: 'msHidden', change: 'msvisibilitychange' }
		:
	(typeof _VirtualDom_doc.webkitHidden !== 'undefined')
		? { hidden: 'webkitHidden', change: 'webkitvisibilitychange' }
		: { hidden: 'hidden', change: 'visibilitychange' };
}



// ANIMATION FRAMES


function _Browser_rAF()
{
	return _Scheduler_binding(function(callback)
	{
		var id = _Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(Date.now()));
		});

		return function() {
			_Browser_cancelAnimationFrame(id);
		};
	});
}


function _Browser_now()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(Date.now()));
	});
}



// DOM STUFF


function _Browser_withNode(id, doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			var node = document.getElementById(id);
			callback(node
				? _Scheduler_succeed(doStuff(node))
				: _Scheduler_fail($elm$browser$Browser$Dom$NotFound(id))
			);
		});
	});
}


function _Browser_withWindow(doStuff)
{
	return _Scheduler_binding(function(callback)
	{
		_Browser_requestAnimationFrame(function() {
			callback(_Scheduler_succeed(doStuff()));
		});
	});
}


// FOCUS and BLUR


var _Browser_call = F2(function(functionName, id)
{
	return _Browser_withNode(id, function(node) {
		node[functionName]();
		return _Utils_Tuple0;
	});
});



// WINDOW VIEWPORT


function _Browser_getViewport()
{
	return {
		scene: _Browser_getScene(),
		viewport: {
			x: _Browser_window.pageXOffset,
			y: _Browser_window.pageYOffset,
			width: _Browser_doc.documentElement.clientWidth,
			height: _Browser_doc.documentElement.clientHeight
		}
	};
}

function _Browser_getScene()
{
	var body = _Browser_doc.body;
	var elem = _Browser_doc.documentElement;
	return {
		width: Math.max(body.scrollWidth, body.offsetWidth, elem.scrollWidth, elem.offsetWidth, elem.clientWidth),
		height: Math.max(body.scrollHeight, body.offsetHeight, elem.scrollHeight, elem.offsetHeight, elem.clientHeight)
	};
}

var _Browser_setViewport = F2(function(x, y)
{
	return _Browser_withWindow(function()
	{
		_Browser_window.scroll(x, y);
		return _Utils_Tuple0;
	});
});



// ELEMENT VIEWPORT


function _Browser_getViewportOf(id)
{
	return _Browser_withNode(id, function(node)
	{
		return {
			scene: {
				width: node.scrollWidth,
				height: node.scrollHeight
			},
			viewport: {
				x: node.scrollLeft,
				y: node.scrollTop,
				width: node.clientWidth,
				height: node.clientHeight
			}
		};
	});
}


var _Browser_setViewportOf = F3(function(id, x, y)
{
	return _Browser_withNode(id, function(node)
	{
		node.scrollLeft = x;
		node.scrollTop = y;
		return _Utils_Tuple0;
	});
});



// ELEMENT


function _Browser_getElement(id)
{
	return _Browser_withNode(id, function(node)
	{
		var rect = node.getBoundingClientRect();
		var x = _Browser_window.pageXOffset;
		var y = _Browser_window.pageYOffset;
		return {
			scene: _Browser_getScene(),
			viewport: {
				x: x,
				y: y,
				width: _Browser_doc.documentElement.clientWidth,
				height: _Browser_doc.documentElement.clientHeight
			},
			element: {
				x: x + rect.left,
				y: y + rect.top,
				width: rect.width,
				height: rect.height
			}
		};
	});
}



// LOAD and RELOAD


function _Browser_reload(skipCache)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		_VirtualDom_doc.location.reload(skipCache);
	}));
}

function _Browser_load(url)
{
	return A2($elm$core$Task$perform, $elm$core$Basics$never, _Scheduler_binding(function(callback)
	{
		try
		{
			_Browser_window.location = url;
		}
		catch(err)
		{
			// Only Firefox can throw a NS_ERROR_MALFORMED_URI exception here.
			// Other browsers reload the page, so let's be consistent about that.
			_VirtualDom_doc.location.reload(false);
		}
	}));
}



// SEND REQUEST

var _Http_toTask = F3(function(router, toTask, request)
{
	return _Scheduler_binding(function(callback)
	{
		function done(response) {
			callback(toTask(request.expect.a(response)));
		}

		var xhr = new XMLHttpRequest();
		xhr.addEventListener('error', function() { done($elm$http$Http$NetworkError_); });
		xhr.addEventListener('timeout', function() { done($elm$http$Http$Timeout_); });
		xhr.addEventListener('load', function() { done(_Http_toResponse(request.expect.b, xhr)); });
		$elm$core$Maybe$isJust(request.tracker) && _Http_track(router, xhr, request.tracker.a);

		try {
			xhr.open(request.method, request.url, true);
		} catch (e) {
			return done($elm$http$Http$BadUrl_(request.url));
		}

		_Http_configureRequest(xhr, request);

		request.body.a && xhr.setRequestHeader('Content-Type', request.body.a);
		xhr.send(request.body.b);

		return function() { xhr.c = true; xhr.abort(); };
	});
});


// CONFIGURE

function _Http_configureRequest(xhr, request)
{
	for (var headers = request.headers; headers.b; headers = headers.b) // WHILE_CONS
	{
		xhr.setRequestHeader(headers.a.a, headers.a.b);
	}
	xhr.timeout = request.timeout.a || 0;
	xhr.responseType = request.expect.d;
	xhr.withCredentials = request.allowCookiesFromOtherDomains;
}


// RESPONSES

function _Http_toResponse(toBody, xhr)
{
	return A2(
		200 <= xhr.status && xhr.status < 300 ? $elm$http$Http$GoodStatus_ : $elm$http$Http$BadStatus_,
		_Http_toMetadata(xhr),
		toBody(xhr.response)
	);
}


// METADATA

function _Http_toMetadata(xhr)
{
	return {
		url: xhr.responseURL,
		statusCode: xhr.status,
		statusText: xhr.statusText,
		headers: _Http_parseHeaders(xhr.getAllResponseHeaders())
	};
}


// HEADERS

function _Http_parseHeaders(rawHeaders)
{
	if (!rawHeaders)
	{
		return $elm$core$Dict$empty;
	}

	var headers = $elm$core$Dict$empty;
	var headerPairs = rawHeaders.split('\r\n');
	for (var i = headerPairs.length; i--; )
	{
		var headerPair = headerPairs[i];
		var index = headerPair.indexOf(': ');
		if (index > 0)
		{
			var key = headerPair.substring(0, index);
			var value = headerPair.substring(index + 2);

			headers = A3($elm$core$Dict$update, key, function(oldValue) {
				return $elm$core$Maybe$Just($elm$core$Maybe$isJust(oldValue)
					? value + ', ' + oldValue.a
					: value
				);
			}, headers);
		}
	}
	return headers;
}


// EXPECT

var _Http_expect = F3(function(type, toBody, toValue)
{
	return {
		$: 0,
		d: type,
		b: toBody,
		a: toValue
	};
});

var _Http_mapExpect = F2(function(func, expect)
{
	return {
		$: 0,
		d: expect.d,
		b: expect.b,
		a: function(x) { return func(expect.a(x)); }
	};
});

function _Http_toDataView(arrayBuffer)
{
	return new DataView(arrayBuffer);
}


// BODY and PARTS

var _Http_emptyBody = { $: 0 };
var _Http_pair = F2(function(a, b) { return { $: 0, a: a, b: b }; });

function _Http_toFormData(parts)
{
	for (var formData = new FormData(); parts.b; parts = parts.b) // WHILE_CONS
	{
		var part = parts.a;
		formData.append(part.a, part.b);
	}
	return formData;
}

var _Http_bytesToBlob = F2(function(mime, bytes)
{
	return new Blob([bytes], { type: mime });
});


// PROGRESS

function _Http_track(router, xhr, tracker)
{
	// TODO check out lengthComputable on loadstart event

	xhr.upload.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Sending({
			sent: event.loaded,
			size: event.total
		}))));
	});
	xhr.addEventListener('progress', function(event) {
		if (xhr.c) { return; }
		_Scheduler_rawSpawn(A2($elm$core$Platform$sendToSelf, router, _Utils_Tuple2(tracker, $elm$http$Http$Receiving({
			received: event.loaded,
			size: event.lengthComputable ? $elm$core$Maybe$Just(event.total) : $elm$core$Maybe$Nothing
		}))));
	});
}



// STRINGS


var _Parser_isSubString = F5(function(smallString, offset, row, col, bigString)
{
	var smallLength = smallString.length;
	var isGood = offset + smallLength <= bigString.length;

	for (var i = 0; isGood && i < smallLength; )
	{
		var code = bigString.charCodeAt(offset);
		isGood =
			smallString[i++] === bigString[offset++]
			&& (
				code === 0x000A /* \n */
					? ( row++, col=1 )
					: ( col++, (code & 0xF800) === 0xD800 ? smallString[i++] === bigString[offset++] : 1 )
			)
	}

	return _Utils_Tuple3(isGood ? offset : -1, row, col);
});



// CHARS


var _Parser_isSubChar = F3(function(predicate, offset, string)
{
	return (
		string.length <= offset
			? -1
			:
		(string.charCodeAt(offset) & 0xF800) === 0xD800
			? (predicate(_Utils_chr(string.substr(offset, 2))) ? offset + 2 : -1)
			:
		(predicate(_Utils_chr(string[offset]))
			? ((string[offset] === '\n') ? -2 : (offset + 1))
			: -1
		)
	);
});


var _Parser_isAsciiCode = F3(function(code, offset, string)
{
	return string.charCodeAt(offset) === code;
});



// NUMBERS


var _Parser_chompBase10 = F2(function(offset, string)
{
	for (; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (code < 0x30 || 0x39 < code)
		{
			return offset;
		}
	}
	return offset;
});


var _Parser_consumeBase = F3(function(base, offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var digit = string.charCodeAt(offset) - 0x30;
		if (digit < 0 || base <= digit) break;
		total = base * total + digit;
	}
	return _Utils_Tuple2(offset, total);
});


var _Parser_consumeBase16 = F2(function(offset, string)
{
	for (var total = 0; offset < string.length; offset++)
	{
		var code = string.charCodeAt(offset);
		if (0x30 <= code && code <= 0x39)
		{
			total = 16 * total + code - 0x30;
		}
		else if (0x41 <= code && code <= 0x46)
		{
			total = 16 * total + code - 55;
		}
		else if (0x61 <= code && code <= 0x66)
		{
			total = 16 * total + code - 87;
		}
		else
		{
			break;
		}
	}
	return _Utils_Tuple2(offset, total);
});



// FIND STRING


var _Parser_findSubString = F5(function(smallString, offset, row, col, bigString)
{
	var newOffset = bigString.indexOf(smallString, offset);
	var target = newOffset < 0 ? bigString.length : newOffset + smallString.length;

	while (offset < target)
	{
		var code = bigString.charCodeAt(offset++);
		code === 0x000A /* \n */
			? ( col=1, row++ )
			: ( col++, (code & 0xF800) === 0xD800 && offset++ )
	}

	return _Utils_Tuple3(newOffset, row, col);
});



var _Bitwise_and = F2(function(a, b)
{
	return a & b;
});

var _Bitwise_or = F2(function(a, b)
{
	return a | b;
});

var _Bitwise_xor = F2(function(a, b)
{
	return a ^ b;
});

function _Bitwise_complement(a)
{
	return ~a;
};

var _Bitwise_shiftLeftBy = F2(function(offset, a)
{
	return a << offset;
});

var _Bitwise_shiftRightBy = F2(function(offset, a)
{
	return a >> offset;
});

var _Bitwise_shiftRightZfBy = F2(function(offset, a)
{
	return a >>> offset;
});


// CREATE

var _Regex_never = /.^/;

var _Regex_fromStringWith = F2(function(options, string)
{
	var flags = 'g';
	if (options.multiline) { flags += 'm'; }
	if (options.caseInsensitive) { flags += 'i'; }

	try
	{
		return $elm$core$Maybe$Just(new RegExp(string, flags));
	}
	catch(error)
	{
		return $elm$core$Maybe$Nothing;
	}
});


// USE

var _Regex_contains = F2(function(re, string)
{
	return string.match(re) !== null;
});


var _Regex_findAtMost = F3(function(n, re, str)
{
	var out = [];
	var number = 0;
	var string = str;
	var lastIndex = re.lastIndex;
	var prevLastIndex = -1;
	var result;
	while (number++ < n && (result = re.exec(string)))
	{
		if (prevLastIndex == re.lastIndex) break;
		var i = result.length - 1;
		var subs = new Array(i);
		while (i > 0)
		{
			var submatch = result[i];
			subs[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		out.push(A4($elm$regex$Regex$Match, result[0], result.index, number, _List_fromArray(subs)));
		prevLastIndex = re.lastIndex;
	}
	re.lastIndex = lastIndex;
	return _List_fromArray(out);
});


var _Regex_replaceAtMost = F4(function(n, re, replacer, string)
{
	var count = 0;
	function jsReplacer(match)
	{
		if (count++ >= n)
		{
			return match;
		}
		var i = arguments.length - 3;
		var submatches = new Array(i);
		while (i > 0)
		{
			var submatch = arguments[i];
			submatches[--i] = submatch
				? $elm$core$Maybe$Just(submatch)
				: $elm$core$Maybe$Nothing;
		}
		return replacer(A4($elm$regex$Regex$Match, match, arguments[arguments.length - 2], count, _List_fromArray(submatches)));
	}
	return string.replace(re, jsReplacer);
});

var _Regex_splitAtMost = F3(function(n, re, str)
{
	var string = str;
	var out = [];
	var start = re.lastIndex;
	var restoreLastIndex = re.lastIndex;
	while (n--)
	{
		var result = re.exec(string);
		if (!result) break;
		out.push(string.slice(start, result.index));
		start = re.lastIndex;
	}
	out.push(string.slice(start));
	re.lastIndex = restoreLastIndex;
	return _List_fromArray(out);
});

var _Regex_infinity = Infinity;


/*
 * Copyright (c) 2010 Mozilla Corporation
 * Copyright (c) 2010 Vladimir Vukicevic
 * Copyright (c) 2013 John Mayer
 * Copyright (c) 2018 Andrey Kuzmin
 *
 * Permission is hereby granted, free of charge, to any person
 * obtaining a copy of this software and associated documentation
 * files (the "Software"), to deal in the Software without
 * restriction, including without limitation the rights to use,
 * copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following
 * conditions:
 *
 * The above copyright notice and this permission notice shall be
 * included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
 * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
 * HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
 * OTHER DEALINGS IN THE SOFTWARE.
 */

// Vector2

var _MJS_v2 = F2(function(x, y) {
    return new Float64Array([x, y]);
});

var _MJS_v2getX = function(a) {
    return a[0];
};

var _MJS_v2getY = function(a) {
    return a[1];
};

var _MJS_v2setX = F2(function(x, a) {
    return new Float64Array([x, a[1]]);
});

var _MJS_v2setY = F2(function(y, a) {
    return new Float64Array([a[0], y]);
});

var _MJS_v2toRecord = function(a) {
    return { x: a[0], y: a[1] };
};

var _MJS_v2fromRecord = function(r) {
    return new Float64Array([r.x, r.y]);
};

var _MJS_v2add = F2(function(a, b) {
    var r = new Float64Array(2);
    r[0] = a[0] + b[0];
    r[1] = a[1] + b[1];
    return r;
});

var _MJS_v2sub = F2(function(a, b) {
    var r = new Float64Array(2);
    r[0] = a[0] - b[0];
    r[1] = a[1] - b[1];
    return r;
});

var _MJS_v2negate = function(a) {
    var r = new Float64Array(2);
    r[0] = -a[0];
    r[1] = -a[1];
    return r;
};

var _MJS_v2direction = F2(function(a, b) {
    var r = new Float64Array(2);
    r[0] = a[0] - b[0];
    r[1] = a[1] - b[1];
    var im = 1.0 / _MJS_v2lengthLocal(r);
    r[0] = r[0] * im;
    r[1] = r[1] * im;
    return r;
});

function _MJS_v2lengthLocal(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1]);
}
var _MJS_v2length = _MJS_v2lengthLocal;

var _MJS_v2lengthSquared = function(a) {
    return a[0] * a[0] + a[1] * a[1];
};

var _MJS_v2distance = F2(function(a, b) {
    var dx = a[0] - b[0];
    var dy = a[1] - b[1];
    return Math.sqrt(dx * dx + dy * dy);
});

var _MJS_v2distanceSquared = F2(function(a, b) {
    var dx = a[0] - b[0];
    var dy = a[1] - b[1];
    return dx * dx + dy * dy;
});

var _MJS_v2normalize = function(a) {
    var r = new Float64Array(2);
    var im = 1.0 / _MJS_v2lengthLocal(a);
    r[0] = a[0] * im;
    r[1] = a[1] * im;
    return r;
};

var _MJS_v2scale = F2(function(k, a) {
    var r = new Float64Array(2);
    r[0] = a[0] * k;
    r[1] = a[1] * k;
    return r;
});

var _MJS_v2dot = F2(function(a, b) {
    return a[0] * b[0] + a[1] * b[1];
});

// Vector3

var _MJS_v3temp1Local = new Float64Array(3);
var _MJS_v3temp2Local = new Float64Array(3);
var _MJS_v3temp3Local = new Float64Array(3);

var _MJS_v3 = F3(function(x, y, z) {
    return new Float64Array([x, y, z]);
});

var _MJS_v3getX = function(a) {
    return a[0];
};

var _MJS_v3getY = function(a) {
    return a[1];
};

var _MJS_v3getZ = function(a) {
    return a[2];
};

var _MJS_v3setX = F2(function(x, a) {
    return new Float64Array([x, a[1], a[2]]);
});

var _MJS_v3setY = F2(function(y, a) {
    return new Float64Array([a[0], y, a[2]]);
});

var _MJS_v3setZ = F2(function(z, a) {
    return new Float64Array([a[0], a[1], z]);
});

var _MJS_v3toRecord = function(a) {
    return { x: a[0], y: a[1], z: a[2] };
};

var _MJS_v3fromRecord = function(r) {
    return new Float64Array([r.x, r.y, r.z]);
};

var _MJS_v3add = F2(function(a, b) {
    var r = new Float64Array(3);
    r[0] = a[0] + b[0];
    r[1] = a[1] + b[1];
    r[2] = a[2] + b[2];
    return r;
});

function _MJS_v3subLocal(a, b, r) {
    if (r === undefined) {
        r = new Float64Array(3);
    }
    r[0] = a[0] - b[0];
    r[1] = a[1] - b[1];
    r[2] = a[2] - b[2];
    return r;
}
var _MJS_v3sub = F2(_MJS_v3subLocal);

var _MJS_v3negate = function(a) {
    var r = new Float64Array(3);
    r[0] = -a[0];
    r[1] = -a[1];
    r[2] = -a[2];
    return r;
};

function _MJS_v3directionLocal(a, b, r) {
    if (r === undefined) {
        r = new Float64Array(3);
    }
    return _MJS_v3normalizeLocal(_MJS_v3subLocal(a, b, r), r);
}
var _MJS_v3direction = F2(_MJS_v3directionLocal);

function _MJS_v3lengthLocal(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2]);
}
var _MJS_v3length = _MJS_v3lengthLocal;

var _MJS_v3lengthSquared = function(a) {
    return a[0] * a[0] + a[1] * a[1] + a[2] * a[2];
};

var _MJS_v3distance = F2(function(a, b) {
    var dx = a[0] - b[0];
    var dy = a[1] - b[1];
    var dz = a[2] - b[2];
    return Math.sqrt(dx * dx + dy * dy + dz * dz);
});

var _MJS_v3distanceSquared = F2(function(a, b) {
    var dx = a[0] - b[0];
    var dy = a[1] - b[1];
    var dz = a[2] - b[2];
    return dx * dx + dy * dy + dz * dz;
});

function _MJS_v3normalizeLocal(a, r) {
    if (r === undefined) {
        r = new Float64Array(3);
    }
    var im = 1.0 / _MJS_v3lengthLocal(a);
    r[0] = a[0] * im;
    r[1] = a[1] * im;
    r[2] = a[2] * im;
    return r;
}
var _MJS_v3normalize = _MJS_v3normalizeLocal;

var _MJS_v3scale = F2(function(k, a) {
    return new Float64Array([a[0] * k, a[1] * k, a[2] * k]);
});

var _MJS_v3dotLocal = function(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
};
var _MJS_v3dot = F2(_MJS_v3dotLocal);

function _MJS_v3crossLocal(a, b, r) {
    if (r === undefined) {
        r = new Float64Array(3);
    }
    r[0] = a[1] * b[2] - a[2] * b[1];
    r[1] = a[2] * b[0] - a[0] * b[2];
    r[2] = a[0] * b[1] - a[1] * b[0];
    return r;
}
var _MJS_v3cross = F2(_MJS_v3crossLocal);

var _MJS_v3mul4x4 = F2(function(m, v) {
    var w;
    var tmp = _MJS_v3temp1Local;
    var r = new Float64Array(3);

    tmp[0] = m[3];
    tmp[1] = m[7];
    tmp[2] = m[11];
    w = _MJS_v3dotLocal(v, tmp) + m[15];
    tmp[0] = m[0];
    tmp[1] = m[4];
    tmp[2] = m[8];
    r[0] = (_MJS_v3dotLocal(v, tmp) + m[12]) / w;
    tmp[0] = m[1];
    tmp[1] = m[5];
    tmp[2] = m[9];
    r[1] = (_MJS_v3dotLocal(v, tmp) + m[13]) / w;
    tmp[0] = m[2];
    tmp[1] = m[6];
    tmp[2] = m[10];
    r[2] = (_MJS_v3dotLocal(v, tmp) + m[14]) / w;
    return r;
});

// Vector4

var _MJS_v4 = F4(function(x, y, z, w) {
    return new Float64Array([x, y, z, w]);
});

var _MJS_v4getX = function(a) {
    return a[0];
};

var _MJS_v4getY = function(a) {
    return a[1];
};

var _MJS_v4getZ = function(a) {
    return a[2];
};

var _MJS_v4getW = function(a) {
    return a[3];
};

var _MJS_v4setX = F2(function(x, a) {
    return new Float64Array([x, a[1], a[2], a[3]]);
});

var _MJS_v4setY = F2(function(y, a) {
    return new Float64Array([a[0], y, a[2], a[3]]);
});

var _MJS_v4setZ = F2(function(z, a) {
    return new Float64Array([a[0], a[1], z, a[3]]);
});

var _MJS_v4setW = F2(function(w, a) {
    return new Float64Array([a[0], a[1], a[2], w]);
});

var _MJS_v4toRecord = function(a) {
    return { x: a[0], y: a[1], z: a[2], w: a[3] };
};

var _MJS_v4fromRecord = function(r) {
    return new Float64Array([r.x, r.y, r.z, r.w]);
};

var _MJS_v4add = F2(function(a, b) {
    var r = new Float64Array(4);
    r[0] = a[0] + b[0];
    r[1] = a[1] + b[1];
    r[2] = a[2] + b[2];
    r[3] = a[3] + b[3];
    return r;
});

var _MJS_v4sub = F2(function(a, b) {
    var r = new Float64Array(4);
    r[0] = a[0] - b[0];
    r[1] = a[1] - b[1];
    r[2] = a[2] - b[2];
    r[3] = a[3] - b[3];
    return r;
});

var _MJS_v4negate = function(a) {
    var r = new Float64Array(4);
    r[0] = -a[0];
    r[1] = -a[1];
    r[2] = -a[2];
    r[3] = -a[3];
    return r;
};

var _MJS_v4direction = F2(function(a, b) {
    var r = new Float64Array(4);
    r[0] = a[0] - b[0];
    r[1] = a[1] - b[1];
    r[2] = a[2] - b[2];
    r[3] = a[3] - b[3];
    var im = 1.0 / _MJS_v4lengthLocal(r);
    r[0] = r[0] * im;
    r[1] = r[1] * im;
    r[2] = r[2] * im;
    r[3] = r[3] * im;
    return r;
});

function _MJS_v4lengthLocal(a) {
    return Math.sqrt(a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3]);
}
var _MJS_v4length = _MJS_v4lengthLocal;

var _MJS_v4lengthSquared = function(a) {
    return a[0] * a[0] + a[1] * a[1] + a[2] * a[2] + a[3] * a[3];
};

var _MJS_v4distance = F2(function(a, b) {
    var dx = a[0] - b[0];
    var dy = a[1] - b[1];
    var dz = a[2] - b[2];
    var dw = a[3] - b[3];
    return Math.sqrt(dx * dx + dy * dy + dz * dz + dw * dw);
});

var _MJS_v4distanceSquared = F2(function(a, b) {
    var dx = a[0] - b[0];
    var dy = a[1] - b[1];
    var dz = a[2] - b[2];
    var dw = a[3] - b[3];
    return dx * dx + dy * dy + dz * dz + dw * dw;
});

var _MJS_v4normalize = function(a) {
    var r = new Float64Array(4);
    var im = 1.0 / _MJS_v4lengthLocal(a);
    r[0] = a[0] * im;
    r[1] = a[1] * im;
    r[2] = a[2] * im;
    r[3] = a[3] * im;
    return r;
};

var _MJS_v4scale = F2(function(k, a) {
    var r = new Float64Array(4);
    r[0] = a[0] * k;
    r[1] = a[1] * k;
    r[2] = a[2] * k;
    r[3] = a[3] * k;
    return r;
});

var _MJS_v4dot = F2(function(a, b) {
    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
});

// Matrix4

var _MJS_m4x4temp1Local = new Float64Array(16);
var _MJS_m4x4temp2Local = new Float64Array(16);

var _MJS_m4x4identity = new Float64Array([
    1.0, 0.0, 0.0, 0.0,
    0.0, 1.0, 0.0, 0.0,
    0.0, 0.0, 1.0, 0.0,
    0.0, 0.0, 0.0, 1.0
]);

var _MJS_m4x4fromRecord = function(r) {
    var m = new Float64Array(16);
    m[0] = r.m11;
    m[1] = r.m21;
    m[2] = r.m31;
    m[3] = r.m41;
    m[4] = r.m12;
    m[5] = r.m22;
    m[6] = r.m32;
    m[7] = r.m42;
    m[8] = r.m13;
    m[9] = r.m23;
    m[10] = r.m33;
    m[11] = r.m43;
    m[12] = r.m14;
    m[13] = r.m24;
    m[14] = r.m34;
    m[15] = r.m44;
    return m;
};

var _MJS_m4x4toRecord = function(m) {
    return {
        m11: m[0], m21: m[1], m31: m[2], m41: m[3],
        m12: m[4], m22: m[5], m32: m[6], m42: m[7],
        m13: m[8], m23: m[9], m33: m[10], m43: m[11],
        m14: m[12], m24: m[13], m34: m[14], m44: m[15]
    };
};

var _MJS_m4x4inverse = function(m) {
    var r = new Float64Array(16);

    r[0] = m[5] * m[10] * m[15] - m[5] * m[11] * m[14] - m[9] * m[6] * m[15] +
        m[9] * m[7] * m[14] + m[13] * m[6] * m[11] - m[13] * m[7] * m[10];
    r[4] = -m[4] * m[10] * m[15] + m[4] * m[11] * m[14] + m[8] * m[6] * m[15] -
        m[8] * m[7] * m[14] - m[12] * m[6] * m[11] + m[12] * m[7] * m[10];
    r[8] = m[4] * m[9] * m[15] - m[4] * m[11] * m[13] - m[8] * m[5] * m[15] +
        m[8] * m[7] * m[13] + m[12] * m[5] * m[11] - m[12] * m[7] * m[9];
    r[12] = -m[4] * m[9] * m[14] + m[4] * m[10] * m[13] + m[8] * m[5] * m[14] -
        m[8] * m[6] * m[13] - m[12] * m[5] * m[10] + m[12] * m[6] * m[9];
    r[1] = -m[1] * m[10] * m[15] + m[1] * m[11] * m[14] + m[9] * m[2] * m[15] -
        m[9] * m[3] * m[14] - m[13] * m[2] * m[11] + m[13] * m[3] * m[10];
    r[5] = m[0] * m[10] * m[15] - m[0] * m[11] * m[14] - m[8] * m[2] * m[15] +
        m[8] * m[3] * m[14] + m[12] * m[2] * m[11] - m[12] * m[3] * m[10];
    r[9] = -m[0] * m[9] * m[15] + m[0] * m[11] * m[13] + m[8] * m[1] * m[15] -
        m[8] * m[3] * m[13] - m[12] * m[1] * m[11] + m[12] * m[3] * m[9];
    r[13] = m[0] * m[9] * m[14] - m[0] * m[10] * m[13] - m[8] * m[1] * m[14] +
        m[8] * m[2] * m[13] + m[12] * m[1] * m[10] - m[12] * m[2] * m[9];
    r[2] = m[1] * m[6] * m[15] - m[1] * m[7] * m[14] - m[5] * m[2] * m[15] +
        m[5] * m[3] * m[14] + m[13] * m[2] * m[7] - m[13] * m[3] * m[6];
    r[6] = -m[0] * m[6] * m[15] + m[0] * m[7] * m[14] + m[4] * m[2] * m[15] -
        m[4] * m[3] * m[14] - m[12] * m[2] * m[7] + m[12] * m[3] * m[6];
    r[10] = m[0] * m[5] * m[15] - m[0] * m[7] * m[13] - m[4] * m[1] * m[15] +
        m[4] * m[3] * m[13] + m[12] * m[1] * m[7] - m[12] * m[3] * m[5];
    r[14] = -m[0] * m[5] * m[14] + m[0] * m[6] * m[13] + m[4] * m[1] * m[14] -
        m[4] * m[2] * m[13] - m[12] * m[1] * m[6] + m[12] * m[2] * m[5];
    r[3] = -m[1] * m[6] * m[11] + m[1] * m[7] * m[10] + m[5] * m[2] * m[11] -
        m[5] * m[3] * m[10] - m[9] * m[2] * m[7] + m[9] * m[3] * m[6];
    r[7] = m[0] * m[6] * m[11] - m[0] * m[7] * m[10] - m[4] * m[2] * m[11] +
        m[4] * m[3] * m[10] + m[8] * m[2] * m[7] - m[8] * m[3] * m[6];
    r[11] = -m[0] * m[5] * m[11] + m[0] * m[7] * m[9] + m[4] * m[1] * m[11] -
        m[4] * m[3] * m[9] - m[8] * m[1] * m[7] + m[8] * m[3] * m[5];
    r[15] = m[0] * m[5] * m[10] - m[0] * m[6] * m[9] - m[4] * m[1] * m[10] +
        m[4] * m[2] * m[9] + m[8] * m[1] * m[6] - m[8] * m[2] * m[5];

    var det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12];

    if (det === 0) {
        return $elm$core$Maybe$Nothing;
    }

    det = 1.0 / det;

    for (var i = 0; i < 16; i = i + 1) {
        r[i] = r[i] * det;
    }

    return $elm$core$Maybe$Just(r);
};

var _MJS_m4x4inverseOrthonormal = function(m) {
    var r = _MJS_m4x4transposeLocal(m);
    var t = [m[12], m[13], m[14]];
    r[3] = r[7] = r[11] = 0;
    r[12] = -_MJS_v3dotLocal([r[0], r[4], r[8]], t);
    r[13] = -_MJS_v3dotLocal([r[1], r[5], r[9]], t);
    r[14] = -_MJS_v3dotLocal([r[2], r[6], r[10]], t);
    return r;
};

function _MJS_m4x4makeFrustumLocal(left, right, bottom, top, znear, zfar) {
    var r = new Float64Array(16);

    r[0] = 2 * znear / (right - left);
    r[1] = 0;
    r[2] = 0;
    r[3] = 0;
    r[4] = 0;
    r[5] = 2 * znear / (top - bottom);
    r[6] = 0;
    r[7] = 0;
    r[8] = (right + left) / (right - left);
    r[9] = (top + bottom) / (top - bottom);
    r[10] = -(zfar + znear) / (zfar - znear);
    r[11] = -1;
    r[12] = 0;
    r[13] = 0;
    r[14] = -2 * zfar * znear / (zfar - znear);
    r[15] = 0;

    return r;
}
var _MJS_m4x4makeFrustum = F6(_MJS_m4x4makeFrustumLocal);

var _MJS_m4x4makePerspective = F4(function(fovy, aspect, znear, zfar) {
    var ymax = znear * Math.tan(fovy * Math.PI / 360.0);
    var ymin = -ymax;
    var xmin = ymin * aspect;
    var xmax = ymax * aspect;

    return _MJS_m4x4makeFrustumLocal(xmin, xmax, ymin, ymax, znear, zfar);
});

function _MJS_m4x4makeOrthoLocal(left, right, bottom, top, znear, zfar) {
    var r = new Float64Array(16);

    r[0] = 2 / (right - left);
    r[1] = 0;
    r[2] = 0;
    r[3] = 0;
    r[4] = 0;
    r[5] = 2 / (top - bottom);
    r[6] = 0;
    r[7] = 0;
    r[8] = 0;
    r[9] = 0;
    r[10] = -2 / (zfar - znear);
    r[11] = 0;
    r[12] = -(right + left) / (right - left);
    r[13] = -(top + bottom) / (top - bottom);
    r[14] = -(zfar + znear) / (zfar - znear);
    r[15] = 1;

    return r;
}
var _MJS_m4x4makeOrtho = F6(_MJS_m4x4makeOrthoLocal);

var _MJS_m4x4makeOrtho2D = F4(function(left, right, bottom, top) {
    return _MJS_m4x4makeOrthoLocal(left, right, bottom, top, -1, 1);
});

function _MJS_m4x4mulLocal(a, b) {
    var r = new Float64Array(16);
    var a11 = a[0];
    var a21 = a[1];
    var a31 = a[2];
    var a41 = a[3];
    var a12 = a[4];
    var a22 = a[5];
    var a32 = a[6];
    var a42 = a[7];
    var a13 = a[8];
    var a23 = a[9];
    var a33 = a[10];
    var a43 = a[11];
    var a14 = a[12];
    var a24 = a[13];
    var a34 = a[14];
    var a44 = a[15];
    var b11 = b[0];
    var b21 = b[1];
    var b31 = b[2];
    var b41 = b[3];
    var b12 = b[4];
    var b22 = b[5];
    var b32 = b[6];
    var b42 = b[7];
    var b13 = b[8];
    var b23 = b[9];
    var b33 = b[10];
    var b43 = b[11];
    var b14 = b[12];
    var b24 = b[13];
    var b34 = b[14];
    var b44 = b[15];

    r[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;
    r[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;
    r[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;
    r[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;
    r[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;
    r[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;
    r[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;
    r[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;
    r[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;
    r[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;
    r[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;
    r[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;
    r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;
    r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;
    r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;
    r[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;

    return r;
}
var _MJS_m4x4mul = F2(_MJS_m4x4mulLocal);

var _MJS_m4x4mulAffine = F2(function(a, b) {
    var r = new Float64Array(16);
    var a11 = a[0];
    var a21 = a[1];
    var a31 = a[2];
    var a12 = a[4];
    var a22 = a[5];
    var a32 = a[6];
    var a13 = a[8];
    var a23 = a[9];
    var a33 = a[10];
    var a14 = a[12];
    var a24 = a[13];
    var a34 = a[14];

    var b11 = b[0];
    var b21 = b[1];
    var b31 = b[2];
    var b12 = b[4];
    var b22 = b[5];
    var b32 = b[6];
    var b13 = b[8];
    var b23 = b[9];
    var b33 = b[10];
    var b14 = b[12];
    var b24 = b[13];
    var b34 = b[14];

    r[0] = a11 * b11 + a12 * b21 + a13 * b31;
    r[1] = a21 * b11 + a22 * b21 + a23 * b31;
    r[2] = a31 * b11 + a32 * b21 + a33 * b31;
    r[3] = 0;
    r[4] = a11 * b12 + a12 * b22 + a13 * b32;
    r[5] = a21 * b12 + a22 * b22 + a23 * b32;
    r[6] = a31 * b12 + a32 * b22 + a33 * b32;
    r[7] = 0;
    r[8] = a11 * b13 + a12 * b23 + a13 * b33;
    r[9] = a21 * b13 + a22 * b23 + a23 * b33;
    r[10] = a31 * b13 + a32 * b23 + a33 * b33;
    r[11] = 0;
    r[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14;
    r[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24;
    r[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34;
    r[15] = 1;

    return r;
});

var _MJS_m4x4makeRotate = F2(function(angle, axis) {
    var r = new Float64Array(16);
    axis = _MJS_v3normalizeLocal(axis, _MJS_v3temp1Local);
    var x = axis[0];
    var y = axis[1];
    var z = axis[2];
    var c = Math.cos(angle);
    var c1 = 1 - c;
    var s = Math.sin(angle);

    r[0] = x * x * c1 + c;
    r[1] = y * x * c1 + z * s;
    r[2] = z * x * c1 - y * s;
    r[3] = 0;
    r[4] = x * y * c1 - z * s;
    r[5] = y * y * c1 + c;
    r[6] = y * z * c1 + x * s;
    r[7] = 0;
    r[8] = x * z * c1 + y * s;
    r[9] = y * z * c1 - x * s;
    r[10] = z * z * c1 + c;
    r[11] = 0;
    r[12] = 0;
    r[13] = 0;
    r[14] = 0;
    r[15] = 1;

    return r;
});

var _MJS_m4x4rotate = F3(function(angle, axis, m) {
    var r = new Float64Array(16);
    var im = 1.0 / _MJS_v3lengthLocal(axis);
    var x = axis[0] * im;
    var y = axis[1] * im;
    var z = axis[2] * im;
    var c = Math.cos(angle);
    var c1 = 1 - c;
    var s = Math.sin(angle);
    var xs = x * s;
    var ys = y * s;
    var zs = z * s;
    var xyc1 = x * y * c1;
    var xzc1 = x * z * c1;
    var yzc1 = y * z * c1;
    var t11 = x * x * c1 + c;
    var t21 = xyc1 + zs;
    var t31 = xzc1 - ys;
    var t12 = xyc1 - zs;
    var t22 = y * y * c1 + c;
    var t32 = yzc1 + xs;
    var t13 = xzc1 + ys;
    var t23 = yzc1 - xs;
    var t33 = z * z * c1 + c;
    var m11 = m[0], m21 = m[1], m31 = m[2], m41 = m[3];
    var m12 = m[4], m22 = m[5], m32 = m[6], m42 = m[7];
    var m13 = m[8], m23 = m[9], m33 = m[10], m43 = m[11];
    var m14 = m[12], m24 = m[13], m34 = m[14], m44 = m[15];

    r[0] = m11 * t11 + m12 * t21 + m13 * t31;
    r[1] = m21 * t11 + m22 * t21 + m23 * t31;
    r[2] = m31 * t11 + m32 * t21 + m33 * t31;
    r[3] = m41 * t11 + m42 * t21 + m43 * t31;
    r[4] = m11 * t12 + m12 * t22 + m13 * t32;
    r[5] = m21 * t12 + m22 * t22 + m23 * t32;
    r[6] = m31 * t12 + m32 * t22 + m33 * t32;
    r[7] = m41 * t12 + m42 * t22 + m43 * t32;
    r[8] = m11 * t13 + m12 * t23 + m13 * t33;
    r[9] = m21 * t13 + m22 * t23 + m23 * t33;
    r[10] = m31 * t13 + m32 * t23 + m33 * t33;
    r[11] = m41 * t13 + m42 * t23 + m43 * t33;
    r[12] = m14,
    r[13] = m24;
    r[14] = m34;
    r[15] = m44;

    return r;
});

function _MJS_m4x4makeScale3Local(x, y, z) {
    var r = new Float64Array(16);

    r[0] = x;
    r[1] = 0;
    r[2] = 0;
    r[3] = 0;
    r[4] = 0;
    r[5] = y;
    r[6] = 0;
    r[7] = 0;
    r[8] = 0;
    r[9] = 0;
    r[10] = z;
    r[11] = 0;
    r[12] = 0;
    r[13] = 0;
    r[14] = 0;
    r[15] = 1;

    return r;
}
var _MJS_m4x4makeScale3 = F3(_MJS_m4x4makeScale3Local);

var _MJS_m4x4makeScale = function(v) {
    return _MJS_m4x4makeScale3Local(v[0], v[1], v[2]);
};

var _MJS_m4x4scale3 = F4(function(x, y, z, m) {
    var r = new Float64Array(16);

    r[0] = m[0] * x;
    r[1] = m[1] * x;
    r[2] = m[2] * x;
    r[3] = m[3] * x;
    r[4] = m[4] * y;
    r[5] = m[5] * y;
    r[6] = m[6] * y;
    r[7] = m[7] * y;
    r[8] = m[8] * z;
    r[9] = m[9] * z;
    r[10] = m[10] * z;
    r[11] = m[11] * z;
    r[12] = m[12];
    r[13] = m[13];
    r[14] = m[14];
    r[15] = m[15];

    return r;
});

var _MJS_m4x4scale = F2(function(v, m) {
    var r = new Float64Array(16);
    var x = v[0];
    var y = v[1];
    var z = v[2];

    r[0] = m[0] * x;
    r[1] = m[1] * x;
    r[2] = m[2] * x;
    r[3] = m[3] * x;
    r[4] = m[4] * y;
    r[5] = m[5] * y;
    r[6] = m[6] * y;
    r[7] = m[7] * y;
    r[8] = m[8] * z;
    r[9] = m[9] * z;
    r[10] = m[10] * z;
    r[11] = m[11] * z;
    r[12] = m[12];
    r[13] = m[13];
    r[14] = m[14];
    r[15] = m[15];

    return r;
});

function _MJS_m4x4makeTranslate3Local(x, y, z) {
    var r = new Float64Array(16);

    r[0] = 1;
    r[1] = 0;
    r[2] = 0;
    r[3] = 0;
    r[4] = 0;
    r[5] = 1;
    r[6] = 0;
    r[7] = 0;
    r[8] = 0;
    r[9] = 0;
    r[10] = 1;
    r[11] = 0;
    r[12] = x;
    r[13] = y;
    r[14] = z;
    r[15] = 1;

    return r;
}
var _MJS_m4x4makeTranslate3 = F3(_MJS_m4x4makeTranslate3Local);

var _MJS_m4x4makeTranslate = function(v) {
    return _MJS_m4x4makeTranslate3Local(v[0], v[1], v[2]);
};

var _MJS_m4x4translate3 = F4(function(x, y, z, m) {
    var r = new Float64Array(16);
    var m11 = m[0];
    var m21 = m[1];
    var m31 = m[2];
    var m41 = m[3];
    var m12 = m[4];
    var m22 = m[5];
    var m32 = m[6];
    var m42 = m[7];
    var m13 = m[8];
    var m23 = m[9];
    var m33 = m[10];
    var m43 = m[11];

    r[0] = m11;
    r[1] = m21;
    r[2] = m31;
    r[3] = m41;
    r[4] = m12;
    r[5] = m22;
    r[6] = m32;
    r[7] = m42;
    r[8] = m13;
    r[9] = m23;
    r[10] = m33;
    r[11] = m43;
    r[12] = m11 * x + m12 * y + m13 * z + m[12];
    r[13] = m21 * x + m22 * y + m23 * z + m[13];
    r[14] = m31 * x + m32 * y + m33 * z + m[14];
    r[15] = m41 * x + m42 * y + m43 * z + m[15];

    return r;
});

var _MJS_m4x4translate = F2(function(v, m) {
    var r = new Float64Array(16);
    var x = v[0];
    var y = v[1];
    var z = v[2];
    var m11 = m[0];
    var m21 = m[1];
    var m31 = m[2];
    var m41 = m[3];
    var m12 = m[4];
    var m22 = m[5];
    var m32 = m[6];
    var m42 = m[7];
    var m13 = m[8];
    var m23 = m[9];
    var m33 = m[10];
    var m43 = m[11];

    r[0] = m11;
    r[1] = m21;
    r[2] = m31;
    r[3] = m41;
    r[4] = m12;
    r[5] = m22;
    r[6] = m32;
    r[7] = m42;
    r[8] = m13;
    r[9] = m23;
    r[10] = m33;
    r[11] = m43;
    r[12] = m11 * x + m12 * y + m13 * z + m[12];
    r[13] = m21 * x + m22 * y + m23 * z + m[13];
    r[14] = m31 * x + m32 * y + m33 * z + m[14];
    r[15] = m41 * x + m42 * y + m43 * z + m[15];

    return r;
});

var _MJS_m4x4makeLookAt = F3(function(eye, center, up) {
    var z = _MJS_v3directionLocal(eye, center, _MJS_v3temp1Local);
    var x = _MJS_v3normalizeLocal(_MJS_v3crossLocal(up, z, _MJS_v3temp2Local), _MJS_v3temp2Local);
    var y = _MJS_v3normalizeLocal(_MJS_v3crossLocal(z, x, _MJS_v3temp3Local), _MJS_v3temp3Local);
    var tm1 = _MJS_m4x4temp1Local;
    var tm2 = _MJS_m4x4temp2Local;

    tm1[0] = x[0];
    tm1[1] = y[0];
    tm1[2] = z[0];
    tm1[3] = 0;
    tm1[4] = x[1];
    tm1[5] = y[1];
    tm1[6] = z[1];
    tm1[7] = 0;
    tm1[8] = x[2];
    tm1[9] = y[2];
    tm1[10] = z[2];
    tm1[11] = 0;
    tm1[12] = 0;
    tm1[13] = 0;
    tm1[14] = 0;
    tm1[15] = 1;

    tm2[0] = 1; tm2[1] = 0; tm2[2] = 0; tm2[3] = 0;
    tm2[4] = 0; tm2[5] = 1; tm2[6] = 0; tm2[7] = 0;
    tm2[8] = 0; tm2[9] = 0; tm2[10] = 1; tm2[11] = 0;
    tm2[12] = -eye[0]; tm2[13] = -eye[1]; tm2[14] = -eye[2]; tm2[15] = 1;

    return _MJS_m4x4mulLocal(tm1, tm2);
});


function _MJS_m4x4transposeLocal(m) {
    var r = new Float64Array(16);

    r[0] = m[0]; r[1] = m[4]; r[2] = m[8]; r[3] = m[12];
    r[4] = m[1]; r[5] = m[5]; r[6] = m[9]; r[7] = m[13];
    r[8] = m[2]; r[9] = m[6]; r[10] = m[10]; r[11] = m[14];
    r[12] = m[3]; r[13] = m[7]; r[14] = m[11]; r[15] = m[15];

    return r;
}
var _MJS_m4x4transpose = _MJS_m4x4transposeLocal;

var _MJS_m4x4makeBasis = F3(function(vx, vy, vz) {
    var r = new Float64Array(16);

    r[0] = vx[0];
    r[1] = vx[1];
    r[2] = vx[2];
    r[3] = 0;
    r[4] = vy[0];
    r[5] = vy[1];
    r[6] = vy[2];
    r[7] = 0;
    r[8] = vz[0];
    r[9] = vz[1];
    r[10] = vz[2];
    r[11] = 0;
    r[12] = 0;
    r[13] = 0;
    r[14] = 0;
    r[15] = 1;

    return r;
});



function _Time_now(millisToPosix)
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(millisToPosix(Date.now())));
	});
}

var _Time_setInterval = F2(function(interval, task)
{
	return _Scheduler_binding(function(callback)
	{
		var id = setInterval(function() { _Scheduler_rawSpawn(task); }, interval);
		return function() { clearInterval(id); };
	});
});

function _Time_here()
{
	return _Scheduler_binding(function(callback)
	{
		callback(_Scheduler_succeed(
			A2($elm$time$Time$customZone, -(new Date().getTimezoneOffset()), _List_Nil)
		));
	});
}


function _Time_getZoneName()
{
	return _Scheduler_binding(function(callback)
	{
		try
		{
			var name = $elm$time$Time$Name(Intl.DateTimeFormat().resolvedOptions().timeZone);
		}
		catch (e)
		{
			var name = $elm$time$Time$Offset(new Date().getTimezoneOffset());
		}
		callback(_Scheduler_succeed(name));
	});
}




// VIRTUAL-DOM WIDGETS


var _Markdown_toHtml = F3(function(options, factList, rawMarkdown)
{
	return _VirtualDom_custom(
		factList,
		{
			a: options,
			b: rawMarkdown
		},
		_Markdown_render,
		_Markdown_diff
	);
});



// WIDGET IMPLEMENTATION


function _Markdown_render(model)
{
	return A2(_Markdown_replace, model, _VirtualDom_doc.createElement('div'));
}


function _Markdown_diff(x, y)
{
	return x.b === y.b && x.a === y.a
		? false
		: _Markdown_replace(y);
}


var _Markdown_replace = F2(function(model, div)
{
	div.innerHTML = _Markdown_marked(model.b, _Markdown_formatOptions(model.a));
	return div;
});



// ACTUAL MARKDOWN PARSER


var _Markdown_marked = function() {
	// catch the `marked` object regardless of the outer environment.
	// (ex. a CommonJS module compatible environment.)
	// note that this depends on marked's implementation of environment detection.
	var module = {};
	var exports = module.exports = {};

	/**
	 * marked - a markdown parser
	 * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)
	 * https://github.com/chjj/marked
	 * commit cd2f6f5b7091154c5526e79b5f3bfb4d15995a51
	 */
	(function(){var block={newline:/^\n+/,code:/^( {4}[^\n]+\n*)+/,fences:noop,hr:/^( *[-*_]){3,} *(?:\n+|$)/,heading:/^ *(#{1,6}) *([^\n]+?) *#* *(?:\n+|$)/,nptable:noop,lheading:/^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,blockquote:/^( *>[^\n]+(\n(?!def)[^\n]+)*\n*)+/,list:/^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,html:/^ *(?:comment *(?:\n|\s*$)|closed *(?:\n{2,}|\s*$)|closing *(?:\n{2,}|\s*$))/,def:/^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +["(]([^\n]+)[")])? *(?:\n+|$)/,table:noop,paragraph:/^((?:[^\n]+\n?(?!hr|heading|lheading|blockquote|tag|def))+)\n*/,text:/^[^\n]+/};block.bullet=/(?:[*+-]|\d+\.)/;block.item=/^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;block.item=replace(block.item,"gm")(/bull/g,block.bullet)();block.list=replace(block.list)(/bull/g,block.bullet)("hr","\\n+(?=\\1?(?:[-*_] *){3,}(?:\\n+|$))")("def","\\n+(?="+block.def.source+")")();block.blockquote=replace(block.blockquote)("def",block.def)();block._tag="(?!(?:"+"a|em|strong|small|s|cite|q|dfn|abbr|data|time|code"+"|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo"+"|span|br|wbr|ins|del|img)\\b)\\w+(?!:/|[^\\w\\s@]*@)\\b";block.html=replace(block.html)("comment",/<!--[\s\S]*?-->/)("closed",/<(tag)[\s\S]+?<\/\1>/)("closing",/<tag(?:"[^"]*"|'[^']*'|[^'">])*?>/)(/tag/g,block._tag)();block.paragraph=replace(block.paragraph)("hr",block.hr)("heading",block.heading)("lheading",block.lheading)("blockquote",block.blockquote)("tag","<"+block._tag)("def",block.def)();block.normal=merge({},block);block.gfm=merge({},block.normal,{fences:/^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\s*\1 *(?:\n+|$)/,paragraph:/^/,heading:/^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/});block.gfm.paragraph=replace(block.paragraph)("(?!","(?!"+block.gfm.fences.source.replace("\\1","\\2")+"|"+block.list.source.replace("\\1","\\3")+"|")();block.tables=merge({},block.gfm,{nptable:/^ *(\S.*\|.*)\n *([-:]+ *\|[-| :]*)\n((?:.*\|.*(?:\n|$))*)\n*/,table:/^ *\|(.+)\n *\|( *[-:]+[-| :]*)\n((?: *\|.*(?:\n|$))*)\n*/});function Lexer(options){this.tokens=[];this.tokens.links={};this.options=options||marked.defaults;this.rules=block.normal;if(this.options.gfm){if(this.options.tables){this.rules=block.tables}else{this.rules=block.gfm}}}Lexer.rules=block;Lexer.lex=function(src,options){var lexer=new Lexer(options);return lexer.lex(src)};Lexer.prototype.lex=function(src){src=src.replace(/\r\n|\r/g,"\n").replace(/\t/g,"    ").replace(/\u00a0/g," ").replace(/\u2424/g,"\n");return this.token(src,true)};Lexer.prototype.token=function(src,top,bq){var src=src.replace(/^ +$/gm,""),next,loose,cap,bull,b,item,space,i,l;while(src){if(cap=this.rules.newline.exec(src)){src=src.substring(cap[0].length);if(cap[0].length>1){this.tokens.push({type:"space"})}}if(cap=this.rules.code.exec(src)){src=src.substring(cap[0].length);cap=cap[0].replace(/^ {4}/gm,"");this.tokens.push({type:"code",text:!this.options.pedantic?cap.replace(/\n+$/,""):cap});continue}if(cap=this.rules.fences.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"code",lang:cap[2],text:cap[3]||""});continue}if(cap=this.rules.heading.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"heading",depth:cap[1].length,text:cap[2]});continue}if(top&&(cap=this.rules.nptable.exec(src))){src=src.substring(cap[0].length);item={type:"table",header:cap[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:cap[3].replace(/\n$/,"").split("\n")};for(i=0;i<item.align.length;i++){if(/^ *-+: *$/.test(item.align[i])){item.align[i]="right"}else if(/^ *:-+: *$/.test(item.align[i])){item.align[i]="center"}else if(/^ *:-+ *$/.test(item.align[i])){item.align[i]="left"}else{item.align[i]=null}}for(i=0;i<item.cells.length;i++){item.cells[i]=item.cells[i].split(/ *\| */)}this.tokens.push(item);continue}if(cap=this.rules.lheading.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"heading",depth:cap[2]==="="?1:2,text:cap[1]});continue}if(cap=this.rules.hr.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"hr"});continue}if(cap=this.rules.blockquote.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"blockquote_start"});cap=cap[0].replace(/^ *> ?/gm,"");this.token(cap,top,true);this.tokens.push({type:"blockquote_end"});continue}if(cap=this.rules.list.exec(src)){src=src.substring(cap[0].length);bull=cap[2];this.tokens.push({type:"list_start",ordered:bull.length>1});cap=cap[0].match(this.rules.item);next=false;l=cap.length;i=0;for(;i<l;i++){item=cap[i];space=item.length;item=item.replace(/^ *([*+-]|\d+\.) +/,"");if(~item.indexOf("\n ")){space-=item.length;item=!this.options.pedantic?item.replace(new RegExp("^ {1,"+space+"}","gm"),""):item.replace(/^ {1,4}/gm,"")}if(this.options.smartLists&&i!==l-1){b=block.bullet.exec(cap[i+1])[0];if(bull!==b&&!(bull.length>1&&b.length>1)){src=cap.slice(i+1).join("\n")+src;i=l-1}}loose=next||/\n\n(?!\s*$)/.test(item);if(i!==l-1){next=item.charAt(item.length-1)==="\n";if(!loose)loose=next}this.tokens.push({type:loose?"loose_item_start":"list_item_start"});this.token(item,false,bq);this.tokens.push({type:"list_item_end"})}this.tokens.push({type:"list_end"});continue}if(cap=this.rules.html.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:this.options.sanitize?"paragraph":"html",pre:!this.options.sanitizer&&(cap[1]==="pre"||cap[1]==="script"||cap[1]==="style"),text:cap[0]});continue}if(!bq&&top&&(cap=this.rules.def.exec(src))){src=src.substring(cap[0].length);this.tokens.links[cap[1].toLowerCase()]={href:cap[2],title:cap[3]};continue}if(top&&(cap=this.rules.table.exec(src))){src=src.substring(cap[0].length);item={type:"table",header:cap[1].replace(/^ *| *\| *$/g,"").split(/ *\| */),align:cap[2].replace(/^ *|\| *$/g,"").split(/ *\| */),cells:cap[3].replace(/(?: *\| *)?\n$/,"").split("\n")};for(i=0;i<item.align.length;i++){if(/^ *-+: *$/.test(item.align[i])){item.align[i]="right"}else if(/^ *:-+: *$/.test(item.align[i])){item.align[i]="center"}else if(/^ *:-+ *$/.test(item.align[i])){item.align[i]="left"}else{item.align[i]=null}}for(i=0;i<item.cells.length;i++){item.cells[i]=item.cells[i].replace(/^ *\| *| *\| *$/g,"").split(/ *\| */)}this.tokens.push(item);continue}if(top&&(cap=this.rules.paragraph.exec(src))){src=src.substring(cap[0].length);this.tokens.push({type:"paragraph",text:cap[1].charAt(cap[1].length-1)==="\n"?cap[1].slice(0,-1):cap[1]});continue}if(cap=this.rules.text.exec(src)){src=src.substring(cap[0].length);this.tokens.push({type:"text",text:cap[0]});continue}if(src){throw new Error("Infinite loop on byte: "+src.charCodeAt(0))}}return this.tokens};var inline={escape:/^\\([\\`*{}\[\]()#+\-.!_>])/,autolink:/^<([^ >]+(@|:\/)[^ >]+)>/,url:noop,tag:/^<!--[\s\S]*?-->|^<\/?\w+(?:"[^"]*"|'[^']*'|[^'">])*?>/,link:/^!?\[(inside)\]\(href\)/,reflink:/^!?\[(inside)\]\s*\[([^\]]*)\]/,nolink:/^!?\[((?:\[[^\]]*\]|[^\[\]])*)\]/,strong:/^_\_([\s\S]+?)_\_(?!_)|^\*\*([\s\S]+?)\*\*(?!\*)/,em:/^\b_((?:[^_]|_\_)+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,code:/^(`+)\s*([\s\S]*?[^`])\s*\1(?!`)/,br:/^ {2,}\n(?!\s*$)/,del:noop,text:/^[\s\S]+?(?=[\\<!\[_*`]| {2,}\n|$)/};inline._inside=/(?:\[[^\]]*\]|[^\[\]]|\](?=[^\[]*\]))*/;inline._href=/\s*<?([\s\S]*?)>?(?:\s+['"]([\s\S]*?)['"])?\s*/;inline.link=replace(inline.link)("inside",inline._inside)("href",inline._href)();inline.reflink=replace(inline.reflink)("inside",inline._inside)();inline.normal=merge({},inline);inline.pedantic=merge({},inline.normal,{strong:/^_\_(?=\S)([\s\S]*?\S)_\_(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,em:/^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/});inline.gfm=merge({},inline.normal,{escape:replace(inline.escape)("])","~|])")(),url:/^(https?:\/\/[^\s<]+[^<.,:;"')\]\s])/,del:/^~~(?=\S)([\s\S]*?\S)~~/,text:replace(inline.text)("]|","~]|")("|","|https?://|")()});inline.breaks=merge({},inline.gfm,{br:replace(inline.br)("{2,}","*")(),text:replace(inline.gfm.text)("{2,}","*")()});function InlineLexer(links,options){this.options=options||marked.defaults;this.links=links;this.rules=inline.normal;this.renderer=this.options.renderer||new Renderer;this.renderer.options=this.options;if(!this.links){throw new Error("Tokens array requires a `links` property.")}if(this.options.gfm){if(this.options.breaks){this.rules=inline.breaks}else{this.rules=inline.gfm}}else if(this.options.pedantic){this.rules=inline.pedantic}}InlineLexer.rules=inline;InlineLexer.output=function(src,links,options){var inline=new InlineLexer(links,options);return inline.output(src)};InlineLexer.prototype.output=function(src){var out="",link,text,href,cap;while(src){if(cap=this.rules.escape.exec(src)){src=src.substring(cap[0].length);out+=cap[1];continue}if(cap=this.rules.autolink.exec(src)){src=src.substring(cap[0].length);if(cap[2]==="@"){text=cap[1].charAt(6)===":"?this.mangle(cap[1].substring(7)):this.mangle(cap[1]);href=this.mangle("mailto:")+text}else{text=escape(cap[1]);href=text}out+=this.renderer.link(href,null,text);continue}if(!this.inLink&&(cap=this.rules.url.exec(src))){src=src.substring(cap[0].length);text=escape(cap[1]);href=text;out+=this.renderer.link(href,null,text);continue}if(cap=this.rules.tag.exec(src)){if(!this.inLink&&/^<a /i.test(cap[0])){this.inLink=true}else if(this.inLink&&/^<\/a>/i.test(cap[0])){this.inLink=false}src=src.substring(cap[0].length);out+=this.options.sanitize?this.options.sanitizer?this.options.sanitizer(cap[0]):escape(cap[0]):cap[0];continue}if(cap=this.rules.link.exec(src)){src=src.substring(cap[0].length);this.inLink=true;out+=this.outputLink(cap,{href:cap[2],title:cap[3]});this.inLink=false;continue}if((cap=this.rules.reflink.exec(src))||(cap=this.rules.nolink.exec(src))){src=src.substring(cap[0].length);link=(cap[2]||cap[1]).replace(/\s+/g," ");link=this.links[link.toLowerCase()];if(!link||!link.href){out+=cap[0].charAt(0);src=cap[0].substring(1)+src;continue}this.inLink=true;out+=this.outputLink(cap,link);this.inLink=false;continue}if(cap=this.rules.strong.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.strong(this.output(cap[2]||cap[1]));continue}if(cap=this.rules.em.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.em(this.output(cap[2]||cap[1]));continue}if(cap=this.rules.code.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.codespan(escape(cap[2],true));continue}if(cap=this.rules.br.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.br();continue}if(cap=this.rules.del.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.del(this.output(cap[1]));continue}if(cap=this.rules.text.exec(src)){src=src.substring(cap[0].length);out+=this.renderer.text(escape(this.smartypants(cap[0])));continue}if(src){throw new Error("Infinite loop on byte: "+src.charCodeAt(0))}}return out};InlineLexer.prototype.outputLink=function(cap,link){var href=escape(link.href),title=link.title?escape(link.title):null;return cap[0].charAt(0)!=="!"?this.renderer.link(href,title,this.output(cap[1])):this.renderer.image(href,title,escape(cap[1]))};InlineLexer.prototype.smartypants=function(text){if(!this.options.smartypants)return text;return text.replace(/---/g,"—").replace(/--/g,"–").replace(/(^|[-\u2014\/(\[{"\s])'/g,"$1‘").replace(/'/g,"’").replace(/(^|[-\u2014\/(\[{\u2018\s])"/g,"$1“").replace(/"/g,"”").replace(/\.{3}/g,"…")};InlineLexer.prototype.mangle=function(text){if(!this.options.mangle)return text;var out="",l=text.length,i=0,ch;for(;i<l;i++){ch=text.charCodeAt(i);if(Math.random()>.5){ch="x"+ch.toString(16)}out+="&#"+ch+";"}return out};function Renderer(options){this.options=options||{}}Renderer.prototype.code=function(code,lang,escaped){if(this.options.highlight){var out=this.options.highlight(code,lang);if(out!=null&&out!==code){escaped=true;code=out}}if(!lang){return"<pre><code>"+(escaped?code:escape(code,true))+"\n</code></pre>"}return'<pre><code class="'+this.options.langPrefix+escape(lang,true)+'">'+(escaped?code:escape(code,true))+"\n</code></pre>\n"};Renderer.prototype.blockquote=function(quote){return"<blockquote>\n"+quote+"</blockquote>\n"};Renderer.prototype.html=function(html){return html};Renderer.prototype.heading=function(text,level,raw){return"<h"+level+' id="'+this.options.headerPrefix+raw.toLowerCase().replace(/[^\w]+/g,"-")+'">'+text+"</h"+level+">\n"};Renderer.prototype.hr=function(){return this.options.xhtml?"<hr/>\n":"<hr>\n"};Renderer.prototype.list=function(body,ordered){var type=ordered?"ol":"ul";return"<"+type+">\n"+body+"</"+type+">\n"};Renderer.prototype.listitem=function(text){return"<li>"+text+"</li>\n"};Renderer.prototype.paragraph=function(text){return"<p>"+text+"</p>\n"};Renderer.prototype.table=function(header,body){return"<table>\n"+"<thead>\n"+header+"</thead>\n"+"<tbody>\n"+body+"</tbody>\n"+"</table>\n"};Renderer.prototype.tablerow=function(content){return"<tr>\n"+content+"</tr>\n"};Renderer.prototype.tablecell=function(content,flags){var type=flags.header?"th":"td";var tag=flags.align?"<"+type+' style="text-align:'+flags.align+'">':"<"+type+">";return tag+content+"</"+type+">\n"};Renderer.prototype.strong=function(text){return"<strong>"+text+"</strong>"};Renderer.prototype.em=function(text){return"<em>"+text+"</em>"};Renderer.prototype.codespan=function(text){return"<code>"+text+"</code>"};Renderer.prototype.br=function(){return this.options.xhtml?"<br/>":"<br>"};Renderer.prototype.del=function(text){return"<del>"+text+"</del>"};Renderer.prototype.link=function(href,title,text){if(this.options.sanitize){try{var prot=decodeURIComponent(unescape(href)).replace(/[^\w:]/g,"").toLowerCase()}catch(e){return""}if(prot.indexOf("javascript:")===0||prot.indexOf("vbscript:")===0||prot.indexOf("data:")===0){return""}}var out='<a href="'+href+'"';if(title){out+=' title="'+title+'"'}out+=">"+text+"</a>";return out};Renderer.prototype.image=function(href,title,text){var out='<img src="'+href+'" alt="'+text+'"';if(title){out+=' title="'+title+'"'}out+=this.options.xhtml?"/>":">";return out};Renderer.prototype.text=function(text){return text};function Parser(options){this.tokens=[];this.token=null;this.options=options||marked.defaults;this.options.renderer=this.options.renderer||new Renderer;this.renderer=this.options.renderer;this.renderer.options=this.options}Parser.parse=function(src,options,renderer){var parser=new Parser(options,renderer);return parser.parse(src)};Parser.prototype.parse=function(src){this.inline=new InlineLexer(src.links,this.options,this.renderer);this.tokens=src.reverse();var out="";while(this.next()){out+=this.tok()}return out};Parser.prototype.next=function(){return this.token=this.tokens.pop()};Parser.prototype.peek=function(){return this.tokens[this.tokens.length-1]||0};Parser.prototype.parseText=function(){var body=this.token.text;while(this.peek().type==="text"){body+="\n"+this.next().text}return this.inline.output(body)};Parser.prototype.tok=function(){switch(this.token.type){case"space":{return""}case"hr":{return this.renderer.hr()}case"heading":{return this.renderer.heading(this.inline.output(this.token.text),this.token.depth,this.token.text)}case"code":{return this.renderer.code(this.token.text,this.token.lang,this.token.escaped)}case"table":{var header="",body="",i,row,cell,flags,j;cell="";for(i=0;i<this.token.header.length;i++){flags={header:true,align:this.token.align[i]};cell+=this.renderer.tablecell(this.inline.output(this.token.header[i]),{header:true,align:this.token.align[i]})}header+=this.renderer.tablerow(cell);for(i=0;i<this.token.cells.length;i++){row=this.token.cells[i];cell="";for(j=0;j<row.length;j++){cell+=this.renderer.tablecell(this.inline.output(row[j]),{header:false,align:this.token.align[j]})}body+=this.renderer.tablerow(cell)}return this.renderer.table(header,body)}case"blockquote_start":{var body="";while(this.next().type!=="blockquote_end"){body+=this.tok()}return this.renderer.blockquote(body)}case"list_start":{var body="",ordered=this.token.ordered;while(this.next().type!=="list_end"){body+=this.tok()}return this.renderer.list(body,ordered)}case"list_item_start":{var body="";while(this.next().type!=="list_item_end"){body+=this.token.type==="text"?this.parseText():this.tok()}return this.renderer.listitem(body)}case"loose_item_start":{var body="";while(this.next().type!=="list_item_end"){body+=this.tok()}return this.renderer.listitem(body)}case"html":{var html=!this.token.pre&&!this.options.pedantic?this.inline.output(this.token.text):this.token.text;return this.renderer.html(html)}case"paragraph":{return this.renderer.paragraph(this.inline.output(this.token.text))}case"text":{return this.renderer.paragraph(this.parseText())}}};function escape(html,encode){return html.replace(!encode?/&(?!#?\w+;)/g:/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/g,"&quot;").replace(/'/g,"&#39;")}function unescape(html){return html.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/g,function(_,n){n=n.toLowerCase();if(n==="colon")return":";if(n.charAt(0)==="#"){return n.charAt(1)==="x"?String.fromCharCode(parseInt(n.substring(2),16)):String.fromCharCode(+n.substring(1))}return""})}function replace(regex,opt){regex=regex.source;opt=opt||"";return function self(name,val){if(!name)return new RegExp(regex,opt);val=val.source||val;val=val.replace(/(^|[^\[])\^/g,"$1");regex=regex.replace(name,val);return self}}function noop(){}noop.exec=noop;function merge(obj){var i=1,target,key;for(;i<arguments.length;i++){target=arguments[i];for(key in target){if(Object.prototype.hasOwnProperty.call(target,key)){obj[key]=target[key]}}}return obj}function marked(src,opt,callback){if(callback||typeof opt==="function"){if(!callback){callback=opt;opt=null}opt=merge({},marked.defaults,opt||{});var highlight=opt.highlight,tokens,pending,i=0;try{tokens=Lexer.lex(src,opt)}catch(e){return callback(e)}pending=tokens.length;var done=function(err){if(err){opt.highlight=highlight;return callback(err)}var out;try{out=Parser.parse(tokens,opt)}catch(e){err=e}opt.highlight=highlight;return err?callback(err):callback(null,out)};if(!highlight||highlight.length<3){return done()}delete opt.highlight;if(!pending)return done();for(;i<tokens.length;i++){(function(token){if(token.type!=="code"){return--pending||done()}return highlight(token.text,token.lang,function(err,code){if(err)return done(err);if(code==null||code===token.text){return--pending||done()}token.text=code;token.escaped=true;--pending||done()})})(tokens[i])}return}try{if(opt)opt=merge({},marked.defaults,opt);return Parser.parse(Lexer.lex(src,opt),opt)}catch(e){e.message+="\nPlease report this to https://github.com/chjj/marked.";if((opt||marked.defaults).silent){return"<p>An error occured:</p><pre>"+escape(e.message+"",true)+"</pre>"}throw e}}marked.options=marked.setOptions=function(opt){merge(marked.defaults,opt);return marked};marked.defaults={gfm:true,tables:true,breaks:false,pedantic:false,sanitize:false,sanitizer:null,mangle:true,smartLists:false,silent:false,highlight:null,langPrefix:"lang-",smartypants:false,headerPrefix:"",renderer:new Renderer,xhtml:false};marked.Parser=Parser;marked.parser=Parser.parse;marked.Renderer=Renderer;marked.Lexer=Lexer;marked.lexer=Lexer.lex;marked.InlineLexer=InlineLexer;marked.inlineLexer=InlineLexer.output;marked.parse=marked;if(typeof module!=="undefined"&&typeof exports==="object"){module.exports=marked}else if(typeof define==="function"&&define.amd){define(function(){return marked})}else{this.marked=marked}}).call(function(){return this||(typeof window!=="undefined"?window:global)}());

	return module.exports;
}();


// FORMAT OPTIONS FOR MARKED IMPLEMENTATION

function _Markdown_formatOptions(options)
{
	function toHighlight(code, lang)
	{
		if (!lang && $elm$core$Maybe$isJust(options.defaultHighlighting))
		{
			lang = options.defaultHighlighting.a;
		}

		if (typeof hljs !== 'undefined' && lang && hljs.listLanguages().indexOf(lang) >= 0)
		{
			return hljs.highlight(lang, code, true).value;
		}

		return code;
	}

	var gfm = options.githubFlavored.a;

	return {
		highlight: toHighlight,
		gfm: gfm,
		tables: gfm && gfm.tables,
		breaks: gfm && gfm.breaks,
		sanitize: options.sanitize,
		smartypants: options.smartypants
	};
}


var _WebGL_guid = 0;

function _WebGL_listEach(fn, list) {
  for (; list.b; list = list.b) {
    fn(list.a);
  }
}

function _WebGL_listLength(list) {
  var length = 0;
  for (; list.b; list = list.b) {
    length++;
  }
  return length;
}

var _WebGL_rAF = typeof requestAnimationFrame !== 'undefined' ?
  requestAnimationFrame :
  function (cb) { setTimeout(cb, 1000 / 60); };

// eslint-disable-next-line no-unused-vars
var _WebGL_entity = F5(function (settings, vert, frag, mesh, uniforms) {
  return {
    $: 0,
    a: settings,
    b: vert,
    c: frag,
    d: mesh,
    e: uniforms
  };
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableBlend = F2(function (cache, setting) {
  var blend = cache.blend;
  blend.toggle = cache.toggle;

  if (!blend.enabled) {
    cache.gl.enable(cache.gl.BLEND);
    blend.enabled = true;
  }

  // a   b   c   d   e   f   g h i j
  // eq1 f11 f12 eq2 f21 f22 r g b a
  if (blend.a !== setting.a || blend.d !== setting.d) {
    cache.gl.blendEquationSeparate(setting.a, setting.d);
    blend.a = setting.a;
    blend.d = setting.d;
  }
  if (blend.b !== setting.b || blend.c !== setting.c || blend.e !== setting.e || blend.f !== setting.f) {
    cache.gl.blendFuncSeparate(setting.b, setting.c, setting.e, setting.f);
    blend.b = setting.b;
    blend.c = setting.c;
    blend.e = setting.e;
    blend.f = setting.f;
  }
  if (blend.g !== setting.g || blend.h !== setting.h || blend.i !== setting.i || blend.j !== setting.j) {
    cache.gl.blendColor(setting.g, setting.h, setting.i, setting.j);
    blend.g = setting.g;
    blend.h = setting.h;
    blend.i = setting.i;
    blend.j = setting.j;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableDepthTest = F2(function (cache, setting) {
  var depthTest = cache.depthTest;
  depthTest.toggle = cache.toggle;

  if (!depthTest.enabled) {
    cache.gl.enable(cache.gl.DEPTH_TEST);
    depthTest.enabled = true;
  }

  // a    b    c    d
  // func mask near far
  if (depthTest.a !== setting.a) {
    cache.gl.depthFunc(setting.a);
    depthTest.a = setting.a;
  }
  if (depthTest.b !== setting.b) {
    cache.gl.depthMask(setting.b);
    depthTest.b = setting.b;
  }
  if (depthTest.c !== setting.c || depthTest.d !== setting.d) {
    cache.gl.depthRange(setting.c, setting.d);
    depthTest.c = setting.c;
    depthTest.d = setting.d;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableStencilTest = F2(function (cache, setting) {
  var stencilTest = cache.stencilTest;
  stencilTest.toggle = cache.toggle;

  if (!stencilTest.enabled) {
    cache.gl.enable(cache.gl.STENCIL_TEST);
    stencilTest.enabled = true;
  }

  // a   b    c         d     e     f      g      h     i     j      k
  // ref mask writeMask test1 fail1 zfail1 zpass1 test2 fail2 zfail2 zpass2
  if (stencilTest.d !== setting.d || stencilTest.a !== setting.a || stencilTest.b !== setting.b) {
    cache.gl.stencilFuncSeparate(cache.gl.FRONT, setting.d, setting.a, setting.b);
    stencilTest.d = setting.d;
    // a and b are set in the cache.gl.BACK diffing because they should be the same
  }
  if (stencilTest.e !== setting.e || stencilTest.f !== setting.f || stencilTest.g !== setting.g) {
    cache.gl.stencilOpSeparate(cache.gl.FRONT, setting.e, setting.f, setting.g);
    stencilTest.e = setting.e;
    stencilTest.f = setting.f;
    stencilTest.g = setting.g;
  }
  if (stencilTest.c !== setting.c) {
    cache.gl.stencilMask(setting.c);
    stencilTest.c = setting.c;
  }
  if (stencilTest.h !== setting.h || stencilTest.a !== setting.a || stencilTest.b !== setting.b) {
    cache.gl.stencilFuncSeparate(cache.gl.BACK, setting.h, setting.a, setting.b);
    stencilTest.h = setting.h;
    stencilTest.a = setting.a;
    stencilTest.b = setting.b;
  }
  if (stencilTest.i !== setting.i || stencilTest.j !== setting.j || stencilTest.k !== setting.k) {
    cache.gl.stencilOpSeparate(cache.gl.BACK, setting.i, setting.j, setting.k);
    stencilTest.i = setting.i;
    stencilTest.j = setting.j;
    stencilTest.k = setting.k;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableScissor = F2(function (cache, setting) {
  var scissor = cache.scissor;
  scissor.toggle = cache.toggle;

  if (!scissor.enabled) {
    cache.gl.enable(cache.gl.SCISSOR_TEST);
    scissor.enabled = true;
  }

  if (scissor.a !== setting.a || scissor.b !== setting.b || scissor.c !== setting.c || scissor.d !== setting.d) {
    cache.gl.scissor(setting.a, setting.b, setting.c, setting.d);
    scissor.a = setting.a;
    scissor.b = setting.b;
    scissor.c = setting.c;
    scissor.d = setting.d;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableColorMask = F2(function (cache, setting) {
  var colorMask = cache.colorMask;
  colorMask.toggle = cache.toggle;
  colorMask.enabled = true;

  if (colorMask.a !== setting.a || colorMask.b !== setting.b || colorMask.c !== setting.c || colorMask.d !== setting.d) {
    cache.gl.colorMask(setting.a, setting.b, setting.c, setting.d);
    colorMask.a = setting.a;
    colorMask.b = setting.b;
    colorMask.c = setting.c;
    colorMask.d = setting.d;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableCullFace = F2(function (cache, setting) {
  var cullFace = cache.cullFace;
  cullFace.toggle = cache.toggle;

  if (!cullFace.enabled) {
    cache.gl.enable(cache.gl.CULL_FACE);
    cullFace.enabled = true;
  }

  if (cullFace.a !== setting.a) {
    cache.gl.cullFace(setting.a);
    cullFace.a = setting.a;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enablePolygonOffset = F2(function (cache, setting) {
  var polygonOffset = cache.polygonOffset;
  polygonOffset.toggle = cache.toggle;

  if (!polygonOffset.enabled) {
    cache.gl.enable(cache.gl.POLYGON_OFFSET_FILL);
    polygonOffset.enabled = true;
  }

  if (polygonOffset.a !== setting.a || polygonOffset.b !== setting.b) {
    cache.gl.polygonOffset(setting.a, setting.b);
    polygonOffset.a = setting.a;
    polygonOffset.b = setting.b;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableSampleCoverage = F2(function (cache, setting) {
  var sampleCoverage = cache.sampleCoverage;
  sampleCoverage.toggle = cache.toggle;

  if (!sampleCoverage.enabled) {
    cache.gl.enable(cache.gl.SAMPLE_COVERAGE);
    sampleCoverage.enabled = true;
  }

  if (sampleCoverage.a !== setting.a || sampleCoverage.b !== setting.b) {
    cache.gl.sampleCoverage(setting.a, setting.b);
    sampleCoverage.a = setting.a;
    sampleCoverage.b = setting.b;
  }
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableSampleAlphaToCoverage = function (cache) {
  var sampleAlphaToCoverage = cache.sampleAlphaToCoverage;
  sampleAlphaToCoverage.toggle = cache.toggle;

  if (!sampleAlphaToCoverage.enabled) {
    cache.gl.enable(cache.gl.SAMPLE_ALPHA_TO_COVERAGE);
    sampleAlphaToCoverage.enabled = true;
  }
};

var _WebGL_disableBlend = function (cache) {
  if (cache.blend.enabled) {
    cache.gl.disable(cache.gl.BLEND);
    cache.blend.enabled = false;
  }
};

var _WebGL_disableDepthTest = function (cache) {
  if (cache.depthTest.enabled) {
    cache.gl.disable(cache.gl.DEPTH_TEST);
    cache.depthTest.enabled = false;
  }
};

var _WebGL_disableStencilTest = function (cache) {
  if (cache.stencilTest.enabled) {
    cache.gl.disable(cache.gl.STENCIL_TEST);
    cache.stencilTest.enabled = false;
  }
};

var _WebGL_disableScissor = function (cache) {
  if (cache.scissor.enabled) {
    cache.gl.disable(cache.gl.SCISSOR_TEST);
    cache.scissor.enabled = false;
  }
};

var _WebGL_disableColorMask = function (cache) {
  var colorMask = cache.colorMask;
  if (!colorMask.a || !colorMask.b || !colorMask.c || !colorMask.d) {
    cache.gl.colorMask(true, true, true, true);
    colorMask.a = true;
    colorMask.b = true;
    colorMask.c = true;
    colorMask.d = true;
  }
};

var _WebGL_disableCullFace = function (cache) {
  cache.gl.disable(cache.gl.CULL_FACE);
};

var _WebGL_disablePolygonOffset = function (cache) {
  cache.gl.disable(cache.gl.POLYGON_OFFSET_FILL);
};

var _WebGL_disableSampleCoverage = function (cache) {
  cache.gl.disable(cache.gl.SAMPLE_COVERAGE);
};

var _WebGL_disableSampleAlphaToCoverage = function (cache) {
  cache.gl.disable(cache.gl.SAMPLE_ALPHA_TO_COVERAGE);
};

var _WebGL_settings = ['blend', 'depthTest', 'stencilTest', 'scissor', 'colorMask', 'cullFace', 'polygonOffset', 'sampleCoverage', 'sampleAlphaToCoverage'];
var _WebGL_disableFunctions = [_WebGL_disableBlend, _WebGL_disableDepthTest, _WebGL_disableStencilTest, _WebGL_disableScissor, _WebGL_disableColorMask, _WebGL_disableCullFace, _WebGL_disablePolygonOffset, _WebGL_disableSampleCoverage, _WebGL_disableSampleAlphaToCoverage];

function _WebGL_doCompile(gl, src, type) {
  var shader = gl.createShader(type);
  // Enable OES_standard_derivatives extension
  gl.shaderSource(shader, '#extension GL_OES_standard_derivatives : enable\n' + src);
  gl.compileShader(shader);
  return shader;
}

function _WebGL_doLink(gl, vshader, fshader) {
  var program = gl.createProgram();

  gl.attachShader(program, vshader);
  gl.attachShader(program, fshader);
  gl.linkProgram(program);
  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {
    throw ('Link failed: ' + gl.getProgramInfoLog(program) +
      '\nvs info-log: ' + gl.getShaderInfoLog(vshader) +
      '\nfs info-log: ' + gl.getShaderInfoLog(fshader));
  }

  return program;
}

function _WebGL_getAttributeInfo(gl, type) {
  switch (type) {
    case gl.FLOAT:
      return { size: 1, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };
    case gl.FLOAT_VEC2:
      return { size: 2, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };
    case gl.FLOAT_VEC3:
      return { size: 3, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };
    case gl.FLOAT_VEC4:
      return { size: 4, arraySize: 1, type: Float32Array, baseType: gl.FLOAT };
    case gl.FLOAT_MAT4:
      return { size: 4, arraySize: 4, type: Float32Array, baseType: gl.FLOAT };
    case gl.INT:
      return { size: 1, arraySize: 1, type: Int32Array, baseType: gl.INT };
  }
}

/**
 *  Form the buffer for a given attribute.
 *
 *  @param {WebGLRenderingContext} gl context
 *  @param {WebGLActiveInfo} attribute the attribute to bind to.
 *         We use its name to grab the record by name and also to know
 *         how many elements we need to grab.
 *  @param {Mesh} mesh The mesh coming in from Elm.
 *  @param {Object} attributes The mapping between the attribute names and Elm fields
 *  @return {WebGLBuffer}
 */
function _WebGL_doBindAttribute(gl, attribute, mesh, attributes) {
  // The length of the number of vertices that
  // complete one 'thing' based on the drawing mode.
  // ie, 2 for Lines, 3 for Triangles, etc.
  var elemSize = mesh.a.elemSize;

  var idxKeys = [];
  for (var i = 0; i < elemSize; i++) {
    idxKeys.push(String.fromCharCode(97 + i));
  }

  function dataFill(data, cnt, fillOffset, elem, key) {
    var i;
    if (elemSize === 1) {
      for (i = 0; i < cnt; i++) {
        data[fillOffset++] = cnt === 1 ? elem[key] : elem[key][i];
      }
    } else {
      idxKeys.forEach(function (idx) {
        for (i = 0; i < cnt; i++) {
          data[fillOffset++] = cnt === 1 ? elem[idx][key] : elem[idx][key][i];
        }
      });
    }
  }

  var attributeInfo = _WebGL_getAttributeInfo(gl, attribute.type);

  if (attributeInfo === undefined) {
    throw new Error('No info available for: ' + attribute.type);
  }

  var dataIdx = 0;
  var dataOffset = attributeInfo.size * attributeInfo.arraySize * elemSize;
  var array = new attributeInfo.type(_WebGL_listLength(mesh.b) * dataOffset);

  _WebGL_listEach(function (elem) {
    dataFill(array, attributeInfo.size * attributeInfo.arraySize, dataIdx, elem, attributes[attribute.name] || attribute.name);
    dataIdx += dataOffset;
  }, mesh.b);

  var buffer = gl.createBuffer();
  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);
  gl.bufferData(gl.ARRAY_BUFFER, array, gl.STATIC_DRAW);
  return buffer;
}

/**
 *  This sets up the binding caching buffers.
 *
 *  We don't actually bind any buffers now except for the indices buffer.
 *  The problem with filling the buffers here is that it is possible to
 *  have a buffer shared between two webgl shaders;
 *  which could have different active attributes. If we bind it here against
 *  a particular program, we might not bind them all. That final bind is now
 *  done right before drawing.
 *
 *  @param {WebGLRenderingContext} gl context
 *  @param {Mesh} mesh a mesh object from Elm
 *  @return {Object} buffer - an object with the following properties
 *  @return {Number} buffer.numIndices
 *  @return {WebGLBuffer|null} buffer.indexBuffer - optional index buffer
 *  @return {Object} buffer.buffers - will be used to buffer attributes
 */
function _WebGL_doBindSetup(gl, mesh) {
  if (mesh.a.indexSize > 0) {
    var indexBuffer = gl.createBuffer();
    var indices = _WebGL_makeIndexedBuffer(mesh.c, mesh.a.indexSize);
    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexBuffer);
    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);
    return {
      numIndices: indices.length,
      indexBuffer: indexBuffer,
      buffers: {}
    };
  } else {
    return {
      numIndices: mesh.a.elemSize * _WebGL_listLength(mesh.b),
      indexBuffer: null,
      buffers: {}
    };
  }
}

/**
 *  Create an indices array and fill it from indices
 *  based on the size of the index
 *
 *  @param {List} indicesList the list of indices
 *  @param {Number} indexSize the size of the index
 *  @return {Uint32Array} indices
 */
function _WebGL_makeIndexedBuffer(indicesList, indexSize) {
  var indices = new Uint32Array(_WebGL_listLength(indicesList) * indexSize);
  var fillOffset = 0;
  var i;
  _WebGL_listEach(function (elem) {
    if (indexSize === 1) {
      indices[fillOffset++] = elem;
    } else {
      for (i = 0; i < indexSize; i++) {
        indices[fillOffset++] = elem[String.fromCharCode(97 + i)];
      }
    }
  }, indicesList);
  return indices;
}

function _WebGL_getProgID(vertID, fragID) {
  return vertID + '#' + fragID;
}

var _WebGL_drawGL = F2(function (model, domNode) {
  var cache = model.f;
  var gl = cache.gl;

  if (!gl) {
    return domNode;
  }

  gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);

  if (!cache.depthTest.b) {
    gl.depthMask(true);
    cache.depthTest.b = true;
  }
  if (cache.stencilTest.c !== cache.STENCIL_WRITEMASK) {
    gl.stencilMask(cache.STENCIL_WRITEMASK);
    cache.stencilTest.c = cache.STENCIL_WRITEMASK;
  }
  _WebGL_disableScissor(cache);
  _WebGL_disableColorMask(cache);
  gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT | gl.STENCIL_BUFFER_BIT);

  function drawEntity(entity) {
    if (!entity.d.b.b) {
      return; // Empty list
    }

    var progid;
    var program;
    var i;

    if (entity.b.id && entity.c.id) {
      progid = _WebGL_getProgID(entity.b.id, entity.c.id);
      program = cache.programs[progid];
    }

    if (!program) {

      var vshader;
      if (entity.b.id) {
        vshader = cache.shaders[entity.b.id];
      } else {
        entity.b.id = _WebGL_guid++;
      }

      if (!vshader) {
        vshader = _WebGL_doCompile(gl, entity.b.src, gl.VERTEX_SHADER);
        cache.shaders[entity.b.id] = vshader;
      }

      var fshader;
      if (entity.c.id) {
        fshader = cache.shaders[entity.c.id];
      } else {
        entity.c.id = _WebGL_guid++;
      }

      if (!fshader) {
        fshader = _WebGL_doCompile(gl, entity.c.src, gl.FRAGMENT_SHADER);
        cache.shaders[entity.c.id] = fshader;
      }

      var glProgram = _WebGL_doLink(gl, vshader, fshader);

      program = {
        glProgram: glProgram,
        attributes: Object.assign({}, entity.b.attributes, entity.c.attributes),
        currentUniforms: {},
        activeAttributes: [],
        activeAttributeLocations: []
      };

      program.uniformSetters = _WebGL_createUniformSetters(
        gl,
        model,
        program,
        Object.assign({}, entity.b.uniforms, entity.c.uniforms)
      );

      var numActiveAttributes = gl.getProgramParameter(glProgram, gl.ACTIVE_ATTRIBUTES);
      for (i = 0; i < numActiveAttributes; i++) {
        var attribute = gl.getActiveAttrib(glProgram, i);
        var attribLocation = gl.getAttribLocation(glProgram, attribute.name);
        program.activeAttributes.push(attribute);
        program.activeAttributeLocations.push(attribLocation);
      }

      progid = _WebGL_getProgID(entity.b.id, entity.c.id);
      cache.programs[progid] = program;
    }

    if (cache.lastProgId !== progid) {
      gl.useProgram(program.glProgram);
      cache.lastProgId = progid;
    }

    _WebGL_setUniforms(program.uniformSetters, entity.e);

    var buffer = cache.buffers.get(entity.d);

    if (!buffer) {
      buffer = _WebGL_doBindSetup(gl, entity.d);
      cache.buffers.set(entity.d, buffer);
    }

    for (i = 0; i < program.activeAttributes.length; i++) {
      attribute = program.activeAttributes[i];
      attribLocation = program.activeAttributeLocations[i];

      if (buffer.buffers[attribute.name] === undefined) {
        buffer.buffers[attribute.name] = _WebGL_doBindAttribute(gl, attribute, entity.d, program.attributes);
      }
      gl.bindBuffer(gl.ARRAY_BUFFER, buffer.buffers[attribute.name]);

      var attributeInfo = _WebGL_getAttributeInfo(gl, attribute.type);
      if (attributeInfo.arraySize === 1) {
        gl.enableVertexAttribArray(attribLocation);
        gl.vertexAttribPointer(attribLocation, attributeInfo.size, attributeInfo.baseType, false, 0, 0);
      } else {
        // Point to four vec4 in case of mat4
        var offset = attributeInfo.size * 4; // float32 takes 4 bytes
        var stride = offset * attributeInfo.arraySize;
        for (var m = 0; m < attributeInfo.arraySize; m++) {
          gl.enableVertexAttribArray(attribLocation + m);
          gl.vertexAttribPointer(attribLocation + m, attributeInfo.size, attributeInfo.baseType, false, stride, offset * m);
        }
      }
    }

    // Apply all the new settings
    cache.toggle = !cache.toggle;
    _WebGL_listEach($elm_explorations$webgl$WebGL$Internal$enableSetting(cache), entity.a);
    // Disable the settings that were applied in the previous draw call
    for (i = 0; i < _WebGL_settings.length; i++) {
      var setting = cache[_WebGL_settings[i]];
      if (setting.toggle !== cache.toggle && setting.enabled) {
        _WebGL_disableFunctions[i](cache);
        setting.enabled = false;
        setting.toggle = cache.toggle;
      }
    }

    if (buffer.indexBuffer) {
      gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer.indexBuffer);
      gl.drawElements(entity.d.a.mode, buffer.numIndices, gl.UNSIGNED_INT, 0);
    } else {
      gl.drawArrays(entity.d.a.mode, 0, buffer.numIndices);
    }
  }

  _WebGL_listEach(drawEntity, model.g);
  return domNode;
});

function _WebGL_createUniformSetters(gl, model, program, uniformsMap) {
  var glProgram = program.glProgram;
  var currentUniforms = program.currentUniforms;
  var textureCounter = 0;
  var cache = model.f;
  function createUniformSetter(glProgram, uniform) {
    var uniformName = uniform.name;
    var uniformLocation = gl.getUniformLocation(glProgram, uniformName);
    switch (uniform.type) {
      case gl.INT:
        return function (value) {
          if (currentUniforms[uniformName] !== value) {
            gl.uniform1i(uniformLocation, value);
            currentUniforms[uniformName] = value;
          }
        };
      case gl.FLOAT:
        return function (value) {
          if (currentUniforms[uniformName] !== value) {
            gl.uniform1f(uniformLocation, value);
            currentUniforms[uniformName] = value;
          }
        };
      case gl.FLOAT_VEC2:
        return function (value) {
          if (currentUniforms[uniformName] !== value) {
            gl.uniform2f(uniformLocation, value[0], value[1]);
            currentUniforms[uniformName] = value;
          }
        };
      case gl.FLOAT_VEC3:
        return function (value) {
          if (currentUniforms[uniformName] !== value) {
            gl.uniform3f(uniformLocation, value[0], value[1], value[2]);
            currentUniforms[uniformName] = value;
          }
        };
      case gl.FLOAT_VEC4:
        return function (value) {
          if (currentUniforms[uniformName] !== value) {
            gl.uniform4f(uniformLocation, value[0], value[1], value[2], value[3]);
            currentUniforms[uniformName] = value;
          }
        };
      case gl.FLOAT_MAT4:
        return function (value) {
          if (currentUniforms[uniformName] !== value) {
            gl.uniformMatrix4fv(uniformLocation, false, new Float32Array(value));
            currentUniforms[uniformName] = value;
          }
        };
      case gl.SAMPLER_2D:
        var currentTexture = textureCounter++;
        return function (texture) {
          gl.activeTexture(gl.TEXTURE0 + currentTexture);
          var tex = cache.textures.get(texture);
          if (!tex) {
            tex = texture.createTexture(gl);
            cache.textures.set(texture, tex);
          }
          gl.bindTexture(gl.TEXTURE_2D, tex);
          if (currentUniforms[uniformName] !== texture) {
            gl.uniform1i(uniformLocation, currentTexture);
            currentUniforms[uniformName] = texture;
          }
        };
      case gl.BOOL:
        return function (value) {
          if (currentUniforms[uniformName] !== value) {
            gl.uniform1i(uniformLocation, value);
            currentUniforms[uniformName] = value;
          }
        };
      default:
        return function () { };
    }
  }

  var uniformSetters = {};
  var numUniforms = gl.getProgramParameter(glProgram, gl.ACTIVE_UNIFORMS);
  for (var i = 0; i < numUniforms; i++) {
    var uniform = gl.getActiveUniform(glProgram, i);
    uniformSetters[uniformsMap[uniform.name] || uniform.name] = createUniformSetter(glProgram, uniform);
  }

  return uniformSetters;
}

function _WebGL_setUniforms(setters, values) {
  Object.keys(values).forEach(function (name) {
    var setter = setters[name];
    if (setter) {
      setter(values[name]);
    }
  });
}

// VIRTUAL-DOM WIDGET

// eslint-disable-next-line no-unused-vars
var _WebGL_toHtml = F3(function (options, factList, entities) {
  return _VirtualDom_custom(
    factList,
    {
      g: entities,
      f: {},
      h: options
    },
    _WebGL_render,
    _WebGL_diff
  );
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableAlpha = F2(function (options, option) {
  options.contextAttributes.alpha = true;
  options.contextAttributes.premultipliedAlpha = option.a;
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableDepth = F2(function (options, option) {
  options.contextAttributes.depth = true;
  options.sceneSettings.push(function (gl) {
    gl.clearDepth(option.a);
  });
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableStencil = F2(function (options, option) {
  options.contextAttributes.stencil = true;
  options.sceneSettings.push(function (gl) {
    gl.clearStencil(option.a);
  });
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableAntialias = F2(function (options, option) {
  options.contextAttributes.antialias = true;
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enableClearColor = F2(function (options, option) {
  options.sceneSettings.push(function (gl) {
    gl.clearColor(option.a, option.b, option.c, option.d);
  });
});

// eslint-disable-next-line no-unused-vars
var _WebGL_enablePreserveDrawingBuffer = F2(function (options, option) {
  options.contextAttributes.preserveDrawingBuffer = true;
});

/**
 *  Creates canvas and schedules initial _WebGL_drawGL
 *  @param {Object} model
 *  @param {Object} model.f that may contain the following properties:
           gl, shaders, programs, buffers, textures
 *  @param {List<Option>} model.h list of options coming from Elm
 *  @param {List<Entity>} model.g list of entities coming from Elm
 *  @return {HTMLElement} <canvas> if WebGL is supported, otherwise a <div>
 */
function _WebGL_render(model) {
  var options = {
    contextAttributes: {
      alpha: false,
      depth: false,
      stencil: false,
      antialias: false,
      premultipliedAlpha: false,
      preserveDrawingBuffer: false
    },
    sceneSettings: []
  };

  _WebGL_listEach(function (option) {
    return A2($elm_explorations$webgl$WebGL$Internal$enableOption, options, option);
  }, model.h);

  var canvas = _VirtualDom_doc.createElement('canvas');
  var gl = canvas.getContext && (
    canvas.getContext('webgl', options.contextAttributes) ||
    canvas.getContext('experimental-webgl', options.contextAttributes)
  );

  if (gl && typeof WeakMap !== 'undefined') {
    options.sceneSettings.forEach(function (sceneSetting) {
      sceneSetting(gl);
    });

    // Activate extensions
    gl.getExtension('OES_standard_derivatives');
    gl.getExtension('OES_element_index_uint');

    model.f.gl = gl;

    // Cache the current settings in order to diff them to avoid redundant calls
    // https://emscripten.org/docs/optimizing/Optimizing-WebGL.html#avoid-redundant-calls
    model.f.toggle = false; // used to diff the settings from the previous and current draw calls
    model.f.blend = { enabled: false, toggle: false };
    model.f.depthTest = { enabled: false, toggle: false };
    model.f.stencilTest = { enabled: false, toggle: false };
    model.f.scissor = { enabled: false, toggle: false };
    model.f.colorMask = { enabled: false, toggle: false };
    model.f.cullFace = { enabled: false, toggle: false };
    model.f.polygonOffset = { enabled: false, toggle: false };
    model.f.sampleCoverage = { enabled: false, toggle: false };
    model.f.sampleAlphaToCoverage = { enabled: false, toggle: false };

    model.f.shaders = [];
    model.f.programs = {};
    model.f.lastProgId = null;
    model.f.buffers = new WeakMap();
    model.f.textures = new WeakMap();
    // Memorize the initial stencil write mask, because
    // browsers may have different number of stencil bits
    model.f.STENCIL_WRITEMASK = gl.getParameter(gl.STENCIL_WRITEMASK);

    // Render for the first time.
    // This has to be done in animation frame,
    // because the canvas is not in the DOM yet
    _WebGL_rAF(function () {
      return A2(_WebGL_drawGL, model, canvas);
    });

  } else {
    canvas = _VirtualDom_doc.createElement('div');
    canvas.innerHTML = '<a href="https://get.webgl.org/">Enable WebGL</a> to see this content!';
  }

  return canvas;
}

function _WebGL_diff(oldModel, newModel) {
  newModel.f = oldModel.f;
  return _WebGL_drawGL(newModel);
}
var $elm$core$List$cons = _List_cons;
var $elm$core$Elm$JsArray$foldr = _JsArray_foldr;
var $elm$core$Array$foldr = F3(
	function (func, baseCase, _v0) {
		var tree = _v0.c;
		var tail = _v0.d;
		var helper = F2(
			function (node, acc) {
				if (node.$ === 'SubTree') {
					var subTree = node.a;
					return A3($elm$core$Elm$JsArray$foldr, helper, acc, subTree);
				} else {
					var values = node.a;
					return A3($elm$core$Elm$JsArray$foldr, func, acc, values);
				}
			});
		return A3(
			$elm$core$Elm$JsArray$foldr,
			helper,
			A3($elm$core$Elm$JsArray$foldr, func, baseCase, tail),
			tree);
	});
var $elm$core$Array$toList = function (array) {
	return A3($elm$core$Array$foldr, $elm$core$List$cons, _List_Nil, array);
};
var $elm$core$Dict$foldr = F3(
	function (func, acc, t) {
		foldr:
		while (true) {
			if (t.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = t.b;
				var value = t.c;
				var left = t.d;
				var right = t.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldr, func, acc, right)),
					$temp$t = left;
				func = $temp$func;
				acc = $temp$acc;
				t = $temp$t;
				continue foldr;
			}
		}
	});
var $elm$core$Dict$toList = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, list) {
				return A2(
					$elm$core$List$cons,
					_Utils_Tuple2(key, value),
					list);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Dict$keys = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, keyList) {
				return A2($elm$core$List$cons, key, keyList);
			}),
		_List_Nil,
		dict);
};
var $elm$core$Set$toList = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$keys(dict);
};
var $elm$core$Basics$EQ = {$: 'EQ'};
var $elm$core$Basics$GT = {$: 'GT'};
var $elm$core$Basics$LT = {$: 'LT'};
var $author$project$Widget$AddError = function (a) {
	return {$: 'AddError', a: a};
};
var $author$project$Widget$ChangeOptions = function (a) {
	return {$: 'ChangeOptions', a: a};
};
var $author$project$Widget$ChangeSelection = function (a) {
	return {$: 'ChangeSelection', a: a};
};
var $author$project$Widget$None = {$: 'None'};
var $author$project$Widget$Receive = function (a) {
	return {$: 'Receive', a: a};
};
var $author$project$Widget$ShowModal = function (a) {
	return {$: 'ShowModal', a: a};
};
var $author$project$Widget$TimelineMsg = function (a) {
	return {$: 'TimelineMsg', a: a};
};
var $author$project$Widget$TotalsMsg = function (a) {
	return {$: 'TotalsMsg', a: a};
};
var $elm$core$Result$Err = function (a) {
	return {$: 'Err', a: a};
};
var $elm$json$Json$Decode$Failure = F2(
	function (a, b) {
		return {$: 'Failure', a: a, b: b};
	});
var $elm$json$Json$Decode$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$json$Json$Decode$Index = F2(
	function (a, b) {
		return {$: 'Index', a: a, b: b};
	});
var $elm$core$Result$Ok = function (a) {
	return {$: 'Ok', a: a};
};
var $elm$json$Json$Decode$OneOf = function (a) {
	return {$: 'OneOf', a: a};
};
var $elm$core$Basics$False = {$: 'False'};
var $elm$core$Basics$add = _Basics_add;
var $elm$core$Maybe$Just = function (a) {
	return {$: 'Just', a: a};
};
var $elm$core$Maybe$Nothing = {$: 'Nothing'};
var $elm$core$String$all = _String_all;
var $elm$core$Basics$and = _Basics_and;
var $elm$core$Basics$append = _Utils_append;
var $elm$json$Json$Encode$encode = _Json_encode;
var $elm$core$String$fromInt = _String_fromNumber;
var $elm$core$String$join = F2(
	function (sep, chunks) {
		return A2(
			_String_join,
			sep,
			_List_toArray(chunks));
	});
var $elm$core$String$split = F2(
	function (sep, string) {
		return _List_fromArray(
			A2(_String_split, sep, string));
	});
var $elm$json$Json$Decode$indent = function (str) {
	return A2(
		$elm$core$String$join,
		'\n    ',
		A2($elm$core$String$split, '\n', str));
};
var $elm$core$List$foldl = F3(
	function (func, acc, list) {
		foldl:
		while (true) {
			if (!list.b) {
				return acc;
			} else {
				var x = list.a;
				var xs = list.b;
				var $temp$func = func,
					$temp$acc = A2(func, x, acc),
					$temp$list = xs;
				func = $temp$func;
				acc = $temp$acc;
				list = $temp$list;
				continue foldl;
			}
		}
	});
var $elm$core$List$length = function (xs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, i) {
				return i + 1;
			}),
		0,
		xs);
};
var $elm$core$List$map2 = _List_map2;
var $elm$core$Basics$le = _Utils_le;
var $elm$core$Basics$sub = _Basics_sub;
var $elm$core$List$rangeHelp = F3(
	function (lo, hi, list) {
		rangeHelp:
		while (true) {
			if (_Utils_cmp(lo, hi) < 1) {
				var $temp$lo = lo,
					$temp$hi = hi - 1,
					$temp$list = A2($elm$core$List$cons, hi, list);
				lo = $temp$lo;
				hi = $temp$hi;
				list = $temp$list;
				continue rangeHelp;
			} else {
				return list;
			}
		}
	});
var $elm$core$List$range = F2(
	function (lo, hi) {
		return A3($elm$core$List$rangeHelp, lo, hi, _List_Nil);
	});
var $elm$core$List$indexedMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$map2,
			f,
			A2(
				$elm$core$List$range,
				0,
				$elm$core$List$length(xs) - 1),
			xs);
	});
var $elm$core$Char$toCode = _Char_toCode;
var $elm$core$Char$isLower = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (97 <= code) && (code <= 122);
};
var $elm$core$Char$isUpper = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 90) && (65 <= code);
};
var $elm$core$Basics$or = _Basics_or;
var $elm$core$Char$isAlpha = function (_char) {
	return $elm$core$Char$isLower(_char) || $elm$core$Char$isUpper(_char);
};
var $elm$core$Char$isDigit = function (_char) {
	var code = $elm$core$Char$toCode(_char);
	return (code <= 57) && (48 <= code);
};
var $elm$core$Char$isAlphaNum = function (_char) {
	return $elm$core$Char$isLower(_char) || ($elm$core$Char$isUpper(_char) || $elm$core$Char$isDigit(_char));
};
var $elm$core$List$reverse = function (list) {
	return A3($elm$core$List$foldl, $elm$core$List$cons, _List_Nil, list);
};
var $elm$core$String$uncons = _String_uncons;
var $elm$json$Json$Decode$errorOneOf = F2(
	function (i, error) {
		return '\n\n(' + ($elm$core$String$fromInt(i + 1) + (') ' + $elm$json$Json$Decode$indent(
			$elm$json$Json$Decode$errorToString(error))));
	});
var $elm$json$Json$Decode$errorToString = function (error) {
	return A2($elm$json$Json$Decode$errorToStringHelp, error, _List_Nil);
};
var $elm$json$Json$Decode$errorToStringHelp = F2(
	function (error, context) {
		errorToStringHelp:
		while (true) {
			switch (error.$) {
				case 'Field':
					var f = error.a;
					var err = error.b;
					var isSimple = function () {
						var _v1 = $elm$core$String$uncons(f);
						if (_v1.$ === 'Nothing') {
							return false;
						} else {
							var _v2 = _v1.a;
							var _char = _v2.a;
							var rest = _v2.b;
							return $elm$core$Char$isAlpha(_char) && A2($elm$core$String$all, $elm$core$Char$isAlphaNum, rest);
						}
					}();
					var fieldName = isSimple ? ('.' + f) : ('[\'' + (f + '\']'));
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, fieldName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'Index':
					var i = error.a;
					var err = error.b;
					var indexName = '[' + ($elm$core$String$fromInt(i) + ']');
					var $temp$error = err,
						$temp$context = A2($elm$core$List$cons, indexName, context);
					error = $temp$error;
					context = $temp$context;
					continue errorToStringHelp;
				case 'OneOf':
					var errors = error.a;
					if (!errors.b) {
						return 'Ran into a Json.Decode.oneOf with no possibilities' + function () {
							if (!context.b) {
								return '!';
							} else {
								return ' at json' + A2(
									$elm$core$String$join,
									'',
									$elm$core$List$reverse(context));
							}
						}();
					} else {
						if (!errors.b.b) {
							var err = errors.a;
							var $temp$error = err,
								$temp$context = context;
							error = $temp$error;
							context = $temp$context;
							continue errorToStringHelp;
						} else {
							var starter = function () {
								if (!context.b) {
									return 'Json.Decode.oneOf';
								} else {
									return 'The Json.Decode.oneOf at json' + A2(
										$elm$core$String$join,
										'',
										$elm$core$List$reverse(context));
								}
							}();
							var introduction = starter + (' failed in the following ' + ($elm$core$String$fromInt(
								$elm$core$List$length(errors)) + ' ways:'));
							return A2(
								$elm$core$String$join,
								'\n\n',
								A2(
									$elm$core$List$cons,
									introduction,
									A2($elm$core$List$indexedMap, $elm$json$Json$Decode$errorOneOf, errors)));
						}
					}
				default:
					var msg = error.a;
					var json = error.b;
					var introduction = function () {
						if (!context.b) {
							return 'Problem with the given value:\n\n';
						} else {
							return 'Problem with the value at json' + (A2(
								$elm$core$String$join,
								'',
								$elm$core$List$reverse(context)) + ':\n\n    ');
						}
					}();
					return introduction + ($elm$json$Json$Decode$indent(
						A2($elm$json$Json$Encode$encode, 4, json)) + ('\n\n' + msg));
			}
		}
	});
var $elm$core$Array$branchFactor = 32;
var $elm$core$Array$Array_elm_builtin = F4(
	function (a, b, c, d) {
		return {$: 'Array_elm_builtin', a: a, b: b, c: c, d: d};
	});
var $elm$core$Elm$JsArray$empty = _JsArray_empty;
var $elm$core$Basics$ceiling = _Basics_ceiling;
var $elm$core$Basics$fdiv = _Basics_fdiv;
var $elm$core$Basics$logBase = F2(
	function (base, number) {
		return _Basics_log(number) / _Basics_log(base);
	});
var $elm$core$Basics$toFloat = _Basics_toFloat;
var $elm$core$Array$shiftStep = $elm$core$Basics$ceiling(
	A2($elm$core$Basics$logBase, 2, $elm$core$Array$branchFactor));
var $elm$core$Array$empty = A4($elm$core$Array$Array_elm_builtin, 0, $elm$core$Array$shiftStep, $elm$core$Elm$JsArray$empty, $elm$core$Elm$JsArray$empty);
var $elm$core$Elm$JsArray$initialize = _JsArray_initialize;
var $elm$core$Array$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var $elm$core$Basics$apL = F2(
	function (f, x) {
		return f(x);
	});
var $elm$core$Basics$apR = F2(
	function (x, f) {
		return f(x);
	});
var $elm$core$Basics$eq = _Utils_equal;
var $elm$core$Basics$floor = _Basics_floor;
var $elm$core$Elm$JsArray$length = _JsArray_length;
var $elm$core$Basics$gt = _Utils_gt;
var $elm$core$Basics$max = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) > 0) ? x : y;
	});
var $elm$core$Basics$mul = _Basics_mul;
var $elm$core$Array$SubTree = function (a) {
	return {$: 'SubTree', a: a};
};
var $elm$core$Elm$JsArray$initializeFromList = _JsArray_initializeFromList;
var $elm$core$Array$compressNodes = F2(
	function (nodes, acc) {
		compressNodes:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodes);
			var node = _v0.a;
			var remainingNodes = _v0.b;
			var newAcc = A2(
				$elm$core$List$cons,
				$elm$core$Array$SubTree(node),
				acc);
			if (!remainingNodes.b) {
				return $elm$core$List$reverse(newAcc);
			} else {
				var $temp$nodes = remainingNodes,
					$temp$acc = newAcc;
				nodes = $temp$nodes;
				acc = $temp$acc;
				continue compressNodes;
			}
		}
	});
var $elm$core$Tuple$first = function (_v0) {
	var x = _v0.a;
	return x;
};
var $elm$core$Array$treeFromBuilder = F2(
	function (nodeList, nodeListSize) {
		treeFromBuilder:
		while (true) {
			var newNodeSize = $elm$core$Basics$ceiling(nodeListSize / $elm$core$Array$branchFactor);
			if (newNodeSize === 1) {
				return A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, nodeList).a;
			} else {
				var $temp$nodeList = A2($elm$core$Array$compressNodes, nodeList, _List_Nil),
					$temp$nodeListSize = newNodeSize;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue treeFromBuilder;
			}
		}
	});
var $elm$core$Array$builderToArray = F2(
	function (reverseNodeList, builder) {
		if (!builder.nodeListSize) {
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail),
				$elm$core$Array$shiftStep,
				$elm$core$Elm$JsArray$empty,
				builder.tail);
		} else {
			var treeLen = builder.nodeListSize * $elm$core$Array$branchFactor;
			var depth = $elm$core$Basics$floor(
				A2($elm$core$Basics$logBase, $elm$core$Array$branchFactor, treeLen - 1));
			var correctNodeList = reverseNodeList ? $elm$core$List$reverse(builder.nodeList) : builder.nodeList;
			var tree = A2($elm$core$Array$treeFromBuilder, correctNodeList, builder.nodeListSize);
			return A4(
				$elm$core$Array$Array_elm_builtin,
				$elm$core$Elm$JsArray$length(builder.tail) + treeLen,
				A2($elm$core$Basics$max, 5, depth * $elm$core$Array$shiftStep),
				tree,
				builder.tail);
		}
	});
var $elm$core$Basics$idiv = _Basics_idiv;
var $elm$core$Basics$lt = _Utils_lt;
var $elm$core$Array$initializeHelp = F5(
	function (fn, fromIndex, len, nodeList, tail) {
		initializeHelp:
		while (true) {
			if (fromIndex < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					false,
					{nodeList: nodeList, nodeListSize: (len / $elm$core$Array$branchFactor) | 0, tail: tail});
			} else {
				var leaf = $elm$core$Array$Leaf(
					A3($elm$core$Elm$JsArray$initialize, $elm$core$Array$branchFactor, fromIndex, fn));
				var $temp$fn = fn,
					$temp$fromIndex = fromIndex - $elm$core$Array$branchFactor,
					$temp$len = len,
					$temp$nodeList = A2($elm$core$List$cons, leaf, nodeList),
					$temp$tail = tail;
				fn = $temp$fn;
				fromIndex = $temp$fromIndex;
				len = $temp$len;
				nodeList = $temp$nodeList;
				tail = $temp$tail;
				continue initializeHelp;
			}
		}
	});
var $elm$core$Basics$remainderBy = _Basics_remainderBy;
var $elm$core$Array$initialize = F2(
	function (len, fn) {
		if (len <= 0) {
			return $elm$core$Array$empty;
		} else {
			var tailLen = len % $elm$core$Array$branchFactor;
			var tail = A3($elm$core$Elm$JsArray$initialize, tailLen, len - tailLen, fn);
			var initialFromIndex = (len - tailLen) - $elm$core$Array$branchFactor;
			return A5($elm$core$Array$initializeHelp, fn, initialFromIndex, len, _List_Nil, tail);
		}
	});
var $elm$core$Basics$True = {$: 'True'};
var $elm$core$Result$isOk = function (result) {
	if (result.$ === 'Ok') {
		return true;
	} else {
		return false;
	}
};
var $elm$json$Json$Decode$andThen = _Json_andThen;
var $elm$core$Platform$Sub$batch = _Platform_batch;
var $elm$json$Json$Decode$map = _Json_map1;
var $elm$json$Json$Decode$map2 = _Json_map2;
var $elm$json$Json$Decode$succeed = _Json_succeed;
var $elm$virtual_dom$VirtualDom$toHandlerInt = function (handler) {
	switch (handler.$) {
		case 'Normal':
			return 0;
		case 'MayStopPropagation':
			return 1;
		case 'MayPreventDefault':
			return 2;
		default:
			return 3;
	}
};
var $elm$browser$Browser$External = function (a) {
	return {$: 'External', a: a};
};
var $elm$browser$Browser$Internal = function (a) {
	return {$: 'Internal', a: a};
};
var $elm$core$Basics$identity = function (x) {
	return x;
};
var $elm$browser$Browser$Dom$NotFound = function (a) {
	return {$: 'NotFound', a: a};
};
var $elm$url$Url$Http = {$: 'Http'};
var $elm$url$Url$Https = {$: 'Https'};
var $elm$url$Url$Url = F6(
	function (protocol, host, port_, path, query, fragment) {
		return {fragment: fragment, host: host, path: path, port_: port_, protocol: protocol, query: query};
	});
var $elm$core$String$contains = _String_contains;
var $elm$core$String$length = _String_length;
var $elm$core$String$slice = _String_slice;
var $elm$core$String$dropLeft = F2(
	function (n, string) {
		return (n < 1) ? string : A3(
			$elm$core$String$slice,
			n,
			$elm$core$String$length(string),
			string);
	});
var $elm$core$String$indexes = _String_indexes;
var $elm$core$String$isEmpty = function (string) {
	return string === '';
};
var $elm$core$String$left = F2(
	function (n, string) {
		return (n < 1) ? '' : A3($elm$core$String$slice, 0, n, string);
	});
var $elm$core$String$toInt = _String_toInt;
var $elm$url$Url$chompBeforePath = F5(
	function (protocol, path, params, frag, str) {
		if ($elm$core$String$isEmpty(str) || A2($elm$core$String$contains, '@', str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, ':', str);
			if (!_v0.b) {
				return $elm$core$Maybe$Just(
					A6($elm$url$Url$Url, protocol, str, $elm$core$Maybe$Nothing, path, params, frag));
			} else {
				if (!_v0.b.b) {
					var i = _v0.a;
					var _v1 = $elm$core$String$toInt(
						A2($elm$core$String$dropLeft, i + 1, str));
					if (_v1.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var port_ = _v1;
						return $elm$core$Maybe$Just(
							A6(
								$elm$url$Url$Url,
								protocol,
								A2($elm$core$String$left, i, str),
								port_,
								path,
								params,
								frag));
					}
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}
	});
var $elm$url$Url$chompBeforeQuery = F4(
	function (protocol, params, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '/', str);
			if (!_v0.b) {
				return A5($elm$url$Url$chompBeforePath, protocol, '/', params, frag, str);
			} else {
				var i = _v0.a;
				return A5(
					$elm$url$Url$chompBeforePath,
					protocol,
					A2($elm$core$String$dropLeft, i, str),
					params,
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompBeforeFragment = F3(
	function (protocol, frag, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '?', str);
			if (!_v0.b) {
				return A4($elm$url$Url$chompBeforeQuery, protocol, $elm$core$Maybe$Nothing, frag, str);
			} else {
				var i = _v0.a;
				return A4(
					$elm$url$Url$chompBeforeQuery,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					frag,
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$url$Url$chompAfterProtocol = F2(
	function (protocol, str) {
		if ($elm$core$String$isEmpty(str)) {
			return $elm$core$Maybe$Nothing;
		} else {
			var _v0 = A2($elm$core$String$indexes, '#', str);
			if (!_v0.b) {
				return A3($elm$url$Url$chompBeforeFragment, protocol, $elm$core$Maybe$Nothing, str);
			} else {
				var i = _v0.a;
				return A3(
					$elm$url$Url$chompBeforeFragment,
					protocol,
					$elm$core$Maybe$Just(
						A2($elm$core$String$dropLeft, i + 1, str)),
					A2($elm$core$String$left, i, str));
			}
		}
	});
var $elm$core$String$startsWith = _String_startsWith;
var $elm$url$Url$fromString = function (str) {
	return A2($elm$core$String$startsWith, 'http://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Http,
		A2($elm$core$String$dropLeft, 7, str)) : (A2($elm$core$String$startsWith, 'https://', str) ? A2(
		$elm$url$Url$chompAfterProtocol,
		$elm$url$Url$Https,
		A2($elm$core$String$dropLeft, 8, str)) : $elm$core$Maybe$Nothing);
};
var $elm$core$Basics$never = function (_v0) {
	never:
	while (true) {
		var nvr = _v0.a;
		var $temp$_v0 = nvr;
		_v0 = $temp$_v0;
		continue never;
	}
};
var $elm$core$Task$Perform = function (a) {
	return {$: 'Perform', a: a};
};
var $elm$core$Task$succeed = _Scheduler_succeed;
var $elm$core$Task$init = $elm$core$Task$succeed(_Utils_Tuple0);
var $elm$core$List$foldrHelper = F4(
	function (fn, acc, ctr, ls) {
		if (!ls.b) {
			return acc;
		} else {
			var a = ls.a;
			var r1 = ls.b;
			if (!r1.b) {
				return A2(fn, a, acc);
			} else {
				var b = r1.a;
				var r2 = r1.b;
				if (!r2.b) {
					return A2(
						fn,
						a,
						A2(fn, b, acc));
				} else {
					var c = r2.a;
					var r3 = r2.b;
					if (!r3.b) {
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(fn, c, acc)));
					} else {
						var d = r3.a;
						var r4 = r3.b;
						var res = (ctr > 500) ? A3(
							$elm$core$List$foldl,
							fn,
							acc,
							$elm$core$List$reverse(r4)) : A4($elm$core$List$foldrHelper, fn, acc, ctr + 1, r4);
						return A2(
							fn,
							a,
							A2(
								fn,
								b,
								A2(
									fn,
									c,
									A2(fn, d, res))));
					}
				}
			}
		}
	});
var $elm$core$List$foldr = F3(
	function (fn, acc, ls) {
		return A4($elm$core$List$foldrHelper, fn, acc, 0, ls);
	});
var $elm$core$List$map = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					return A2(
						$elm$core$List$cons,
						f(x),
						acc);
				}),
			_List_Nil,
			xs);
	});
var $elm$core$Task$andThen = _Scheduler_andThen;
var $elm$core$Task$map = F2(
	function (func, taskA) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return $elm$core$Task$succeed(
					func(a));
			},
			taskA);
	});
var $elm$core$Task$map2 = F3(
	function (func, taskA, taskB) {
		return A2(
			$elm$core$Task$andThen,
			function (a) {
				return A2(
					$elm$core$Task$andThen,
					function (b) {
						return $elm$core$Task$succeed(
							A2(func, a, b));
					},
					taskB);
			},
			taskA);
	});
var $elm$core$Task$sequence = function (tasks) {
	return A3(
		$elm$core$List$foldr,
		$elm$core$Task$map2($elm$core$List$cons),
		$elm$core$Task$succeed(_List_Nil),
		tasks);
};
var $elm$core$Platform$sendToApp = _Platform_sendToApp;
var $elm$core$Task$spawnCmd = F2(
	function (router, _v0) {
		var task = _v0.a;
		return _Scheduler_spawn(
			A2(
				$elm$core$Task$andThen,
				$elm$core$Platform$sendToApp(router),
				task));
	});
var $elm$core$Task$onEffects = F3(
	function (router, commands, state) {
		return A2(
			$elm$core$Task$map,
			function (_v0) {
				return _Utils_Tuple0;
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Task$spawnCmd(router),
					commands)));
	});
var $elm$core$Task$onSelfMsg = F3(
	function (_v0, _v1, _v2) {
		return $elm$core$Task$succeed(_Utils_Tuple0);
	});
var $elm$core$Task$cmdMap = F2(
	function (tagger, _v0) {
		var task = _v0.a;
		return $elm$core$Task$Perform(
			A2($elm$core$Task$map, tagger, task));
	});
_Platform_effectManagers['Task'] = _Platform_createManager($elm$core$Task$init, $elm$core$Task$onEffects, $elm$core$Task$onSelfMsg, $elm$core$Task$cmdMap);
var $elm$core$Task$command = _Platform_leaf('Task');
var $elm$core$Task$perform = F2(
	function (toMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2($elm$core$Task$map, toMessage, task)));
	});
var $elm$browser$Browser$document = _Browser_document;
var $elm$json$Json$Decode$fail = _Json_fail;
var $elm$json$Json$Decode$field = _Json_decodeField;
var $author$project$Widget$GotHelp = function (a) {
	return {$: 'GotHelp', a: a};
};
var $author$project$Widget$GotTranslations = function (a) {
	return {$: 'GotTranslations', a: a};
};
var $author$project$Timeline$Models$Horizontal = {$: 'Horizontal'};
var $author$project$Widget$Light = {$: 'Light'};
var $author$project$Widget$Options = function (start) {
	return function (zoom) {
		return function (sectionOffsetY) {
			return function (lineSize) {
				return function (direction) {
					return function (wrapText) {
						return function (durationUnit) {
							return function (displaySubtotals) {
								return function (countMoments) {
									return function (colorScheme) {
										return {colorScheme: colorScheme, countMoments: countMoments, direction: direction, displaySubtotals: displaySubtotals, durationUnit: durationUnit, lineSize: lineSize, sectionOffsetY: sectionOffsetY, start: start, wrapText: wrapText, zoom: zoom};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $elm$core$Platform$Cmd$batch = _Platform_batch;
var $author$project$Timeline$canEditGroups = F2(
	function (b, tl) {
		return _Utils_update(
			tl,
			{canEditGroups: b});
	});
var $author$project$Timeline$canSortGroups = F2(
	function (b, tl) {
		return _Utils_update(
			tl,
			{canSortGroups: b});
	});
var $author$project$Timeline$changeLineSize = F2(
	function (s, tl) {
		return _Utils_update(
			tl,
			{lineSize: s});
	});
var $Chadtech$elm_money$Money$EUR = {$: 'EUR'};
var $elm$json$Json$Decode$decodeValue = _Json_run;
var $Chadtech$elm_money$Money$AED = {$: 'AED'};
var $Chadtech$elm_money$Money$AFN = {$: 'AFN'};
var $Chadtech$elm_money$Money$ALL = {$: 'ALL'};
var $Chadtech$elm_money$Money$AMD = {$: 'AMD'};
var $Chadtech$elm_money$Money$ANG = {$: 'ANG'};
var $Chadtech$elm_money$Money$AOA = {$: 'AOA'};
var $Chadtech$elm_money$Money$ARS = {$: 'ARS'};
var $Chadtech$elm_money$Money$AUD = {$: 'AUD'};
var $Chadtech$elm_money$Money$AWG = {$: 'AWG'};
var $Chadtech$elm_money$Money$AZN = {$: 'AZN'};
var $Chadtech$elm_money$Money$BAM = {$: 'BAM'};
var $Chadtech$elm_money$Money$BBD = {$: 'BBD'};
var $Chadtech$elm_money$Money$BDT = {$: 'BDT'};
var $Chadtech$elm_money$Money$BGN = {$: 'BGN'};
var $Chadtech$elm_money$Money$BHD = {$: 'BHD'};
var $Chadtech$elm_money$Money$BIF = {$: 'BIF'};
var $Chadtech$elm_money$Money$BMD = {$: 'BMD'};
var $Chadtech$elm_money$Money$BND = {$: 'BND'};
var $Chadtech$elm_money$Money$BOB = {$: 'BOB'};
var $Chadtech$elm_money$Money$BRL = {$: 'BRL'};
var $Chadtech$elm_money$Money$BSD = {$: 'BSD'};
var $Chadtech$elm_money$Money$BTC = {$: 'BTC'};
var $Chadtech$elm_money$Money$BTN = {$: 'BTN'};
var $Chadtech$elm_money$Money$BWP = {$: 'BWP'};
var $Chadtech$elm_money$Money$BYN = {$: 'BYN'};
var $Chadtech$elm_money$Money$BZD = {$: 'BZD'};
var $Chadtech$elm_money$Money$CAD = {$: 'CAD'};
var $Chadtech$elm_money$Money$CDF = {$: 'CDF'};
var $Chadtech$elm_money$Money$CHF = {$: 'CHF'};
var $Chadtech$elm_money$Money$CLP = {$: 'CLP'};
var $Chadtech$elm_money$Money$CNY = {$: 'CNY'};
var $Chadtech$elm_money$Money$COP = {$: 'COP'};
var $Chadtech$elm_money$Money$CRC = {$: 'CRC'};
var $Chadtech$elm_money$Money$CUP = {$: 'CUP'};
var $Chadtech$elm_money$Money$CVE = {$: 'CVE'};
var $Chadtech$elm_money$Money$CZK = {$: 'CZK'};
var $Chadtech$elm_money$Money$DJF = {$: 'DJF'};
var $Chadtech$elm_money$Money$DKK = {$: 'DKK'};
var $Chadtech$elm_money$Money$DOP = {$: 'DOP'};
var $Chadtech$elm_money$Money$DZD = {$: 'DZD'};
var $Chadtech$elm_money$Money$EEK = {$: 'EEK'};
var $Chadtech$elm_money$Money$EGP = {$: 'EGP'};
var $Chadtech$elm_money$Money$ERN = {$: 'ERN'};
var $Chadtech$elm_money$Money$ETB = {$: 'ETB'};
var $Chadtech$elm_money$Money$FJD = {$: 'FJD'};
var $Chadtech$elm_money$Money$FKP = {$: 'FKP'};
var $Chadtech$elm_money$Money$GBP = {$: 'GBP'};
var $Chadtech$elm_money$Money$GEL = {$: 'GEL'};
var $Chadtech$elm_money$Money$GHS = {$: 'GHS'};
var $Chadtech$elm_money$Money$GIP = {$: 'GIP'};
var $Chadtech$elm_money$Money$GMD = {$: 'GMD'};
var $Chadtech$elm_money$Money$GNF = {$: 'GNF'};
var $Chadtech$elm_money$Money$GTQ = {$: 'GTQ'};
var $Chadtech$elm_money$Money$GYD = {$: 'GYD'};
var $Chadtech$elm_money$Money$HKD = {$: 'HKD'};
var $Chadtech$elm_money$Money$HNL = {$: 'HNL'};
var $Chadtech$elm_money$Money$HRK = {$: 'HRK'};
var $Chadtech$elm_money$Money$HTG = {$: 'HTG'};
var $Chadtech$elm_money$Money$HUF = {$: 'HUF'};
var $Chadtech$elm_money$Money$IDR = {$: 'IDR'};
var $Chadtech$elm_money$Money$ILS = {$: 'ILS'};
var $Chadtech$elm_money$Money$INR = {$: 'INR'};
var $Chadtech$elm_money$Money$IQD = {$: 'IQD'};
var $Chadtech$elm_money$Money$IRR = {$: 'IRR'};
var $Chadtech$elm_money$Money$ISK = {$: 'ISK'};
var $Chadtech$elm_money$Money$JMD = {$: 'JMD'};
var $Chadtech$elm_money$Money$JOD = {$: 'JOD'};
var $Chadtech$elm_money$Money$JPY = {$: 'JPY'};
var $Chadtech$elm_money$Money$KES = {$: 'KES'};
var $Chadtech$elm_money$Money$KGS = {$: 'KGS'};
var $Chadtech$elm_money$Money$KHR = {$: 'KHR'};
var $Chadtech$elm_money$Money$KMF = {$: 'KMF'};
var $Chadtech$elm_money$Money$KPW = {$: 'KPW'};
var $Chadtech$elm_money$Money$KRW = {$: 'KRW'};
var $Chadtech$elm_money$Money$KWD = {$: 'KWD'};
var $Chadtech$elm_money$Money$KYD = {$: 'KYD'};
var $Chadtech$elm_money$Money$KZT = {$: 'KZT'};
var $Chadtech$elm_money$Money$LAK = {$: 'LAK'};
var $Chadtech$elm_money$Money$LBP = {$: 'LBP'};
var $Chadtech$elm_money$Money$LKR = {$: 'LKR'};
var $Chadtech$elm_money$Money$LRD = {$: 'LRD'};
var $Chadtech$elm_money$Money$LSL = {$: 'LSL'};
var $Chadtech$elm_money$Money$LTL = {$: 'LTL'};
var $Chadtech$elm_money$Money$LVL = {$: 'LVL'};
var $Chadtech$elm_money$Money$LYD = {$: 'LYD'};
var $Chadtech$elm_money$Money$MAD = {$: 'MAD'};
var $Chadtech$elm_money$Money$MDL = {$: 'MDL'};
var $Chadtech$elm_money$Money$MGA = {$: 'MGA'};
var $Chadtech$elm_money$Money$MKD = {$: 'MKD'};
var $Chadtech$elm_money$Money$MMK = {$: 'MMK'};
var $Chadtech$elm_money$Money$MNT = {$: 'MNT'};
var $Chadtech$elm_money$Money$MOP = {$: 'MOP'};
var $Chadtech$elm_money$Money$MRU = {$: 'MRU'};
var $Chadtech$elm_money$Money$MUR = {$: 'MUR'};
var $Chadtech$elm_money$Money$MVR = {$: 'MVR'};
var $Chadtech$elm_money$Money$MWK = {$: 'MWK'};
var $Chadtech$elm_money$Money$MXN = {$: 'MXN'};
var $Chadtech$elm_money$Money$MYR = {$: 'MYR'};
var $Chadtech$elm_money$Money$MZN = {$: 'MZN'};
var $Chadtech$elm_money$Money$NAD = {$: 'NAD'};
var $Chadtech$elm_money$Money$NGN = {$: 'NGN'};
var $Chadtech$elm_money$Money$NIO = {$: 'NIO'};
var $Chadtech$elm_money$Money$NOK = {$: 'NOK'};
var $Chadtech$elm_money$Money$NPR = {$: 'NPR'};
var $Chadtech$elm_money$Money$NZD = {$: 'NZD'};
var $Chadtech$elm_money$Money$OMR = {$: 'OMR'};
var $Chadtech$elm_money$Money$PAB = {$: 'PAB'};
var $Chadtech$elm_money$Money$PEN = {$: 'PEN'};
var $Chadtech$elm_money$Money$PGK = {$: 'PGK'};
var $Chadtech$elm_money$Money$PHP = {$: 'PHP'};
var $Chadtech$elm_money$Money$PKR = {$: 'PKR'};
var $Chadtech$elm_money$Money$PLN = {$: 'PLN'};
var $Chadtech$elm_money$Money$PYG = {$: 'PYG'};
var $Chadtech$elm_money$Money$QAR = {$: 'QAR'};
var $Chadtech$elm_money$Money$RON = {$: 'RON'};
var $Chadtech$elm_money$Money$RSD = {$: 'RSD'};
var $Chadtech$elm_money$Money$RUB = {$: 'RUB'};
var $Chadtech$elm_money$Money$RWF = {$: 'RWF'};
var $Chadtech$elm_money$Money$SAR = {$: 'SAR'};
var $Chadtech$elm_money$Money$SBD = {$: 'SBD'};
var $Chadtech$elm_money$Money$SCR = {$: 'SCR'};
var $Chadtech$elm_money$Money$SDG = {$: 'SDG'};
var $Chadtech$elm_money$Money$SEK = {$: 'SEK'};
var $Chadtech$elm_money$Money$SGD = {$: 'SGD'};
var $Chadtech$elm_money$Money$SHP = {$: 'SHP'};
var $Chadtech$elm_money$Money$SLE = {$: 'SLE'};
var $Chadtech$elm_money$Money$SOS = {$: 'SOS'};
var $Chadtech$elm_money$Money$SRD = {$: 'SRD'};
var $Chadtech$elm_money$Money$SSP = {$: 'SSP'};
var $Chadtech$elm_money$Money$STN = {$: 'STN'};
var $Chadtech$elm_money$Money$SYP = {$: 'SYP'};
var $Chadtech$elm_money$Money$SZL = {$: 'SZL'};
var $Chadtech$elm_money$Money$THB = {$: 'THB'};
var $Chadtech$elm_money$Money$TJS = {$: 'TJS'};
var $Chadtech$elm_money$Money$TMT = {$: 'TMT'};
var $Chadtech$elm_money$Money$TND = {$: 'TND'};
var $Chadtech$elm_money$Money$TOP = {$: 'TOP'};
var $Chadtech$elm_money$Money$TRY = {$: 'TRY'};
var $Chadtech$elm_money$Money$TTD = {$: 'TTD'};
var $Chadtech$elm_money$Money$TWD = {$: 'TWD'};
var $Chadtech$elm_money$Money$TZS = {$: 'TZS'};
var $Chadtech$elm_money$Money$UAH = {$: 'UAH'};
var $Chadtech$elm_money$Money$UGX = {$: 'UGX'};
var $Chadtech$elm_money$Money$USD = {$: 'USD'};
var $Chadtech$elm_money$Money$UYU = {$: 'UYU'};
var $Chadtech$elm_money$Money$UZS = {$: 'UZS'};
var $Chadtech$elm_money$Money$VED = {$: 'VED'};
var $Chadtech$elm_money$Money$VES = {$: 'VES'};
var $Chadtech$elm_money$Money$VND = {$: 'VND'};
var $Chadtech$elm_money$Money$VUV = {$: 'VUV'};
var $Chadtech$elm_money$Money$WST = {$: 'WST'};
var $Chadtech$elm_money$Money$XAF = {$: 'XAF'};
var $Chadtech$elm_money$Money$XCD = {$: 'XCD'};
var $Chadtech$elm_money$Money$XOF = {$: 'XOF'};
var $Chadtech$elm_money$Money$XPF = {$: 'XPF'};
var $Chadtech$elm_money$Money$YER = {$: 'YER'};
var $Chadtech$elm_money$Money$ZAR = {$: 'ZAR'};
var $Chadtech$elm_money$Money$ZMK = {$: 'ZMK'};
var $Chadtech$elm_money$Money$ZMW = {$: 'ZMW'};
var $Chadtech$elm_money$Money$ZWL = {$: 'ZWL'};
var $elm$core$String$toUpper = _String_toUpper;
var $Chadtech$elm_money$Money$fromString = function (str) {
	var _v0 = $elm$core$String$toUpper(str);
	switch (_v0) {
		case 'USD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$USD);
		case 'CAD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CAD);
		case 'EUR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$EUR);
		case 'BTC':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BTC);
		case 'AED':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$AED);
		case 'AFN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$AFN);
		case 'ALL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ALL);
		case 'AMD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$AMD);
		case 'ARS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ARS);
		case 'AUD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$AUD);
		case 'AZN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$AZN);
		case 'BAM':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BAM);
		case 'BDT':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BDT);
		case 'BGN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BGN);
		case 'BHD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BHD);
		case 'BIF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BIF);
		case 'BND':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BND);
		case 'BOB':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BOB);
		case 'BRL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BRL);
		case 'BWP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BWP);
		case 'BYN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BYN);
		case 'BZD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BZD);
		case 'CDF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CDF);
		case 'CHF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CHF);
		case 'CLP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CLP);
		case 'CNY':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CNY);
		case 'COP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$COP);
		case 'CRC':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CRC);
		case 'CVE':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CVE);
		case 'CZK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CZK);
		case 'DJF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$DJF);
		case 'DKK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$DKK);
		case 'DOP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$DOP);
		case 'DZD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$DZD);
		case 'EEK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$EEK);
		case 'EGP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$EGP);
		case 'ERN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ERN);
		case 'ETB':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ETB);
		case 'GBP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GBP);
		case 'GEL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GEL);
		case 'GHS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GHS);
		case 'GNF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GNF);
		case 'GTQ':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GTQ);
		case 'HKD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$HKD);
		case 'HNL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$HNL);
		case 'HRK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$HRK);
		case 'HUF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$HUF);
		case 'IDR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$IDR);
		case 'ILS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ILS);
		case 'INR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$INR);
		case 'IQD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$IQD);
		case 'IRR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$IRR);
		case 'ISK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ISK);
		case 'JMD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$JMD);
		case 'JOD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$JOD);
		case 'JPY':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$JPY);
		case 'KES':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KES);
		case 'KHR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KHR);
		case 'KMF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KMF);
		case 'KRW':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KRW);
		case 'KWD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KWD);
		case 'KZT':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KZT);
		case 'LAK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LAK);
		case 'LBP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LBP);
		case 'LKR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LKR);
		case 'LTL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LTL);
		case 'LVL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LVL);
		case 'LYD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LYD);
		case 'MAD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MAD);
		case 'MDL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MDL);
		case 'MGA':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MGA);
		case 'MKD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MKD);
		case 'MMK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MMK);
		case 'MOP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MOP);
		case 'MUR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MUR);
		case 'MXN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MXN);
		case 'MYR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MYR);
		case 'MZN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MZN);
		case 'NAD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$NAD);
		case 'NGN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$NGN);
		case 'NIO':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$NIO);
		case 'NOK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$NOK);
		case 'NPR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$NPR);
		case 'NZD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$NZD);
		case 'OMR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$OMR);
		case 'PAB':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$PAB);
		case 'PEN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$PEN);
		case 'PHP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$PHP);
		case 'PKR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$PKR);
		case 'PLN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$PLN);
		case 'PYG':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$PYG);
		case 'QAR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$QAR);
		case 'RON':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$RON);
		case 'RSD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$RSD);
		case 'RUB':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$RUB);
		case 'RWF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$RWF);
		case 'SAR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SAR);
		case 'SDG':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SDG);
		case 'SEK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SEK);
		case 'SGD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SGD);
		case 'SOS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SOS);
		case 'SYP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SYP);
		case 'THB':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$THB);
		case 'TND':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TND);
		case 'TOP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TOP);
		case 'TRY':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TRY);
		case 'TTD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TTD);
		case 'TWD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TWD);
		case 'TZS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TZS);
		case 'UAH':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$UAH);
		case 'UGX':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$UGX);
		case 'UYU':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$UYU);
		case 'UZS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$UZS);
		case 'VED':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$VED);
		case 'VND':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$VND);
		case 'XAF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$XAF);
		case 'XOF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$XOF);
		case 'YER':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$YER);
		case 'ZAR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ZAR);
		case 'ZMK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ZMK);
		case 'AOA':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$AOA);
		case 'XCD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$XCD);
		case 'AWG':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$AWG);
		case 'BSD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BSD);
		case 'BBD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BBD);
		case 'BMD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BMD);
		case 'BTN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$BTN);
		case 'KYD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KYD);
		case 'CUP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$CUP);
		case 'ANG':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ANG);
		case 'SZL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SZL);
		case 'FKP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$FKP);
		case 'FJD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$FJD);
		case 'XPF':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$XPF);
		case 'GMD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GMD);
		case 'GIP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GIP);
		case 'GYD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$GYD);
		case 'HTG':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$HTG);
		case 'KPW':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KPW);
		case 'KGS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$KGS);
		case 'LSL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LSL);
		case 'LRD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$LRD);
		case 'MWK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MWK);
		case 'MVR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MVR);
		case 'MRU':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MRU);
		case 'MNT':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$MNT);
		case 'PGK':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$PGK);
		case 'SHP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SHP);
		case 'WST':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$WST);
		case 'STN':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$STN);
		case 'SCR':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SCR);
		case 'SLE':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SLE);
		case 'SBD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SBD);
		case 'SSP':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SSP);
		case 'SRD':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$SRD);
		case 'TJS':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TJS);
		case 'TMT':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$TMT);
		case 'VUV':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$VUV);
		case 'VES':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$VES);
		case 'ZMW':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ZMW);
		case 'ZWL':
			return $elm$core$Maybe$Just($Chadtech$elm_money$Money$ZWL);
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $elm$json$Json$Decode$string = _Json_decodeString;
var $elm$core$Maybe$withDefault = F2(
	function (_default, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return value;
		} else {
			return _default;
		}
	});
var $author$project$Widget$currencyFromFlags = function (flags) {
	var result = A2(
		$elm$json$Json$Decode$decodeValue,
		A2($elm$json$Json$Decode$field, 'currency', $elm$json$Json$Decode$string),
		flags);
	if (result.$ === 'Ok') {
		var currency = result.a;
		return A2(
			$elm$core$Maybe$withDefault,
			$Chadtech$elm_money$Money$EUR,
			$Chadtech$elm_money$Money$fromString(currency));
	} else {
		return $Chadtech$elm_money$Money$EUR;
	}
};
var $ChristophP$elm_i18next$I18Next$Translations = function (a) {
	return {$: 'Translations', a: a};
};
var $elm$core$Basics$composeR = F3(
	function (f, g, x) {
		return g(
			f(x));
	});
var $elm$core$Dict$RBEmpty_elm_builtin = {$: 'RBEmpty_elm_builtin'};
var $elm$core$Dict$empty = $elm$core$Dict$RBEmpty_elm_builtin;
var $elm$core$Dict$foldl = F3(
	function (func, acc, dict) {
		foldl:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return acc;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var $temp$func = func,
					$temp$acc = A3(
					func,
					key,
					value,
					A3($elm$core$Dict$foldl, func, acc, left)),
					$temp$dict = right;
				func = $temp$func;
				acc = $temp$acc;
				dict = $temp$dict;
				continue foldl;
			}
		}
	});
var $elm$core$Dict$Black = {$: 'Black'};
var $elm$core$Dict$RBNode_elm_builtin = F5(
	function (a, b, c, d, e) {
		return {$: 'RBNode_elm_builtin', a: a, b: b, c: c, d: d, e: e};
	});
var $elm$core$Dict$Red = {$: 'Red'};
var $elm$core$Dict$balance = F5(
	function (color, key, value, left, right) {
		if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Red')) {
			var _v1 = right.a;
			var rK = right.b;
			var rV = right.c;
			var rLeft = right.d;
			var rRight = right.e;
			if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
				var _v3 = left.a;
				var lK = left.b;
				var lV = left.c;
				var lLeft = left.d;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					key,
					value,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					rK,
					rV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, left, rLeft),
					rRight);
			}
		} else {
			if ((((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) && (left.d.$ === 'RBNode_elm_builtin')) && (left.d.a.$ === 'Red')) {
				var _v5 = left.a;
				var lK = left.b;
				var lV = left.c;
				var _v6 = left.d;
				var _v7 = _v6.a;
				var llK = _v6.b;
				var llV = _v6.c;
				var llLeft = _v6.d;
				var llRight = _v6.e;
				var lRight = left.e;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Red,
					lK,
					lV,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, lRight, right));
			} else {
				return A5($elm$core$Dict$RBNode_elm_builtin, color, key, value, left, right);
			}
		}
	});
var $elm$core$Basics$compare = _Utils_compare;
var $elm$core$Dict$insertHelp = F3(
	function (key, value, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
		} else {
			var nColor = dict.a;
			var nKey = dict.b;
			var nValue = dict.c;
			var nLeft = dict.d;
			var nRight = dict.e;
			var _v1 = A2($elm$core$Basics$compare, key, nKey);
			switch (_v1.$) {
				case 'LT':
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						A3($elm$core$Dict$insertHelp, key, value, nLeft),
						nRight);
				case 'EQ':
					return A5($elm$core$Dict$RBNode_elm_builtin, nColor, nKey, value, nLeft, nRight);
				default:
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						nLeft,
						A3($elm$core$Dict$insertHelp, key, value, nRight));
			}
		}
	});
var $elm$core$Dict$insert = F3(
	function (key, value, dict) {
		var _v0 = A3($elm$core$Dict$insertHelp, key, value, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $ChristophP$elm_i18next$I18Next$flattenTranslationsHelp = F3(
	function (initialValue, namespace, dict) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (key, val, acc) {
					var newNamespace = function (currentKey) {
						return $elm$core$String$isEmpty(namespace) ? currentKey : (namespace + ('.' + currentKey));
					};
					if (val.$ === 'Leaf') {
						var str = val.a;
						return A3(
							$elm$core$Dict$insert,
							newNamespace(key),
							str,
							acc);
					} else {
						var children = val.a;
						return A3(
							$ChristophP$elm_i18next$I18Next$flattenTranslationsHelp,
							acc,
							newNamespace(key),
							children);
					}
				}),
			initialValue,
			dict);
	});
var $ChristophP$elm_i18next$I18Next$flattenTranslations = A2($ChristophP$elm_i18next$I18Next$flattenTranslationsHelp, $elm$core$Dict$empty, '');
var $elm$core$Dict$fromList = function (assocs) {
	return A3(
		$elm$core$List$foldl,
		F2(
			function (_v0, dict) {
				var key = _v0.a;
				var value = _v0.b;
				return A3($elm$core$Dict$insert, key, value, dict);
			}),
		$elm$core$Dict$empty,
		assocs);
};
var $ChristophP$elm_i18next$I18Next$fromTree = A2(
	$elm$core$Basics$composeR,
	$elm$core$Dict$fromList,
	A2($elm$core$Basics$composeR, $ChristophP$elm_i18next$I18Next$flattenTranslations, $ChristophP$elm_i18next$I18Next$Translations));
var $ChristophP$elm_i18next$I18Next$Branch = function (a) {
	return {$: 'Branch', a: a};
};
var $ChristophP$elm_i18next$I18Next$object = A2($elm$core$Basics$composeR, $elm$core$Dict$fromList, $ChristophP$elm_i18next$I18Next$Branch);
var $ChristophP$elm_i18next$I18Next$Leaf = function (a) {
	return {$: 'Leaf', a: a};
};
var $ChristophP$elm_i18next$I18Next$string = $ChristophP$elm_i18next$I18Next$Leaf;
var $author$project$Widget$Language$defaultLanguage = $ChristophP$elm_i18next$I18Next$fromTree(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'',
			$ChristophP$elm_i18next$I18Next$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'Hours',
						$ChristophP$elm_i18next$I18Next$string('Hours')),
						_Utils_Tuple2(
						'auto',
						$ChristophP$elm_i18next$I18Next$string('Auto')),
						_Utils_Tuple2(
						'color',
						$ChristophP$elm_i18next$I18Next$string('Color')),
						_Utils_Tuple2(
						'colorScheme',
						$ChristophP$elm_i18next$I18Next$string('Timeline colors')),
						_Utils_Tuple2(
						'comment',
						$ChristophP$elm_i18next$I18Next$string('Comment')),
						_Utils_Tuple2(
						'content',
						$ChristophP$elm_i18next$I18Next$string('content')),
						_Utils_Tuple2(
						'count',
						$ChristophP$elm_i18next$I18Next$string('Moment count')),
						_Utils_Tuple2(
						'countMoments',
						$ChristophP$elm_i18next$I18Next$string('Count the moments')),
						_Utils_Tuple2(
						'create',
						$ChristophP$elm_i18next$I18Next$string('Create')),
						_Utils_Tuple2(
						'cumulativeDuration',
						$ChristophP$elm_i18next$I18Next$string('Cumulative duration: ')),
						_Utils_Tuple2(
						'dark',
						$ChristophP$elm_i18next$I18Next$string('Dark')),
						_Utils_Tuple2(
						'daysShort',
						$ChristophP$elm_i18next$I18Next$string('d')),
						_Utils_Tuple2(
						'displaySubtotals',
						$ChristophP$elm_i18next$I18Next$string('Display subtotals')),
						_Utils_Tuple2(
						'duration',
						$ChristophP$elm_i18next$I18Next$string('Duration')),
						_Utils_Tuple2(
						'editableColumns',
						$ChristophP$elm_i18next$I18Next$string('editable columns')),
						_Utils_Tuple2(
						'empty',
						$ChristophP$elm_i18next$I18Next$string('empty')),
						_Utils_Tuple2(
						'endDate',
						$ChristophP$elm_i18next$I18Next$string('End date')),
						_Utils_Tuple2(
						'groupBy',
						$ChristophP$elm_i18next$I18Next$string('Group by')),
						_Utils_Tuple2(
						'horizontal',
						$ChristophP$elm_i18next$I18Next$string('Horizontal')),
						_Utils_Tuple2(
						'hoursShort',
						$ChristophP$elm_i18next$I18Next$string('h')),
						_Utils_Tuple2(
						'isLocked',
						$ChristophP$elm_i18next$I18Next$string('Is locked')),
						_Utils_Tuple2(
						'light',
						$ChristophP$elm_i18next$I18Next$string('Light')),
						_Utils_Tuple2(
						'minutes',
						$ChristophP$elm_i18next$I18Next$string('Minutes')),
						_Utils_Tuple2(
						'minutesShort',
						$ChristophP$elm_i18next$I18Next$string('mn')),
						_Utils_Tuple2(
						'moment',
						$ChristophP$elm_i18next$I18Next$string('moment')),
						_Utils_Tuple2(
						'moment_plural',
						$ChristophP$elm_i18next$I18Next$string('moments')),
						_Utils_Tuple2(
						'multiple',
						$ChristophP$elm_i18next$I18Next$string('multiple')),
						_Utils_Tuple2(
						'newMoment',
						$ChristophP$elm_i18next$I18Next$string('New moment')),
						_Utils_Tuple2(
						'settings',
						$ChristophP$elm_i18next$I18Next$string('Settings')),
						_Utils_Tuple2(
						'startDate',
						$ChristophP$elm_i18next$I18Next$string('Start date')),
						_Utils_Tuple2(
						'subgroupBy',
						$ChristophP$elm_i18next$I18Next$string('Then group by')),
						_Utils_Tuple2(
						'sum',
						$ChristophP$elm_i18next$I18Next$string('Sum : ')),
						_Utils_Tuple2(
						'timeRange',
						$ChristophP$elm_i18next$I18Next$string('Time range: ')),
						_Utils_Tuple2(
						'timeUnit',
						$ChristophP$elm_i18next$I18Next$string('Time unit')),
						_Utils_Tuple2(
						'timelineDirection',
						$ChristophP$elm_i18next$I18Next$string('Timeline direction')),
						_Utils_Tuple2(
						'totalColumns',
						$ChristophP$elm_i18next$I18Next$string('total columns')),
						_Utils_Tuple2(
						'totals',
						$ChristophP$elm_i18next$I18Next$string('Totals')),
						_Utils_Tuple2(
						'vertical',
						$ChristophP$elm_i18next$I18Next$string('Vertical')),
						_Utils_Tuple2(
						'workingDays',
						$ChristophP$elm_i18next$I18Next$string('Working days: ')),
						_Utils_Tuple2(
						'wrapText',
						$ChristophP$elm_i18next$I18Next$string('Wrap text of last content'))
					])))
		]));
var $author$project$Timeline$displayAxis = F2(
	function (b, tl) {
		return _Utils_update(
			tl,
			{displayAxis: b});
	});
var $author$project$Widget$Hours = {$: 'Hours'};
var $author$project$Widget$Minutes = {$: 'Minutes'};
var $author$project$Widget$durationUnitFromFlags = function (flags) {
	var result = A2(
		$elm$json$Json$Decode$decodeValue,
		A2($elm$json$Json$Decode$field, 'durationUnit', $elm$json$Json$Decode$string),
		flags);
	_v0$2:
	while (true) {
		if (result.$ === 'Ok') {
			switch (result.a) {
				case 'Hours':
					return $author$project$Widget$Hours;
				case 'Minutes':
					return $author$project$Widget$Minutes;
				default:
					break _v0$2;
			}
		} else {
			break _v0$2;
		}
	}
	return $author$project$Widget$Hours;
};
var $elm$json$Json$Decode$decodeString = _Json_runOnString;
var $elm$http$Http$BadStatus_ = F2(
	function (a, b) {
		return {$: 'BadStatus_', a: a, b: b};
	});
var $elm$http$Http$BadUrl_ = function (a) {
	return {$: 'BadUrl_', a: a};
};
var $elm$http$Http$GoodStatus_ = F2(
	function (a, b) {
		return {$: 'GoodStatus_', a: a, b: b};
	});
var $elm$http$Http$NetworkError_ = {$: 'NetworkError_'};
var $elm$http$Http$Receiving = function (a) {
	return {$: 'Receiving', a: a};
};
var $elm$http$Http$Sending = function (a) {
	return {$: 'Sending', a: a};
};
var $elm$http$Http$Timeout_ = {$: 'Timeout_'};
var $elm$core$Maybe$isJust = function (maybe) {
	if (maybe.$ === 'Just') {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Platform$sendToSelf = _Platform_sendToSelf;
var $elm$core$Dict$get = F2(
	function (targetKey, dict) {
		get:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return $elm$core$Maybe$Nothing;
			} else {
				var key = dict.b;
				var value = dict.c;
				var left = dict.d;
				var right = dict.e;
				var _v1 = A2($elm$core$Basics$compare, targetKey, key);
				switch (_v1.$) {
					case 'LT':
						var $temp$targetKey = targetKey,
							$temp$dict = left;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
					case 'EQ':
						return $elm$core$Maybe$Just(value);
					default:
						var $temp$targetKey = targetKey,
							$temp$dict = right;
						targetKey = $temp$targetKey;
						dict = $temp$dict;
						continue get;
				}
			}
		}
	});
var $elm$core$Dict$getMin = function (dict) {
	getMin:
	while (true) {
		if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
			var left = dict.d;
			var $temp$dict = left;
			dict = $temp$dict;
			continue getMin;
		} else {
			return dict;
		}
	}
};
var $elm$core$Dict$moveRedLeft = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.e.d.$ === 'RBNode_elm_builtin') && (dict.e.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var lLeft = _v1.d;
			var lRight = _v1.e;
			var _v2 = dict.e;
			var rClr = _v2.a;
			var rK = _v2.b;
			var rV = _v2.c;
			var rLeft = _v2.d;
			var _v3 = rLeft.a;
			var rlK = rLeft.b;
			var rlV = rLeft.c;
			var rlL = rLeft.d;
			var rlR = rLeft.e;
			var rRight = _v2.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				rlK,
				rlV,
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					rlL),
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, rK, rV, rlR, rRight));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v4 = dict.d;
			var lClr = _v4.a;
			var lK = _v4.b;
			var lV = _v4.c;
			var lLeft = _v4.d;
			var lRight = _v4.e;
			var _v5 = dict.e;
			var rClr = _v5.a;
			var rK = _v5.b;
			var rV = _v5.c;
			var rLeft = _v5.d;
			var rRight = _v5.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$moveRedRight = function (dict) {
	if (((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) && (dict.e.$ === 'RBNode_elm_builtin')) {
		if ((dict.d.d.$ === 'RBNode_elm_builtin') && (dict.d.d.a.$ === 'Red')) {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v1 = dict.d;
			var lClr = _v1.a;
			var lK = _v1.b;
			var lV = _v1.c;
			var _v2 = _v1.d;
			var _v3 = _v2.a;
			var llK = _v2.b;
			var llV = _v2.c;
			var llLeft = _v2.d;
			var llRight = _v2.e;
			var lRight = _v1.e;
			var _v4 = dict.e;
			var rClr = _v4.a;
			var rK = _v4.b;
			var rV = _v4.c;
			var rLeft = _v4.d;
			var rRight = _v4.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				$elm$core$Dict$Red,
				lK,
				lV,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, llK, llV, llLeft, llRight),
				A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					lRight,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight)));
		} else {
			var clr = dict.a;
			var k = dict.b;
			var v = dict.c;
			var _v5 = dict.d;
			var lClr = _v5.a;
			var lK = _v5.b;
			var lV = _v5.c;
			var lLeft = _v5.d;
			var lRight = _v5.e;
			var _v6 = dict.e;
			var rClr = _v6.a;
			var rK = _v6.b;
			var rV = _v6.c;
			var rLeft = _v6.d;
			var rRight = _v6.e;
			if (clr.$ === 'Black') {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			} else {
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					$elm$core$Dict$Black,
					k,
					v,
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, lK, lV, lLeft, lRight),
					A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, rK, rV, rLeft, rRight));
			}
		}
	} else {
		return dict;
	}
};
var $elm$core$Dict$removeHelpPrepEQGT = F7(
	function (targetKey, dict, color, key, value, left, right) {
		if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Red')) {
			var _v1 = left.a;
			var lK = left.b;
			var lV = left.c;
			var lLeft = left.d;
			var lRight = left.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				lK,
				lV,
				lLeft,
				A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Red, key, value, lRight, right));
		} else {
			_v2$2:
			while (true) {
				if ((right.$ === 'RBNode_elm_builtin') && (right.a.$ === 'Black')) {
					if (right.d.$ === 'RBNode_elm_builtin') {
						if (right.d.a.$ === 'Black') {
							var _v3 = right.a;
							var _v4 = right.d;
							var _v5 = _v4.a;
							return $elm$core$Dict$moveRedRight(dict);
						} else {
							break _v2$2;
						}
					} else {
						var _v6 = right.a;
						var _v7 = right.d;
						return $elm$core$Dict$moveRedRight(dict);
					}
				} else {
					break _v2$2;
				}
			}
			return dict;
		}
	});
var $elm$core$Dict$removeMin = function (dict) {
	if ((dict.$ === 'RBNode_elm_builtin') && (dict.d.$ === 'RBNode_elm_builtin')) {
		var color = dict.a;
		var key = dict.b;
		var value = dict.c;
		var left = dict.d;
		var lColor = left.a;
		var lLeft = left.d;
		var right = dict.e;
		if (lColor.$ === 'Black') {
			if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
				var _v3 = lLeft.a;
				return A5(
					$elm$core$Dict$RBNode_elm_builtin,
					color,
					key,
					value,
					$elm$core$Dict$removeMin(left),
					right);
			} else {
				var _v4 = $elm$core$Dict$moveRedLeft(dict);
				if (_v4.$ === 'RBNode_elm_builtin') {
					var nColor = _v4.a;
					var nKey = _v4.b;
					var nValue = _v4.c;
					var nLeft = _v4.d;
					var nRight = _v4.e;
					return A5(
						$elm$core$Dict$balance,
						nColor,
						nKey,
						nValue,
						$elm$core$Dict$removeMin(nLeft),
						nRight);
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			}
		} else {
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				value,
				$elm$core$Dict$removeMin(left),
				right);
		}
	} else {
		return $elm$core$Dict$RBEmpty_elm_builtin;
	}
};
var $elm$core$Dict$removeHelp = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_cmp(targetKey, key) < 0) {
				if ((left.$ === 'RBNode_elm_builtin') && (left.a.$ === 'Black')) {
					var _v4 = left.a;
					var lLeft = left.d;
					if ((lLeft.$ === 'RBNode_elm_builtin') && (lLeft.a.$ === 'Red')) {
						var _v6 = lLeft.a;
						return A5(
							$elm$core$Dict$RBNode_elm_builtin,
							color,
							key,
							value,
							A2($elm$core$Dict$removeHelp, targetKey, left),
							right);
					} else {
						var _v7 = $elm$core$Dict$moveRedLeft(dict);
						if (_v7.$ === 'RBNode_elm_builtin') {
							var nColor = _v7.a;
							var nKey = _v7.b;
							var nValue = _v7.c;
							var nLeft = _v7.d;
							var nRight = _v7.e;
							return A5(
								$elm$core$Dict$balance,
								nColor,
								nKey,
								nValue,
								A2($elm$core$Dict$removeHelp, targetKey, nLeft),
								nRight);
						} else {
							return $elm$core$Dict$RBEmpty_elm_builtin;
						}
					}
				} else {
					return A5(
						$elm$core$Dict$RBNode_elm_builtin,
						color,
						key,
						value,
						A2($elm$core$Dict$removeHelp, targetKey, left),
						right);
				}
			} else {
				return A2(
					$elm$core$Dict$removeHelpEQGT,
					targetKey,
					A7($elm$core$Dict$removeHelpPrepEQGT, targetKey, dict, color, key, value, left, right));
			}
		}
	});
var $elm$core$Dict$removeHelpEQGT = F2(
	function (targetKey, dict) {
		if (dict.$ === 'RBNode_elm_builtin') {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			if (_Utils_eq(targetKey, key)) {
				var _v1 = $elm$core$Dict$getMin(right);
				if (_v1.$ === 'RBNode_elm_builtin') {
					var minKey = _v1.b;
					var minValue = _v1.c;
					return A5(
						$elm$core$Dict$balance,
						color,
						minKey,
						minValue,
						left,
						$elm$core$Dict$removeMin(right));
				} else {
					return $elm$core$Dict$RBEmpty_elm_builtin;
				}
			} else {
				return A5(
					$elm$core$Dict$balance,
					color,
					key,
					value,
					left,
					A2($elm$core$Dict$removeHelp, targetKey, right));
			}
		} else {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		}
	});
var $elm$core$Dict$remove = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$removeHelp, key, dict);
		if ((_v0.$ === 'RBNode_elm_builtin') && (_v0.a.$ === 'Red')) {
			var _v1 = _v0.a;
			var k = _v0.b;
			var v = _v0.c;
			var l = _v0.d;
			var r = _v0.e;
			return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, k, v, l, r);
		} else {
			var x = _v0;
			return x;
		}
	});
var $elm$core$Dict$update = F3(
	function (targetKey, alter, dictionary) {
		var _v0 = alter(
			A2($elm$core$Dict$get, targetKey, dictionary));
		if (_v0.$ === 'Just') {
			var value = _v0.a;
			return A3($elm$core$Dict$insert, targetKey, value, dictionary);
		} else {
			return A2($elm$core$Dict$remove, targetKey, dictionary);
		}
	});
var $elm$http$Http$expectStringResponse = F2(
	function (toMsg, toResult) {
		return A3(
			_Http_expect,
			'',
			$elm$core$Basics$identity,
			A2($elm$core$Basics$composeR, toResult, toMsg));
	});
var $elm$core$Result$mapError = F2(
	function (f, result) {
		if (result.$ === 'Ok') {
			var v = result.a;
			return $elm$core$Result$Ok(v);
		} else {
			var e = result.a;
			return $elm$core$Result$Err(
				f(e));
		}
	});
var $elm$http$Http$BadBody = function (a) {
	return {$: 'BadBody', a: a};
};
var $elm$http$Http$BadStatus = function (a) {
	return {$: 'BadStatus', a: a};
};
var $elm$http$Http$BadUrl = function (a) {
	return {$: 'BadUrl', a: a};
};
var $elm$http$Http$NetworkError = {$: 'NetworkError'};
var $elm$http$Http$Timeout = {$: 'Timeout'};
var $elm$http$Http$resolve = F2(
	function (toResult, response) {
		switch (response.$) {
			case 'BadUrl_':
				var url = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadUrl(url));
			case 'Timeout_':
				return $elm$core$Result$Err($elm$http$Http$Timeout);
			case 'NetworkError_':
				return $elm$core$Result$Err($elm$http$Http$NetworkError);
			case 'BadStatus_':
				var metadata = response.a;
				return $elm$core$Result$Err(
					$elm$http$Http$BadStatus(metadata.statusCode));
			default:
				var body = response.b;
				return A2(
					$elm$core$Result$mapError,
					$elm$http$Http$BadBody,
					toResult(body));
		}
	});
var $elm$http$Http$expectJson = F2(
	function (toMsg, decoder) {
		return A2(
			$elm$http$Http$expectStringResponse,
			toMsg,
			$elm$http$Http$resolve(
				function (string) {
					return A2(
						$elm$core$Result$mapError,
						$elm$json$Json$Decode$errorToString,
						A2($elm$json$Json$Decode$decodeString, decoder, string));
				}));
	});
var $elm$http$Http$expectString = function (toMsg) {
	return A2(
		$elm$http$Http$expectStringResponse,
		toMsg,
		$elm$http$Http$resolve($elm$core$Result$Ok));
};
var $elm$http$Http$emptyBody = _Http_emptyBody;
var $elm$http$Http$Request = function (a) {
	return {$: 'Request', a: a};
};
var $elm$http$Http$State = F2(
	function (reqs, subs) {
		return {reqs: reqs, subs: subs};
	});
var $elm$http$Http$init = $elm$core$Task$succeed(
	A2($elm$http$Http$State, $elm$core$Dict$empty, _List_Nil));
var $elm$core$Process$kill = _Scheduler_kill;
var $elm$core$Process$spawn = _Scheduler_spawn;
var $elm$http$Http$updateReqs = F3(
	function (router, cmds, reqs) {
		updateReqs:
		while (true) {
			if (!cmds.b) {
				return $elm$core$Task$succeed(reqs);
			} else {
				var cmd = cmds.a;
				var otherCmds = cmds.b;
				if (cmd.$ === 'Cancel') {
					var tracker = cmd.a;
					var _v2 = A2($elm$core$Dict$get, tracker, reqs);
					if (_v2.$ === 'Nothing') {
						var $temp$router = router,
							$temp$cmds = otherCmds,
							$temp$reqs = reqs;
						router = $temp$router;
						cmds = $temp$cmds;
						reqs = $temp$reqs;
						continue updateReqs;
					} else {
						var pid = _v2.a;
						return A2(
							$elm$core$Task$andThen,
							function (_v3) {
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A2($elm$core$Dict$remove, tracker, reqs));
							},
							$elm$core$Process$kill(pid));
					}
				} else {
					var req = cmd.a;
					return A2(
						$elm$core$Task$andThen,
						function (pid) {
							var _v4 = req.tracker;
							if (_v4.$ === 'Nothing') {
								return A3($elm$http$Http$updateReqs, router, otherCmds, reqs);
							} else {
								var tracker = _v4.a;
								return A3(
									$elm$http$Http$updateReqs,
									router,
									otherCmds,
									A3($elm$core$Dict$insert, tracker, pid, reqs));
							}
						},
						$elm$core$Process$spawn(
							A3(
								_Http_toTask,
								router,
								$elm$core$Platform$sendToApp(router),
								req)));
				}
			}
		}
	});
var $elm$http$Http$onEffects = F4(
	function (router, cmds, subs, state) {
		return A2(
			$elm$core$Task$andThen,
			function (reqs) {
				return $elm$core$Task$succeed(
					A2($elm$http$Http$State, reqs, subs));
			},
			A3($elm$http$Http$updateReqs, router, cmds, state.reqs));
	});
var $elm$core$List$maybeCons = F3(
	function (f, mx, xs) {
		var _v0 = f(mx);
		if (_v0.$ === 'Just') {
			var x = _v0.a;
			return A2($elm$core$List$cons, x, xs);
		} else {
			return xs;
		}
	});
var $elm$core$List$filterMap = F2(
	function (f, xs) {
		return A3(
			$elm$core$List$foldr,
			$elm$core$List$maybeCons(f),
			_List_Nil,
			xs);
	});
var $elm$http$Http$maybeSend = F4(
	function (router, desiredTracker, progress, _v0) {
		var actualTracker = _v0.a;
		var toMsg = _v0.b;
		return _Utils_eq(desiredTracker, actualTracker) ? $elm$core$Maybe$Just(
			A2(
				$elm$core$Platform$sendToApp,
				router,
				toMsg(progress))) : $elm$core$Maybe$Nothing;
	});
var $elm$http$Http$onSelfMsg = F3(
	function (router, _v0, state) {
		var tracker = _v0.a;
		var progress = _v0.b;
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$filterMap,
					A3($elm$http$Http$maybeSend, router, tracker, progress),
					state.subs)));
	});
var $elm$http$Http$Cancel = function (a) {
	return {$: 'Cancel', a: a};
};
var $elm$http$Http$cmdMap = F2(
	function (func, cmd) {
		if (cmd.$ === 'Cancel') {
			var tracker = cmd.a;
			return $elm$http$Http$Cancel(tracker);
		} else {
			var r = cmd.a;
			return $elm$http$Http$Request(
				{
					allowCookiesFromOtherDomains: r.allowCookiesFromOtherDomains,
					body: r.body,
					expect: A2(_Http_mapExpect, func, r.expect),
					headers: r.headers,
					method: r.method,
					timeout: r.timeout,
					tracker: r.tracker,
					url: r.url
				});
		}
	});
var $elm$http$Http$MySub = F2(
	function (a, b) {
		return {$: 'MySub', a: a, b: b};
	});
var $elm$http$Http$subMap = F2(
	function (func, _v0) {
		var tracker = _v0.a;
		var toMsg = _v0.b;
		return A2(
			$elm$http$Http$MySub,
			tracker,
			A2($elm$core$Basics$composeR, toMsg, func));
	});
_Platform_effectManagers['Http'] = _Platform_createManager($elm$http$Http$init, $elm$http$Http$onEffects, $elm$http$Http$onSelfMsg, $elm$http$Http$cmdMap, $elm$http$Http$subMap);
var $elm$http$Http$command = _Platform_leaf('Http');
var $elm$http$Http$subscription = _Platform_leaf('Http');
var $elm$http$Http$request = function (r) {
	return $elm$http$Http$command(
		$elm$http$Http$Request(
			{allowCookiesFromOtherDomains: false, body: r.body, expect: r.expect, headers: r.headers, method: r.method, timeout: r.timeout, tracker: r.tracker, url: r.url}));
};
var $elm$http$Http$get = function (r) {
	return $elm$http$Http$request(
		{body: $elm$http$Http$emptyBody, expect: r.expect, headers: _List_Nil, method: 'GET', timeout: $elm$core$Maybe$Nothing, tracker: $elm$core$Maybe$Nothing, url: r.url});
};
var $elm$browser$Browser$Dom$getViewport = _Browser_withWindow(_Browser_getViewport);
var $grotsev$elm_debouncer$Bounce$Bounce = function (a) {
	return {$: 'Bounce', a: a};
};
var $grotsev$elm_debouncer$Bounce$init = $grotsev$elm_debouncer$Bounce$Bounce(0);
var $author$project$Timeline$Models$MouseOver = function (a) {
	return {$: 'MouseOver', a: a};
};
var $author$project$Timeline$Models$Selection = function (a) {
	return {$: 'Selection', a: a};
};
var $author$project$Timeline$Models$emptySelection = $author$project$Timeline$Models$Selection($elm$core$Dict$empty);
var $enkidatron$elm_cldr$Internal$DayPeriodRule$At = F2(
	function (a, b) {
		return {$: 'At', a: a, b: b};
	});
var $enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore = F3(
	function (a, b, c) {
		return {$: 'FromBefore', a: a, b: b, c: c};
	});
var $enkidatron$elm_cldr$Generated$En$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'en',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Internal$Locale$Lang = F4(
	function (a, b, c, d) {
		return {$: 'Lang', a: a, b: b, c: c, d: d};
	});
var $enkidatron$elm_cldr$Internal$Locale$Locale = function (a) {
	return {$: 'Locale', a: a};
};
var $joneshf$elm_tagged$Tagged$Tagged = function (a) {
	return {$: 'Tagged', a: a};
};
var $cuducos$elm_format_number$FormatNumber$Locales$Min = function (a) {
	return {$: 'Min', a: a};
};
var $cuducos$elm_format_number$FormatNumber$Locales$Western = {$: 'Western'};
var $cuducos$elm_format_number$FormatNumber$Locales$base = {
	decimalSeparator: '.',
	decimals: $cuducos$elm_format_number$FormatNumber$Locales$Min(0),
	negativePrefix: '−',
	negativeSuffix: '',
	positivePrefix: '',
	positiveSuffix: '',
	system: $cuducos$elm_format_number$FormatNumber$Locales$Western,
	thousandSeparator: '',
	zeroPrefix: '',
	zeroSuffix: ''
};
var $enkidatron$elm_cldr$Internal$Locale$empty = $enkidatron$elm_cldr$Internal$Locale$Locale(
	{
		availableFormats: _List_Nil,
		currencyNumberFormat: $cuducos$elm_format_number$FormatNumber$Locales$base,
		currencySymbols: $elm$core$Dict$empty,
		dateSymbols: {full: _List_Nil, _long: _List_Nil, medium: _List_Nil, _short: _List_Nil},
		dateTimeTokens: {full: _List_Nil, _long: _List_Nil, medium: _List_Nil, _short: _List_Nil},
		dayPeriodRuleSet: _List_Nil,
		decimalNumberFormat: $cuducos$elm_format_number$FormatNumber$Locales$base,
		eraNames: {
			abbreviated: {ad: 'CE', bc: 'BCE'},
			narrow: {ad: 'CE', bc: 'BCE'},
			wide: {ad: 'CE', bc: 'BCE'}
		},
		hour12ByDefault: false,
		languageId: A4(
			$enkidatron$elm_cldr$Internal$Locale$Lang,
			$joneshf$elm_tagged$Tagged$Tagged(''),
			$elm$core$Maybe$Nothing,
			$elm$core$Maybe$Nothing,
			$elm$core$Maybe$Nothing),
		monthFormatNames: {
			abbreviated: {apr: 'M04', aug: 'M08', dec: 'M12', feb: 'M02', jan: 'M01', jul: 'M07', jun: 'M06', mar: 'M03', may: 'M05', nov: 'M11', oct: 'M10', sep: 'M09'},
			narrow: {apr: '4', aug: '8', dec: '12', feb: '2', jan: '1', jul: '7', jun: '6', mar: '3', may: '5', nov: '11', oct: '10', sep: '9'},
			wide: {apr: 'M04', aug: 'M08', dec: 'M12', feb: 'M02', jan: 'M01', jul: 'M07', jun: 'M06', mar: 'M03', may: 'M05', nov: 'M11', oct: 'M10', sep: 'M09'}
		},
		monthStandaloneNames: {
			abbreviated: {apr: 'M04', aug: 'M08', dec: 'M12', feb: 'M02', jan: 'M01', jul: 'M07', jun: 'M06', mar: 'M03', may: 'M05', nov: 'M11', oct: 'M10', sep: 'M09'},
			narrow: {apr: '4', aug: '8', dec: '12', feb: '2', jan: '1', jul: '7', jun: '6', mar: '3', may: '5', nov: '11', oct: '10', sep: '9'},
			wide: {apr: 'M04', aug: 'M08', dec: 'M12', feb: 'M02', jan: 'M01', jul: 'M07', jun: 'M06', mar: 'M03', may: 'M05', nov: 'M11', oct: 'M10', sep: 'M09'}
		},
		percentNumberFormat: $cuducos$elm_format_number$FormatNumber$Locales$base,
		periodNames: {
			abbreviated: {
				am: 'AM',
				dayPeriods: $elm$core$Dict$fromList(_List_Nil),
				pm: 'PM'
			},
			narrow: {
				am: 'AM',
				dayPeriods: $elm$core$Dict$fromList(_List_Nil),
				pm: 'PM'
			},
			wide: {
				am: 'AM',
				dayPeriods: $elm$core$Dict$fromList(_List_Nil),
				pm: 'PM'
			}
		},
		timeSymbols: {full: _List_Nil, _long: _List_Nil, medium: _List_Nil, _short: _List_Nil},
		weekdayFormatNames: {
			abbreviated: {fri: 'Fri', mon: 'Mon', sat: 'Sat', sun: 'Sun', thu: 'Thu', tue: 'Tue', wed: 'Wed'},
			narrow: {fri: 'F', mon: 'M', sat: 'S', sun: 'S', thu: 'T', tue: 'T', wed: 'W'},
			wide: {fri: 'Fri', mon: 'Mon', sat: 'Sat', sun: 'Sun', thu: 'Thu', tue: 'Tue', wed: 'Wed'}
		},
		weekdayStandaloneNames: {
			abbreviated: {fri: 'Fri', mon: 'Mon', sat: 'Sat', sun: 'Sun', thu: 'Thu', tue: 'Tue', wed: 'Wed'},
			narrow: {fri: 'F', mon: 'M', sat: 'S', sun: 'S', thu: 'T', tue: 'T', wed: 'W'},
			wide: {fri: 'Fri', mon: 'Mon', sat: 'Sat', sun: 'Sun', thu: 'Thu', tue: 'Tue', wed: 'Wed'}
		}
	});
var $elm$core$Maybe$andThen = F2(
	function (callback, maybeValue) {
		if (maybeValue.$ === 'Just') {
			var value = maybeValue.a;
			return callback(value);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $enkidatron$elm_cldr$Internal$LanguageInfo$expand = function (info) {
	return {
		availableFormats: info.availableFormats,
		currencyNumberFormat: info.currencyNumberFormat,
		currencySymbols: info.currencySymbols,
		datePatterns: info.datePatterns,
		dateTimePatterns: info.dateTimePatterns,
		decimalNumberFormat: info.decimalNumberFormat,
		eraNames: info.eraNames,
		language: info.language,
		monthFormatNames: info.monthFormatNames,
		monthStandaloneNames: A2($elm$core$Maybe$withDefault, info.monthFormatNames, info.monthStandaloneNames),
		percentNumberFormat: info.percentNumberFormat,
		periodNames: info.periodNames,
		script: info.script,
		territory: info.territory,
		timePatterns: info.timePatterns,
		timeSkeletons: info.timeSkeletons,
		variant: info.variant,
		weekdayFormatNames: info.weekdayFormatNames,
		weekdayStandaloneNames: A2($elm$core$Maybe$withDefault, info.weekdayFormatNames, info.weekdayStandaloneNames)
	};
};
var $elm$core$Maybe$map = F2(
	function (f, maybe) {
		if (maybe.$ === 'Just') {
			var value = maybe.a;
			return $elm$core$Maybe$Just(
				f(value));
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $enkidatron$elm_cldr$Internal$LanguageInfo$Compact = function (language) {
	return function (script) {
		return function (territory) {
			return function (variant) {
				return function (periodNames) {
					return function (datePatterns) {
						return function (monthFormatNames) {
							return function (monthStandaloneNames) {
								return function (weekdayFormatNames) {
									return function (weekdayStandaloneNames) {
										return function (eraNames) {
											return function (timePatterns) {
												return function (dateTimePatterns) {
													return function (availableFormats) {
														return function (timeSkeletons) {
															return function (decimalNumberFormat) {
																return function (currencyNumberFormat) {
																	return function (percentNumberFormat) {
																		return function (currencySymbols) {
																			return {availableFormats: availableFormats, currencyNumberFormat: currencyNumberFormat, currencySymbols: currencySymbols, datePatterns: datePatterns, dateTimePatterns: dateTimePatterns, decimalNumberFormat: decimalNumberFormat, eraNames: eraNames, language: language, monthFormatNames: monthFormatNames, monthStandaloneNames: monthStandaloneNames, percentNumberFormat: percentNumberFormat, periodNames: periodNames, script: script, territory: territory, timePatterns: timePatterns, timeSkeletons: timeSkeletons, variant: variant, weekdayFormatNames: weekdayFormatNames, weekdayStandaloneNames: weekdayStandaloneNames};
																		};
																	};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $elm$parser$Parser$ExpectingEnd = {$: 'ExpectingEnd'};
var $elm$parser$Parser$Advanced$Bad = F2(
	function (a, b) {
		return {$: 'Bad', a: a, b: b};
	});
var $elm$parser$Parser$Advanced$Good = F3(
	function (a, b, c) {
		return {$: 'Good', a: a, b: b, c: c};
	});
var $elm$parser$Parser$Advanced$Parser = function (a) {
	return {$: 'Parser', a: a};
};
var $elm$parser$Parser$Advanced$AddRight = F2(
	function (a, b) {
		return {$: 'AddRight', a: a, b: b};
	});
var $elm$parser$Parser$Advanced$DeadEnd = F4(
	function (row, col, problem, contextStack) {
		return {col: col, contextStack: contextStack, problem: problem, row: row};
	});
var $elm$parser$Parser$Advanced$Empty = {$: 'Empty'};
var $elm$parser$Parser$Advanced$fromState = F2(
	function (s, x) {
		return A2(
			$elm$parser$Parser$Advanced$AddRight,
			$elm$parser$Parser$Advanced$Empty,
			A4($elm$parser$Parser$Advanced$DeadEnd, s.row, s.col, x, s.context));
	});
var $elm$parser$Parser$Advanced$end = function (x) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			return _Utils_eq(
				$elm$core$String$length(s.src),
				s.offset) ? A3($elm$parser$Parser$Advanced$Good, false, _Utils_Tuple0, s) : A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, x));
		});
};
var $elm$parser$Parser$end = $elm$parser$Parser$Advanced$end($elm$parser$Parser$ExpectingEnd);
var $enkidatron$elm_cldr$Internal$Structures$EraNames = F2(
	function (bc, ad) {
		return {ad: ad, bc: bc};
	});
var $elm$core$Basics$always = F2(
	function (a, _v0) {
		return a;
	});
var $elm$parser$Parser$Advanced$map2 = F3(
	function (func, _v0, _v1) {
		var parseA = _v0.a;
		var parseB = _v1.a;
		return $elm$parser$Parser$Advanced$Parser(
			function (s0) {
				var _v2 = parseA(s0);
				if (_v2.$ === 'Bad') {
					var p = _v2.a;
					var x = _v2.b;
					return A2($elm$parser$Parser$Advanced$Bad, p, x);
				} else {
					var p1 = _v2.a;
					var a = _v2.b;
					var s1 = _v2.c;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var p2 = _v3.a;
						var x = _v3.b;
						return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
					} else {
						var p2 = _v3.a;
						var b = _v3.b;
						var s2 = _v3.c;
						return A3(
							$elm$parser$Parser$Advanced$Good,
							p1 || p2,
							A2(func, a, b),
							s2);
					}
				}
			});
	});
var $elm$parser$Parser$Advanced$ignorer = F2(
	function (keepParser, ignoreParser) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$always, keepParser, ignoreParser);
	});
var $elm$parser$Parser$ignorer = $elm$parser$Parser$Advanced$ignorer;
var $elm$parser$Parser$Advanced$keeper = F2(
	function (parseFunc, parseArg) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$core$Basics$apL, parseFunc, parseArg);
	});
var $elm$parser$Parser$keeper = $elm$parser$Parser$Advanced$keeper;
var $elm$parser$Parser$ExpectingSymbol = function (a) {
	return {$: 'ExpectingSymbol', a: a};
};
var $elm$parser$Parser$Advanced$Token = F2(
	function (a, b) {
		return {$: 'Token', a: a, b: b};
	});
var $elm$parser$Parser$Advanced$isSubString = _Parser_isSubString;
var $elm$core$Basics$negate = function (n) {
	return -n;
};
var $elm$core$Basics$not = _Basics_not;
var $elm$parser$Parser$Advanced$token = function (_v0) {
	var str = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(str);
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			var _v1 = A5($elm$parser$Parser$Advanced$isSubString, str, s.offset, s.row, s.col, s.src);
			var newOffset = _v1.a;
			var newRow = _v1.b;
			var newCol = _v1.c;
			return _Utils_eq(newOffset, -1) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
				$elm$parser$Parser$Advanced$Good,
				progress,
				_Utils_Tuple0,
				{col: newCol, context: s.context, indent: s.indent, offset: newOffset, row: newRow, src: s.src});
		});
};
var $elm$parser$Parser$Advanced$symbol = $elm$parser$Parser$Advanced$token;
var $elm$parser$Parser$symbol = function (str) {
	return $elm$parser$Parser$Advanced$symbol(
		A2(
			$elm$parser$Parser$Advanced$Token,
			str,
			$elm$parser$Parser$ExpectingSymbol(str)));
};
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe = $elm$parser$Parser$symbol('|');
var $elm$parser$Parser$Advanced$isSubChar = _Parser_isSubChar;
var $elm$parser$Parser$Advanced$chompWhileHelp = F5(
	function (isGood, offset, row, col, s0) {
		chompWhileHelp:
		while (true) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, s0.src);
			if (_Utils_eq(newOffset, -1)) {
				return A3(
					$elm$parser$Parser$Advanced$Good,
					_Utils_cmp(s0.offset, offset) < 0,
					_Utils_Tuple0,
					{col: col, context: s0.context, indent: s0.indent, offset: offset, row: row, src: s0.src});
			} else {
				if (_Utils_eq(newOffset, -2)) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = newOffset,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$s0 = s0;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					s0 = $temp$s0;
					continue chompWhileHelp;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$chompWhile = function (isGood) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			return A5($elm$parser$Parser$Advanced$chompWhileHelp, isGood, s.offset, s.row, s.col, s);
		});
};
var $elm$parser$Parser$chompWhile = $elm$parser$Parser$Advanced$chompWhile;
var $elm$parser$Parser$Advanced$mapChompedString = F2(
	function (func, _v0) {
		var parse = _v0.a;
		return $elm$parser$Parser$Advanced$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Bad') {
					var p = _v1.a;
					var x = _v1.b;
					return A2($elm$parser$Parser$Advanced$Bad, p, x);
				} else {
					var p = _v1.a;
					var a = _v1.b;
					var s1 = _v1.c;
					return A3(
						$elm$parser$Parser$Advanced$Good,
						p,
						A2(
							func,
							A3($elm$core$String$slice, s0.offset, s1.offset, s0.src),
							a),
						s1);
				}
			});
	});
var $elm$parser$Parser$Advanced$getChompedString = function (parser) {
	return A2($elm$parser$Parser$Advanced$mapChompedString, $elm$core$Basics$always, parser);
};
var $elm$parser$Parser$getChompedString = $elm$parser$Parser$Advanced$getChompedString;
var $elm$core$Basics$neq = _Utils_notEqual;
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString = $elm$parser$Parser$getChompedString(
	$elm$parser$Parser$chompWhile(
		function (_char) {
			return !_Utils_eq(
				_char,
				_Utils_chr('|'));
		}));
var $elm$parser$Parser$Advanced$succeed = function (a) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			return A3($elm$parser$Parser$Advanced$Good, false, a, s);
		});
};
var $elm$parser$Parser$succeed = $elm$parser$Parser$Advanced$succeed;
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$eraNamesParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Structures$EraNames),
		A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
	A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe));
var $cuducos$elm_format_number$FormatNumber$Locales$Locale = function (decimals) {
	return function (system) {
		return function (thousandSeparator) {
			return function (decimalSeparator) {
				return function (negativePrefix) {
					return function (negativeSuffix) {
						return function (positivePrefix) {
							return function (positiveSuffix) {
								return function (zeroPrefix) {
									return function (zeroSuffix) {
										return {decimalSeparator: decimalSeparator, decimals: decimals, negativePrefix: negativePrefix, negativeSuffix: negativeSuffix, positivePrefix: positivePrefix, positiveSuffix: positiveSuffix, system: system, thousandSeparator: thousandSeparator, zeroPrefix: zeroPrefix, zeroSuffix: zeroSuffix};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $cuducos$elm_format_number$FormatNumber$Locales$Exact = function (a) {
	return {$: 'Exact', a: a};
};
var $cuducos$elm_format_number$FormatNumber$Locales$Max = function (a) {
	return {$: 'Max', a: a};
};
var $elm$parser$Parser$Advanced$andThen = F2(
	function (callback, _v0) {
		var parseA = _v0.a;
		return $elm$parser$Parser$Advanced$Parser(
			function (s0) {
				var _v1 = parseA(s0);
				if (_v1.$ === 'Bad') {
					var p = _v1.a;
					var x = _v1.b;
					return A2($elm$parser$Parser$Advanced$Bad, p, x);
				} else {
					var p1 = _v1.a;
					var a = _v1.b;
					var s1 = _v1.c;
					var _v2 = callback(a);
					var parseB = _v2.a;
					var _v3 = parseB(s1);
					if (_v3.$ === 'Bad') {
						var p2 = _v3.a;
						var x = _v3.b;
						return A2($elm$parser$Parser$Advanced$Bad, p1 || p2, x);
					} else {
						var p2 = _v3.a;
						var b = _v3.b;
						var s2 = _v3.c;
						return A3($elm$parser$Parser$Advanced$Good, p1 || p2, b, s2);
					}
				}
			});
	});
var $elm$parser$Parser$andThen = $elm$parser$Parser$Advanced$andThen;
var $elm$parser$Parser$UnexpectedChar = {$: 'UnexpectedChar'};
var $elm$parser$Parser$Advanced$chompIf = F2(
	function (isGood, expecting) {
		return $elm$parser$Parser$Advanced$Parser(
			function (s) {
				var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, s.offset, s.src);
				return _Utils_eq(newOffset, -1) ? A2(
					$elm$parser$Parser$Advanced$Bad,
					false,
					A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : (_Utils_eq(newOffset, -2) ? A3(
					$elm$parser$Parser$Advanced$Good,
					true,
					_Utils_Tuple0,
					{col: 1, context: s.context, indent: s.indent, offset: s.offset + 1, row: s.row + 1, src: s.src}) : A3(
					$elm$parser$Parser$Advanced$Good,
					true,
					_Utils_Tuple0,
					{col: s.col + 1, context: s.context, indent: s.indent, offset: newOffset, row: s.row, src: s.src}));
			});
	});
var $elm$parser$Parser$chompIf = function (isGood) {
	return A2($elm$parser$Parser$Advanced$chompIf, isGood, $elm$parser$Parser$UnexpectedChar);
};
var $elm$parser$Parser$ExpectingInt = {$: 'ExpectingInt'};
var $elm$parser$Parser$Advanced$consumeBase = _Parser_consumeBase;
var $elm$parser$Parser$Advanced$consumeBase16 = _Parser_consumeBase16;
var $elm$parser$Parser$Advanced$bumpOffset = F2(
	function (newOffset, s) {
		return {col: s.col + (newOffset - s.offset), context: s.context, indent: s.indent, offset: newOffset, row: s.row, src: s.src};
	});
var $elm$parser$Parser$Advanced$chompBase10 = _Parser_chompBase10;
var $elm$parser$Parser$Advanced$isAsciiCode = _Parser_isAsciiCode;
var $elm$parser$Parser$Advanced$consumeExp = F2(
	function (offset, src) {
		if (A3($elm$parser$Parser$Advanced$isAsciiCode, 101, offset, src) || A3($elm$parser$Parser$Advanced$isAsciiCode, 69, offset, src)) {
			var eOffset = offset + 1;
			var expOffset = (A3($elm$parser$Parser$Advanced$isAsciiCode, 43, eOffset, src) || A3($elm$parser$Parser$Advanced$isAsciiCode, 45, eOffset, src)) ? (eOffset + 1) : eOffset;
			var newOffset = A2($elm$parser$Parser$Advanced$chompBase10, expOffset, src);
			return _Utils_eq(expOffset, newOffset) ? (-newOffset) : newOffset;
		} else {
			return offset;
		}
	});
var $elm$parser$Parser$Advanced$consumeDotAndExp = F2(
	function (offset, src) {
		return A3($elm$parser$Parser$Advanced$isAsciiCode, 46, offset, src) ? A2(
			$elm$parser$Parser$Advanced$consumeExp,
			A2($elm$parser$Parser$Advanced$chompBase10, offset + 1, src),
			src) : A2($elm$parser$Parser$Advanced$consumeExp, offset, src);
	});
var $elm$parser$Parser$Advanced$finalizeInt = F5(
	function (invalid, handler, startOffset, _v0, s) {
		var endOffset = _v0.a;
		var n = _v0.b;
		if (handler.$ === 'Err') {
			var x = handler.a;
			return A2(
				$elm$parser$Parser$Advanced$Bad,
				true,
				A2($elm$parser$Parser$Advanced$fromState, s, x));
		} else {
			var toValue = handler.a;
			return _Utils_eq(startOffset, endOffset) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				_Utils_cmp(s.offset, startOffset) < 0,
				A2($elm$parser$Parser$Advanced$fromState, s, invalid)) : A3(
				$elm$parser$Parser$Advanced$Good,
				true,
				toValue(n),
				A2($elm$parser$Parser$Advanced$bumpOffset, endOffset, s));
		}
	});
var $elm$parser$Parser$Advanced$fromInfo = F4(
	function (row, col, x, context) {
		return A2(
			$elm$parser$Parser$Advanced$AddRight,
			$elm$parser$Parser$Advanced$Empty,
			A4($elm$parser$Parser$Advanced$DeadEnd, row, col, x, context));
	});
var $elm$core$String$toFloat = _String_toFloat;
var $elm$parser$Parser$Advanced$finalizeFloat = F6(
	function (invalid, expecting, intSettings, floatSettings, intPair, s) {
		var intOffset = intPair.a;
		var floatOffset = A2($elm$parser$Parser$Advanced$consumeDotAndExp, intOffset, s.src);
		if (floatOffset < 0) {
			return A2(
				$elm$parser$Parser$Advanced$Bad,
				true,
				A4($elm$parser$Parser$Advanced$fromInfo, s.row, s.col - (floatOffset + s.offset), invalid, s.context));
		} else {
			if (_Utils_eq(s.offset, floatOffset)) {
				return A2(
					$elm$parser$Parser$Advanced$Bad,
					false,
					A2($elm$parser$Parser$Advanced$fromState, s, expecting));
			} else {
				if (_Utils_eq(intOffset, floatOffset)) {
					return A5($elm$parser$Parser$Advanced$finalizeInt, invalid, intSettings, s.offset, intPair, s);
				} else {
					if (floatSettings.$ === 'Err') {
						var x = floatSettings.a;
						return A2(
							$elm$parser$Parser$Advanced$Bad,
							true,
							A2($elm$parser$Parser$Advanced$fromState, s, invalid));
					} else {
						var toValue = floatSettings.a;
						var _v1 = $elm$core$String$toFloat(
							A3($elm$core$String$slice, s.offset, floatOffset, s.src));
						if (_v1.$ === 'Nothing') {
							return A2(
								$elm$parser$Parser$Advanced$Bad,
								true,
								A2($elm$parser$Parser$Advanced$fromState, s, invalid));
						} else {
							var n = _v1.a;
							return A3(
								$elm$parser$Parser$Advanced$Good,
								true,
								toValue(n),
								A2($elm$parser$Parser$Advanced$bumpOffset, floatOffset, s));
						}
					}
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$number = function (c) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			if (A3($elm$parser$Parser$Advanced$isAsciiCode, 48, s.offset, s.src)) {
				var zeroOffset = s.offset + 1;
				var baseOffset = zeroOffset + 1;
				return A3($elm$parser$Parser$Advanced$isAsciiCode, 120, zeroOffset, s.src) ? A5(
					$elm$parser$Parser$Advanced$finalizeInt,
					c.invalid,
					c.hex,
					baseOffset,
					A2($elm$parser$Parser$Advanced$consumeBase16, baseOffset, s.src),
					s) : (A3($elm$parser$Parser$Advanced$isAsciiCode, 111, zeroOffset, s.src) ? A5(
					$elm$parser$Parser$Advanced$finalizeInt,
					c.invalid,
					c.octal,
					baseOffset,
					A3($elm$parser$Parser$Advanced$consumeBase, 8, baseOffset, s.src),
					s) : (A3($elm$parser$Parser$Advanced$isAsciiCode, 98, zeroOffset, s.src) ? A5(
					$elm$parser$Parser$Advanced$finalizeInt,
					c.invalid,
					c.binary,
					baseOffset,
					A3($elm$parser$Parser$Advanced$consumeBase, 2, baseOffset, s.src),
					s) : A6(
					$elm$parser$Parser$Advanced$finalizeFloat,
					c.invalid,
					c.expecting,
					c._int,
					c._float,
					_Utils_Tuple2(zeroOffset, 0),
					s)));
			} else {
				return A6(
					$elm$parser$Parser$Advanced$finalizeFloat,
					c.invalid,
					c.expecting,
					c._int,
					c._float,
					A3($elm$parser$Parser$Advanced$consumeBase, 10, s.offset, s.src),
					s);
			}
		});
};
var $elm$parser$Parser$Advanced$int = F2(
	function (expecting, invalid) {
		return $elm$parser$Parser$Advanced$number(
			{
				binary: $elm$core$Result$Err(invalid),
				expecting: expecting,
				_float: $elm$core$Result$Err(invalid),
				hex: $elm$core$Result$Err(invalid),
				_int: $elm$core$Result$Ok($elm$core$Basics$identity),
				invalid: invalid,
				octal: $elm$core$Result$Err(invalid)
			});
	});
var $elm$parser$Parser$int = A2($elm$parser$Parser$Advanced$int, $elm$parser$Parser$ExpectingInt, $elm$parser$Parser$ExpectingInt);
var $elm$parser$Parser$Advanced$map = F2(
	function (func, _v0) {
		var parse = _v0.a;
		return $elm$parser$Parser$Advanced$Parser(
			function (s0) {
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var p = _v1.a;
					var a = _v1.b;
					var s1 = _v1.c;
					return A3(
						$elm$parser$Parser$Advanced$Good,
						p,
						func(a),
						s1);
				} else {
					var p = _v1.a;
					var x = _v1.b;
					return A2($elm$parser$Parser$Advanced$Bad, p, x);
				}
			});
	});
var $elm$parser$Parser$map = $elm$parser$Parser$Advanced$map;
var $elm$core$List$any = F2(
	function (isOkay, list) {
		any:
		while (true) {
			if (!list.b) {
				return false;
			} else {
				var x = list.a;
				var xs = list.b;
				if (isOkay(x)) {
					return true;
				} else {
					var $temp$isOkay = isOkay,
						$temp$list = xs;
					isOkay = $temp$isOkay;
					list = $temp$list;
					continue any;
				}
			}
		}
	});
var $elm$core$List$member = F2(
	function (x, xs) {
		return A2(
			$elm$core$List$any,
			function (a) {
				return _Utils_eq(a, x);
			},
			xs);
	});
var $elm$parser$Parser$Problem = function (a) {
	return {$: 'Problem', a: a};
};
var $elm$parser$Parser$Advanced$problem = function (x) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			return A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, x));
		});
};
var $elm$parser$Parser$problem = function (msg) {
	return $elm$parser$Parser$Advanced$problem(
		$elm$parser$Parser$Problem(msg));
};
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberDecimalsParser = A2(
	$elm$parser$Parser$andThen,
	function (tag) {
		switch (tag) {
			case 'N':
				return A2($elm$parser$Parser$map, $cuducos$elm_format_number$FormatNumber$Locales$Min, $elm$parser$Parser$int);
			case 'X':
				return A2($elm$parser$Parser$map, $cuducos$elm_format_number$FormatNumber$Locales$Max, $elm$parser$Parser$int);
			case 'E':
				return A2($elm$parser$Parser$map, $cuducos$elm_format_number$FormatNumber$Locales$Exact, $elm$parser$Parser$int);
			default:
				var other = tag;
				return $elm$parser$Parser$problem('Error while parsing a FormatNumber.Locales.Decimals, found: ' + other);
		}
	},
	$elm$parser$Parser$getChompedString(
		$elm$parser$Parser$chompIf(
			function (_char) {
				return A2(
					$elm$core$List$member,
					_char,
					_List_fromArray(
						[
							_Utils_chr('N'),
							_Utils_chr('X'),
							_Utils_chr('E')
						]));
			})));
var $cuducos$elm_format_number$FormatNumber$Locales$Indian = {$: 'Indian'};
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberSystemParser = A2(
	$elm$parser$Parser$andThen,
	function (tag) {
		switch (tag) {
			case 'W':
				return $elm$parser$Parser$succeed($cuducos$elm_format_number$FormatNumber$Locales$Western);
			case 'I':
				return $elm$parser$Parser$succeed($cuducos$elm_format_number$FormatNumber$Locales$Indian);
			default:
				var other = tag;
				return $elm$parser$Parser$problem('Error while parsing a FormatNumber.Locales.System, found: ' + other);
		}
	},
	$elm$parser$Parser$getChompedString(
		$elm$parser$Parser$chompIf(
			function (_char) {
				return A2(
					$elm$core$List$member,
					_char,
					_List_fromArray(
						[
							_Utils_chr('W'),
							_Utils_chr('I')
						]));
			})));
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberLocaleParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$keeper,
										$elm$parser$Parser$succeed($cuducos$elm_format_number$FormatNumber$Locales$Locale),
										$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberDecimalsParser),
									$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberSystemParser),
								A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
							A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
						A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
					A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
				A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
			A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
		A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
	A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe));
var $elm$parser$Parser$Done = function (a) {
	return {$: 'Done', a: a};
};
var $elm$parser$Parser$Loop = function (a) {
	return {$: 'Loop', a: a};
};
var $elm$parser$Parser$Advanced$loopHelp = F4(
	function (p, state, callback, s0) {
		loopHelp:
		while (true) {
			var _v0 = callback(state);
			var parse = _v0.a;
			var _v1 = parse(s0);
			if (_v1.$ === 'Good') {
				var p1 = _v1.a;
				var step = _v1.b;
				var s1 = _v1.c;
				if (step.$ === 'Loop') {
					var newState = step.a;
					var $temp$p = p || p1,
						$temp$state = newState,
						$temp$callback = callback,
						$temp$s0 = s1;
					p = $temp$p;
					state = $temp$state;
					callback = $temp$callback;
					s0 = $temp$s0;
					continue loopHelp;
				} else {
					var result = step.a;
					return A3($elm$parser$Parser$Advanced$Good, p || p1, result, s1);
				}
			} else {
				var p1 = _v1.a;
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, p || p1, x);
			}
		}
	});
var $elm$parser$Parser$Advanced$loop = F2(
	function (state, callback) {
		return $elm$parser$Parser$Advanced$Parser(
			function (s) {
				return A4($elm$parser$Parser$Advanced$loopHelp, false, state, callback, s);
			});
	});
var $elm$parser$Parser$Advanced$Done = function (a) {
	return {$: 'Done', a: a};
};
var $elm$parser$Parser$Advanced$Loop = function (a) {
	return {$: 'Loop', a: a};
};
var $elm$parser$Parser$toAdvancedStep = function (step) {
	if (step.$ === 'Loop') {
		var s = step.a;
		return $elm$parser$Parser$Advanced$Loop(s);
	} else {
		var a = step.a;
		return $elm$parser$Parser$Advanced$Done(a);
	}
};
var $elm$parser$Parser$loop = F2(
	function (state, callback) {
		return A2(
			$elm$parser$Parser$Advanced$loop,
			state,
			function (s) {
				return A2(
					$elm$parser$Parser$map,
					$elm$parser$Parser$toAdvancedStep,
					callback(s));
			});
	});
var $elm$core$Tuple$pair = F2(
	function (a, b) {
		return _Utils_Tuple2(a, b);
	});
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$listOfPairOfStringParser = A2(
	$elm$parser$Parser$andThen,
	function (count) {
		return A2(
			$elm$parser$Parser$loop,
			_Utils_Tuple2(count, _List_Nil),
			function (_v0) {
				var x = _v0.a;
				var revItems = _v0.b;
				return (x > 0) ? A2(
					$elm$parser$Parser$map,
					function (item) {
						return $elm$parser$Parser$Loop(
							_Utils_Tuple2(
								x - 1,
								A2($elm$core$List$cons, item, revItems)));
					},
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							$elm$parser$Parser$succeed($elm$core$Tuple$pair),
							A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
						A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe))) : $elm$parser$Parser$succeed(
					$elm$parser$Parser$Done(
						$elm$core$List$reverse(revItems)));
			});
	},
	A2($elm$parser$Parser$ignorer, $elm$parser$Parser$int, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe));
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$maybeParser = function (innerParser) {
	return A2(
		$elm$parser$Parser$andThen,
		function (x) {
			switch (x) {
				case 0:
					return $elm$parser$Parser$succeed($elm$core$Maybe$Nothing);
				case 1:
					return A2($elm$parser$Parser$map, $elm$core$Maybe$Just, innerParser);
				default:
					return $elm$parser$Parser$problem('Unexpected number encountered while evaulating a Maybe');
			}
		},
		A2($elm$parser$Parser$ignorer, $elm$parser$Parser$int, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe));
};
var $elm_community$string_extra$String$Extra$nonEmpty = function (string) {
	return $elm$core$String$isEmpty(string) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(string);
};
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$maybeStringParser = A2($elm$parser$Parser$map, $elm_community$string_extra$String$Extra$nonEmpty, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString);
var $enkidatron$elm_cldr$Internal$Structures$MonthNames = function (jan) {
	return function (feb) {
		return function (mar) {
			return function (apr) {
				return function (may) {
					return function (jun) {
						return function (jul) {
							return function (aug) {
								return function (sep) {
									return function (oct) {
										return function (nov) {
											return function (dec) {
												return {apr: apr, aug: aug, dec: dec, feb: feb, jan: jan, jul: jul, jun: jun, mar: mar, may: may, nov: nov, oct: oct, sep: sep};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$monthNamesParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$keeper,
										A2(
											$elm$parser$Parser$keeper,
											A2(
												$elm$parser$Parser$keeper,
												$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Structures$MonthNames),
												A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
											A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
										A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
									A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
								A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
							A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
						A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
					A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
				A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
			A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
		A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
	A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe));
var $enkidatron$elm_cldr$Internal$Structures$Pattern3 = F3(
	function (abbreviated, wide, narrow) {
		return {abbreviated: abbreviated, narrow: narrow, wide: wide};
	});
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pattern3Parser = function (innerParser) {
	return A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Structures$Pattern3),
				innerParser),
			innerParser),
		innerParser);
};
var $enkidatron$elm_cldr$Internal$Structures$Patterns = F4(
	function (_short, medium, _long, full) {
		return {full: full, _long: _long, medium: medium, _short: _short};
	});
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$patternsParser = function (innerParser) {
	return A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Structures$Patterns),
					innerParser),
				innerParser),
			innerParser),
		innerParser);
};
var $enkidatron$elm_cldr$Internal$Structures$PeriodNames = F3(
	function (am, pm, dayPeriods) {
		return {am: am, dayPeriods: dayPeriods, pm: pm};
	});
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$dayPeriodsParser = A2($elm$parser$Parser$map, $elm$core$Dict$fromList, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$listOfPairOfStringParser);
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$periodNamesParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Structures$PeriodNames),
			A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
		A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
	$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$dayPeriodsParser);
var $enkidatron$elm_cldr$Internal$Structures$WeekdayNames = F7(
	function (sun, mon, tue, wed, thu, fri, sat) {
		return {fri: fri, mon: mon, sat: sat, sun: sun, thu: thu, tue: tue, wed: wed};
	});
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$weekdayNamesParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Structures$WeekdayNames),
							A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
						A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
					A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
				A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
			A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
		A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
	A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe));
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$parser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$keeper,
										A2(
											$elm$parser$Parser$keeper,
											A2(
												$elm$parser$Parser$keeper,
												A2(
													$elm$parser$Parser$keeper,
													A2(
														$elm$parser$Parser$keeper,
														A2(
															$elm$parser$Parser$keeper,
															A2(
																$elm$parser$Parser$keeper,
																A2(
																	$elm$parser$Parser$keeper,
																	A2(
																		$elm$parser$Parser$keeper,
																		A2(
																			$elm$parser$Parser$keeper,
																			$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$LanguageInfo$Compact),
																			A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
																		A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$maybeStringParser, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
																	A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$maybeStringParser, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
																A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$maybeStringParser, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe)),
															$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pattern3Parser($enkidatron$elm_cldr$Internal$LanguageInfo$Parse$periodNamesParser)),
														$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$patternsParser(
															A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe))),
													$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pattern3Parser($enkidatron$elm_cldr$Internal$LanguageInfo$Parse$monthNamesParser)),
												$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$maybeParser(
													$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pattern3Parser($enkidatron$elm_cldr$Internal$LanguageInfo$Parse$monthNamesParser))),
											$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pattern3Parser($enkidatron$elm_cldr$Internal$LanguageInfo$Parse$weekdayNamesParser)),
										$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$maybeParser(
											$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pattern3Parser($enkidatron$elm_cldr$Internal$LanguageInfo$Parse$weekdayNamesParser))),
									$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pattern3Parser($enkidatron$elm_cldr$Internal$LanguageInfo$Parse$eraNamesParser)),
								$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$patternsParser(
									A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe))),
							$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$patternsParser(
								A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe))),
						$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$listOfPairOfStringParser),
					$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$patternsParser(
						A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipeDelimitedString, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$pipe))),
				$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberLocaleParser),
			$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberLocaleParser),
		$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$formatNumberLocaleParser),
	A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$listOfPairOfStringParser, $elm$parser$Parser$end));
var $elm$parser$Parser$DeadEnd = F3(
	function (row, col, problem) {
		return {col: col, problem: problem, row: row};
	});
var $elm$parser$Parser$problemToDeadEnd = function (p) {
	return A3($elm$parser$Parser$DeadEnd, p.row, p.col, p.problem);
};
var $elm$parser$Parser$Advanced$bagToList = F2(
	function (bag, list) {
		bagToList:
		while (true) {
			switch (bag.$) {
				case 'Empty':
					return list;
				case 'AddRight':
					var bag1 = bag.a;
					var x = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$core$List$cons, x, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
				default:
					var bag1 = bag.a;
					var bag2 = bag.b;
					var $temp$bag = bag1,
						$temp$list = A2($elm$parser$Parser$Advanced$bagToList, bag2, list);
					bag = $temp$bag;
					list = $temp$list;
					continue bagToList;
			}
		}
	});
var $elm$parser$Parser$Advanced$run = F2(
	function (_v0, src) {
		var parse = _v0.a;
		var _v1 = parse(
			{col: 1, context: _List_Nil, indent: 1, offset: 0, row: 1, src: src});
		if (_v1.$ === 'Good') {
			var value = _v1.b;
			return $elm$core$Result$Ok(value);
		} else {
			var bag = _v1.b;
			return $elm$core$Result$Err(
				A2($elm$parser$Parser$Advanced$bagToList, bag, _List_Nil));
		}
	});
var $elm$parser$Parser$run = F2(
	function (parser, source) {
		var _v0 = A2($elm$parser$Parser$Advanced$run, parser, source);
		if (_v0.$ === 'Ok') {
			var a = _v0.a;
			return $elm$core$Result$Ok(a);
		} else {
			var problems = _v0.a;
			return $elm$core$Result$Err(
				A2($elm$core$List$map, $elm$parser$Parser$problemToDeadEnd, problems));
		}
	});
var $elm$core$Result$toMaybe = function (result) {
	if (result.$ === 'Ok') {
		var v = result.a;
		return $elm$core$Maybe$Just(v);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$parse = function (words) {
	return A2(
		$elm$core$Maybe$map,
		$enkidatron$elm_cldr$Internal$LanguageInfo$expand,
		$elm$core$Result$toMaybe(
			A2($elm$parser$Parser$run, $enkidatron$elm_cldr$Internal$LanguageInfo$Parse$parser, words)));
};
var $enkidatron$elm_cldr$Internal$Locale$Internal = function (monthFormatNames) {
	return function (monthStandaloneNames) {
		return function (weekdayFormatNames) {
			return function (weekdayStandaloneNames) {
				return function (eraNames) {
					return function (periodNames) {
						return function (dayPeriodRuleSet) {
							return function (dateSymbols) {
								return function (timeSymbols) {
									return function (dateTimeTokens) {
										return function (languageId) {
											return function (availableFormats) {
												return function (hour12ByDefault) {
													return function (decimalNumberFormat) {
														return function (currencyNumberFormat) {
															return function (percentNumberFormat) {
																return function (currencySymbols) {
																	return {availableFormats: availableFormats, currencyNumberFormat: currencyNumberFormat, currencySymbols: currencySymbols, dateSymbols: dateSymbols, dateTimeTokens: dateTimeTokens, dayPeriodRuleSet: dayPeriodRuleSet, decimalNumberFormat: decimalNumberFormat, eraNames: eraNames, hour12ByDefault: hour12ByDefault, languageId: languageId, monthFormatNames: monthFormatNames, monthStandaloneNames: monthStandaloneNames, percentNumberFormat: percentNumberFormat, periodNames: periodNames, timeSymbols: timeSymbols, weekdayFormatNames: weekdayFormatNames, weekdayStandaloneNames: weekdayStandaloneNames};
																};
															};
														};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $elm$core$Maybe$map2 = F3(
	function (func, ma, mb) {
		if (ma.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				return $elm$core$Maybe$Just(
					A2(func, a, b));
			}
		}
	});
var $elm_community$maybe_extra$Maybe$Extra$andMap = $elm$core$Maybe$map2($elm$core$Basics$apR);
var $elm_community$maybe_extra$Maybe$Extra$combineHelp = F2(
	function (list, acc) {
		combineHelp:
		while (true) {
			if (list.b) {
				var head = list.a;
				var tail = list.b;
				if (head.$ === 'Just') {
					var a = head.a;
					var $temp$list = tail,
						$temp$acc = A2($elm$core$List$cons, a, acc);
					list = $temp$list;
					acc = $temp$acc;
					continue combineHelp;
				} else {
					return $elm$core$Maybe$Nothing;
				}
			} else {
				return $elm$core$Maybe$Just(
					$elm$core$List$reverse(acc));
			}
		}
	});
var $elm_community$maybe_extra$Maybe$Extra$combine = function (list) {
	return A2($elm_community$maybe_extra$Maybe$Extra$combineHelp, list, _List_Nil);
};
var $elm$core$List$filter = F2(
	function (isGood, list) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, xs) {
					return isGood(x) ? A2($elm$core$List$cons, x, xs) : xs;
				}),
			_List_Nil,
			list);
	});
var $elm$core$String$endsWith = _String_endsWith;
var $elm$core$Dict$member = F2(
	function (key, dict) {
		var _v0 = A2($elm$core$Dict$get, key, dict);
		if (_v0.$ === 'Just') {
			return true;
		} else {
			return false;
		}
	});
var $elm$core$Set$member = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return A2($elm$core$Dict$member, key, dict);
	});
var $elm$core$Set$Set_elm_builtin = function (a) {
	return {$: 'Set_elm_builtin', a: a};
};
var $elm$core$Set$empty = $elm$core$Set$Set_elm_builtin($elm$core$Dict$empty);
var $elm$core$Set$insert = F2(
	function (key, _v0) {
		var dict = _v0.a;
		return $elm$core$Set$Set_elm_builtin(
			A3($elm$core$Dict$insert, key, _Utils_Tuple0, dict));
	});
var $elm$core$Set$fromList = function (list) {
	return A3($elm$core$List$foldl, $elm$core$Set$insert, $elm$core$Set$empty, list);
};
var $enkidatron$elm_cldr$Internal$Parse$unsupportedKeys = $elm$core$Set$fromList(
	_List_fromArray(
		['MMMMW-count-zero', 'MMMMW-count-one', 'MMMMW-count-two', 'MMMMW-count-few', 'MMMMW-count-many', 'MMMMW-count-other', 'MEd-alt-variant', 'Md-alt-variant', 'MMdd-alt-variant', 'yQ', 'yQQQ', 'yQQQQ', 'yMEd-alt-variant', 'yMd-alt-variant', 'yw-count-zero', 'yw-count-one', 'yw-count-two', 'yw-count-few', 'yw-count-many', 'yw-count-other']));
var $enkidatron$elm_cldr$Internal$Parse$isSupportedKey = function (key) {
	return (!A2($elm$core$Set$member, key, $enkidatron$elm_cldr$Internal$Parse$unsupportedKeys)) && (!A2($elm$core$String$endsWith, '-alt-ascii', key));
};
var $enkidatron$elm_cldr$Internal$Locale$DateAF = function (a) {
	return {$: 'DateAF', a: a};
};
var $enkidatron$elm_cldr$Internal$Locale$DateTimeAF = function (a) {
	return {$: 'DateTimeAF', a: a};
};
var $enkidatron$elm_cldr$Internal$Locale$TimeAF = function (a) {
	return {$: 'TimeAF', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Abbreviated = {$: 'Abbreviated'};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Day = function (a) {
	return {$: 'Day', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Era = function (a) {
	return {$: 'Era', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Month = function (a) {
	return {$: 'Month', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$MonthStandalone = function (a) {
	return {$: 'MonthStandalone', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Narrow = {$: 'Narrow'};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Weekday = function (a) {
	return {$: 'Weekday', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$WeekdayStandalone = function (a) {
	return {$: 'WeekdayStandalone', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Wide = {$: 'Wide'};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Year = function (a) {
	return {$: 'Year', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$YearOfWeek = function (a) {
	return {$: 'YearOfWeek', a: a};
};
var $elm$parser$Parser$Advanced$Append = F2(
	function (a, b) {
		return {$: 'Append', a: a, b: b};
	});
var $elm$parser$Parser$Advanced$oneOfHelp = F3(
	function (s0, bag, parsers) {
		oneOfHelp:
		while (true) {
			if (!parsers.b) {
				return A2($elm$parser$Parser$Advanced$Bad, false, bag);
			} else {
				var parse = parsers.a.a;
				var remainingParsers = parsers.b;
				var _v1 = parse(s0);
				if (_v1.$ === 'Good') {
					var step = _v1;
					return step;
				} else {
					var step = _v1;
					var p = step.a;
					var x = step.b;
					if (p) {
						return step;
					} else {
						var $temp$s0 = s0,
							$temp$bag = A2($elm$parser$Parser$Advanced$Append, bag, x),
							$temp$parsers = remainingParsers;
						s0 = $temp$s0;
						bag = $temp$bag;
						parsers = $temp$parsers;
						continue oneOfHelp;
					}
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$oneOf = function (parsers) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			return A3($elm$parser$Parser$Advanced$oneOfHelp, s, $elm$parser$Parser$Advanced$Empty, parsers);
		});
};
var $elm$parser$Parser$oneOf = $elm$parser$Parser$Advanced$oneOf;
var $enkidatron$elm_cldr$Internal$FormatSymbols$MinimumDigits = {$: 'MinimumDigits'};
var $enkidatron$elm_cldr$Internal$FormatSymbols$TwoDigit = {$: 'TwoDigit'};
var $enkidatron$elm_cldr$Internal$Parse$parseWord = F2(
	function (word, item) {
		return A2(
			$elm$parser$Parser$map,
			function (_v0) {
				return item;
			},
			$elm$parser$Parser$symbol(word));
	});
var $elm$core$Bitwise$and = _Bitwise_and;
var $elm$core$Bitwise$shiftRightBy = _Bitwise_shiftRightBy;
var $elm$core$String$repeatHelp = F3(
	function (n, chunk, result) {
		return (n <= 0) ? result : A3(
			$elm$core$String$repeatHelp,
			n >> 1,
			_Utils_ap(chunk, chunk),
			(!(n & 1)) ? result : _Utils_ap(result, chunk));
	});
var $elm$core$String$repeat = F2(
	function (n, chunk) {
		return A3($elm$core$String$repeatHelp, n, chunk, '');
	});
var $enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2 = F2(
	function (baseCharacter, toItem) {
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 2, baseCharacter),
					toItem($enkidatron$elm_cldr$Internal$FormatSymbols$TwoDigit)),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					baseCharacter,
					toItem($enkidatron$elm_cldr$Internal$FormatSymbols$MinimumDigits))
				]));
	});
var $enkidatron$elm_cldr$Internal$Parse$parseTextWidth5 = F2(
	function (baseCharacter, toItem) {
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 5, baseCharacter),
					toItem($enkidatron$elm_cldr$Internal$FormatSymbols$Narrow)),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 4, baseCharacter),
					toItem($enkidatron$elm_cldr$Internal$FormatSymbols$Wide)),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 3, baseCharacter),
					toItem($enkidatron$elm_cldr$Internal$FormatSymbols$Abbreviated)),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 2, baseCharacter),
					toItem($enkidatron$elm_cldr$Internal$FormatSymbols$Abbreviated)),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					baseCharacter,
					toItem($enkidatron$elm_cldr$Internal$FormatSymbols$Abbreviated))
				]));
	});
var $enkidatron$elm_cldr$Internal$FormatSymbols$Number = function (a) {
	return {$: 'Number', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Text = function (a) {
	return {$: 'Text', a: a};
};
var $enkidatron$elm_cldr$Internal$Parse$parseWidth5 = F2(
	function (baseCharacter, toItem) {
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 5, baseCharacter),
					toItem(
						$enkidatron$elm_cldr$Internal$FormatSymbols$Text($enkidatron$elm_cldr$Internal$FormatSymbols$Narrow))),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 4, baseCharacter),
					toItem(
						$enkidatron$elm_cldr$Internal$FormatSymbols$Text($enkidatron$elm_cldr$Internal$FormatSymbols$Wide))),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 3, baseCharacter),
					toItem(
						$enkidatron$elm_cldr$Internal$FormatSymbols$Text($enkidatron$elm_cldr$Internal$FormatSymbols$Abbreviated))),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					A2($elm$core$String$repeat, 2, baseCharacter),
					toItem(
						$enkidatron$elm_cldr$Internal$FormatSymbols$Number($enkidatron$elm_cldr$Internal$FormatSymbols$TwoDigit))),
					A2(
					$enkidatron$elm_cldr$Internal$Parse$parseWord,
					baseCharacter,
					toItem(
						$enkidatron$elm_cldr$Internal$FormatSymbols$Number($enkidatron$elm_cldr$Internal$FormatSymbols$MinimumDigits)))
				]));
	});
var $enkidatron$elm_cldr$Internal$Parse$dateSymbolParser = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($enkidatron$elm_cldr$Internal$Parse$parseTextWidth5, 'G', $enkidatron$elm_cldr$Internal$FormatSymbols$Era),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'y', $enkidatron$elm_cldr$Internal$FormatSymbols$Year),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'Y', $enkidatron$elm_cldr$Internal$FormatSymbols$YearOfWeek),
			A2($enkidatron$elm_cldr$Internal$Parse$parseWidth5, 'M', $enkidatron$elm_cldr$Internal$FormatSymbols$Month),
			A2($enkidatron$elm_cldr$Internal$Parse$parseWidth5, 'L', $enkidatron$elm_cldr$Internal$FormatSymbols$MonthStandalone),
			A2($enkidatron$elm_cldr$Internal$Parse$parseTextWidth5, 'E', $enkidatron$elm_cldr$Internal$FormatSymbols$Weekday),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'ccccc',
			$enkidatron$elm_cldr$Internal$FormatSymbols$WeekdayStandalone($enkidatron$elm_cldr$Internal$FormatSymbols$Narrow)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'cccc',
			$enkidatron$elm_cldr$Internal$FormatSymbols$WeekdayStandalone($enkidatron$elm_cldr$Internal$FormatSymbols$Wide)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'ccc',
			$enkidatron$elm_cldr$Internal$FormatSymbols$WeekdayStandalone($enkidatron$elm_cldr$Internal$FormatSymbols$Abbreviated)),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'd', $enkidatron$elm_cldr$Internal$FormatSymbols$Day)
		]));
var $enkidatron$elm_cldr$Internal$FormatSymbols$Date = function (a) {
	return {$: 'Date', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Time = function (a) {
	return {$: 'Time', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$FlexibleDayPeriod = function (a) {
	return {$: 'FlexibleDayPeriod', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$FractionalSeconds = function (a) {
	return {$: 'FractionalSeconds', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From0 = function (a) {
	return {$: 'Hour12From0', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From1 = function (a) {
	return {$: 'Hour12From1', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From0 = function (a) {
	return {$: 'Hour24From0', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From1 = function (a) {
	return {$: 'Hour24From1', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Long = {$: 'Long'};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Minute = function (a) {
	return {$: 'Minute', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Period = function (a) {
	return {$: 'Period', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Second = function (a) {
	return {$: 'Second', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Short = {$: 'Short'};
var $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGenericNonLocationFormat = function (a) {
	return {$: 'ZoneGenericNonLocationFormat', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGmtFormat = function (a) {
	return {$: 'ZoneGmtFormat', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneIso8601Basic = {$: 'ZoneIso8601Basic'};
var $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneNonLocationFormat = function (a) {
	return {$: 'ZoneNonLocationFormat', a: a};
};
var $enkidatron$elm_cldr$Internal$Parse$timeSymbolParser = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($enkidatron$elm_cldr$Internal$Parse$parseTextWidth5, 'a', $enkidatron$elm_cldr$Internal$FormatSymbols$Period),
			A2($enkidatron$elm_cldr$Internal$Parse$parseTextWidth5, 'B', $enkidatron$elm_cldr$Internal$FormatSymbols$FlexibleDayPeriod),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'h', $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From1),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'H', $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From0),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'K', $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From0),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'k', $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From1),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 'm', $enkidatron$elm_cldr$Internal$FormatSymbols$Minute),
			A2($enkidatron$elm_cldr$Internal$Parse$parseNumberWidth2, 's', $enkidatron$elm_cldr$Internal$FormatSymbols$Second),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'SSS',
			$enkidatron$elm_cldr$Internal$FormatSymbols$FractionalSeconds(3)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'SS',
			$enkidatron$elm_cldr$Internal$FormatSymbols$FractionalSeconds(2)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'S',
			$enkidatron$elm_cldr$Internal$FormatSymbols$FractionalSeconds(1)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'zzzz',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneNonLocationFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Long)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'zzz',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneNonLocationFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Short)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'zz',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneNonLocationFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Short)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'z',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneNonLocationFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Short)),
			A2($enkidatron$elm_cldr$Internal$Parse$parseWord, 'Z', $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneIso8601Basic),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'OOOO',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGmtFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Long)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'O',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGmtFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Short)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'vvvv',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGenericNonLocationFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Long)),
			A2(
			$enkidatron$elm_cldr$Internal$Parse$parseWord,
			'v',
			$enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGenericNonLocationFormat($enkidatron$elm_cldr$Internal$FormatSymbols$Short))
		]));
var $enkidatron$elm_cldr$Internal$Parse$formatSymbolParser = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($elm$parser$Parser$map, $enkidatron$elm_cldr$Internal$FormatSymbols$Date, $enkidatron$elm_cldr$Internal$Parse$dateSymbolParser),
			A2($elm$parser$Parser$map, $enkidatron$elm_cldr$Internal$FormatSymbols$Time, $enkidatron$elm_cldr$Internal$Parse$timeSymbolParser)
		]));
var $enkidatron$elm_cldr$Internal$Options$DateSet = function (a) {
	return {$: 'DateSet', a: a};
};
var $enkidatron$elm_cldr$Internal$Options$DateTimeSet = function (a) {
	return {$: 'DateTimeSet', a: a};
};
var $enkidatron$elm_cldr$Internal$Options$EmptySet = {$: 'EmptySet'};
var $enkidatron$elm_cldr$Internal$Options$TimeSet = function (a) {
	return {$: 'TimeSet', a: a};
};
var $enkidatron$elm_cldr$Internal$Options$dateSubset = function (opts) {
	return {day: opts.day, era: opts.era, month: opts.month, weekday: opts.weekday, year: opts.year};
};
var $enkidatron$elm_cldr$Internal$Options$hasDateFields = function (opts) {
	return A2(
		$elm$core$List$any,
		$elm$core$Basics$identity,
		_List_fromArray(
			[
				!_Utils_eq(opts.era, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.year, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.month, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.day, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.weekday, $elm$core$Maybe$Nothing)
			]));
};
var $enkidatron$elm_cldr$Internal$Options$hasTimeFields = function (opts) {
	return A2(
		$elm$core$List$any,
		$elm$core$Basics$identity,
		_List_fromArray(
			[
				!_Utils_eq(opts.period, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.hour, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.minute, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.second, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.fractionalSecondDigits, $elm$core$Maybe$Nothing),
				!_Utils_eq(opts.zone, $elm$core$Maybe$Nothing)
			]));
};
var $enkidatron$elm_cldr$Internal$Options$timeSubset = function (opts) {
	return {dayPeriod: opts.dayPeriod, fractionalSecondDigits: opts.fractionalSecondDigits, hour: opts.hour, hour12: opts.hour12, minute: opts.minute, period: opts.period, second: opts.second, zone: opts.zone};
};
var $enkidatron$elm_cldr$Internal$Options$shrinkOptions = function (opts) {
	var _v0 = _Utils_Tuple2(
		$enkidatron$elm_cldr$Internal$Options$hasDateFields(opts),
		$enkidatron$elm_cldr$Internal$Options$hasTimeFields(opts));
	if (_v0.a) {
		if (_v0.b) {
			return $enkidatron$elm_cldr$Internal$Options$DateTimeSet(opts);
		} else {
			return $enkidatron$elm_cldr$Internal$Options$DateSet(
				$enkidatron$elm_cldr$Internal$Options$dateSubset(opts));
		}
	} else {
		if (_v0.b) {
			return $enkidatron$elm_cldr$Internal$Options$TimeSet(
				$enkidatron$elm_cldr$Internal$Options$timeSubset(opts));
		} else {
			return $enkidatron$elm_cldr$Internal$Options$EmptySet;
		}
	}
};
var $elm$parser$Parser$Optional = {$: 'Optional'};
var $elm$parser$Parser$Advanced$revAlways = F2(
	function (_v0, b) {
		return b;
	});
var $elm$parser$Parser$Advanced$skip = F2(
	function (iParser, kParser) {
		return A3($elm$parser$Parser$Advanced$map2, $elm$parser$Parser$Advanced$revAlways, iParser, kParser);
	});
var $elm$parser$Parser$Advanced$sequenceEndForbidden = F5(
	function (ender, ws, parseItem, sep, revItems) {
		var chompRest = function (item) {
			return A5(
				$elm$parser$Parser$Advanced$sequenceEndForbidden,
				ender,
				ws,
				parseItem,
				sep,
				A2($elm$core$List$cons, item, revItems));
		};
		return A2(
			$elm$parser$Parser$Advanced$skip,
			ws,
			$elm$parser$Parser$Advanced$oneOf(
				_List_fromArray(
					[
						A2(
						$elm$parser$Parser$Advanced$skip,
						sep,
						A2(
							$elm$parser$Parser$Advanced$skip,
							ws,
							A2(
								$elm$parser$Parser$Advanced$map,
								function (item) {
									return $elm$parser$Parser$Advanced$Loop(
										A2($elm$core$List$cons, item, revItems));
								},
								parseItem))),
						A2(
						$elm$parser$Parser$Advanced$map,
						function (_v0) {
							return $elm$parser$Parser$Advanced$Done(
								$elm$core$List$reverse(revItems));
						},
						ender)
					])));
	});
var $elm$parser$Parser$Advanced$sequenceEndMandatory = F4(
	function (ws, parseItem, sep, revItems) {
		return $elm$parser$Parser$Advanced$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$Advanced$map,
					function (item) {
						return $elm$parser$Parser$Advanced$Loop(
							A2($elm$core$List$cons, item, revItems));
					},
					A2(
						$elm$parser$Parser$Advanced$ignorer,
						parseItem,
						A2(
							$elm$parser$Parser$Advanced$ignorer,
							ws,
							A2($elm$parser$Parser$Advanced$ignorer, sep, ws)))),
					A2(
					$elm$parser$Parser$Advanced$map,
					function (_v0) {
						return $elm$parser$Parser$Advanced$Done(
							$elm$core$List$reverse(revItems));
					},
					$elm$parser$Parser$Advanced$succeed(_Utils_Tuple0))
				]));
	});
var $elm$parser$Parser$Advanced$sequenceEndOptional = F5(
	function (ender, ws, parseItem, sep, revItems) {
		var parseEnd = A2(
			$elm$parser$Parser$Advanced$map,
			function (_v0) {
				return $elm$parser$Parser$Advanced$Done(
					$elm$core$List$reverse(revItems));
			},
			ender);
		return A2(
			$elm$parser$Parser$Advanced$skip,
			ws,
			$elm$parser$Parser$Advanced$oneOf(
				_List_fromArray(
					[
						A2(
						$elm$parser$Parser$Advanced$skip,
						sep,
						A2(
							$elm$parser$Parser$Advanced$skip,
							ws,
							$elm$parser$Parser$Advanced$oneOf(
								_List_fromArray(
									[
										A2(
										$elm$parser$Parser$Advanced$map,
										function (item) {
											return $elm$parser$Parser$Advanced$Loop(
												A2($elm$core$List$cons, item, revItems));
										},
										parseItem),
										parseEnd
									])))),
						parseEnd
					])));
	});
var $elm$parser$Parser$Advanced$sequenceEnd = F5(
	function (ender, ws, parseItem, sep, trailing) {
		var chompRest = function (item) {
			switch (trailing.$) {
				case 'Forbidden':
					return A2(
						$elm$parser$Parser$Advanced$loop,
						_List_fromArray(
							[item]),
						A4($elm$parser$Parser$Advanced$sequenceEndForbidden, ender, ws, parseItem, sep));
				case 'Optional':
					return A2(
						$elm$parser$Parser$Advanced$loop,
						_List_fromArray(
							[item]),
						A4($elm$parser$Parser$Advanced$sequenceEndOptional, ender, ws, parseItem, sep));
				default:
					return A2(
						$elm$parser$Parser$Advanced$ignorer,
						A2(
							$elm$parser$Parser$Advanced$skip,
							ws,
							A2(
								$elm$parser$Parser$Advanced$skip,
								sep,
								A2(
									$elm$parser$Parser$Advanced$skip,
									ws,
									A2(
										$elm$parser$Parser$Advanced$loop,
										_List_fromArray(
											[item]),
										A3($elm$parser$Parser$Advanced$sequenceEndMandatory, ws, parseItem, sep))))),
						ender);
			}
		};
		return $elm$parser$Parser$Advanced$oneOf(
			_List_fromArray(
				[
					A2($elm$parser$Parser$Advanced$andThen, chompRest, parseItem),
					A2(
					$elm$parser$Parser$Advanced$map,
					function (_v0) {
						return _List_Nil;
					},
					ender)
				]));
	});
var $elm$parser$Parser$Advanced$sequence = function (i) {
	return A2(
		$elm$parser$Parser$Advanced$skip,
		$elm$parser$Parser$Advanced$token(i.start),
		A2(
			$elm$parser$Parser$Advanced$skip,
			i.spaces,
			A5(
				$elm$parser$Parser$Advanced$sequenceEnd,
				$elm$parser$Parser$Advanced$token(i.end),
				i.spaces,
				i.item,
				$elm$parser$Parser$Advanced$token(i.separator),
				i.trailing)));
};
var $elm$parser$Parser$Advanced$Forbidden = {$: 'Forbidden'};
var $elm$parser$Parser$Advanced$Mandatory = {$: 'Mandatory'};
var $elm$parser$Parser$Advanced$Optional = {$: 'Optional'};
var $elm$parser$Parser$toAdvancedTrailing = function (trailing) {
	switch (trailing.$) {
		case 'Forbidden':
			return $elm$parser$Parser$Advanced$Forbidden;
		case 'Optional':
			return $elm$parser$Parser$Advanced$Optional;
		default:
			return $elm$parser$Parser$Advanced$Mandatory;
	}
};
var $elm$parser$Parser$Expecting = function (a) {
	return {$: 'Expecting', a: a};
};
var $elm$parser$Parser$toToken = function (str) {
	return A2(
		$elm$parser$Parser$Advanced$Token,
		str,
		$elm$parser$Parser$Expecting(str));
};
var $elm$parser$Parser$sequence = function (i) {
	return $elm$parser$Parser$Advanced$sequence(
		{
			end: $elm$parser$Parser$toToken(i.end),
			item: i.item,
			separator: $elm$parser$Parser$toToken(i.separator),
			spaces: i.spaces,
			start: $elm$parser$Parser$toToken(i.start),
			trailing: $elm$parser$Parser$toAdvancedTrailing(i.trailing)
		});
};
var $enkidatron$elm_cldr$Internal$Parse$symbolListParserHelper = function (innerParser) {
	return A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$sequence(
			{
				end: '',
				item: innerParser,
				separator: '',
				spaces: $elm$parser$Parser$succeed(_Utils_Tuple0),
				start: '',
				trailing: $elm$parser$Parser$Optional
			}),
		$elm$parser$Parser$end);
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Literal = function (a) {
	return {$: 'Literal', a: a};
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Symbol = function (a) {
	return {$: 'Symbol', a: a};
};
var $elm$parser$Parser$Advanced$findSubString = _Parser_findSubString;
var $elm$parser$Parser$Advanced$chompUntil = function (_v0) {
	var str = _v0.a;
	var expecting = _v0.b;
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			var _v1 = A5($elm$parser$Parser$Advanced$findSubString, str, s.offset, s.row, s.col, s.src);
			var newOffset = _v1.a;
			var newRow = _v1.b;
			var newCol = _v1.c;
			return _Utils_eq(newOffset, -1) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A4($elm$parser$Parser$Advanced$fromInfo, newRow, newCol, expecting, s.context)) : A3(
				$elm$parser$Parser$Advanced$Good,
				_Utils_cmp(s.offset, newOffset) < 0,
				_Utils_Tuple0,
				{col: newCol, context: s.context, indent: s.indent, offset: newOffset, row: newRow, src: s.src});
		});
};
var $elm$parser$Parser$chompUntil = function (str) {
	return $elm$parser$Parser$Advanced$chompUntil(
		$elm$parser$Parser$toToken(str));
};
var $elm$parser$Parser$ExpectingVariable = {$: 'ExpectingVariable'};
var $elm$parser$Parser$Advanced$varHelp = F7(
	function (isGood, offset, row, col, src, indent, context) {
		varHelp:
		while (true) {
			var newOffset = A3($elm$parser$Parser$Advanced$isSubChar, isGood, offset, src);
			if (_Utils_eq(newOffset, -1)) {
				return {col: col, context: context, indent: indent, offset: offset, row: row, src: src};
			} else {
				if (_Utils_eq(newOffset, -2)) {
					var $temp$isGood = isGood,
						$temp$offset = offset + 1,
						$temp$row = row + 1,
						$temp$col = 1,
						$temp$src = src,
						$temp$indent = indent,
						$temp$context = context;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					context = $temp$context;
					continue varHelp;
				} else {
					var $temp$isGood = isGood,
						$temp$offset = newOffset,
						$temp$row = row,
						$temp$col = col + 1,
						$temp$src = src,
						$temp$indent = indent,
						$temp$context = context;
					isGood = $temp$isGood;
					offset = $temp$offset;
					row = $temp$row;
					col = $temp$col;
					src = $temp$src;
					indent = $temp$indent;
					context = $temp$context;
					continue varHelp;
				}
			}
		}
	});
var $elm$parser$Parser$Advanced$variable = function (i) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			var firstOffset = A3($elm$parser$Parser$Advanced$isSubChar, i.start, s.offset, s.src);
			if (_Utils_eq(firstOffset, -1)) {
				return A2(
					$elm$parser$Parser$Advanced$Bad,
					false,
					A2($elm$parser$Parser$Advanced$fromState, s, i.expecting));
			} else {
				var s1 = _Utils_eq(firstOffset, -2) ? A7($elm$parser$Parser$Advanced$varHelp, i.inner, s.offset + 1, s.row + 1, 1, s.src, s.indent, s.context) : A7($elm$parser$Parser$Advanced$varHelp, i.inner, firstOffset, s.row, s.col + 1, s.src, s.indent, s.context);
				var name = A3($elm$core$String$slice, s.offset, s1.offset, s.src);
				return A2($elm$core$Set$member, name, i.reserved) ? A2(
					$elm$parser$Parser$Advanced$Bad,
					false,
					A2($elm$parser$Parser$Advanced$fromState, s, i.expecting)) : A3($elm$parser$Parser$Advanced$Good, true, name, s1);
			}
		});
};
var $elm$parser$Parser$variable = function (i) {
	return $elm$parser$Parser$Advanced$variable(
		{expecting: $elm$parser$Parser$ExpectingVariable, inner: i.inner, reserved: i.reserved, start: i.start});
};
var $enkidatron$elm_cldr$Internal$Parse$withLiteralParser = function (innerParser) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2($elm$parser$Parser$map, $enkidatron$elm_cldr$Internal$FormatSymbols$Symbol, innerParser),
				A2(
				$elm$parser$Parser$map,
				$enkidatron$elm_cldr$Internal$FormatSymbols$Literal,
				$elm$parser$Parser$variable(
					{
						inner: function (c) {
							return (!$elm$core$Char$isAlpha(c)) && (!_Utils_eq(
								c,
								_Utils_chr('\'')));
						},
						reserved: $elm$core$Set$empty,
						start: function (c) {
							return (!$elm$core$Char$isAlpha(c)) && (!_Utils_eq(
								c,
								_Utils_chr('\'')));
						}
					})),
				A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$FormatSymbols$Literal),
					$elm$parser$Parser$symbol('\'')),
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$getChompedString(
						$elm$parser$Parser$chompUntil('\'')),
					$elm$parser$Parser$symbol('\'')))
			]));
};
var $enkidatron$elm_cldr$Internal$Parse$availableFormatForOptions = F2(
	function (options, pattern) {
		var _v0 = $enkidatron$elm_cldr$Internal$Options$shrinkOptions(options);
		switch (_v0.$) {
			case 'DateTimeSet':
				var dtOpts = _v0.a;
				return A2(
					$elm$core$Maybe$map,
					function (symbols) {
						return $enkidatron$elm_cldr$Internal$Locale$DateTimeAF(
							{formatSymbols: symbols, options: dtOpts});
					},
					$elm$core$Result$toMaybe(
						A2(
							$elm$parser$Parser$run,
							$enkidatron$elm_cldr$Internal$Parse$symbolListParserHelper(
								$enkidatron$elm_cldr$Internal$Parse$withLiteralParser($enkidatron$elm_cldr$Internal$Parse$formatSymbolParser)),
							pattern)));
			case 'DateSet':
				var dOpts = _v0.a;
				return A2(
					$elm$core$Maybe$map,
					function (symbols) {
						return $enkidatron$elm_cldr$Internal$Locale$DateAF(
							{formatSymbols: symbols, options: dOpts});
					},
					$elm$core$Result$toMaybe(
						A2(
							$elm$parser$Parser$run,
							$enkidatron$elm_cldr$Internal$Parse$symbolListParserHelper(
								$enkidatron$elm_cldr$Internal$Parse$withLiteralParser($enkidatron$elm_cldr$Internal$Parse$dateSymbolParser)),
							pattern)));
			case 'TimeSet':
				var tOpts = _v0.a;
				return A2(
					$elm$core$Maybe$map,
					function (symbols) {
						return $enkidatron$elm_cldr$Internal$Locale$TimeAF(
							{formatSymbols: symbols, options: tOpts});
					},
					$elm$core$Result$toMaybe(
						A2(
							$elm$parser$Parser$run,
							$enkidatron$elm_cldr$Internal$Parse$symbolListParserHelper(
								$enkidatron$elm_cldr$Internal$Parse$withLiteralParser($enkidatron$elm_cldr$Internal$Parse$timeSymbolParser)),
							pattern)));
			default:
				return $elm$core$Maybe$Nothing;
		}
	});
var $elm$core$Tuple$second = function (_v0) {
	var y = _v0.b;
	return y;
};
var $enkidatron$elm_cldr$Internal$Parse$buildKeyOptions = function (era) {
	return function (year) {
		return function (month) {
			return function (weekday) {
				return function (day) {
					return function (period) {
						return function (dayPeriod) {
							return function (hourAndType) {
								return function (minute) {
									return function (second) {
										return function (zone) {
											return {
												day: day,
												dayPeriod: dayPeriod,
												era: era,
												fractionalSecondDigits: $elm$core$Maybe$Nothing,
												hour: A2($elm$core$Maybe$map, $elm$core$Tuple$first, hourAndType),
												hour12: A2($elm$core$Maybe$map, $elm$core$Tuple$second, hourAndType),
												minute: minute,
												month: month,
												period: period,
												second: second,
												weekday: weekday,
												year: year,
												zone: zone
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $enkidatron$elm_cldr$Cldr$Format$Options$Numeric = {$: 'Numeric'};
var $enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit = {$: 'TwoDigit'};
var $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords = function (list) {
	return $elm$parser$Parser$oneOf(
		_Utils_ap(
			A2(
				$elm$core$List$map,
				function (_v0) {
					var word = _v0.a;
					var item = _v0.b;
					return A2(
						$enkidatron$elm_cldr$Internal$Parse$parseWord,
						word,
						$elm$core$Maybe$Just(item));
				},
				list),
			_List_fromArray(
				[
					$elm$parser$Parser$succeed($elm$core$Maybe$Nothing)
				])));
};
var $enkidatron$elm_cldr$Internal$Parse$parseDay = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('dd', $enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit),
			_Utils_Tuple2('d', $enkidatron$elm_cldr$Cldr$Format$Options$Numeric)
		]));
var $enkidatron$elm_cldr$Cldr$Format$Options$Long = {$: 'Long'};
var $enkidatron$elm_cldr$Cldr$Format$Options$Narrow = {$: 'Narrow'};
var $enkidatron$elm_cldr$Cldr$Format$Options$Short = {$: 'Short'};
var $enkidatron$elm_cldr$Internal$Parse$parseDayPeriod = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('BBBBB', $enkidatron$elm_cldr$Cldr$Format$Options$Narrow),
			_Utils_Tuple2('BBBB', $enkidatron$elm_cldr$Cldr$Format$Options$Long),
			_Utils_Tuple2('BBB', $enkidatron$elm_cldr$Cldr$Format$Options$Short),
			_Utils_Tuple2('BB', $enkidatron$elm_cldr$Cldr$Format$Options$Short),
			_Utils_Tuple2('B', $enkidatron$elm_cldr$Cldr$Format$Options$Short)
		]));
var $enkidatron$elm_cldr$Internal$Parse$parseEra = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('GGGGG', $enkidatron$elm_cldr$Cldr$Format$Options$Narrow),
			_Utils_Tuple2('GGGG', $enkidatron$elm_cldr$Cldr$Format$Options$Long),
			_Utils_Tuple2('G', $enkidatron$elm_cldr$Cldr$Format$Options$Short)
		]));
var $enkidatron$elm_cldr$Cldr$Format$Options$Hour12 = {$: 'Hour12'};
var $enkidatron$elm_cldr$Cldr$Format$Options$Hour24 = {$: 'Hour24'};
var $enkidatron$elm_cldr$Internal$Parse$parseHour = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'hh',
			_Utils_Tuple2($enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit, $enkidatron$elm_cldr$Cldr$Format$Options$Hour12)),
			_Utils_Tuple2(
			'h',
			_Utils_Tuple2($enkidatron$elm_cldr$Cldr$Format$Options$Numeric, $enkidatron$elm_cldr$Cldr$Format$Options$Hour12)),
			_Utils_Tuple2(
			'HH',
			_Utils_Tuple2($enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit, $enkidatron$elm_cldr$Cldr$Format$Options$Hour24)),
			_Utils_Tuple2(
			'H',
			_Utils_Tuple2($enkidatron$elm_cldr$Cldr$Format$Options$Numeric, $enkidatron$elm_cldr$Cldr$Format$Options$Hour24))
		]));
var $enkidatron$elm_cldr$Internal$Parse$parseMinute = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('mm', $enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit),
			_Utils_Tuple2('m', $enkidatron$elm_cldr$Cldr$Format$Options$Numeric)
		]));
var $enkidatron$elm_cldr$Cldr$Format$Options$Number = function (a) {
	return {$: 'Number', a: a};
};
var $enkidatron$elm_cldr$Cldr$Format$Options$Text = function (a) {
	return {$: 'Text', a: a};
};
var $enkidatron$elm_cldr$Internal$Parse$parseMonth = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'MMMMM',
			$enkidatron$elm_cldr$Cldr$Format$Options$Text($enkidatron$elm_cldr$Cldr$Format$Options$Narrow)),
			_Utils_Tuple2(
			'MMMM',
			$enkidatron$elm_cldr$Cldr$Format$Options$Text($enkidatron$elm_cldr$Cldr$Format$Options$Long)),
			_Utils_Tuple2(
			'MMM',
			$enkidatron$elm_cldr$Cldr$Format$Options$Text($enkidatron$elm_cldr$Cldr$Format$Options$Short)),
			_Utils_Tuple2(
			'MM',
			$enkidatron$elm_cldr$Cldr$Format$Options$Number($enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit)),
			_Utils_Tuple2(
			'M',
			$enkidatron$elm_cldr$Cldr$Format$Options$Number($enkidatron$elm_cldr$Cldr$Format$Options$Numeric))
		]));
var $enkidatron$elm_cldr$Internal$Parse$parsePeriod = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('aaaaa', $enkidatron$elm_cldr$Cldr$Format$Options$Narrow),
			_Utils_Tuple2('aaaa', $enkidatron$elm_cldr$Cldr$Format$Options$Long),
			_Utils_Tuple2('a', $enkidatron$elm_cldr$Cldr$Format$Options$Short)
		]));
var $enkidatron$elm_cldr$Internal$Parse$parseSecond = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('ss', $enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit),
			_Utils_Tuple2('s', $enkidatron$elm_cldr$Cldr$Format$Options$Numeric)
		]));
var $enkidatron$elm_cldr$Internal$Parse$parseWeekday = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('EEEEE', $enkidatron$elm_cldr$Cldr$Format$Options$Narrow),
			_Utils_Tuple2('EEEE', $enkidatron$elm_cldr$Cldr$Format$Options$Long),
			_Utils_Tuple2('E', $enkidatron$elm_cldr$Cldr$Format$Options$Short),
			_Utils_Tuple2('cccc', $enkidatron$elm_cldr$Cldr$Format$Options$Long)
		]));
var $enkidatron$elm_cldr$Internal$Parse$parseYear = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('yy', $enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit),
			_Utils_Tuple2('y', $enkidatron$elm_cldr$Cldr$Format$Options$Numeric)
		]));
var $enkidatron$elm_cldr$Cldr$Format$Options$LongName = {$: 'LongName'};
var $enkidatron$elm_cldr$Cldr$Format$Options$ShortName = {$: 'ShortName'};
var $enkidatron$elm_cldr$Internal$Parse$parseZone = $enkidatron$elm_cldr$Internal$Parse$parseOptionalWords(
	_List_fromArray(
		[
			_Utils_Tuple2('zzzz', $enkidatron$elm_cldr$Cldr$Format$Options$LongName),
			_Utils_Tuple2('z', $enkidatron$elm_cldr$Cldr$Format$Options$ShortName),
			_Utils_Tuple2('vvvv', $enkidatron$elm_cldr$Cldr$Format$Options$LongName),
			_Utils_Tuple2('v', $enkidatron$elm_cldr$Cldr$Format$Options$ShortName),
			_Utils_Tuple2('Z', $enkidatron$elm_cldr$Cldr$Format$Options$ShortName)
		]));
var $enkidatron$elm_cldr$Internal$Parse$availableFormatKeyOptionsParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$keeper,
										A2(
											$elm$parser$Parser$keeper,
											$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Parse$buildKeyOptions),
											$enkidatron$elm_cldr$Internal$Parse$parseEra),
										$enkidatron$elm_cldr$Internal$Parse$parseYear),
									$enkidatron$elm_cldr$Internal$Parse$parseMonth),
								$enkidatron$elm_cldr$Internal$Parse$parseWeekday),
							$enkidatron$elm_cldr$Internal$Parse$parseDay),
						$enkidatron$elm_cldr$Internal$Parse$parsePeriod),
					$enkidatron$elm_cldr$Internal$Parse$parseDayPeriod),
				$enkidatron$elm_cldr$Internal$Parse$parseHour),
			$enkidatron$elm_cldr$Internal$Parse$parseMinute),
		$enkidatron$elm_cldr$Internal$Parse$parseSecond),
	A2($elm$parser$Parser$ignorer, $enkidatron$elm_cldr$Internal$Parse$parseZone, $elm$parser$Parser$end));
var $enkidatron$elm_cldr$Internal$Parse$parseOptionsFromAvailableFormatKey = $elm$parser$Parser$run($enkidatron$elm_cldr$Internal$Parse$availableFormatKeyOptionsParser);
var $enkidatron$elm_cldr$Internal$Parse$parseAvailableFormat = function (_v0) {
	var key = _v0.a;
	var pattern = _v0.b;
	return A2(
		$elm$core$Maybe$andThen,
		function (opts) {
			return A2($enkidatron$elm_cldr$Internal$Parse$availableFormatForOptions, opts, pattern);
		},
		$elm$core$Result$toMaybe(
			$enkidatron$elm_cldr$Internal$Parse$parseOptionsFromAvailableFormatKey(key)));
};
var $enkidatron$elm_cldr$Internal$Parse$availableFormatList = function (info) {
	return $elm_community$maybe_extra$Maybe$Extra$combine(
		A2(
			$elm$core$List$map,
			$enkidatron$elm_cldr$Internal$Parse$parseAvailableFormat,
			A2(
				$elm$core$List$filter,
				A2($elm$core$Basics$composeR, $elm$core$Tuple$first, $enkidatron$elm_cldr$Internal$Parse$isSupportedKey),
				info.availableFormats)));
};
var $elm$core$Maybe$map4 = F5(
	function (func, ma, mb, mc, md) {
		if (ma.$ === 'Nothing') {
			return $elm$core$Maybe$Nothing;
		} else {
			var a = ma.a;
			if (mb.$ === 'Nothing') {
				return $elm$core$Maybe$Nothing;
			} else {
				var b = mb.a;
				if (mc.$ === 'Nothing') {
					return $elm$core$Maybe$Nothing;
				} else {
					var c = mc.a;
					if (md.$ === 'Nothing') {
						return $elm$core$Maybe$Nothing;
					} else {
						var d = md.a;
						return $elm$core$Maybe$Just(
							A4(func, a, b, c, d));
					}
				}
			}
		}
	});
var $enkidatron$elm_cldr$Internal$Parse$andThenMaybePattern = F2(
	function (innerFun, pattern) {
		return A5(
			$elm$core$Maybe$map4,
			$enkidatron$elm_cldr$Internal$Structures$Patterns,
			innerFun(pattern._short),
			innerFun(pattern.medium),
			innerFun(pattern._long),
			innerFun(pattern.full));
	});
var $enkidatron$elm_cldr$Internal$Parse$dateSymbols = function (info) {
	return A2(
		$enkidatron$elm_cldr$Internal$Parse$andThenMaybePattern,
		A2(
			$elm$core$Basics$composeR,
			$elm$parser$Parser$run(
				$enkidatron$elm_cldr$Internal$Parse$symbolListParserHelper(
					$enkidatron$elm_cldr$Internal$Parse$withLiteralParser($enkidatron$elm_cldr$Internal$Parse$dateSymbolParser))),
			$elm$core$Result$toMaybe),
		info.datePatterns);
};
var $enkidatron$elm_cldr$Internal$Locale$DateGoesHere = {$: 'DateGoesHere'};
var $enkidatron$elm_cldr$Internal$Locale$Text = function (a) {
	return {$: 'Text', a: a};
};
var $enkidatron$elm_cldr$Internal$Locale$TimeGoesHere = {$: 'TimeGoesHere'};
var $enkidatron$elm_cldr$Internal$Parse$dateTimeTokenParser = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[
			A2($enkidatron$elm_cldr$Internal$Parse$parseWord, '{1}', $enkidatron$elm_cldr$Internal$Locale$DateGoesHere),
			A2($enkidatron$elm_cldr$Internal$Parse$parseWord, '{0}', $enkidatron$elm_cldr$Internal$Locale$TimeGoesHere),
			A2(
			$elm$parser$Parser$map,
			$enkidatron$elm_cldr$Internal$Locale$Text,
			$elm$parser$Parser$variable(
				{
					inner: function (c) {
						return (!$elm$core$Char$isAlpha(c)) && ((!_Utils_eq(
							c,
							_Utils_chr('\''))) && (!_Utils_eq(
							c,
							_Utils_chr('{'))));
					},
					reserved: $elm$core$Set$empty,
					start: function (c) {
						return (!$elm$core$Char$isAlpha(c)) && ((!_Utils_eq(
							c,
							_Utils_chr('\''))) && (!_Utils_eq(
							c,
							_Utils_chr('{'))));
					}
				})),
			A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Locale$Text),
				$elm$parser$Parser$symbol('\'')),
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$getChompedString(
					$elm$parser$Parser$chompUntil('\'')),
				$elm$parser$Parser$symbol('\'')))
		]));
var $enkidatron$elm_cldr$Internal$Parse$dateTimeTokens = function (info) {
	return A2(
		$enkidatron$elm_cldr$Internal$Parse$andThenMaybePattern,
		A2(
			$elm$core$Basics$composeR,
			$elm$parser$Parser$run(
				$enkidatron$elm_cldr$Internal$Parse$symbolListParserHelper($enkidatron$elm_cldr$Internal$Parse$dateTimeTokenParser)),
			$elm$core$Result$toMaybe),
		info.dateTimePatterns);
};
var $elm_community$maybe_extra$Maybe$Extra$or = F2(
	function (ma, mb) {
		if (ma.$ === 'Nothing') {
			return mb;
		} else {
			return ma;
		}
	});
var $enkidatron$elm_cldr$Internal$Parse$dayPeriodRules = F2(
	function (dayPeriods, info) {
		var fullTag = A2(
			$elm$core$String$join,
			'-',
			A2(
				$elm$core$List$filterMap,
				$elm$core$Basics$identity,
				_List_fromArray(
					[
						$elm$core$Maybe$Just(info.language),
						info.script,
						info.territory,
						info.variant
					])));
		return A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm_community$maybe_extra$Maybe$Extra$or,
				A2($elm$core$Dict$get, fullTag, dayPeriods),
				A2($elm$core$Dict$get, info.language, dayPeriods)));
	});
var $enkidatron$elm_cldr$Internal$Parse$timeSymbols = function (info) {
	return A2(
		$enkidatron$elm_cldr$Internal$Parse$andThenMaybePattern,
		A2(
			$elm$core$Basics$composeR,
			$elm$parser$Parser$run(
				$enkidatron$elm_cldr$Internal$Parse$symbolListParserHelper(
					$enkidatron$elm_cldr$Internal$Parse$withLiteralParser($enkidatron$elm_cldr$Internal$Parse$timeSymbolParser))),
			$elm$core$Result$toMaybe),
		info.timePatterns);
};
var $enkidatron$elm_cldr$Internal$Locale$Root = {$: 'Root'};
var $joneshf$elm_tagged$Tagged$map = F2(
	function (f, _v0) {
		var x = _v0.a;
		return $joneshf$elm_tagged$Tagged$Tagged(
			f(x));
	});
var $elm$core$String$toLower = _String_toLower;
var $elm$regex$Regex$Match = F4(
	function (match, index, number, submatches) {
		return {index: index, match: match, number: number, submatches: submatches};
	});
var $elm$regex$Regex$fromStringWith = _Regex_fromStringWith;
var $elm$regex$Regex$fromString = function (string) {
	return A2(
		$elm$regex$Regex$fromStringWith,
		{caseInsensitive: false, multiline: false},
		string);
};
var $elm$regex$Regex$never = _Regex_never;
var $elm_community$string_extra$String$Extra$regexFromString = A2(
	$elm$core$Basics$composeR,
	$elm$regex$Regex$fromString,
	$elm$core$Maybe$withDefault($elm$regex$Regex$never));
var $elm$regex$Regex$replace = _Regex_replaceAtMost(_Regex_infinity);
var $elm$core$String$cons = _String_cons;
var $elm_community$string_extra$String$Extra$changeCase = F2(
	function (mutator, word) {
		return A2(
			$elm$core$Maybe$withDefault,
			'',
			A2(
				$elm$core$Maybe$map,
				function (_v0) {
					var head = _v0.a;
					var tail = _v0.b;
					return A2(
						$elm$core$String$cons,
						mutator(head),
						tail);
				},
				$elm$core$String$uncons(word)));
	});
var $elm$core$Char$toUpper = _Char_toUpper;
var $elm_community$string_extra$String$Extra$toSentenceCase = function (word) {
	return A2($elm_community$string_extra$String$Extra$changeCase, $elm$core$Char$toUpper, word);
};
var $elm_community$string_extra$String$Extra$toTitleCase = function (ws) {
	var uppercaseMatch = A2(
		$elm$regex$Regex$replace,
		$elm_community$string_extra$String$Extra$regexFromString('\\w+'),
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.match;
			},
			$elm_community$string_extra$String$Extra$toSentenceCase));
	return A3(
		$elm$regex$Regex$replace,
		$elm_community$string_extra$String$Extra$regexFromString('^([a-z])|\\s+([a-z])'),
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.match;
			},
			uppercaseMatch),
		ws);
};
var $enkidatron$elm_cldr$Internal$Locale$normalize = function (langId) {
	if (langId.$ === 'Root') {
		return $enkidatron$elm_cldr$Internal$Locale$Root;
	} else {
		var langTag = langId.a;
		var maybeScript = langId.b;
		var maybeRegion = langId.c;
		var maybeVariant = langId.d;
		return A4(
			$enkidatron$elm_cldr$Internal$Locale$Lang,
			A2($joneshf$elm_tagged$Tagged$map, $elm$core$String$toLower, langTag),
			A2(
				$elm$core$Maybe$map,
				$joneshf$elm_tagged$Tagged$map($elm_community$string_extra$String$Extra$toTitleCase),
				maybeScript),
			A2(
				$elm$core$Maybe$map,
				$joneshf$elm_tagged$Tagged$map($elm$core$String$toUpper),
				maybeRegion),
			A2(
				$elm$core$Maybe$map,
				$joneshf$elm_tagged$Tagged$map($elm$core$String$toUpper),
				maybeVariant));
	}
};
var $enkidatron$elm_cldr$Internal$Parse$toLanguageId = function (info) {
	return (info.language === 'root') ? $enkidatron$elm_cldr$Internal$Locale$Root : $enkidatron$elm_cldr$Internal$Locale$normalize(
		A4(
			$enkidatron$elm_cldr$Internal$Locale$Lang,
			$joneshf$elm_tagged$Tagged$Tagged(info.language),
			A2($elm$core$Maybe$map, $joneshf$elm_tagged$Tagged$Tagged, info.script),
			A2($elm$core$Maybe$map, $joneshf$elm_tagged$Tagged$Tagged, info.territory),
			A2($elm$core$Maybe$map, $joneshf$elm_tagged$Tagged$Tagged, info.variant)));
};
var $enkidatron$elm_cldr$Internal$Parse$twelveHourByDefault = function (info) {
	var allPatterns = _List_fromArray(
		[info.timeSkeletons._short, info.timeSkeletons.medium, info.timeSkeletons._long, info.timeSkeletons.full]);
	var contains12Hour = A2(
		$elm$core$List$any,
		$elm$core$String$contains('h'),
		allPatterns);
	var contains24Hour = A2(
		$elm$core$List$any,
		$elm$core$String$contains('H'),
		allPatterns);
	var _v0 = _Utils_Tuple2(contains12Hour, contains24Hour);
	if (_v0.a) {
		if (_v0.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			return $elm$core$Maybe$Just(true);
		}
	} else {
		if (_v0.b) {
			return $elm$core$Maybe$Just(false);
		} else {
			return $elm$core$Maybe$Nothing;
		}
	}
};
var $enkidatron$elm_cldr$Internal$Parse$parseInfo = F2(
	function (dayPeriods, info) {
		return A2(
			$elm$core$Maybe$map,
			$enkidatron$elm_cldr$Internal$Locale$Locale,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$apR(
					$elm$core$Dict$fromList(info.currencySymbols)),
				A2(
					$elm$core$Maybe$map,
					$elm$core$Basics$apR(info.percentNumberFormat),
					A2(
						$elm$core$Maybe$map,
						$elm$core$Basics$apR(info.currencyNumberFormat),
						A2(
							$elm$core$Maybe$map,
							$elm$core$Basics$apR(info.decimalNumberFormat),
							A2(
								$elm_community$maybe_extra$Maybe$Extra$andMap,
								$enkidatron$elm_cldr$Internal$Parse$twelveHourByDefault(info),
								A2(
									$elm_community$maybe_extra$Maybe$Extra$andMap,
									$enkidatron$elm_cldr$Internal$Parse$availableFormatList(info),
									A2(
										$elm$core$Maybe$map,
										$elm$core$Basics$apR(
											$enkidatron$elm_cldr$Internal$Parse$toLanguageId(info)),
										A2(
											$elm_community$maybe_extra$Maybe$Extra$andMap,
											$enkidatron$elm_cldr$Internal$Parse$dateTimeTokens(info),
											A2(
												$elm_community$maybe_extra$Maybe$Extra$andMap,
												$enkidatron$elm_cldr$Internal$Parse$timeSymbols(info),
												A2(
													$elm_community$maybe_extra$Maybe$Extra$andMap,
													$enkidatron$elm_cldr$Internal$Parse$dateSymbols(info),
													A2(
														$elm$core$Maybe$map,
														$elm$core$Basics$apR(
															A2($enkidatron$elm_cldr$Internal$Parse$dayPeriodRules, dayPeriods, info)),
														A2(
															$elm$core$Maybe$map,
															$elm$core$Basics$apR(info.periodNames),
															A2(
																$elm$core$Maybe$map,
																$elm$core$Basics$apR(info.eraNames),
																A2(
																	$elm$core$Maybe$map,
																	$elm$core$Basics$apR(info.weekdayStandaloneNames),
																	A2(
																		$elm$core$Maybe$map,
																		$elm$core$Basics$apR(info.weekdayFormatNames),
																		A2(
																			$elm$core$Maybe$map,
																			$elm$core$Basics$apR(info.monthStandaloneNames),
																			A2(
																				$elm$core$Maybe$map,
																				$elm$core$Basics$apR(info.monthFormatNames),
																				$elm$core$Maybe$Just($enkidatron$elm_cldr$Internal$Locale$Internal)))))))))))))))))));
	});
var $enkidatron$elm_cldr$Internal$Parse$parse = F2(
	function (dayPeriods, text) {
		return A2(
			$elm$core$Maybe$andThen,
			$enkidatron$elm_cldr$Internal$Parse$parseInfo(dayPeriods),
			$enkidatron$elm_cldr$Internal$LanguageInfo$Parse$parse(text));
	});
var $enkidatron$elm_cldr$Generated$En$en = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$En$dayPeriods, 'en||||AM|PM|10|afternoon1|in the afternoon|am|AM|am-alt-variant|am|evening1|in the evening|midnight|midnight|morning1|in the morning|night1|at night|noon|noon|pm|PM|pm-alt-variant|pm|AM|PM|10|afternoon1|in the afternoon|am|AM|am-alt-variant|am|evening1|in the evening|midnight|midnight|morning1|in the morning|night1|at night|noon|noon|pm|PM|pm-alt-variant|pm|a|p|10|afternoon1|in the afternoon|am|a|am-alt-variant|am|evening1|in the evening|midnight|mi|morning1|in the morning|night1|at night|noon|n|pm|p|pm-alt-variant|pm|M/d/yy|MMM d, y|MMMM d, y|EEEE, MMMM d, y|Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec|January|February|March|April|May|June|July|August|September|October|November|December|J|F|M|A|M|J|J|A|S|O|N|D|0|Sun|Mon|Tue|Wed|Thu|Fri|Sat|Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|S|M|T|W|T|F|S|0|BC|AD|Before Christ|Anno Domini|B|A|h:mm\u202Fa|h:mm:ss\u202Fa|h:mm:ss\u202Fa z|h:mm:ss\u202Fa zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|56|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm\u202Fa|Ehm-alt-ascii|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|Ehms-alt-ascii|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|M/d/y G|GyMMM|MMM y G|GyMMMd|MMM d, y G|GyMMMEd|E, MMM d, y G|h|h\u202Fa|h-alt-ascii|h a|H|HH|hm|h:mm\u202Fa|hm-alt-ascii|h:mm a|Hm|HH:mm|hms|h:mm:ss\u202Fa|hms-alt-ascii|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|hmsv-alt-ascii|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|hmv-alt-ascii|h:mm a v|Hmv|HH:mm v|M|L|Md|M/d|MEd|E, M/d|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMW-count-one|\'week\' W \'of\' MMMM|MMMMW-count-other|\'week\' W \'of\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|M/d/y|yMEd|E, M/d/y|yMMM|MMM y|yMMMd|MMM d, y|yMMMEd|E, MMM d, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'week\' w \'of\' Y|yw-count-other|\'week\' w \'of\' Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$en = $enkidatron$elm_cldr$Generated$En$en;
var $justinmimbs$timezone_data$TimeZone$Specification$DateTime = F5(
	function (year, month, day, time, clock) {
		return {clock: clock, day: day, month: month, time: time, year: year};
	});
var $elm$time$Time$Jan = {$: 'Jan'};
var $justinmimbs$timezone_data$TimeZone$Specification$Rules = function (a) {
	return {$: 'Rules', a: a};
};
var $justinmimbs$timezone_data$TimeZone$Specification$WallClock = {$: 'WallClock'};
var $justinmimbs$timezone_data$TimeZone$Specification$Zone = F2(
	function (history, current) {
		return {current: current, history: history};
	});
var $justinmimbs$timezone_data$TimeZone$Specification$ZoneState = F2(
	function (standardOffset, zoneRules) {
		return {standardOffset: standardOffset, zoneRules: zoneRules};
	});
var $elm$time$Time$Zone = F2(
	function (a, b) {
		return {$: 'Zone', a: a, b: b};
	});
var $elm$time$Time$customZone = $elm$time$Time$Zone;
var $justinmimbs$timezone_data$TimeZone$maxYear = 2037;
var $justinmimbs$timezone_data$TimeZone$minYear = 1970;
var $justinmimbs$timezone_data$TimeZone$Specification$Universal = {$: 'Universal'};
var $justinmimbs$timezone_data$TimeZone$Specification$dropChangesBeforeEpoch = function (_v0) {
	dropChangesBeforeEpoch:
	while (true) {
		var initial = _v0.a;
		var changes = _v0.b;
		if (changes.b) {
			var change = changes.a;
			var rest = changes.b;
			if (change.start <= 0) {
				var $temp$_v0 = _Utils_Tuple2(change.offset, rest);
				_v0 = $temp$_v0;
				continue dropChangesBeforeEpoch;
			} else {
				return _Utils_Tuple2(initial, changes);
			}
		} else {
			return _Utils_Tuple2(initial, _List_Nil);
		}
	}
};
var $elm$core$Basics$modBy = _Basics_modBy;
var $justinmimbs$timezone_data$RataDie$weekdayNumber = function (rd) {
	var _v0 = A2($elm$core$Basics$modBy, 7, rd);
	if (!_v0) {
		return 7;
	} else {
		var n = _v0;
		return n;
	}
};
var $justinmimbs$timezone_data$RataDie$weekdayToNumber = function (wd) {
	switch (wd.$) {
		case 'Mon':
			return 1;
		case 'Tue':
			return 2;
		case 'Wed':
			return 3;
		case 'Thu':
			return 4;
		case 'Fri':
			return 5;
		case 'Sat':
			return 6;
		default:
			return 7;
	}
};
var $justinmimbs$timezone_data$RataDie$floorWeekday = F2(
	function (weekday, rd) {
		var daysSincePreviousWeekday = A2(
			$elm$core$Basics$modBy,
			7,
			($justinmimbs$timezone_data$RataDie$weekdayNumber(rd) + 7) - $justinmimbs$timezone_data$RataDie$weekdayToNumber(weekday));
		return rd - daysSincePreviousWeekday;
	});
var $justinmimbs$timezone_data$RataDie$ceilingWeekday = F2(
	function (weekday, rd) {
		var floored = A2($justinmimbs$timezone_data$RataDie$floorWeekday, weekday, rd);
		return _Utils_eq(rd, floored) ? rd : (floored + 7);
	});
var $elm$core$List$append = F2(
	function (xs, ys) {
		if (!ys.b) {
			return xs;
		} else {
			return A3($elm$core$List$foldr, $elm$core$List$cons, ys, xs);
		}
	});
var $elm$core$List$concat = function (lists) {
	return A3($elm$core$List$foldr, $elm$core$List$append, _List_Nil, lists);
};
var $elm$core$List$concatMap = F2(
	function (f, list) {
		return $elm$core$List$concat(
			A2($elm$core$List$map, f, list));
	});
var $justinmimbs$timezone_data$RataDie$isLeapYear = function (y) {
	return ((!A2($elm$core$Basics$modBy, 4, y)) && (!(!A2($elm$core$Basics$modBy, 100, y)))) || (!A2($elm$core$Basics$modBy, 400, y));
};
var $justinmimbs$timezone_data$RataDie$daysBeforeMonth = F2(
	function (y, m) {
		var leapDays = $justinmimbs$timezone_data$RataDie$isLeapYear(y) ? 1 : 0;
		switch (m.$) {
			case 'Jan':
				return 0;
			case 'Feb':
				return 31;
			case 'Mar':
				return 59 + leapDays;
			case 'Apr':
				return 90 + leapDays;
			case 'May':
				return 120 + leapDays;
			case 'Jun':
				return 151 + leapDays;
			case 'Jul':
				return 181 + leapDays;
			case 'Aug':
				return 212 + leapDays;
			case 'Sep':
				return 243 + leapDays;
			case 'Oct':
				return 273 + leapDays;
			case 'Nov':
				return 304 + leapDays;
			default:
				return 334 + leapDays;
		}
	});
var $justinmimbs$timezone_data$RataDie$daysBeforeYear = function (y1) {
	var y = y1 - 1;
	var leapYears = (((y / 4) | 0) - ((y / 100) | 0)) + ((y / 400) | 0);
	return (365 * y) + leapYears;
};
var $justinmimbs$timezone_data$RataDie$dayOfMonth = F3(
	function (y, m, d) {
		return ($justinmimbs$timezone_data$RataDie$daysBeforeYear(y) + A2($justinmimbs$timezone_data$RataDie$daysBeforeMonth, y, m)) + d;
	});
var $justinmimbs$timezone_data$RataDie$daysInMonth = F2(
	function (y, m) {
		switch (m.$) {
			case 'Jan':
				return 31;
			case 'Feb':
				return $justinmimbs$timezone_data$RataDie$isLeapYear(y) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var $justinmimbs$timezone_data$RataDie$lastOfMonth = F2(
	function (y, m) {
		return ($justinmimbs$timezone_data$RataDie$daysBeforeYear(y) + A2($justinmimbs$timezone_data$RataDie$daysBeforeMonth, y, m)) + A2($justinmimbs$timezone_data$RataDie$daysInMonth, y, m);
	});
var $justinmimbs$timezone_data$TimeZone$Specification$minutesFromRataDie = function (rd) {
	return (rd - 719163) * 1440;
};
var $elm$core$List$sortBy = _List_sortBy;
var $justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment = F2(
	function (clock, _v0) {
		var standard = _v0.standard;
		var save = _v0.save;
		switch (clock.$) {
			case 'Universal':
				return 0;
			case 'Standard':
				return 0 - standard;
			default:
				return 0 - (standard + save);
		}
	});
var $justinmimbs$timezone_data$TimeZone$Specification$minutesFromDateTime = function (_v0) {
	var year = _v0.year;
	var month = _v0.month;
	var day = _v0.day;
	var time = _v0.time;
	return $justinmimbs$timezone_data$TimeZone$Specification$minutesFromRataDie(
		A3($justinmimbs$timezone_data$RataDie$dayOfMonth, year, month, day)) + time;
};
var $justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime = F2(
	function (offset, datetime) {
		return $justinmimbs$timezone_data$TimeZone$Specification$minutesFromDateTime(datetime) + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, datetime.clock, offset);
	});
var $justinmimbs$timezone_data$TimeZone$Specification$rulesToOffsetChanges = F5(
	function (previousOffset, start, until, standardOffset, rules) {
		var transitions = A2(
			$elm$core$List$concatMap,
			function (year) {
				return A2(
					$elm$core$List$sortBy,
					function ($) {
						return $.start;
					},
					A2(
						$elm$core$List$map,
						function (rule) {
							return {
								clock: rule.clock,
								save: rule.save,
								start: $justinmimbs$timezone_data$TimeZone$Specification$minutesFromRataDie(
									function () {
										var _v2 = rule.day;
										switch (_v2.$) {
											case 'Day':
												var day = _v2.a;
												return A3($justinmimbs$timezone_data$RataDie$dayOfMonth, year, rule.month, day);
											case 'Next':
												var weekday = _v2.a;
												var after = _v2.b;
												return A2(
													$justinmimbs$timezone_data$RataDie$ceilingWeekday,
													weekday,
													A3($justinmimbs$timezone_data$RataDie$dayOfMonth, year, rule.month, after));
											case 'Prev':
												var weekday = _v2.a;
												var before = _v2.b;
												return A2(
													$justinmimbs$timezone_data$RataDie$floorWeekday,
													weekday,
													A3($justinmimbs$timezone_data$RataDie$dayOfMonth, year, rule.month, before));
											default:
												var weekday = _v2.a;
												return A2(
													$justinmimbs$timezone_data$RataDie$floorWeekday,
													weekday,
													A2($justinmimbs$timezone_data$RataDie$lastOfMonth, year, rule.month));
										}
									}()) + rule.time
							};
						},
						A2(
							$elm$core$List$filter,
							function (rule) {
								return (_Utils_cmp(rule.from, year) < 1) && (_Utils_cmp(year, rule.to) < 1);
							},
							rules)));
			},
			A2($elm$core$List$range, start.year - 1, until.year));
		var initialOffset = {save: 0, standard: standardOffset};
		var initialChange = {
			offset: standardOffset,
			start: A2($justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime, previousOffset, start)
		};
		var _v0 = A3(
			$elm$core$List$foldl,
			F2(
				function (transition, _v1) {
					var currentOffset = _v1.a;
					var changes = _v1.b;
					var newOffset = {save: transition.save, standard: standardOffset};
					if (_Utils_cmp(
						transition.start + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, transition.clock, previousOffset),
						initialChange.start) < 1) {
						var updatedInitialChange = {offset: standardOffset + transition.save, start: initialChange.start};
						return _Utils_Tuple2(
							newOffset,
							_List_fromArray(
								[updatedInitialChange]));
					} else {
						if (_Utils_cmp(
							transition.start + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, transition.clock, currentOffset),
							A2($justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime, currentOffset, until)) < 0) {
							var change = {
								offset: standardOffset + transition.save,
								start: transition.start + A2($justinmimbs$timezone_data$TimeZone$Specification$utcAdjustment, transition.clock, currentOffset)
							};
							return _Utils_Tuple2(
								newOffset,
								A2($elm$core$List$cons, change, changes));
						} else {
							return _Utils_Tuple2(currentOffset, changes);
						}
					}
				}),
			_Utils_Tuple2(
				initialOffset,
				_List_fromArray(
					[initialChange])),
			transitions);
		var nextOffset = _v0.a;
		var descendingChanges = _v0.b;
		return _Utils_Tuple2(
			$elm$core$List$reverse(descendingChanges),
			nextOffset);
	});
var $justinmimbs$timezone_data$TimeZone$Specification$stateToOffsetChanges = F4(
	function (previousOffset, start, until, _v0) {
		var standardOffset = _v0.standardOffset;
		var zoneRules = _v0.zoneRules;
		if (zoneRules.$ === 'Save') {
			var save = zoneRules.a;
			return _Utils_Tuple2(
				_List_fromArray(
					[
						{
						offset: standardOffset + save,
						start: A2($justinmimbs$timezone_data$TimeZone$Specification$utcMinutesFromDateTime, previousOffset, start)
					}
					]),
				{save: save, standard: standardOffset});
		} else {
			var rules = zoneRules.a;
			return A5($justinmimbs$timezone_data$TimeZone$Specification$rulesToOffsetChanges, previousOffset, start, until, standardOffset, rules);
		}
	});
var $justinmimbs$timezone_data$TimeZone$Specification$stripDuplicatesByHelp = F4(
	function (f, a, rev, list) {
		stripDuplicatesByHelp:
		while (true) {
			if (!list.b) {
				return $elm$core$List$reverse(rev);
			} else {
				var x = list.a;
				var xs = list.b;
				var b = f(x);
				var rev_ = (!_Utils_eq(a, b)) ? A2($elm$core$List$cons, x, rev) : rev;
				var $temp$f = f,
					$temp$a = b,
					$temp$rev = rev_,
					$temp$list = xs;
				f = $temp$f;
				a = $temp$a;
				rev = $temp$rev;
				list = $temp$list;
				continue stripDuplicatesByHelp;
			}
		}
	});
var $justinmimbs$timezone_data$TimeZone$Specification$zoneToRanges = F3(
	function (zoneStart, zoneUntil, zone) {
		var _v0 = A3(
			$elm$core$List$foldl,
			F2(
				function (_v1, _v2) {
					var state = _v1.a;
					var nextStart = _v1.b;
					var start = _v2.a;
					var ranges = _v2.b;
					return _Utils_Tuple2(
						nextStart,
						A2(
							$elm$core$List$cons,
							_Utils_Tuple3(start, state, nextStart),
							ranges));
				}),
			_Utils_Tuple2(zoneStart, _List_Nil),
			zone.history);
		var currentStart = _v0.a;
		var historyRanges = _v0.b;
		return $elm$core$List$reverse(
			A2(
				$elm$core$List$cons,
				_Utils_Tuple3(currentStart, zone.current, zoneUntil),
				historyRanges));
	});
var $justinmimbs$timezone_data$TimeZone$Specification$toOffsets = F3(
	function (minYear, maxYear, zone) {
		var initialState = function () {
			var _v5 = zone.history;
			if (_v5.b) {
				var _v6 = _v5.a;
				var earliest = _v6.a;
				return earliest;
			} else {
				return zone.current;
			}
		}();
		var initialOffset = {
			save: function () {
				var _v4 = initialState.zoneRules;
				if (_v4.$ === 'Save') {
					var save = _v4.a;
					return save;
				} else {
					return 0;
				}
			}(),
			standard: initialState.standardOffset
		};
		var ascendingChanges = A4(
			$justinmimbs$timezone_data$TimeZone$Specification$stripDuplicatesByHelp,
			function ($) {
				return $.offset;
			},
			initialOffset.standard + initialOffset.save,
			_List_Nil,
			A3(
				$elm$core$List$foldl,
				F2(
					function (_v1, _v2) {
						var start = _v1.a;
						var state = _v1.b;
						var until = _v1.c;
						var prevOffset = _v2.a;
						var prevChanges = _v2.b;
						var _v3 = A4($justinmimbs$timezone_data$TimeZone$Specification$stateToOffsetChanges, prevOffset, start, until, state);
						var nextChanges = _v3.a;
						var nextOffset = _v3.b;
						return _Utils_Tuple2(
							nextOffset,
							_Utils_ap(prevChanges, nextChanges));
					}),
				_Utils_Tuple2(initialOffset, _List_Nil),
				A3(
					$justinmimbs$timezone_data$TimeZone$Specification$zoneToRanges,
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, minYear, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$Universal),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, maxYear + 1, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$Universal),
					zone)).b);
		var _v0 = $justinmimbs$timezone_data$TimeZone$Specification$dropChangesBeforeEpoch(
			_Utils_Tuple2(initialOffset.standard + initialOffset.save, ascendingChanges));
		var initial = _v0.a;
		var ascending = _v0.b;
		return _Utils_Tuple2(
			$elm$core$List$reverse(ascending),
			initial);
	});
var $justinmimbs$timezone_data$TimeZone$fromSpecification = function (zone) {
	var _v0 = A3($justinmimbs$timezone_data$TimeZone$Specification$toOffsets, $justinmimbs$timezone_data$TimeZone$minYear, $justinmimbs$timezone_data$TimeZone$maxYear, zone);
	var descending = _v0.a;
	var bottom = _v0.b;
	return A2($elm$time$Time$customZone, bottom, descending);
};
var $elm$time$Time$Apr = {$: 'Apr'};
var $justinmimbs$timezone_data$TimeZone$Specification$Day = function (a) {
	return {$: 'Day', a: a};
};
var $justinmimbs$timezone_data$TimeZone$Specification$Last = function (a) {
	return {$: 'Last', a: a};
};
var $elm$time$Time$Mar = {$: 'Mar'};
var $justinmimbs$timezone_data$TimeZone$Specification$Next = F2(
	function (a, b) {
		return {$: 'Next', a: a, b: b};
	});
var $elm$time$Time$Oct = {$: 'Oct'};
var $justinmimbs$timezone_data$TimeZone$Specification$Rule = F7(
	function (from, to, month, day, time, clock, save) {
		return {clock: clock, day: day, from: from, month: month, save: save, time: time, to: to};
	});
var $elm$time$Time$Sep = {$: 'Sep'};
var $elm$time$Time$Sun = {$: 'Sun'};
var $justinmimbs$timezone_data$TimeZone$rules_EU = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1980,
		$elm$time$Time$Apr,
		A2($justinmimbs$timezone_data$TimeZone$Specification$Next, $elm$time$Time$Sun, 1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1977,
		1977,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1978,
		1978,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(1),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1979,
		1995,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1981,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1996,
		$justinmimbs$timezone_data$TimeZone$maxYear,
		$elm$time$Time$Oct,
		$justinmimbs$timezone_data$TimeZone$Specification$Last($elm$time$Time$Sun),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$Universal,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$rules_France = _List_fromArray(
	[
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Mar,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(28),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		60),
		A7(
		$justinmimbs$timezone_data$TimeZone$Specification$Rule,
		1976,
		1976,
		$elm$time$Time$Sep,
		$justinmimbs$timezone_data$TimeZone$Specification$Day(26),
		60,
		$justinmimbs$timezone_data$TimeZone$Specification$WallClock,
		0)
	]);
var $justinmimbs$timezone_data$TimeZone$europe__paris = function (_v0) {
	return $justinmimbs$timezone_data$TimeZone$fromSpecification(
		A2(
			$justinmimbs$timezone_data$TimeZone$Specification$Zone,
			_List_fromArray(
				[
					_Utils_Tuple2(
					A2(
						$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
						60,
						$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_France)),
					A5($justinmimbs$timezone_data$TimeZone$Specification$DateTime, 1977, $elm$time$Time$Jan, 1, 0, $justinmimbs$timezone_data$TimeZone$Specification$WallClock))
				]),
			A2(
				$justinmimbs$timezone_data$TimeZone$Specification$ZoneState,
				60,
				$justinmimbs$timezone_data$TimeZone$Specification$Rules($justinmimbs$timezone_data$TimeZone$rules_EU))));
};
var $elm$time$Time$Posix = function (a) {
	return {$: 'Posix', a: a};
};
var $elm$time$Time$millisToPosix = $elm$time$Time$Posix;
var $author$project$Timeline$DndMsg = function (a) {
	return {$: 'DndMsg', a: a};
};
var $annaghi$dnd_list$DnDList$Horizontal = {$: 'Horizontal'};
var $annaghi$dnd_list$DnDList$Vertical = {$: 'Vertical'};
var $author$project$Timeline$Models$Vertical = {$: 'Vertical'};
var $annaghi$dnd_list$DnDList$InsertBefore = {$: 'InsertBefore'};
var $annaghi$dnd_list$DnDList$OnDrop = {$: 'OnDrop'};
var $author$project$Timeline$config = {
	beforeUpdate: F3(
		function (_v0, _v1, list) {
			return list;
		}),
	listen: $annaghi$dnd_list$DnDList$OnDrop,
	movement: $annaghi$dnd_list$DnDList$Vertical,
	operation: $annaghi$dnd_list$DnDList$InsertBefore
};
var $annaghi$dnd_list$DnDList$Model = function (a) {
	return {$: 'Model', a: a};
};
var $annaghi$dnd_list$DnDList$GotDragElement = function (a) {
	return {$: 'GotDragElement', a: a};
};
var $elm$core$Basics$composeL = F3(
	function (g, f, x) {
		return g(
			f(x));
	});
var $elm$core$Task$onError = _Scheduler_onError;
var $elm$core$Task$attempt = F2(
	function (resultToMessage, task) {
		return $elm$core$Task$command(
			$elm$core$Task$Perform(
				A2(
					$elm$core$Task$onError,
					A2(
						$elm$core$Basics$composeL,
						A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
						$elm$core$Result$Err),
					A2(
						$elm$core$Task$andThen,
						A2(
							$elm$core$Basics$composeL,
							A2($elm$core$Basics$composeL, $elm$core$Task$succeed, resultToMessage),
							$elm$core$Result$Ok),
						task))));
	});
var $elm$browser$Browser$Dom$getElement = _Browser_getElement;
var $elm$core$Platform$Cmd$none = $elm$core$Platform$Cmd$batch(_List_Nil);
var $annaghi$dnd_list$DnDList$dragElementCommands = F2(
	function (stepMsg, state) {
		var _v0 = state.dragElement;
		if (_v0.$ === 'Nothing') {
			return A2(
				$elm$core$Task$attempt,
				A2($elm$core$Basics$composeL, stepMsg, $annaghi$dnd_list$DnDList$GotDragElement),
				$elm$browser$Browser$Dom$getElement(state.dragElementId));
		} else {
			return $elm$core$Platform$Cmd$none;
		}
	});
var $annaghi$dnd_list$DnDList$GotDropElement = function (a) {
	return {$: 'GotDropElement', a: a};
};
var $annaghi$dnd_list$DnDList$dropElementCommands = F2(
	function (stepMsg, state) {
		return (!state.dragCounter) ? A2(
			$elm$core$Task$attempt,
			A2($elm$core$Basics$composeL, stepMsg, $annaghi$dnd_list$DnDList$GotDropElement),
			$elm$browser$Browser$Dom$getElement(state.dropElementId)) : $elm$core$Platform$Cmd$none;
	});
var $annaghi$dnd_list$DnDList$commands = F2(
	function (stepMsg, _v0) {
		var model = _v0.a;
		if (model.$ === 'Nothing') {
			return $elm$core$Platform$Cmd$none;
		} else {
			var state = model.a;
			return $elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						A2($annaghi$dnd_list$DnDList$dragElementCommands, stepMsg, state),
						A2($annaghi$dnd_list$DnDList$dropElementCommands, stepMsg, state)
					]));
		}
	});
var $annaghi$dnd_list$DnDList$DragStart = F3(
	function (a, b, c) {
		return {$: 'DragStart', a: a, b: b, c: c};
	});
var $annaghi$dnd_list$Internal$Common$Utils$Position = F2(
	function (x, y) {
		return {x: x, y: y};
	});
var $elm$json$Json$Decode$float = _Json_decodeFloat;
var $annaghi$dnd_list$Internal$Common$Utils$clientX = A2($elm$json$Json$Decode$field, 'clientX', $elm$json$Json$Decode$float);
var $annaghi$dnd_list$Internal$Common$Utils$clientY = A2($elm$json$Json$Decode$field, 'clientY', $elm$json$Json$Decode$float);
var $annaghi$dnd_list$Internal$Common$Utils$decodeCoordinates = A3($elm$json$Json$Decode$map2, $annaghi$dnd_list$Internal$Common$Utils$Position, $annaghi$dnd_list$Internal$Common$Utils$clientX, $annaghi$dnd_list$Internal$Common$Utils$clientY);
var $elm$json$Json$Decode$int = _Json_decodeInt;
var $annaghi$dnd_list$Internal$Common$Utils$decodeMainMouseButton = function (decoder) {
	return A2(
		$elm$json$Json$Decode$andThen,
		function (button) {
			return (!button) ? decoder : $elm$json$Json$Decode$fail('Event is only relevant when the main mouse button was pressed.');
		},
		A2($elm$json$Json$Decode$field, 'button', $elm$json$Json$Decode$int));
};
var $annaghi$dnd_list$Internal$Common$Utils$decodeCoordinatesWithButtonCheck = $annaghi$dnd_list$Internal$Common$Utils$decodeMainMouseButton($annaghi$dnd_list$Internal$Common$Utils$decodeCoordinates);
var $elm$virtual_dom$VirtualDom$MayPreventDefault = function (a) {
	return {$: 'MayPreventDefault', a: a};
};
var $elm$virtual_dom$VirtualDom$on = _VirtualDom_on;
var $elm$html$Html$Events$preventDefaultOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayPreventDefault(decoder));
	});
var $annaghi$dnd_list$DnDList$dragEvents = F3(
	function (stepMsg, dragIndex, dragElementId) {
		return _List_fromArray(
			[
				A2(
				$elm$html$Html$Events$preventDefaultOn,
				'mousedown',
				A2(
					$elm$json$Json$Decode$map,
					function (msg) {
						return _Utils_Tuple2(msg, true);
					},
					A2(
						$elm$json$Json$Decode$map,
						A2(
							$elm$core$Basics$composeL,
							stepMsg,
							A2($annaghi$dnd_list$DnDList$DragStart, dragIndex, dragElementId)),
						$annaghi$dnd_list$Internal$Common$Utils$decodeCoordinatesWithButtonCheck)))
			]);
	});
var $annaghi$dnd_list$DnDList$DragEnter = function (a) {
	return {$: 'DragEnter', a: a};
};
var $annaghi$dnd_list$DnDList$DragLeave = {$: 'DragLeave'};
var $annaghi$dnd_list$DnDList$DragOver = F2(
	function (a, b) {
		return {$: 'DragOver', a: a, b: b};
	});
var $elm$virtual_dom$VirtualDom$Normal = function (a) {
	return {$: 'Normal', a: a};
};
var $elm$html$Html$Events$on = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Normal(decoder));
	});
var $elm$html$Html$Events$onMouseEnter = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseenter',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseLeave = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseleave',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseOver = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseover',
		$elm$json$Json$Decode$succeed(msg));
};
var $annaghi$dnd_list$DnDList$dropEvents = F3(
	function (stepMsg, dropIndex, dropElementId) {
		return _List_fromArray(
			[
				$elm$html$Html$Events$onMouseOver(
				stepMsg(
					A2($annaghi$dnd_list$DnDList$DragOver, dropIndex, dropElementId))),
				$elm$html$Html$Events$onMouseEnter(
				stepMsg(
					$annaghi$dnd_list$DnDList$DragEnter(dropIndex))),
				$elm$html$Html$Events$onMouseLeave(
				stepMsg($annaghi$dnd_list$DnDList$DragLeave))
			]);
	});
var $annaghi$dnd_list$Internal$Common$Utils$px = function (n) {
	return $elm$core$String$fromInt(n) + 'px';
};
var $elm$core$Basics$round = _Basics_round;
var $elm$virtual_dom$VirtualDom$style = _VirtualDom_style;
var $elm$html$Html$Attributes$style = $elm$virtual_dom$VirtualDom$style;
var $annaghi$dnd_list$Internal$Common$Utils$translate = F2(
	function (x, y) {
		return 'translate3d(' + ($annaghi$dnd_list$Internal$Common$Utils$px(x) + (', ' + ($annaghi$dnd_list$Internal$Common$Utils$px(y) + ', 0)')));
	});
var $annaghi$dnd_list$DnDList$ghostStyles = F2(
	function (movement, _v0) {
		var model = _v0.a;
		if (model.$ === 'Nothing') {
			return _List_Nil;
		} else {
			var state = model.a;
			var _v2 = state.dragElement;
			if (_v2.$ === 'Just') {
				var element = _v2.a.element;
				var viewport = _v2.a.viewport;
				var transform = function () {
					switch (movement.$) {
						case 'Horizontal':
							return A2(
								$elm$html$Html$Attributes$style,
								'transform',
								A2(
									$annaghi$dnd_list$Internal$Common$Utils$translate,
									$elm$core$Basics$round(((state.currentPosition.x - state.startPosition.x) + element.x) - viewport.x),
									$elm$core$Basics$round(element.y - viewport.y)));
						case 'Vertical':
							return A2(
								$elm$html$Html$Attributes$style,
								'transform',
								A2(
									$annaghi$dnd_list$Internal$Common$Utils$translate,
									$elm$core$Basics$round(element.x - viewport.x),
									$elm$core$Basics$round(((state.currentPosition.y - state.startPosition.y) + element.y) - viewport.y)));
						default:
							return A2(
								$elm$html$Html$Attributes$style,
								'transform',
								A2(
									$annaghi$dnd_list$Internal$Common$Utils$translate,
									$elm$core$Basics$round(((state.currentPosition.x - state.startPosition.x) + element.x) - viewport.x),
									$elm$core$Basics$round(((state.currentPosition.y - state.startPosition.y) + element.y) - viewport.y)));
					}
				}();
				var baseStyles = _List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'position', 'fixed'),
						A2($elm$html$Html$Attributes$style, 'top', '0'),
						A2($elm$html$Html$Attributes$style, 'left', '0'),
						A2(
						$elm$html$Html$Attributes$style,
						'height',
						$annaghi$dnd_list$Internal$Common$Utils$px(
							$elm$core$Basics$round(element.height))),
						A2(
						$elm$html$Html$Attributes$style,
						'width',
						$annaghi$dnd_list$Internal$Common$Utils$px(
							$elm$core$Basics$round(element.width))),
						A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
					]);
				return A2($elm$core$List$cons, transform, baseStyles);
			} else {
				return _List_Nil;
			}
		}
	});
var $annaghi$dnd_list$DnDList$info = function (_v0) {
	var model = _v0.a;
	return A2(
		$elm$core$Maybe$andThen,
		function (state) {
			return A3(
				$elm$core$Maybe$map2,
				F2(
					function (dragElement, dropElement) {
						return {currentPosition: state.currentPosition, dragElement: dragElement, dragElementId: state.dragElementId, dragIndex: state.dragIndex, dropElement: dropElement, dropElementId: state.dropElementId, dropIndex: state.dropIndex, startPosition: state.startPosition};
					}),
				state.dragElement,
				state.dropElement);
		},
		model);
};
var $annaghi$dnd_list$DnDList$Drag = function (a) {
	return {$: 'Drag', a: a};
};
var $annaghi$dnd_list$DnDList$DragEnd = {$: 'DragEnd'};
var $elm$core$Platform$Sub$none = $elm$core$Platform$Sub$batch(_List_Nil);
var $elm$browser$Browser$Events$Document = {$: 'Document'};
var $elm$browser$Browser$Events$MySub = F3(
	function (a, b, c) {
		return {$: 'MySub', a: a, b: b, c: c};
	});
var $elm$browser$Browser$Events$State = F2(
	function (subs, pids) {
		return {pids: pids, subs: subs};
	});
var $elm$browser$Browser$Events$init = $elm$core$Task$succeed(
	A2($elm$browser$Browser$Events$State, _List_Nil, $elm$core$Dict$empty));
var $elm$browser$Browser$Events$nodeToKey = function (node) {
	if (node.$ === 'Document') {
		return 'd_';
	} else {
		return 'w_';
	}
};
var $elm$browser$Browser$Events$addKey = function (sub) {
	var node = sub.a;
	var name = sub.b;
	return _Utils_Tuple2(
		_Utils_ap(
			$elm$browser$Browser$Events$nodeToKey(node),
			name),
		sub);
};
var $elm$core$Dict$merge = F6(
	function (leftStep, bothStep, rightStep, leftDict, rightDict, initialResult) {
		var stepState = F3(
			function (rKey, rValue, _v0) {
				stepState:
				while (true) {
					var list = _v0.a;
					var result = _v0.b;
					if (!list.b) {
						return _Utils_Tuple2(
							list,
							A3(rightStep, rKey, rValue, result));
					} else {
						var _v2 = list.a;
						var lKey = _v2.a;
						var lValue = _v2.b;
						var rest = list.b;
						if (_Utils_cmp(lKey, rKey) < 0) {
							var $temp$rKey = rKey,
								$temp$rValue = rValue,
								$temp$_v0 = _Utils_Tuple2(
								rest,
								A3(leftStep, lKey, lValue, result));
							rKey = $temp$rKey;
							rValue = $temp$rValue;
							_v0 = $temp$_v0;
							continue stepState;
						} else {
							if (_Utils_cmp(lKey, rKey) > 0) {
								return _Utils_Tuple2(
									list,
									A3(rightStep, rKey, rValue, result));
							} else {
								return _Utils_Tuple2(
									rest,
									A4(bothStep, lKey, lValue, rValue, result));
							}
						}
					}
				}
			});
		var _v3 = A3(
			$elm$core$Dict$foldl,
			stepState,
			_Utils_Tuple2(
				$elm$core$Dict$toList(leftDict),
				initialResult),
			rightDict);
		var leftovers = _v3.a;
		var intermediateResult = _v3.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (_v4, result) {
					var k = _v4.a;
					var v = _v4.b;
					return A3(leftStep, k, v, result);
				}),
			intermediateResult,
			leftovers);
	});
var $elm$browser$Browser$Events$Event = F2(
	function (key, event) {
		return {event: event, key: key};
	});
var $elm$browser$Browser$Events$spawn = F3(
	function (router, key, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var actualNode = function () {
			if (node.$ === 'Document') {
				return _Browser_doc;
			} else {
				return _Browser_window;
			}
		}();
		return A2(
			$elm$core$Task$map,
			function (value) {
				return _Utils_Tuple2(key, value);
			},
			A3(
				_Browser_on,
				actualNode,
				name,
				function (event) {
					return A2(
						$elm$core$Platform$sendToSelf,
						router,
						A2($elm$browser$Browser$Events$Event, key, event));
				}));
	});
var $elm$core$Dict$union = F2(
	function (t1, t2) {
		return A3($elm$core$Dict$foldl, $elm$core$Dict$insert, t2, t1);
	});
var $elm$browser$Browser$Events$onEffects = F3(
	function (router, subs, state) {
		var stepRight = F3(
			function (key, sub, _v6) {
				var deads = _v6.a;
				var lives = _v6.b;
				var news = _v6.c;
				return _Utils_Tuple3(
					deads,
					lives,
					A2(
						$elm$core$List$cons,
						A3($elm$browser$Browser$Events$spawn, router, key, sub),
						news));
			});
		var stepLeft = F3(
			function (_v4, pid, _v5) {
				var deads = _v5.a;
				var lives = _v5.b;
				var news = _v5.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, pid, deads),
					lives,
					news);
			});
		var stepBoth = F4(
			function (key, pid, _v2, _v3) {
				var deads = _v3.a;
				var lives = _v3.b;
				var news = _v3.c;
				return _Utils_Tuple3(
					deads,
					A3($elm$core$Dict$insert, key, pid, lives),
					news);
			});
		var newSubs = A2($elm$core$List$map, $elm$browser$Browser$Events$addKey, subs);
		var _v0 = A6(
			$elm$core$Dict$merge,
			stepLeft,
			stepBoth,
			stepRight,
			state.pids,
			$elm$core$Dict$fromList(newSubs),
			_Utils_Tuple3(_List_Nil, $elm$core$Dict$empty, _List_Nil));
		var deadPids = _v0.a;
		var livePids = _v0.b;
		var makeNewPids = _v0.c;
		return A2(
			$elm$core$Task$andThen,
			function (pids) {
				return $elm$core$Task$succeed(
					A2(
						$elm$browser$Browser$Events$State,
						newSubs,
						A2(
							$elm$core$Dict$union,
							livePids,
							$elm$core$Dict$fromList(pids))));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$sequence(makeNewPids);
				},
				$elm$core$Task$sequence(
					A2($elm$core$List$map, $elm$core$Process$kill, deadPids))));
	});
var $elm$browser$Browser$Events$onSelfMsg = F3(
	function (router, _v0, state) {
		var key = _v0.key;
		var event = _v0.event;
		var toMessage = function (_v2) {
			var subKey = _v2.a;
			var _v3 = _v2.b;
			var node = _v3.a;
			var name = _v3.b;
			var decoder = _v3.c;
			return _Utils_eq(subKey, key) ? A2(_Browser_decodeEvent, decoder, event) : $elm$core$Maybe$Nothing;
		};
		var messages = A2($elm$core$List$filterMap, toMessage, state.subs);
		return A2(
			$elm$core$Task$andThen,
			function (_v1) {
				return $elm$core$Task$succeed(state);
			},
			$elm$core$Task$sequence(
				A2(
					$elm$core$List$map,
					$elm$core$Platform$sendToApp(router),
					messages)));
	});
var $elm$browser$Browser$Events$subMap = F2(
	function (func, _v0) {
		var node = _v0.a;
		var name = _v0.b;
		var decoder = _v0.c;
		return A3(
			$elm$browser$Browser$Events$MySub,
			node,
			name,
			A2($elm$json$Json$Decode$map, func, decoder));
	});
_Platform_effectManagers['Browser.Events'] = _Platform_createManager($elm$browser$Browser$Events$init, $elm$browser$Browser$Events$onEffects, $elm$browser$Browser$Events$onSelfMsg, 0, $elm$browser$Browser$Events$subMap);
var $elm$browser$Browser$Events$subscription = _Platform_leaf('Browser.Events');
var $elm$browser$Browser$Events$on = F3(
	function (node, name, decoder) {
		return $elm$browser$Browser$Events$subscription(
			A3($elm$browser$Browser$Events$MySub, node, name, decoder));
	});
var $elm$browser$Browser$Events$onMouseMove = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'mousemove');
var $elm$browser$Browser$Events$onMouseUp = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'mouseup');
var $annaghi$dnd_list$DnDList$subscriptions = F2(
	function (stepMsg, _v0) {
		var model = _v0.a;
		if (model.$ === 'Nothing') {
			return $elm$core$Platform$Sub$none;
		} else {
			return $elm$core$Platform$Sub$batch(
				_List_fromArray(
					[
						$elm$browser$Browser$Events$onMouseMove(
						A2(
							$elm$json$Json$Decode$map,
							A2($elm$core$Basics$composeL, stepMsg, $annaghi$dnd_list$DnDList$Drag),
							$annaghi$dnd_list$Internal$Common$Utils$decodeCoordinates)),
						$elm$browser$Browser$Events$onMouseUp(
						$elm$json$Json$Decode$succeed(
							stepMsg($annaghi$dnd_list$DnDList$DragEnd)))
					]));
		}
	});
var $elm$core$List$drop = F2(
	function (n, list) {
		drop:
		while (true) {
			if (n <= 0) {
				return list;
			} else {
				if (!list.b) {
					return list;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs;
					n = $temp$n;
					list = $temp$list;
					continue drop;
				}
			}
		}
	});
var $elm$core$List$takeReverse = F3(
	function (n, list, kept) {
		takeReverse:
		while (true) {
			if (n <= 0) {
				return kept;
			} else {
				if (!list.b) {
					return kept;
				} else {
					var x = list.a;
					var xs = list.b;
					var $temp$n = n - 1,
						$temp$list = xs,
						$temp$kept = A2($elm$core$List$cons, x, kept);
					n = $temp$n;
					list = $temp$list;
					kept = $temp$kept;
					continue takeReverse;
				}
			}
		}
	});
var $elm$core$List$takeTailRec = F2(
	function (n, list) {
		return $elm$core$List$reverse(
			A3($elm$core$List$takeReverse, n, list, _List_Nil));
	});
var $elm$core$List$takeFast = F3(
	function (ctr, n, list) {
		if (n <= 0) {
			return _List_Nil;
		} else {
			var _v0 = _Utils_Tuple2(n, list);
			_v0$1:
			while (true) {
				_v0$5:
				while (true) {
					if (!_v0.b.b) {
						return list;
					} else {
						if (_v0.b.b.b) {
							switch (_v0.a) {
								case 1:
									break _v0$1;
								case 2:
									var _v2 = _v0.b;
									var x = _v2.a;
									var _v3 = _v2.b;
									var y = _v3.a;
									return _List_fromArray(
										[x, y]);
								case 3:
									if (_v0.b.b.b.b) {
										var _v4 = _v0.b;
										var x = _v4.a;
										var _v5 = _v4.b;
										var y = _v5.a;
										var _v6 = _v5.b;
										var z = _v6.a;
										return _List_fromArray(
											[x, y, z]);
									} else {
										break _v0$5;
									}
								default:
									if (_v0.b.b.b.b && _v0.b.b.b.b.b) {
										var _v7 = _v0.b;
										var x = _v7.a;
										var _v8 = _v7.b;
										var y = _v8.a;
										var _v9 = _v8.b;
										var z = _v9.a;
										var _v10 = _v9.b;
										var w = _v10.a;
										var tl = _v10.b;
										return (ctr > 1000) ? A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A2($elm$core$List$takeTailRec, n - 4, tl))))) : A2(
											$elm$core$List$cons,
											x,
											A2(
												$elm$core$List$cons,
												y,
												A2(
													$elm$core$List$cons,
													z,
													A2(
														$elm$core$List$cons,
														w,
														A3($elm$core$List$takeFast, ctr + 1, n - 4, tl)))));
									} else {
										break _v0$5;
									}
							}
						} else {
							if (_v0.a === 1) {
								break _v0$1;
							} else {
								break _v0$5;
							}
						}
					}
				}
				return list;
			}
			var _v1 = _v0.b;
			var x = _v1.a;
			return _List_fromArray(
				[x]);
		}
	});
var $elm$core$List$take = F2(
	function (n, list) {
		return A3($elm$core$List$takeFast, 0, n, list);
	});
var $annaghi$dnd_list$Internal$Common$Operations$splitAt = F2(
	function (i, list) {
		return _Utils_Tuple2(
			A2($elm$core$List$take, i, list),
			A2($elm$core$List$drop, i, list));
	});
var $annaghi$dnd_list$Internal$Common$Operations$afterBackward = F3(
	function (i, j, list) {
		var _v0 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, j + 1, list);
		var beginning = _v0.a;
		var rest = _v0.b;
		var _v1 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, (i - j) - 1, rest);
		var middle = _v1.a;
		var end = _v1.b;
		var _v2 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, 1, end);
		var head = _v2.a;
		var tail = _v2.b;
		return _Utils_ap(
			beginning,
			_Utils_ap(
				head,
				_Utils_ap(middle, tail)));
	});
var $annaghi$dnd_list$Internal$Common$Operations$afterForward = F3(
	function (i, j, list) {
		var _v0 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, i, list);
		var beginning = _v0.a;
		var rest = _v0.b;
		var _v1 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, (j - i) + 1, rest);
		var middle = _v1.a;
		var end = _v1.b;
		var _v2 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, 1, middle);
		var head = _v2.a;
		var tail = _v2.b;
		return _Utils_ap(
			beginning,
			_Utils_ap(
				tail,
				_Utils_ap(head, end)));
	});
var $annaghi$dnd_list$Internal$Common$Operations$insertAfter = F3(
	function (dragIndex, dropIndex, list) {
		return (_Utils_cmp(dragIndex, dropIndex) < 0) ? A3($annaghi$dnd_list$Internal$Common$Operations$afterForward, dragIndex, dropIndex, list) : ((_Utils_cmp(dropIndex, dragIndex) < 0) ? A3($annaghi$dnd_list$Internal$Common$Operations$afterBackward, dragIndex, dropIndex, list) : list);
	});
var $annaghi$dnd_list$Internal$Common$Operations$beforeBackward = F3(
	function (i, j, list) {
		var _v0 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, j, list);
		var beginning = _v0.a;
		var rest = _v0.b;
		var _v1 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, i - j, rest);
		var middle = _v1.a;
		var end = _v1.b;
		var _v2 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, 1, end);
		var head = _v2.a;
		var tail = _v2.b;
		return _Utils_ap(
			beginning,
			_Utils_ap(
				head,
				_Utils_ap(middle, tail)));
	});
var $annaghi$dnd_list$Internal$Common$Operations$beforeForward = F3(
	function (i, j, list) {
		var _v0 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, i, list);
		var beginning = _v0.a;
		var rest = _v0.b;
		var _v1 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, j - i, rest);
		var middle = _v1.a;
		var end = _v1.b;
		var _v2 = A2($annaghi$dnd_list$Internal$Common$Operations$splitAt, 1, middle);
		var head = _v2.a;
		var tail = _v2.b;
		return _Utils_ap(
			beginning,
			_Utils_ap(
				tail,
				_Utils_ap(head, end)));
	});
var $annaghi$dnd_list$Internal$Common$Operations$insertBefore = F3(
	function (dragIndex, dropIndex, list) {
		return (_Utils_cmp(dragIndex, dropIndex) < 0) ? A3($annaghi$dnd_list$Internal$Common$Operations$beforeForward, dragIndex, dropIndex, list) : ((_Utils_cmp(dropIndex, dragIndex) < 0) ? A3($annaghi$dnd_list$Internal$Common$Operations$beforeBackward, dragIndex, dropIndex, list) : list);
	});
var $annaghi$dnd_list$Internal$Common$Operations$rotate = F3(
	function (dragIndex, dropIndex, list) {
		return (_Utils_cmp(dragIndex, dropIndex) < 0) ? A3($annaghi$dnd_list$Internal$Common$Operations$afterForward, dragIndex, dropIndex, list) : ((_Utils_cmp(dropIndex, dragIndex) < 0) ? A3($annaghi$dnd_list$Internal$Common$Operations$beforeBackward, dragIndex, dropIndex, list) : list);
	});
var $annaghi$dnd_list$Internal$Common$Operations$swapAt = F3(
	function (i, j, list) {
		var item_j = A2(
			$elm$core$List$take,
			1,
			A2($elm$core$List$drop, j, list));
		var item_i = A2(
			$elm$core$List$take,
			1,
			A2($elm$core$List$drop, i, list));
		return $elm$core$List$concat(
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (index, item) {
						return _Utils_eq(index, i) ? item_j : (_Utils_eq(index, j) ? item_i : _List_fromArray(
							[item]));
					}),
				list));
	});
var $annaghi$dnd_list$Internal$Common$Operations$swap = F3(
	function (dragIndex, dropIndex, list) {
		return (!_Utils_eq(dragIndex, dropIndex)) ? A3($annaghi$dnd_list$Internal$Common$Operations$swapAt, dragIndex, dropIndex, list) : list;
	});
var $annaghi$dnd_list$DnDList$listUpdate = F4(
	function (operation, dragIndex, dropIndex, list) {
		switch (operation.$) {
			case 'InsertAfter':
				return A3($annaghi$dnd_list$Internal$Common$Operations$insertAfter, dragIndex, dropIndex, list);
			case 'InsertBefore':
				return A3($annaghi$dnd_list$Internal$Common$Operations$insertBefore, dragIndex, dropIndex, list);
			case 'Rotate':
				return A3($annaghi$dnd_list$Internal$Common$Operations$rotate, dragIndex, dropIndex, list);
			case 'Swap':
				return A3($annaghi$dnd_list$Internal$Common$Operations$swap, dragIndex, dropIndex, list);
			default:
				return list;
		}
	});
var $annaghi$dnd_list$DnDList$stateUpdate = F3(
	function (operation, dropIndex, state) {
		switch (operation.$) {
			case 'InsertAfter':
				return _Utils_update(
					state,
					{
						dragCounter: 0,
						dragIndex: (_Utils_cmp(dropIndex, state.dragIndex) < 0) ? (dropIndex + 1) : dropIndex
					});
			case 'InsertBefore':
				return _Utils_update(
					state,
					{
						dragCounter: 0,
						dragIndex: (_Utils_cmp(state.dragIndex, dropIndex) < 0) ? (dropIndex - 1) : dropIndex
					});
			case 'Rotate':
				return _Utils_update(
					state,
					{dragCounter: 0, dragIndex: dropIndex});
			case 'Swap':
				return _Utils_update(
					state,
					{dragCounter: 0, dragIndex: dropIndex});
			default:
				return _Utils_update(
					state,
					{dragCounter: 0});
		}
	});
var $annaghi$dnd_list$DnDList$update = F4(
	function (_v0, msg, _v1, list) {
		var beforeUpdate = _v0.beforeUpdate;
		var listen = _v0.listen;
		var operation = _v0.operation;
		var model = _v1.a;
		switch (msg.$) {
			case 'DragStart':
				var dragIndex = msg.a;
				var dragElementId = msg.b;
				var xy = msg.c;
				return _Utils_Tuple2(
					$annaghi$dnd_list$DnDList$Model(
						$elm$core$Maybe$Just(
							{currentPosition: xy, dragCounter: 0, dragElement: $elm$core$Maybe$Nothing, dragElementId: dragElementId, dragIndex: dragIndex, dropElement: $elm$core$Maybe$Nothing, dropElementId: dragElementId, dropIndex: dragIndex, startPosition: xy})),
					list);
			case 'Drag':
				var xy = msg.a;
				return _Utils_Tuple2(
					$annaghi$dnd_list$DnDList$Model(
						A2(
							$elm$core$Maybe$map,
							function (state) {
								return _Utils_update(
									state,
									{currentPosition: xy, dragCounter: state.dragCounter + 1});
							},
							model)),
					list);
			case 'DragOver':
				var dropIndex = msg.a;
				var dropElementId = msg.b;
				return _Utils_Tuple2(
					$annaghi$dnd_list$DnDList$Model(
						A2(
							$elm$core$Maybe$map,
							function (state) {
								return _Utils_update(
									state,
									{dropElementId: dropElementId, dropIndex: dropIndex});
							},
							model)),
					list);
			case 'DragEnter':
				var dropIndex = msg.a;
				var _v3 = _Utils_Tuple2(model, listen);
				if ((_v3.a.$ === 'Just') && (_v3.b.$ === 'OnDrag')) {
					var state = _v3.a.a;
					var _v4 = _v3.b;
					return ((state.dragCounter > 1) && (!_Utils_eq(state.dragIndex, dropIndex))) ? _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model(
							$elm$core$Maybe$Just(
								A3($annaghi$dnd_list$DnDList$stateUpdate, operation, dropIndex, state))),
						A4(
							$annaghi$dnd_list$DnDList$listUpdate,
							operation,
							state.dragIndex,
							dropIndex,
							A3(beforeUpdate, state.dragIndex, dropIndex, list))) : _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model(model),
						list);
				} else {
					return _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model(
							A2(
								$elm$core$Maybe$map,
								function (state) {
									return _Utils_update(
										state,
										{dragCounter: 0});
								},
								model)),
						list);
				}
			case 'DragLeave':
				return _Utils_Tuple2(
					$annaghi$dnd_list$DnDList$Model(
						A2(
							$elm$core$Maybe$map,
							function (state) {
								return _Utils_update(
									state,
									{dropIndex: state.dragIndex});
							},
							model)),
					list);
			case 'DragEnd':
				var _v5 = _Utils_Tuple2(model, listen);
				if ((_v5.a.$ === 'Just') && (_v5.b.$ === 'OnDrop')) {
					var state = _v5.a.a;
					var _v6 = _v5.b;
					return (!_Utils_eq(state.dragIndex, state.dropIndex)) ? _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model($elm$core$Maybe$Nothing),
						A4(
							$annaghi$dnd_list$DnDList$listUpdate,
							operation,
							state.dragIndex,
							state.dropIndex,
							A3(beforeUpdate, state.dragIndex, state.dropIndex, list))) : _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model($elm$core$Maybe$Nothing),
						list);
				} else {
					return _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model($elm$core$Maybe$Nothing),
						list);
				}
			case 'GotDragElement':
				if (msg.a.$ === 'Err') {
					return _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model(model),
						list);
				} else {
					var dragElement = msg.a.a;
					return _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model(
							A2(
								$elm$core$Maybe$map,
								function (state) {
									return _Utils_update(
										state,
										{
											dragElement: $elm$core$Maybe$Just(dragElement),
											dropElement: $elm$core$Maybe$Just(dragElement)
										});
								},
								model)),
						list);
				}
			default:
				if (msg.a.$ === 'Err') {
					return _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model(model),
						list);
				} else {
					var dropElement = msg.a.a;
					return _Utils_Tuple2(
						$annaghi$dnd_list$DnDList$Model(
							A2(
								$elm$core$Maybe$map,
								function (state) {
									return _Utils_update(
										state,
										{
											dropElement: $elm$core$Maybe$Just(dropElement)
										});
								},
								model)),
						list);
				}
		}
	});
var $annaghi$dnd_list$DnDList$create = F2(
	function (config, stepMsg) {
		return {
			commands: $annaghi$dnd_list$DnDList$commands(stepMsg),
			dragEvents: $annaghi$dnd_list$DnDList$dragEvents(stepMsg),
			dropEvents: $annaghi$dnd_list$DnDList$dropEvents(stepMsg),
			ghostStyles: $annaghi$dnd_list$DnDList$ghostStyles(config.movement),
			info: $annaghi$dnd_list$DnDList$info,
			model: $annaghi$dnd_list$DnDList$Model($elm$core$Maybe$Nothing),
			subscriptions: $annaghi$dnd_list$DnDList$subscriptions(stepMsg),
			update: $annaghi$dnd_list$DnDList$update(config)
		};
	});
var $author$project$Timeline$system = function (dir) {
	return A2(
		$annaghi$dnd_list$DnDList$create,
		_Utils_update(
			$author$project$Timeline$config,
			{
				movement: _Utils_eq(dir, $author$project$Timeline$Models$Vertical) ? $annaghi$dnd_list$DnDList$Horizontal : $annaghi$dnd_list$DnDList$Vertical
			}),
		$author$project$Timeline$DndMsg);
};
var $author$project$Timeline$default = function (posix) {
	var dir = $author$project$Timeline$Models$Horizontal;
	return {
		canEditGroups: true,
		canEditSections: true,
		canSortGroups: true,
		currentPosix: $elm$time$Time$millisToPosix(0),
		direction: dir,
		displayAxis: true,
		dnd: $author$project$Timeline$system(dir).model,
		first: posix,
		groups: $elm$core$Dict$empty,
		groupsLen: 0,
		interaction: $author$project$Timeline$Models$MouseOver(
			_Utils_Tuple2(
				$elm$time$Time$millisToPosix(-1),
				-1)),
		lineSize: 38,
		lines: 0,
		locale: $enkidatron$elm_cldr$Cldr$Locale$en,
		meshes: $elm$core$Dict$empty,
		meshesSelection: $author$project$Timeline$Models$emptySelection,
		sectionOffsetY: 0,
		sections: _List_Nil,
		selectedMeshes: $elm$core$Dict$empty,
		selection: $author$project$Timeline$Models$emptySelection,
		srcgroups: _List_Nil,
		standby: false,
		start: 0,
		wrapText: false,
		zone: $justinmimbs$timezone_data$TimeZone$europe__paris(_Utils_Tuple0),
		zoom: 50,
		zoomChange: 0
	};
};
var $elm_community$list_extra$List$Extra$maximumBy = F2(
	function (f, ls) {
		var maxBy = F2(
			function (x, _v1) {
				var y = _v1.a;
				var fy = _v1.b;
				var fx = f(x);
				return (_Utils_cmp(fx, fy) > 0) ? _Utils_Tuple2(x, fx) : _Utils_Tuple2(y, fy);
			});
		if (ls.b) {
			if (!ls.b.b) {
				var l_ = ls.a;
				return $elm$core$Maybe$Just(l_);
			} else {
				var l_ = ls.a;
				var ls_ = ls.b;
				return $elm$core$Maybe$Just(
					A3(
						$elm$core$List$foldl,
						maxBy,
						_Utils_Tuple2(
							l_,
							f(l_)),
						ls_).a);
			}
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Timeline$calcLayersSize = function (group) {
	return A2(
		$elm$core$Maybe$withDefault,
		1,
		A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Tuple$second,
				$elm$core$Basics$add(1)),
			A2($elm_community$list_extra$List$Extra$maximumBy, $elm$core$Tuple$second, group)));
};
var $author$project$Timeline$Models$duration = {day: ((24 * 60) * 60) * 1000};
var $author$project$Timeline$generateSectionBoxes = F2(
	function (_v0, boxes) {
		var gbox = _v0.a;
		var layers = _v0.b;
		return A2(
			$elm$core$List$append,
			boxes,
			A2(
				$elm$core$List$map,
				function (_v1) {
					var s = _v1.a;
					var level = _v1.b;
					return {groupId: gbox.id, line: level + gbox.position, section: s};
				},
				layers));
	});
var $elm$core$List$head = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(x);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm_community$list_extra$List$Extra$last = function (items) {
	last:
	while (true) {
		if (!items.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			if (!items.b.b) {
				var x = items.a;
				return $elm$core$Maybe$Just(x);
			} else {
				var rest = items.b;
				var $temp$items = rest;
				items = $temp$items;
				continue last;
			}
		}
	}
};
var $elm$core$List$isEmpty = function (xs) {
	if (!xs.b) {
		return true;
	} else {
		return false;
	}
};
var $author$project$Timeline$Models$isSelected = F3(
	function (gid, sid, _v0) {
		var sel = _v0.a;
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function (set) {
					return A2($elm$core$Set$member, sid, set);
				},
				A2($elm$core$Dict$get, gid, sel)));
	});
var $elm$core$Tuple$mapBoth = F3(
	function (funcA, funcB, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			funcA(x),
			funcB(y));
	});
var $elm$core$List$partition = F2(
	function (pred, list) {
		var step = F2(
			function (x, _v0) {
				var trues = _v0.a;
				var falses = _v0.b;
				return pred(x) ? _Utils_Tuple2(
					A2($elm$core$List$cons, x, trues),
					falses) : _Utils_Tuple2(
					trues,
					A2($elm$core$List$cons, x, falses));
			});
		return A3(
			$elm$core$List$foldr,
			step,
			_Utils_Tuple2(_List_Nil, _List_Nil),
			list);
	});
var $author$project$Timeline$Models$Vertex = F6(
	function (position, color, selected, border, middle, comment) {
		return {border: border, color: color, comment: comment, middle: middle, position: position, selected: selected};
	});
var $author$project$Timeline$Models$alpha = 200;
var $author$project$Timeline$Models$alphaInfo = 210;
var $escherlies$elm_color$Color$Internal$Rgba = F4(
	function (a, b, c, d) {
		return {$: 'Rgba', a: a, b: b, c: c, d: d};
	});
var $elm$core$Basics$clamp = F3(
	function (low, high, number) {
		return (_Utils_cmp(number, low) < 0) ? low : ((_Utils_cmp(number, high) > 0) ? high : number);
	});
var $escherlies$elm_color$Color$Utils$clamp01 = A2($elm$core$Basics$clamp, 0, 1);
var $escherlies$elm_color$Color$Internal$rgba = F4(
	function (r, g, b, a) {
		return A4(
			$escherlies$elm_color$Color$Internal$Rgba,
			$escherlies$elm_color$Color$Utils$clamp01(r),
			$escherlies$elm_color$Color$Utils$clamp01(g),
			$escherlies$elm_color$Color$Utils$clamp01(b),
			$escherlies$elm_color$Color$Utils$clamp01(a));
	});
var $escherlies$elm_color$Color$Transform$mapAlpha = F2(
	function (fn, _v0) {
		var r = _v0.a;
		var g = _v0.b;
		var b = _v0.c;
		var a = _v0.d;
		return A4(
			$escherlies$elm_color$Color$Internal$rgba,
			r,
			g,
			b,
			fn(a));
	});
var $escherlies$elm_color$Color$mapAlpha = $escherlies$elm_color$Color$Transform$mapAlpha;
var $author$project$Timeline$Models$pale = 0.55;
var $escherlies$elm_color$Color$Internal$rgba255 = F4(
	function (r, g, b, a) {
		return A4($escherlies$elm_color$Color$Internal$rgba, r / 255, g / 255, b / 255, a / 255);
	});
var $escherlies$elm_color$Color$rgba255 = $escherlies$elm_color$Color$Internal$rgba255;
var $author$project$Timeline$Models$colors = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'new',
			A4($escherlies$elm_color$Color$rgba255, 255, 255, 255, 230)),
			_Utils_Tuple2(
			'rose',
			A4($escherlies$elm_color$Color$rgba255, 255, 0, 170, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'rose-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 255, 0, 170, $author$project$Timeline$Models$alpha))),
			_Utils_Tuple2(
			'magenta',
			A4($escherlies$elm_color$Color$rgba255, 240, 0, 255, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'magenta-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 240, 0, 255, $author$project$Timeline$Models$alpha))),
			_Utils_Tuple2(
			'violet',
			A4($escherlies$elm_color$Color$rgba255, 140, 50, 255, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'violet-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 120, 0, 255, $author$project$Timeline$Models$alpha))),
			_Utils_Tuple2(
			'bleu',
			A4($escherlies$elm_color$Color$rgba255, 50, 110, 255, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'bleu-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 0, 110, 255, $author$project$Timeline$Models$alpha))),
			_Utils_Tuple2(
			'azur',
			A4($escherlies$elm_color$Color$rgba255, 0, 170, 255, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'azur-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 0, 170, 255, $author$project$Timeline$Models$alpha))),
			_Utils_Tuple2(
			'cyan',
			A4($escherlies$elm_color$Color$rgba255, 0, 240, 255, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'cyan-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 0, 240, 255, $author$project$Timeline$Models$alpha))),
			_Utils_Tuple2(
			'turquoise',
			A4($escherlies$elm_color$Color$rgba255, 0, 255, 170, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'turquoise-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 0, 255, 170, $author$project$Timeline$Models$alpha))),
			_Utils_Tuple2(
			'vert',
			A4($escherlies$elm_color$Color$rgba255, 0, 255, 0, $author$project$Timeline$Models$alpha + 25)),
			_Utils_Tuple2(
			'vert-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 0, 255, 0, $author$project$Timeline$Models$alpha + 25))),
			_Utils_Tuple2(
			'anis',
			A4($escherlies$elm_color$Color$rgba255, 170, 245, 0, $author$project$Timeline$Models$alpha + 25)),
			_Utils_Tuple2(
			'anis-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 170, 245, 0, $author$project$Timeline$Models$alpha + 25))),
			_Utils_Tuple2(
			'jaune',
			A4($escherlies$elm_color$Color$rgba255, 255, 220, 0, $author$project$Timeline$Models$alpha + 25)),
			_Utils_Tuple2(
			'jaune-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 255, 220, 0, $author$project$Timeline$Models$alpha + 25))),
			_Utils_Tuple2(
			'orange',
			A4($escherlies$elm_color$Color$rgba255, 255, 160, 0, $author$project$Timeline$Models$alpha + 25)),
			_Utils_Tuple2(
			'orange-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 255, 160, 0, $author$project$Timeline$Models$alpha + 25))),
			_Utils_Tuple2(
			'rouge',
			A4($escherlies$elm_color$Color$rgba255, 255, 0, 0, $author$project$Timeline$Models$alpha + 0)),
			_Utils_Tuple2(
			'rouge-pale',
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$mul($author$project$Timeline$Models$pale),
				A4($escherlies$elm_color$Color$rgba255, 255, 0, 0, $author$project$Timeline$Models$alpha + 0))),
			_Utils_Tuple2(
			'error',
			A4($escherlies$elm_color$Color$rgba255, 255, 0, 0, $author$project$Timeline$Models$alphaInfo)),
			_Utils_Tuple2(
			'problem',
			A4($escherlies$elm_color$Color$rgba255, 255, 127, 0, $author$project$Timeline$Models$alphaInfo)),
			_Utils_Tuple2(
			'warning',
			A4($escherlies$elm_color$Color$rgba255, 255, 255, 0, $author$project$Timeline$Models$alphaInfo)),
			_Utils_Tuple2(
			'ok',
			A4($escherlies$elm_color$Color$rgba255, 0, 255, 0, $author$project$Timeline$Models$alphaInfo)),
			_Utils_Tuple2(
			'gris',
			A4($escherlies$elm_color$Color$rgba255, 170, 170, 170, $author$project$Timeline$Models$alpha)),
			_Utils_Tuple2(
			'gris-pale',
			A4($escherlies$elm_color$Color$rgba255, 170, 170, 170, $author$project$Timeline$Models$alpha))
		]));
var $elm$core$Bitwise$shiftRightZfBy = _Bitwise_shiftRightZfBy;
var $escherlies$elm_color$Color$Hex$fromInt = function (hex) {
	return A4($escherlies$elm_color$Color$Internal$rgba255, (4278190080 & hex) >>> 24, (16711680 & hex) >>> 16, (65280 & hex) >>> 8, 255 & hex);
};
var $elm$core$String$fromChar = function (_char) {
	return A2($elm$core$String$cons, _char, '');
};
var $elm$core$Basics$pow = _Basics_pow;
var $rtfeldman$elm_hex$Hex$fromStringHelp = F3(
	function (position, chars, accumulated) {
		fromStringHelp:
		while (true) {
			if (!chars.b) {
				return $elm$core$Result$Ok(accumulated);
			} else {
				var _char = chars.a;
				var rest = chars.b;
				switch (_char.valueOf()) {
					case '0':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated;
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '1':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + A2($elm$core$Basics$pow, 16, position);
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '2':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (2 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '3':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (3 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '4':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (4 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '5':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (5 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '6':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (6 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '7':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (7 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '8':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (8 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case '9':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (9 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'a':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (10 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'b':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (11 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'c':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (12 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'd':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (13 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'e':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (14 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					case 'f':
						var $temp$position = position - 1,
							$temp$chars = rest,
							$temp$accumulated = accumulated + (15 * A2($elm$core$Basics$pow, 16, position));
						position = $temp$position;
						chars = $temp$chars;
						accumulated = $temp$accumulated;
						continue fromStringHelp;
					default:
						var nonHex = _char;
						return $elm$core$Result$Err(
							$elm$core$String$fromChar(nonHex) + ' is not a valid hexadecimal character.');
				}
			}
		}
	});
var $elm$core$Result$map = F2(
	function (func, ra) {
		if (ra.$ === 'Ok') {
			var a = ra.a;
			return $elm$core$Result$Ok(
				func(a));
		} else {
			var e = ra.a;
			return $elm$core$Result$Err(e);
		}
	});
var $elm$core$List$tail = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(xs);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $elm$core$String$foldr = _String_foldr;
var $elm$core$String$toList = function (string) {
	return A3($elm$core$String$foldr, $elm$core$List$cons, _List_Nil, string);
};
var $rtfeldman$elm_hex$Hex$fromString = function (str) {
	if ($elm$core$String$isEmpty(str)) {
		return $elm$core$Result$Err('Empty strings are not valid hexadecimal strings.');
	} else {
		var result = function () {
			if (A2($elm$core$String$startsWith, '-', str)) {
				var list = A2(
					$elm$core$Maybe$withDefault,
					_List_Nil,
					$elm$core$List$tail(
						$elm$core$String$toList(str)));
				return A2(
					$elm$core$Result$map,
					$elm$core$Basics$negate,
					A3(
						$rtfeldman$elm_hex$Hex$fromStringHelp,
						$elm$core$List$length(list) - 1,
						list,
						0));
			} else {
				return A3(
					$rtfeldman$elm_hex$Hex$fromStringHelp,
					$elm$core$String$length(str) - 1,
					$elm$core$String$toList(str),
					0);
			}
		}();
		var formatError = function (err) {
			return A2(
				$elm$core$String$join,
				' ',
				_List_fromArray(
					['\"' + (str + '\"'), 'is not a valid hexadecimal string because', err]));
		};
		return A2($elm$core$Result$mapError, formatError, result);
	}
};
var $elm$core$String$fromList = _String_fromList;
var $escherlies$elm_color$Color$Hex$normalizeCssFormatsFromString = function (s) {
	return $elm$core$String$fromList(
		function () {
			var _v0 = $elm$core$String$toList(s);
			_v0$2:
			while (true) {
				if ((_v0.b && _v0.b.b) && _v0.b.b.b) {
					if (!_v0.b.b.b.b) {
						var r = _v0.a;
						var _v1 = _v0.b;
						var g = _v1.a;
						var _v2 = _v1.b;
						var b = _v2.a;
						return _List_fromArray(
							[
								r,
								r,
								g,
								g,
								b,
								b,
								_Utils_chr('F'),
								_Utils_chr('F')
							]);
					} else {
						if ((_v0.b.b.b.b.b && _v0.b.b.b.b.b.b) && (!_v0.b.b.b.b.b.b.b)) {
							var r1 = _v0.a;
							var _v3 = _v0.b;
							var r0 = _v3.a;
							var _v4 = _v3.b;
							var g1 = _v4.a;
							var _v5 = _v4.b;
							var g0 = _v5.a;
							var _v6 = _v5.b;
							var b1 = _v6.a;
							var _v7 = _v6.b;
							var b0 = _v7.a;
							return _List_fromArray(
								[
									r1,
									r0,
									g1,
									g0,
									b1,
									b0,
									_Utils_chr('F'),
									_Utils_chr('F')
								]);
						} else {
							break _v0$2;
						}
					}
				} else {
					break _v0$2;
				}
			}
			var rest = _v0;
			return rest;
		}());
};
var $escherlies$elm_color$Color$Hex$stripPrefix = function (s) {
	return $elm$core$String$fromList(
		function () {
			var _v0 = $elm$core$String$toList(s);
			_v0$2:
			while (true) {
				if (_v0.b) {
					switch (_v0.a.valueOf()) {
						case '#':
							var rest = _v0.b;
							return rest;
						case '0':
							if (_v0.b.b && ('x' === _v0.b.a.valueOf())) {
								var _v1 = _v0.b;
								var rest = _v1.b;
								return rest;
							} else {
								break _v0$2;
							}
						default:
							break _v0$2;
					}
				} else {
					break _v0$2;
				}
			}
			var other = _v0;
			return other;
		}());
};
var $escherlies$elm_color$Color$Hex$intFromColorString = A2(
	$elm$core$Basics$composeL,
	A2(
		$elm$core$Basics$composeL,
		A2($elm$core$Basics$composeL, $rtfeldman$elm_hex$Hex$fromString, $elm$core$String$toLower),
		$escherlies$elm_color$Color$Hex$normalizeCssFormatsFromString),
	$escherlies$elm_color$Color$Hex$stripPrefix);
var $escherlies$elm_color$Color$Hex$fromHexString = A2(
	$elm$core$Basics$composeL,
	A2(
		$elm$core$Basics$composeL,
		$elm$core$Maybe$map($escherlies$elm_color$Color$Hex$fromInt),
		$elm$core$Result$toMaybe),
	$escherlies$elm_color$Color$Hex$intFromColorString);
var $escherlies$elm_color$Color$fromHex = $escherlies$elm_color$Color$Hex$fromHexString;
var $escherlies$elm_color$Color$setAlpha = function (a) {
	return $escherlies$elm_color$Color$mapAlpha(
		$elm$core$Basics$always(a));
};
var $author$project$Timeline$Models$findColor = function (name) {
	return $elm$core$String$isEmpty(name) ? A4($escherlies$elm_color$Color$rgba255, 170, 170, 170, $author$project$Timeline$Models$alpha) : (A2($elm$core$String$startsWith, '#', name) ? A2(
		$elm$core$Maybe$withDefault,
		A4($escherlies$elm_color$Color$rgba255, 170, 170, 170, $author$project$Timeline$Models$alpha),
		A2(
			$elm$core$Maybe$map,
			$escherlies$elm_color$Color$setAlpha($author$project$Timeline$Models$alpha / 255),
			$escherlies$elm_color$Color$fromHex(name))) : A2(
		$elm$core$Maybe$withDefault,
		A4($escherlies$elm_color$Color$rgba255, 170, 170, 170, $author$project$Timeline$Models$alpha),
		A2($elm$core$Dict$get, name, $author$project$Timeline$Models$colors)));
};
var $elm$time$Time$posixToMillis = function (_v0) {
	var millis = _v0.a;
	return millis;
};
var $escherlies$elm_color$Color$Internal$toRgba = function (_v0) {
	var r = _v0.a;
	var g = _v0.b;
	var b = _v0.c;
	var a = _v0.d;
	return {alpha: a, blue: b, green: g, red: r};
};
var $escherlies$elm_color$Color$toRgba = $escherlies$elm_color$Color$Internal$toRgba;
var $elm_explorations$webgl$WebGL$Mesh3 = F2(
	function (a, b) {
		return {$: 'Mesh3', a: a, b: b};
	});
var $elm_explorations$webgl$WebGL$triangles = $elm_explorations$webgl$WebGL$Mesh3(
	{elemSize: 3, indexSize: 0, mode: 4});
var $elm_explorations$linear_algebra$Math$Vector2$vec2 = _MJS_v2;
var $elm_explorations$linear_algebra$Math$Vector4$vec4 = _MJS_v4;
var $author$project$Timeline$Models$toMeshes = F3(
	function (isSubtotal, first, taches) {
		var firstms = $elm$time$Time$posixToMillis(first);
		return $elm_explorations$webgl$WebGL$triangles(
			A2(
				$elm$core$List$concatMap,
				function (tache) {
					var section = tache.section;
					var start = ($elm$time$Time$posixToMillis(section.start) - firstms) / 300000;
					var selected = tache.selected ? 1 : 0;
					var line = tache.line;
					var hasComment = section.hasComment ? 1 : 0;
					var end = ($elm$time$Time$posixToMillis(section.end) - firstms) / 300000;
					var middle = A2($elm_explorations$linear_algebra$Math$Vector2$vec2, (end + start) / 2, line + 0.5);
					var color = $escherlies$elm_color$Color$toRgba(
						$author$project$Timeline$Models$findColor(section.color));
					var border = isSubtotal ? 128 : (section.isLocked ? 3 : 1);
					var background = A4(
						$elm_explorations$linear_algebra$Math$Vector4$vec4,
						color.red,
						color.green,
						color.blue,
						color.alpha * (section.isLocked ? 0.3 : 1));
					var botleft = A6(
						$author$project$Timeline$Models$Vertex,
						A2($elm_explorations$linear_algebra$Math$Vector2$vec2, start, line + 1),
						background,
						selected,
						border,
						middle,
						hasComment);
					var botright = A6(
						$author$project$Timeline$Models$Vertex,
						A2($elm_explorations$linear_algebra$Math$Vector2$vec2, end, line + 1),
						background,
						selected,
						border,
						middle,
						hasComment);
					var topleft = A6(
						$author$project$Timeline$Models$Vertex,
						A2($elm_explorations$linear_algebra$Math$Vector2$vec2, start, line),
						background,
						selected,
						border,
						middle,
						hasComment);
					var topright = A6(
						$author$project$Timeline$Models$Vertex,
						A2($elm_explorations$linear_algebra$Math$Vector2$vec2, end, line),
						background,
						selected,
						border,
						middle,
						hasComment);
					return _List_fromArray(
						[
							_Utils_Tuple3(topleft, topright, botleft),
							_Utils_Tuple3(botleft, topright, botright)
						]);
				},
				taches));
	});
var $author$project$Timeline$Models$meshesForGroups = F5(
	function (firstDate, groups, groupsList, sel, oldMeshes) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (gid, _v0) {
					var mres = _v0.a;
					var sres = _v0.b;
					var _v1 = A2($elm$core$Dict$get, gid, groups);
					if (_v1.$ === 'Nothing') {
						return _Utils_Tuple2(
							A2($elm$core$Dict$remove, gid, mres),
							A2($elm$core$Dict$remove, gid, sres));
					} else {
						var group = _v1.a;
						return $elm$core$List$isEmpty(group.sections) ? _Utils_Tuple2(
							A2($elm$core$Dict$remove, gid, mres),
							A2($elm$core$Dict$remove, gid, sres)) : A3(
							$elm$core$Tuple$mapBoth,
							A2(
								$elm$core$Basics$composeR,
								A2($author$project$Timeline$Models$toMeshes, group.isSubtotal, firstDate),
								function (m) {
									return A3(
										$elm$core$Dict$insert,
										gid,
										{meshes: m, position: group.position},
										mres);
								}),
							A2(
								$elm$core$Basics$composeR,
								A2($author$project$Timeline$Models$toMeshes, group.isSubtotal, firstDate),
								function (m) {
									return A3(
										$elm$core$Dict$insert,
										gid,
										{meshes: m, position: group.position},
										sres);
								}),
							A2(
								$elm$core$List$partition,
								A2(
									$elm$core$Basics$composeR,
									function ($) {
										return $.selected;
									},
									$elm$core$Basics$not),
								A2(
									$elm$core$List$filter,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.section;
										},
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.isGlobal;
											},
											$elm$core$Basics$not)),
									A2(
										$elm$core$List$map,
										function (sbox) {
											return {
												line: sbox.line,
												section: sbox.section,
												selected: A3($author$project$Timeline$Models$isSelected, gid, sbox.section.id, sel)
											};
										},
										group.sections))));
					}
				}),
			oldMeshes,
			groupsList);
	});
var $elm$core$List$sum = function (numbers) {
	return A3($elm$core$List$foldl, $elm$core$Basics$add, 0, numbers);
};
var $elm_community$list_extra$List$Extra$find = F2(
	function (predicate, list) {
		find:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = list.a;
				var rest = list.b;
				if (predicate(first)) {
					return $elm$core$Maybe$Just(first);
				} else {
					var $temp$predicate = predicate,
						$temp$list = rest;
					predicate = $temp$predicate;
					list = $temp$list;
					continue find;
				}
			}
		}
	});
var $author$project$Moment$lessOrEqualThan = F2(
	function (a, b) {
		return _Utils_cmp(
			$elm$time$Time$posixToMillis(a),
			$elm$time$Time$posixToMillis(b)) < 1;
	});
var $author$project$Timeline$calcLayer = F2(
	function (prevlist, duration) {
		var rev = $elm$core$List$reverse(prevlist);
		var max = A2(
			$elm$core$Maybe$withDefault,
			0,
			A2(
				$elm$core$Maybe$map,
				$elm$core$Basics$add(1),
				A2(
					$elm$core$Maybe$map,
					$elm$core$Tuple$second,
					A2($elm_community$list_extra$List$Extra$maximumBy, $elm$core$Tuple$second, prevlist))));
		return A2(
			$elm$core$Maybe$withDefault,
			0,
			A2(
				$elm_community$list_extra$List$Extra$find,
				function (i) {
					return A2(
						$elm$core$Maybe$withDefault,
						true,
						A2(
							$elm$core$Maybe$map,
							function (_v1) {
								var dur = _v1.a;
								return A2($author$project$Moment$lessOrEqualThan, dur.end, duration.start);
							},
							A2(
								$elm_community$list_extra$List$Extra$find,
								function (_v0) {
									var lay = _v0.b;
									return _Utils_eq(lay, i);
								},
								rev)));
				},
				A2($elm$core$List$range, 0, max)));
	});
var $author$project$Timeline$toLayers = A2(
	$elm$core$List$foldl,
	F2(
		function (dur, layered) {
			return A2(
				$elm$core$List$append,
				layered,
				_List_fromArray(
					[
						_Utils_Tuple2(
						dur,
						A2($author$project$Timeline$calcLayer, layered, dur))
					]));
		}),
	_List_Nil);
var $elm$core$List$unzip = function (pairs) {
	var step = F2(
		function (_v0, _v1) {
			var x = _v0.a;
			var y = _v0.b;
			var xs = _v1.a;
			var ys = _v1.b;
			return _Utils_Tuple2(
				A2($elm$core$List$cons, x, xs),
				A2($elm$core$List$cons, y, ys));
		});
	return A3(
		$elm$core$List$foldr,
		step,
		_Utils_Tuple2(_List_Nil, _List_Nil),
		pairs);
};
var $author$project$Timeline$toTimelineBox = F2(
	function (groups, base) {
		var foldfunc = F2(
			function (group, res) {
				var position = A2(
					$elm$core$Maybe$withDefault,
					0,
					A2(
						$elm$core$Maybe$map,
						A2(
							$elm$core$Basics$composeR,
							$elm$core$Tuple$first,
							function (g) {
								return g.size + g.position;
							}),
						$elm_community$list_extra$List$Extra$last(res)));
				var _v3 = A2(
					$elm$core$List$partition,
					function ($) {
						return $.isGlobal;
					},
					group.sections);
				var globalSections = _v3.a;
				var normalSections = _v3.b;
				var layers = $author$project$Timeline$toLayers(normalSections);
				var size = $author$project$Timeline$calcLayersSize(layers);
				return _Utils_ap(
					res,
					_List_fromArray(
						[
							_Utils_Tuple2(
							{
								id: group.id,
								isSubtotal: group.isSubtotal,
								label: group.label,
								position: position,
								sections: _Utils_ap(
									A2(
										$elm$core$List$map,
										function (s) {
											return {groupId: group.id, line: 1, section: s};
										},
										globalSections),
									A2(
										$elm$core$List$map,
										function (_v4) {
											var s = _v4.a;
											var level = _v4.b;
											return {groupId: group.id, line: level, section: s};
										},
										layers)),
								size: size
							},
							_Utils_ap(
								A2(
									$elm$core$List$map,
									function (s) {
										return _Utils_Tuple2(s, 0);
									},
									globalSections),
								layers))
						]));
			});
		var grouped = A3($elm$core$List$foldl, foldfunc, _List_Nil, groups);
		var groupboxes = $elm$core$List$unzip(grouped).a;
		var groupsDict = $elm$core$Dict$fromList(
			A2(
				$elm$core$List$map,
				function (g) {
					return _Utils_Tuple2(g.id, g);
				},
				groupboxes));
		var sections = A2(
			$elm$core$List$sortBy,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.section;
				},
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.start;
					},
					$elm$time$Time$posixToMillis)),
			A3($elm$core$List$foldl, $author$project$Timeline$generateSectionBoxes, _List_Nil, grouped));
		var firstDate = A2(
			$elm$core$Maybe$withDefault,
			base.first,
			A2(
				$elm$core$Maybe$map,
				function (s) {
					return s.section.start;
				},
				$elm$core$List$head(sections)));
		var groupsDiff = A6(
			$elm$core$Dict$merge,
			F3(
				function (gid, _v1, res) {
					return A2($elm$core$List$cons, gid, res);
				}),
			F4(
				function (gid, a, b, res) {
					return (_Utils_eq(a, b) && _Utils_eq(firstDate, base.first)) ? res : A2($elm$core$List$cons, gid, res);
				}),
			F3(
				function (gid, _v2, res) {
					return A2($elm$core$List$cons, gid, res);
				}),
			base.groups,
			groupsDict,
			_List_Nil);
		var deltaStart = (!$elm$time$Time$posixToMillis(base.first)) ? 0 : ((base.zoom / $author$project$Timeline$Models$duration.day) * ($elm$time$Time$posixToMillis(firstDate) - $elm$time$Time$posixToMillis(base.first)));
		var _v0 = A5(
			$author$project$Timeline$Models$meshesForGroups,
			firstDate,
			groupsDict,
			groupsDiff,
			base.meshesSelection,
			_Utils_Tuple2(base.meshes, base.selectedMeshes));
		var meshes = _v0.a;
		var selected = _v0.b;
		return _Utils_update(
			base,
			{
				dnd: base.dnd,
				first: firstDate,
				groups: groupsDict,
				groupsLen: $elm$core$List$length(groups),
				lineSize: base.lineSize,
				lines: $elm$core$List$sum(
					A2(
						$elm$core$List$map,
						function ($) {
							return $.size;
						},
						groupboxes)),
				meshes: meshes,
				meshesSelection: base.meshesSelection,
				sections: sections,
				selectedMeshes: selected,
				srcgroups: groups,
				standby: base.standby,
				start: base.start + deltaStart,
				zone: base.zone,
				zoom: base.zoom,
				zoomChange: base.zoomChange
			});
	});
var $author$project$Timeline$init = F2(
	function (groups, posix) {
		return A2(
			$author$project$Timeline$toTimelineBox,
			groups,
			$author$project$Timeline$default(posix));
	});
var $author$project$Widget$languageFromFlags = function (flags) {
	var result = A2(
		$elm$json$Json$Decode$decodeValue,
		A2($elm$json$Json$Decode$field, 'language', $elm$json$Json$Decode$string),
		flags);
	if (result.$ === 'Ok') {
		var language = result.a;
		return language;
	} else {
		return 'en';
	}
};
var $enkidatron$elm_cldr$Generated$Af$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'af',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(5, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Af$af = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Af$dayPeriods, 'af||||vm.|nm.|7|afternoon1|die middag|am|vm.|evening1|die aand|midnight|middernag|morning1|die oggend|night1|die nag|pm|nm.|vm.|nm.|7|afternoon1|die middag|am|vm.|evening1|die aand|midnight|middernag|morning1|die oggend|night1|die nag|pm|nm.|v|n|7|afternoon1|m|am|v|evening1|a|midnight|mn|morning1|o|night1|n|pm|n|y-MM-dd|dd MMM y|dd MMMM y|EEEE dd MMMM y|Jan.|Feb.|Mrt.|Apr.|Mei|Jun.|Jul.|Aug.|Sep.|Okt.|Nov.|Des.|Januarie|Februarie|Maart|April|Mei|Junie|Julie|Augustus|September|Oktober|November|Desember|J|F|M|A|M|J|J|A|S|O|N|D|0|So.|Ma.|Di.|Wo.|Do.|Vr.|Sa.|Sondag|Maandag|Dinsdag|Woensdag|Donderdag|Vrydag|Saterdag|S|M|D|W|D|V|S|0|v.C.|n.C.|voor Christus|na Christus|v.C.|n.C.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|50|Bh|h B|Bhm|hh:mm B|Bhms|hh:mm:ss B|d|d|E|ccc|EBhm|E hh:mm B|EBhms|E hh:mm:ss B|Ed|E d|Ehm|E hh:mm\u202Fa|EHm|E HH:mm|Ehms|E hh:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|GGGGG y-MM-dd|GyMMM|MMM y G|GyMMMd|dd MMM y G|GyMMMEd|E dd MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd-MM|MEd|E d/M|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMEd|E d MMMM|MMMMW-count-one|\'week\' W \'van\' MMMM|MMMMW-count-other|\'week\' W \'van\' MMMM|ms|mm:ss|y|y|yM|MM-y|yMd|y-MM-dd|yMEd|E y-MM-dd|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'week\' w \'van\' Y|yw-count-other|\'week\' w \'van\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-¤||¤||¤||E0W\u00A0|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|leu|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$af = $enkidatron$elm_cldr$Generated$Af$af;
var $enkidatron$elm_cldr$Generated$Am$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'am',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Am$am = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Am$dayPeriods, 'am||||ጥዋት|ከሰዓት|8|afternoon1|ከሰዓት|am|ጥዋት|evening1|በምሽት|midnight|እኩለ ሌሊት|morning1|ጥዋት|night1|በሌሊት|noon|ቀትር|pm|ከሰዓት|ጥዋት|ከሰዓት|8|afternoon1|ከሰዓት|am|ጥዋት|evening1|በምሽት|midnight|እኩለ ሌሊት|morning1|ጥዋት|night1|በሌሊት|noon|ቀትር|pm|ከሰዓት|ጠ|ከ|8|afternoon1|ከሰዓት|am|ጠ|evening1|በምሽት|midnight|እኩለ ሌሊት|morning1|ጥዋት|night1|በሌሊት|noon|ቀ|pm|ከ|dd/MM/y|d MMM y|d MMMM y|y MMMM d, EEEE|ጃን|ፌብ|ማርች|ኤፕሪ|ሜይ|ጁን|ጁላይ|ኦገስ|ሴፕቴ|ኦክቶ|ኖቬም|ዲሴም|ጃንዋሪ|ፌብሩዋሪ|ማርች|ኤፕሪል|ሜይ|ጁን|ጁላይ|ኦገስት|ሴፕቴምበር|ኦክቶበር|ኖቬምበር|ዲሴምበር|ጃ|ፌ|ማ|ኤ|ሜ|ጁ|ጁ|ኦ|ሴ|ኦ|ኖ|ዲ|0|እሑድ|ሰኞ|ማክሰ|ረቡዕ|ሐሙስ|ዓርብ|ቅዳሜ|እሑድ|ሰኞ|ማክሰኞ|ረቡዕ|ሐሙስ|ዓርብ|ቅዳሜ|እ|ሰ|ማ|ረ|ሐ|ዓ|ቅ|0|ዓ/ዓ|ዓ/ም|ዓመተ ዓለም|ዓመተ ምሕረት|ዓ/ዓ|ዓ/ም|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|M/d/y GGGGG|GyMMM|MMM y G|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|H|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|M/d|MEd|E፣ M/d|MMM|LLL|MMMd|MMM d|MMMEd|E፣ MMM d|MMMMd|MMMM d|MMMMEd|E፣ MMMM d|MMMMW-count-one|ሳምንት W የ MMMM|MMMMW-count-other|ሳምንት W የ MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E፣ d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E፣ MMM d y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'week\' w \'of\' Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|108|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNH|የቻይና ዩዋን|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|ETB|ብር|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$am = $enkidatron$elm_cldr$Generated$Am$am;
var $enkidatron$elm_cldr$Generated$Ar$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ar',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(18, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(3, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(1, 0),
					'night1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(1, 0),
					_Utils_Tuple2(3, 0),
					'night2')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ar$ar = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ar$dayPeriods, 'ar||||ص|م|9|afternoon1|ظهرًا|afternoon2|بعد الظهر|am|ص|evening1|مساءً|morning1|فجرًا|morning2|ص|night1|في المساء|night2|ليلاً|pm|م|ص|م|9|afternoon1|ظهرًا|afternoon2|بعد الظهر|am|ص|evening1|مساءً|morning1|في الصباح|morning2|صباحًا|night1|في المساء|night2|ليلاً|pm|م|ص|م|9|afternoon1|ظهرًا|afternoon2|بعد الظهر|am|ص|evening1|مساءً|morning1|فجرًا|morning2|صباحًا|night1|منتصف الليل|night2|ليلاً|pm|م|d\u200F/M\u200F/y|dd\u200F/MM\u200F/y|d MMMM y|EEEE، d MMMM y|يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر|يناير|فبراير|مارس|أبريل|مايو|يونيو|يوليو|أغسطس|سبتمبر|أكتوبر|نوفمبر|ديسمبر|ي|ف|م|أ|و|ن|ل|غ|س|ك|ب|د|0|الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت|الأحد|الاثنين|الثلاثاء|الأربعاء|الخميس|الجمعة|السبت|ح|ن|ث|ر|خ|ج|س|0|ق.م|م|قبل الميلاد|ميلادي|ق.م|م|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1}، {0}|{1}، {0}|{1}، {0}|{1}، {0}|60|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E، d|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|dd-MM-y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E، d MMM y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d\u200F/M|MEd|E، d\u200F/M|MMdd|dd\u200F/MM|MMM|LLL|MMMd|d MMM|MMMEd|E، d MMM|MMMMd|d MMMM|MMMMEd|E، d MMMM|MMMMW-count-zero|الأسبوع W من MMMM|MMMMW-count-one|الأسبوع W من MMMM|MMMMW-count-two|الأسبوع W من MMMM|MMMMW-count-few|الأسبوع W من MMMM|MMMMW-count-many|الأسبوع W من MMMM|MMMMW-count-other|الأسبوع W من MMMM|ms|mm:ss|y|y|yM|M\u200F/y|yMd|d\u200F/M\u200F/y|yMEd|E، d\u200F/M\u200F/y|yMM|MM\u200F/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E، d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-zero|الأسبوع w من سنة Y|yw-count-one|الأسبوع w من سنة Y|yw-count-two|الأسبوع w من سنة Y|yw-count-few|الأسبوع w من سنة Y|yw-count-many|الأسبوع w من سنة Y|yw-count-other|الأسبوع w من سنة Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|\u200E-||||||E2W,|.|\u200F-|\u00A0¤|\u200F|\u00A0¤|\u200F|\u00A0¤|E0W,|.|\u200E-|%||%||%|123|AED|د.إ.\u200F|AFN|؋|AMD|֏|AOA|Kz|ARS|AR$|AUD|AU$|AZN|₼|BAM|KM|BBD|BB$|BDT|৳|BHD|د.ب.\u200F|BMD|BM$|BND|BN$|BOB|Bs|BRL|R$|BSD|BS$|BWP|P|BYN|р.|BZD|BZ$|CAD|CA$|CLP|CL$|CNY|CN¥|COP|CO$|CRC|₡|CUC|$|CUP|CU$|CZK|Kč|DKK|kr|DOP|DO$|DZD|د.ج.\u200F|EGP|ج.م.\u200F|ESP|₧|EUR|€|FJD|FJ$|FKP|£|GBP|UK£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|GY$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|IQD|د.ع.\u200F|IRR|ر.إ.|ISK|kr|JMD|JM$|JOD|د.أ.\u200F|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KWD|د.ك.\u200F|KYD|KY$|KZT|₸|LAK|₭|LBP|ل.ل.\u200F|LKR|Rs|LRD|$LR|LTL|Lt|LVL|Ls|LYD|د.ل.\u200F|MAD|د.م.\u200F|MGA|Ar|MMK|K|MNT|₮|MRU|أ.م.|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|OMR|ر.ع.\u200F|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|QAR|ر.ق.\u200F|RON|lei|RUB|₽|RWF|RF|SAR|ر.س.\u200F|SBD|SB$|SDD|د.س.\u200F|SDG|ج.س.|SEK|kr|SGD|$|SHP|£|SRD|SR$|SSP|£|STN|Db|SYP|ل.س.\u200F|THB|฿|TND|د.ت.\u200F|TOP|T$|TRY|₺|TTD|TT$|TWD|NT$|UAH|₴|USD|US$|UYU|UY$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|YER|ر.ي.\u200F|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ar = $enkidatron$elm_cldr$Generated$Ar$ar;
var $enkidatron$elm_cldr$Generated$Az$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'az',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(17, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(17, 0),
					_Utils_Tuple2(19, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(4, 0),
					'night2'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Az$az = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Az$dayPeriods, 'az||||AM|PM|10|afternoon1|gündüz|am|AM|evening1|axşamüstü|midnight|gecəyarı|morning1|sübh|morning2|səhər|night1|axşam|night2|gecə|noon|günorta|pm|PM|AM|PM|10|afternoon1|gündüz|am|AM|evening1|axşamüstü|midnight|gecəyarı|morning1|sübh|morning2|səhər|night1|axşam|night2|gecə|noon|günorta|pm|PM|a|p|10|afternoon1|gündüz|am|a|evening1|axşamüstü|midnight|gecəyarı|morning1|sübh|morning2|səhər|night1|axşam|night2|gecə|noon|g|pm|p|dd.MM.yy|d MMM y|d MMMM y|d MMMM y, EEEE|yan|fev|mar|apr|may|iyn|iyl|avq|sen|okt|noy|dek|yanvar|fevral|mart|aprel|may|iyun|iyul|avqust|sentyabr|oktyabr|noyabr|dekabr|1|2|3|4|5|6|7|8|9|10|11|12|0|B.|B.e.|Ç.a.|Ç.|C.a.|C.|Ş.|bazar|bazar ertəsi|çərşənbə axşamı|çərşənbə|cümə axşamı|cümə|şənbə|7|1|2|3|4|5|6|1|B.|B.E.|Ç.A.|Ç.|C.A.|C.|Ş.|bazar|bazar ertəsi|çərşənbə axşamı|çərşənbə|cümə axşamı|cümə|şənbə|7|1|2|3|4|5|6|e.ə.|y.e.|eramızdan əvvəl|yeni era|e.ə.|y.e.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|d E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG d MMM y|GyMMM|G MMM y|GyMMMd|G d MMM y|GyMMMEd|G d MMM y, E|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd.MM|MEd|dd.MM, E|MMM|LLL|MMMd|d MMM|MMMEd|d MMM, E|MMMMd|d MMMM|MMMMW-count-one|MMMM, W \'həftə\'|MMMMW-count-other|MMMM, W \'həftə\'|ms|mm:ss|y|y|yM|MM.y|yMd|dd.MM.y|yMEd|dd.MM.y, E|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|d MMM y, E|yMMMM|MMMM y|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|Y, w \'həftə\'|yw-count-other|Y, w \'həftə\'|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|ley|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|S£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$az = $enkidatron$elm_cldr$Generated$Az$az;
var $enkidatron$elm_cldr$Generated$Be$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Be$be = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Be$dayPeriods, 'be||||AM|PM|2|am|AM|pm|PM|AM|PM|2|am|AM|pm|PM|am|pm|2|am|am|pm|pm|d.MM.yy|d MMM y\u202F\'г\'.|d MMMM y\u202F\'г\'.|EEEE, d MMMM y\u202F\'г\'.|сту|лют|сак|кра|мая|чэр|ліп|жні|вер|кас|ліс|сне|студзеня|лютага|сакавіка|красавіка|мая|чэрвеня|ліпеня|жніўня|верасня|кастрычніка|лістапада|снежня|с|л|с|к|м|ч|л|ж|в|к|л|с|1|сту|лют|сак|кра|май|чэр|ліп|жні|вер|кас|ліс|сне|студзень|люты|сакавік|красавік|май|чэрвень|ліпень|жнівень|верасень|кастрычнік|лістапад|снежань|с|л|с|к|м|ч|л|ж|в|к|л|с|нд|пн|аў|ср|чц|пт|сб|нядзеля|панядзелак|аўторак|серада|чацвер|пятніца|субота|н|п|а|с|ч|п|с|0|да н.э.|н.э.|да нараджэння Хрыстова|ад нараджэння Хрыстова|да н.э.|н.э.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss, zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y\u202F\'г\'. G|GyMd|dd.MM.y GGGGG|GyMMM|LLL y\u202F\'г\'. G|GyMMMd|d MMM y\u202F\'г\'. G|GyMMMEd|E, d MMM y\u202F\'г\'. G|h|hh\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d.M|MEd|E, d.M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|W \'тыдзень\' MMMM|MMMMW-count-few|W \'тыдзень\' MMMM|MMMMW-count-many|W \'тыдзень\' MMMM|MMMMW-count-other|W \'тыдзень\' MMMM|ms|mm.ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|LLL y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|LLLL y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|w \'тыдзень\' Y|yw-count-few|w \'тыдзень\' Y|yw-count-many|w \'тыдзень\' Y|yw-count-other|w \'тыдзень\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|Bds$|BDT|৳|BMD|BD$|BND|$|BOB|Bs|BRL|BRL|BSD|B$|BWP|P|BYN|Br|BZD|BZ$|CAD|CAD|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|CUC$|CUP|$MN|CZK|Kč|DKK|kr|DOP|RD$|EGP|E£|ESP|₧|EUR|€|FJD|FJ$|FKP|FK£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|G$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|Íkr|JMD|J$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|CI$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|L$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|N$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|SI$|SEK|kr|SGD|S$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|TT$|TWD|NT$|UAH|₴|USD|$|UYU|$U|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$be = $enkidatron$elm_cldr$Generated$Be$be;
var $enkidatron$elm_cldr$Generated$Bg$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'bg',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(14, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(11, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(11, 0),
					_Utils_Tuple2(14, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(4, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Bg$bg = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Bg$dayPeriods, 'bg||||am|pm|8|afternoon1|следобед|am|am|evening1|вечерта|midnight|полунощ|morning1|сутринта|morning2|на обяд|night1|през нощта|pm|pm|пр.об.|сл.об.|8|afternoon1|следобед|am|пр.об.|evening1|вечерта|midnight|полунощ|morning1|сутринта|morning2|на обяд|night1|през нощта|pm|сл.об.|am|pm|8|afternoon1|следобед|am|am|evening1|вечерта|midnight|полунощ|morning1|сутринта|morning2|на обяд|night1|през нощта|pm|pm|d.MM.yy\u202F\'г\'.|d.MM.y\u202F\'г\'.|d MMMM y\u202F\'г\'.|EEEE, d MMMM y\u202F\'г\'.|яну|фев|март|апр|май|юни|юли|авг|сеп|окт|ное|дек|януари|февруари|март|април|май|юни|юли|август|септември|октомври|ноември|декември|я|ф|м|а|м|ю|ю|а|с|о|н|д|0|нд|пн|вт|ср|чт|пт|сб|неделя|понеделник|вторник|сряда|четвъртък|петък|събота|н|п|в|с|ч|п|с|0|пр.Хр.|сл.Хр.|преди Христа|след Христа|пр.Хр.|сл.Хр.|H:mm|H:mm:ss|H:mm:ss \'ч\'. z|H:mm:ss \'ч\'. zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|57|Bh|h \'ч\'. B|Bhm|h:mm \'ч\'. B|Bhms|h:mm:ss \'ч\'. B|d|d|E|ccc|EBhm|E, h:mm \'ч\'. B|EBhms|E, h:mm:ss \'ч\'. B|Ed|E, d|Ehm|E, h:mm \'ч\'. a|EHm|E, HH:mm \'ч\'.|Ehms|E, h:mm:ss \'ч\'. a|EHms|E, HH:mm:ss \'ч\'.|Gy|y\u202F\'г\'. G|GyMd|dd.MM.y\u202F\'г\'. GGGGG|GyMMM|MM.y\u202F\'г\'. G|GyMMMd|d.MM.y\u202F\'г\'. G|GyMMMEd|E, d.MM.y\u202F\'г\'. G|GyMMMM|MMMM y\u202F\'г\'. G|GyMMMMd|d MMMM y\u202F\'г\'. G|GyMMMMEd|E, d MMMM y\u202F\'г\'. G|h|h \'ч\'. a|H|HH \'ч\'.|hm|h:mm \'ч\'. a|Hm|HH:mm \'ч\'.|hms|h:mm:ss \'ч\'. a|Hms|HH:mm:ss \'ч\'.|hmsv|h:mm:ss \'ч\'. a v|Hmsv|HH:mm:ss \'ч\'. v|hmv|h:mm \'ч\'. a v|Hmv|HH:mm \'ч\'. v|M|L|Md|d.MM|MEd|E, d.MM|MMM|MM|MMMd|d.MM|MMMEd|E, d.MM|MMMM|LLLL|MMMMd|d MMMM|MMMMdd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|\'седмица\' W \'от\' MMMM|MMMMW-count-other|\'седмица\' W \'от\' MMMM|ms|m:ss|y|y\u202F\'г\'.|yM|MM.y\u202F\'г\'.|yMd|d.MM.y\u202F\'г\'.|yMEd|E, d.MM.y\u202F\'г\'.|yMMM|MM.y\u202F\'г\'.|yMMMd|d.MM.y\u202F\'г\'.|yMMMEd|E, d.MM.y\u202F\'г\'.|yMMMM|MMMM y\u202F\'г\'.|yMMMMd|d MMMM y\u202F\'г\'.|yMMMMEd|E, d MMMM y\u202F\'г\'.|yQQQ|QQQ y\u202F\'г\'.|yQQQQ|QQQQ y\u202F\'г\'.|yw-count-one|\'седмица\' w \'от\' Y \'г\'.|yw-count-other|\'седмица\' w \'от\' Y \'г\'.|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|106|AFN|Af|AMD|AMD|AOA|Kz|ARS|ARS|AUD|AUD|AZN|AZN|BAM|KM|BBD|BBD|BDT|BDT|BGN|лв.|BMD|BMD|BND|BND|BOB|Bs|BRL|BRL|BSD|BSD|BWP|P|BZD|BZD|CAD|CAD|CLP|CLP|CNY|CNY|COP|COP|CRC|CRC|CUC|$|CUP|CUP|CZK|Kč|DKK|kr|DOP|DOP|EGP|E£|ESP|₧|EUR|€|FJD|FJD|FKP|FKP|GBP|GBP|GEL|₾|GHS|GHS|GIP|GIP|GNF|FG|GTQ|Q|GYD|GYD|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|JMD|JPY|JPY|KGS|\u20C0|KHR|KHR|KMF|CF|KPW|₩|KRW|KRW|KYD|KYD|KZT|KZT|LAK|LAK|LBP|L£|LKR|Rs|LRD|LRD|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|MNT|MUR|Rs|MXN|MXN|MYR|RM|NAD|NAD|NGN|NGN|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|PYG|RON|RON|RUB|₽|RWF|RF|SBD|SBD|SEK|kr|SGD|SGD|SHP|£|SRD|SRD|SSP|SSP|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|TRY|TTD|TTD|TWD|TWD|UAH|UAH|USD|щ.д.|UYU|UYU|VEF|Bs|VND|VND|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$bg = $enkidatron$elm_cldr$Generated$Bg$bg;
var $enkidatron$elm_cldr$Generated$Bn$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'bn',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(18, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(4, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Bn$bn = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Bn$dayPeriods, 'bn||||AM|PM|8|afternoon1|দুপুর|afternoon2|বিকাল|am|AM|evening1|সন্ধ্যা|morning1|ভোর|morning2|সকাল|night1|রাত্রি|pm|PM|AM|PM|8|afternoon1|দুপুরবেলায়|afternoon2|বিকাল|am|AM|evening1|সন্ধ্যাবেলায়|morning1|ভোরবেলায়|morning2|সকালবেলায়|night1|রাত্রিবেলায়|pm|PM|AM|PM|8|afternoon1|দুপুর|afternoon2|বিকাল|am|AM|evening1|সন্ধ্যা|morning1|ভোর|morning2|সকাল|night1|রাত্রি|pm|PM|d/M/yy|d MMM, y|d MMMM, y|EEEE, d MMMM, y|জানু|ফেব|মার্চ|এপ্রি|মে|জুন|জুল|আগ|সেপ|অক্টো|নভে|ডিসে|জানুয়ারী|ফেব্রুয়ারী|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্টেম্বর|অক্টোবর|নভেম্বর|ডিসেম্বর|জা|ফে|মা|এ|মে|জুন|জু|আ|সে|অ|ন|ডি|1|জানু|ফেব|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্টেম্বর|অক্টোবর|নভেম্বর|ডিসেম্বর|জানুয়ারী|ফেব্রুয়ারী|মার্চ|এপ্রিল|মে|জুন|জুলাই|আগস্ট|সেপ্টেম্বর|অক্টোবর|নভেম্বর|ডিসেম্বর|জা|ফে|মা|এ|মে|জুন|জু|আ|সে|অ|ন|ডি|রবি|সোম|মঙ্গল|বুধ|বৃহস্পতি|শুক্র|শনি|রবিবার|সোমবার|মঙ্গলবার|বুধবার|বৃহস্পতিবার|শুক্রবার|শনিবার|র|সো|ম|বু|বৃ|শু|শ|0|খ্রিস্টপূর্ব|খৃষ্টাব্দ|খ্রিস্টপূর্ব|খ্রীষ্টাব্দ|খ্রিস্টপূর্ব|খৃষ্টাব্দ|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|52|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|dd-MM-y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM, y G|GyMMMEd|E, d MMM, y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d-M|MMdd|dd-MM|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMEd|E d MMMM|MMMMW-count-one|MMMM এর Wয় সপ্তাহ|MMMMW-count-other|MMMM এর Wয় সপ্তাহ|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|MM-y|yMMM|MMM y|yMMMd|d MMM, y|yMMMEd|E, d MMM, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y এর wতম সপ্তাহ|yw-count-other|Y এর wতম সপ্তাহ|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2I,|.|-|¤||¤||¤|E0I,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$bn = $enkidatron$elm_cldr$Generated$Bn$bn;
var $enkidatron$elm_cldr$Generated$Bs$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'bs',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Bs$bs = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Bs$dayPeriods, 'bs||||AM|PM|8|afternoon1|poslijepodne|am|AM|evening1|navečer|midnight|ponoć|morning1|ujutro|night1|po noći|noon|podne|pm|PM|prijepodne|popodne|8|afternoon1|poslijepodne|am|prijepodne|evening1|navečer|midnight|ponoć|morning1|ujutro|night1|po noći|noon|podne|pm|popodne|prijepodne|popodne|8|afternoon1|poslijepodne|am|prijepodne|evening1|navečer|midnight|ponoć|morning1|ujutro|night1|po noći|noon|podne|pm|popodne|d. M. y.|d. MMM y.|d. MMMM y.|EEEE, d. MMMM y.|jan|feb|mar|apr|maj|jun|jul|aug|sep|okt|nov|dec|januar|februar|mart|april|maj|juni|juli|august|septembar|oktobar|novembar|decembar|j|f|m|a|m|j|j|a|s|o|n|d|0|ned|pon|uto|sri|čet|pet|sub|nedjelja|ponedjeljak|utorak|srijeda|četvrtak|petak|subota|N|P|U|S|Č|P|S|1|ned|pon|uto|sri|čet|pet|sub|nedjelja|ponedjeljak|utorak|srijeda|četvrtak|petak|subota|n|p|u|s|č|p|s|p. n. e.|n. e.|prije nove ere|nove ere|p.n.e.|n. e.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1}, {0}|{1}, {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d.|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y. G|GyMd|d/M/y. G|GyMMM|MMM y. G|GyMMMd|d. MMM y. G|GyMMMEd|E, d. MMM y. G|h|h\u202Fa|H|HH|hm|hh:mm\u202Fa|Hm|HH:mm|hms|hh:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa (v)|Hmsv|HH:mm:ss (v)|hmv|h:mm\u202Fa (v)|Hmv|HH:mm (v)|M|L|Md|d.M.|MEd|E, d.M.|MMdd|d. M.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMEd|E, d. MMMM|MMMMW-count-one|W. \'sedmica\' \'mjesec\' MMMM|MMMMW-count-few|W. \'sedmica\' \'mjesec\' MMMM|MMMMW-count-other|W. \'sedmica\' \'mjesec\' MMMM|ms|mm:ss|y|y.|yM|MM/y|yMd|d.M.y.|yMEd|E, d.M.y.|yMM|M/y|yMMM|MMM y.|yMMMd|d. MMM y.|yMMMEd|E, d. MMM y.|yMMMM|LLLL y.|yQQQ|QQQ y.|yQQQQ|QQQQ y.|yw-count-one|w. \'sedmica\' \'u\' Y.|yw-count-few|w. \'sedmica\' \'u\' Y.|yw-count-other|w. \'sedmica\' \'u\' Y.|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RSD|din.|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|XPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$bs = $enkidatron$elm_cldr$Generated$Bs$bs;
var $enkidatron$elm_cldr$Generated$Ca$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ca',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(19, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(24, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ca$ca = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ca$dayPeriods, 'ca||||a.\u202Fm.|p.\u202Fm.|9|afternoon1|migdia|afternoon2|tarda|am|a.\u202Fm.|evening1|vespre|midnight|mitjanit|morning1|matinada|morning2|matí|night1|nit|pm|p.\u202Fm.|a.\u00A0m.|p.\u00A0m.|9|afternoon1|migdia|afternoon2|tarda|am|a.\u00A0m.|evening1|vespre|midnight|mitjanit|morning1|matinada|morning2|matí|night1|nit|pm|p.\u00A0m.|a.\u202Fm.|p.\u202Fm.|9|afternoon1|migdia|afternoon2|tarda|am|a.\u202Fm.|evening1|vespre|midnight|mitjanit|morning1|mat.|morning2|matí|night1|nit|pm|p.\u202Fm.|d/M/yy|d MMM y|d MMMM \'del\' y|EEEE, d MMMM \'del\' y|de gen.|de febr.|de març|d’abr.|de maig|de juny|de jul.|d’ag.|de set.|d’oct.|de nov.|de des.|de gener|de febrer|de març|d’abril|de maig|de juny|de juliol|d’agost|de setembre|d’octubre|de novembre|de desembre|GN|FB|MÇ|AB|MG|JN|JL|AG|ST|OC|NV|DS|1|gen.|febr.|març|abr.|maig|juny|jul.|ag.|set.|oct.|nov.|des.|gener|febrer|març|abril|maig|juny|juliol|agost|setembre|octubre|novembre|desembre|GN|FB|MÇ|AB|MG|JN|JL|AG|ST|OC|NV|DS|dg.|dl.|dt.|dc.|dj.|dv.|ds.|diumenge|dilluns|dimarts|dimecres|dijous|divendres|dissabte|dg.|dl.|dt.|dc.|dj.|dv.|ds.|0|aC|dC|abans de Crist|després de Crist|aC|dC|H:mm|H:mm:ss|H:mm:ss z|H:mm:ss (zzzz)|{1} {0}|{1}, {0}|{1}, {0}|{1}, {0}|59|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E H:mm|Ehms|E h:mm:ss\u202Fa|EHms|E H:mm:ss|Gy|y G|GyMd|dd-MM-y GGGGG|GyMMM|LLL y G|GyMMMd|d MMM \'del\' y G|GyMMMEd|E, d MMM \'del\' y G|GyMMMM|LLLL \'del\' y G|GyMMMMd|d MMMM \'del\' y G|GyMMMMEd|E, d MMMM \'del\' y G|h|h\u202Fa|H|H|hm|h:mm\u202Fa|Hm|H:mm|hms|h:mm:ss\u202Fa|Hms|H:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|H:mm:ss v|hmsvvvv|h:mm:ss\u202Fa (vvvv)|Hmsvvvv|H:mm:ss (vvvv)|hmv|h:mm\u202Fa v|Hmv|H:mm v|hmvvvv|h:mm\u202Fa (vvvv)|Hmvvvv|H:mm (vvvv)|M|L|Md|d/M|MEd|E d/M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|\'setmana\' W MMMM|MMMMW-count-other|\'setmana\' W MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|LLL \'del\' y|yMMMd|d MMM \'del\' y|yMMMEd|E, d MMM y|yMMMM|LLLL \'del\' y|yMMMMd|d MMMM \'del\' y|yMMMMEd|E, d MMMM \'del\' y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'setmana\' w \'del\' Y|yw-count-other|\'setmana\' w \'del\' Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|USD|UYU|$|VEF|Bs F|VND|₫|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ca = $enkidatron$elm_cldr$Generated$Ca$ca;
var $enkidatron$elm_cldr$Generated$Chr$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'chr',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(24, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Chr$chr = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Chr$dayPeriods, 'chr||||ᏌᎾᎴ|ᏒᎯᏱᎢ|5|afternoon1|ᏒᎯᏱᎢᏗᏢ|am|ᏌᎾᎴ|morning1|ᏌᎾᎴ|noon|ᎢᎦ|pm|ᏒᎯᏱᎢ|ᏌᎾᎴ|ᏒᎯᏱᎢᏗᏢ|5|afternoon1|ᏒᎯᏱᎢᏗᏢ|am|ᏌᎾᎴ|morning1|ᏌᎾᎴ|noon|ᎢᎦ|pm|ᏒᎯᏱᎢᏗᏢ|Ꮜ|Ꮢ|5|afternoon1|ᏒᎯᏱᎢᏗᏢ|am|Ꮜ|morning1|ᏌᎾᎴ|noon|Ꭲ|pm|Ꮢ|M/d/yy|MMM d, y|MMMM d, y|EEEE, MMMM d, y|ᎤᏃ|ᎧᎦ|ᎠᏅ|ᎧᏬ|ᎠᏂ|ᏕᎭ|ᎫᏰ|ᎦᎶ|ᏚᎵ|ᏚᏂ|ᏅᏓ|ᎥᏍ|ᎤᏃᎸᏔᏅ|ᎧᎦᎵ|ᎠᏅᏱ|ᎧᏬᏂ|ᎠᏂᏍᎬᏘ|ᏕᎭᎷᏱ|ᎫᏰᏉᏂ|ᎦᎶᏂ|ᏚᎵᏍᏗ|ᏚᏂᏅᏗ|ᏅᏓᏕᏆ|ᎥᏍᎩᏱ|Ꭴ|Ꭷ|Ꭰ|Ꭷ|Ꭰ|Ꮥ|Ꭻ|Ꭶ|Ꮪ|Ꮪ|Ꮕ|Ꭵ|0|ᏆᏍᎬ|ᏉᏅᎯ|ᏔᎵᏁ|ᏦᎢᏁ|ᏅᎩᏁ|ᏧᎾᎩ|ᏈᏕᎾ|ᎤᎾᏙᏓᏆᏍᎬ|ᎤᎾᏙᏓᏉᏅᎯ|ᏔᎵᏁᎢᎦ|ᏦᎢᏁᎢᎦ|ᏅᎩᏁᎢᎦ|ᏧᎾᎩᎶᏍᏗ|ᎤᎾᏙᏓᏈᏕᎾ|Ꮖ|Ꮙ|Ꮤ|Ꮶ|Ꮕ|Ꮷ|Ꭴ|0|BC|AD|ᏧᏓᎷᎸ ᎤᎷᎯᏍᏗ ᎦᎶᏁᏛ|ᎠᏃ ᏙᎻᏂ|BC|AD|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|M/d/y GGGGG|GyMMM|MMM y G|GyMMMd|MMM d, y G|GyMMMEd|E, MMM d, y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|M/d|MEd|E, M/d|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMW-count-one|ᏒᎾᏙᏓᏆᏍᏗ W ᎾᎿ MMMM|MMMMW-count-other|ᏒᎾᏙᏓᏆᏍᏗ W ᎾᎿ MMMM|ms|mm:ss|y|y|yM|M/y|yMd|M/d/y|yMEd|E, M/d/y|yMMM|MMM y|yMMMd|MMM d, y|yMMMEd|E, MMM d, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|’ᏒᎾᏙᏓᏆᏍᏗ’ w ’ᎾᎿ’ Y|yw-count-other|’ᏒᎾᏙᏓᏆᏍᏗ’ w ’ᎾᎿ’ Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$chr = $enkidatron$elm_cldr$Generated$Chr$chr;
var $enkidatron$elm_cldr$Generated$Cs$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'cs',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(9, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(9, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Cs$cs = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Cs$dayPeriods, 'cs||||dop.|odp.|9|afternoon1|odp.|am|dop.|evening1|več.|midnight|půln.|morning1|r.|morning2|dop.|night1|v n.|noon|pol.|pm|odp.|dop.|odp.|9|afternoon1|odpoledne|am|dop.|evening1|večer|midnight|půlnoc|morning1|ráno|morning2|dopoledne|night1|v noci|noon|poledne|pm|odp.|dop.|odp.|9|afternoon1|o.|am|dop.|evening1|v.|midnight|půl.|morning1|r.|morning2|d.|night1|n.|noon|pol.|pm|odp.|dd.MM.yy|d. M. y|d. MMMM y|EEEE d. MMMM y|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro|ledna|února|března|dubna|května|června|července|srpna|září|října|listopadu|prosince|1|2|3|4|5|6|7|8|9|10|11|12|1|led|úno|bře|dub|kvě|čvn|čvc|srp|zář|říj|lis|pro|leden|únor|březen|duben|květen|červen|červenec|srpen|září|říjen|listopad|prosinec|1|2|3|4|5|6|7|8|9|10|11|12|ne|po|út|st|čt|pá|so|neděle|pondělí|úterý|středa|čtvrtek|pátek|sobota|N|P|Ú|S|Č|P|S|0|př. n. l.|n. l.|před naším letopočtem|našeho letopočtu|př.n.l.|n.l.|H:mm|H:mm:ss|H:mm:ss z|H:mm:ss, zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|62|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d.|Ehm|E h:mm\u202Fa|EHm|E H:mm|Ehms|E h:mm:ss\u202Fa|EHms|E H:mm:ss|Gy|y G|GyMd|d. M. y GGGGG|GyMMM|LLLL y G|GyMMMd|d. M. y G|GyMMMEd|E d. M. y G|GyMMMMd|d. MMMM y G|GyMMMMEd|E d. MMMM y G|h|h\u202Fa|H|H|hm|h:mm\u202Fa|Hm|H:mm|hms|h:mm:ss\u202Fa|Hms|H:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|H:mm:ss v|hmsvvvv|h:mm:ss\u202Fa, vvvv|Hmsvvvv|H:mm:ss, vvvv|hmv|h:mm\u202Fa v|Hmv|H:mm v|hmvvvv|h:mm\u202Fa, vvvv|Hmvvvv|H:mm, vvvv|M|L|Md|d. M.|MEd|E d. M.|MMM|LLL|MMMd|d. M.|MMMEd|E d. M.|MMMMd|d. MMMM|MMMMEd|E d. MMMM|MMMMW-count-one|W. \'týden\' MMMM|MMMMW-count-few|W. \'týden\' MMMM|MMMMW-count-many|W. \'týden\' MMMM|MMMMW-count-other|W. \'týden\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d. M. y|yMEd|E d. M. y|yMMM|LLLL y|yMMMd|d. M. y|yMMMEd|E d. M. y|yMMMM|LLLL y|yMMMMd|d. MMMM y|yMMMMEd|E d. MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|w. \'týden\' \'roku\' Y|yw-count-few|w. \'týden\' \'roku\' Y|yw-count-many|w. \'týden\' \'roku\' Y|yw-count-other|w. \'týden\' \'roku\' Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|\u00A0%||\u00A0%||\u00A0%|109|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CSK|Kčs|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XEU|ECU|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$cs = $enkidatron$elm_cldr$Generated$Cs$cs;
var $enkidatron$elm_cldr$Generated$Cy$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'cy',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Cy$cy = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Cy$dayPeriods, 'cy||||AM|PM|7|afternoon1|y prynhawn|am|AM|evening1|yr hwyr|midnight|canol nos|morning1|y bore|noon|canol dydd|pm|PM|yb|yh|7|afternoon1|y prynhawn|am|yb|evening1|yr hwyr|midnight|canol nos|morning1|y bore|noon|canol dydd|pm|yh|b|h|7|afternoon1|yn y prynhawn|am|b|evening1|min nos|midnight|canol nos|morning1|yn y bore|noon|canol dydd|pm|h|dd/MM/yy|d MMM y|d MMMM y|EEEE, d MMMM y|Ion|Chwef|Maw|Ebr|Mai|Meh|Gorff|Awst|Medi|Hyd|Tach|Rhag|Ionawr|Chwefror|Mawrth|Ebrill|Mai|Mehefin|Gorffennaf|Awst|Medi|Hydref|Tachwedd|Rhagfyr|I|Ch|M|E|M|M|G|A|M|H|T|Rh|1|Ion|Chw|Maw|Ebr|Mai|Meh|Gor|Awst|Medi|Hyd|Tach|Rhag|Ionawr|Chwefror|Mawrth|Ebrill|Mai|Mehefin|Gorffennaf|Awst|Medi|Hydref|Tachwedd|Rhagfyr|I|Ch|M|E|M|M|G|A|M|H|T|Rh|Sul|Llun|Maw|Mer|Iau|Gwen|Sad|Dydd Sul|Dydd Llun|Dydd Mawrth|Dydd Mercher|Dydd Iau|Dydd Gwener|Dydd Sadwrn|S|Ll|M|M|I|G|S|1|Sul|Llun|Maw|Mer|Iau|Gwe|Sad|Dydd Sul|Dydd Llun|Dydd Mawrth|Dydd Mercher|Dydd Iau|Dydd Gwener|Dydd Sadwrn|S|Ll|M|M|I|G|S|CC|OC|Cyn Crist|Oed Crist|C|O|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1}, {0}|{1}, {0}|58|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|M/d/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|MMMM d|MMMMW-count-zero|\'wythnos\' W \'o\' MMMM|MMMMW-count-one|\'wythnos\' W \'o\' MMMM|MMMMW-count-two|\'wythnos\' W \'o\' MMMM|MMMMW-count-few|\'wythnos\' W \'o\' MMMM|MMMMW-count-many|\'wythnos\' W \'o\' MMMM|MMMMW-count-other|\'wythnos\' W \'o\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQ|Q y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-zero|\'wythnos\' w \'o\' Y|yw-count-one|\'wythnos\' w \'o\' Y|yw-count-two|\'wythnos\' w \'o\' Y|yw-count-few|\'wythnos\' w \'o\' Y|yw-count-many|\'wythnos\' w \'o\' Y|yw-count-other|\'wythnos\' w \'o\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|TK|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|BWP|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|ZAR|ZMW|ZMW|'));
var $enkidatron$elm_cldr$Cldr$Locale$cy = $enkidatron$elm_cldr$Generated$Cy$cy;
var $enkidatron$elm_cldr$Generated$Da$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'da',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(5, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Da$da = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Da$dayPeriods, 'da||||AM|PM|8|afternoon1|om eftermiddagen|am|AM|evening1|om aftenen|midnight|midnat|morning1|om morgenen|morning2|om formiddagen|night1|om natten|pm|PM|AM|PM|8|afternoon1|om eftermiddagen|am|AM|evening1|om aftenen|midnight|midnat|morning1|om morgenen|morning2|om formiddagen|night1|om natten|pm|PM|a|p|8|afternoon1|om eftermiddagen|am|a|evening1|om aftenen|midnight|midnat|morning1|om morgenen|morning2|om formiddagen|night1|om natten|pm|p|dd.MM.y|d. MMM y|d. MMMM y|EEEE \'den\' d. MMMM y|jan.|feb.|mar.|apr.|maj|jun.|jul.|aug.|sep.|okt.|nov.|dec.|januar|februar|marts|april|maj|juni|juli|august|september|oktober|november|december|J|F|M|A|M|J|J|A|S|O|N|D|0|søn.|man.|tirs.|ons.|tors.|fre.|lør.|søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag|S|M|T|O|T|F|L|0|f.Kr.|e.Kr.|før Kristus|efter Kristus|fKr|eKr|HH.mm|HH.mm.ss|HH.mm.ss z|HH.mm.ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|52|Bh|h B|Bhm|h.mm B|Bhms|h.mm.ss B|d|d.|E|ccc|EBhm|E h.mm B|EBhms|E h.mm.ss B|Ed|E \'den\' d.|Ehm|E h.mm\u202Fa|EHm|E HH.mm|Ehms|E h.mm.ss\u202Fa|EHms|E HH.mm.ss|Gy|y G|GyMd|d.M.y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E d. MMM y G|h|h\u202Fa|H|HH|hm|h.mm\u202Fa|Hm|HH.mm|hms|h.mm.ss\u202Fa|Hms|HH.mm.ss|hmsv|h.mm.ss\u202Fa v|Hmsv|HH.mm.ss v|hmv|h.mm\u202Fa v|Hmv|HH.mm v|M|M|Md|d.M|MEd|E d.M|MMdd|dd.MM|MMM|MMM|MMMd|d. MMM|MMMEd|E d. MMM|MMMMd|d. MMMM|MMMMEd|E d. MMMM|MMMMW-count-one|W. \'uge\' \'i\' MMMM|MMMMW-count-other|W. \'uge\' \'i\' MMMM|ms|mm.ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E d.M.y|yMM|MM.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E d. MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'uge\' w \'i\' Y|yw-count-other|\'uge\' w \'i\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|Br.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr.|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr.|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr.|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RWF|RF|SBD|$|SEK|kr.|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$da = $enkidatron$elm_cldr$Generated$Da$da;
var $enkidatron$elm_cldr$Generated$De$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'de',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(18, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(5, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$De$de = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$De$dayPeriods, 'de||||AM|PM|9|afternoon1|mittags|afternoon2|nachm.|am|AM|evening1|abends|midnight|Mitternacht|morning1|morgens|morning2|vorm.|night1|nachts|pm|PM|AM|PM|9|afternoon1|mittags|afternoon2|nachmittags|am|AM|evening1|abends|midnight|Mitternacht|morning1|morgens|morning2|vormittags|night1|nachts|pm|PM|AM|PM|9|afternoon1|mittags|afternoon2|nachm.|am|AM|evening1|abends|midnight|Mitternacht|morning1|morgens|morning2|vorm.|night1|nachts|pm|PM|dd.MM.yy|dd.MM.y|d. MMMM y|EEEE, d. MMMM y|Jan.|Feb.|März|Apr.|Mai|Juni|Juli|Aug.|Sept.|Okt.|Nov.|Dez.|Januar|Februar|März|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember|J|F|M|A|M|J|J|A|S|O|N|D|1|Jan|Feb|Mär|Apr|Mai|Jun|Jul|Aug|Sep|Okt|Nov|Dez|Januar|Februar|März|April|Mai|Juni|Juli|August|September|Oktober|November|Dezember|J|F|M|A|M|J|J|A|S|O|N|D|So.|Mo.|Di.|Mi.|Do.|Fr.|Sa.|Sonntag|Montag|Dienstag|Mittwoch|Donnerstag|Freitag|Samstag|S|M|D|M|D|F|S|1|So|Mo|Di|Mi|Do|Fr|Sa|Sonntag|Montag|Dienstag|Mittwoch|Donnerstag|Freitag|Samstag|S|M|D|M|D|F|S|v. Chr.|n. Chr.|v. Chr.|n. Chr.|v. Chr.|n. Chr.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d.|Ehm|E h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|dd.MM.y G|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E, d. MMM y G|h|h \'Uhr\' a|H|HH \'Uhr\'|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d.M.|MEd|E, d.M.|MMd|d.MM.|MMdd|dd.MM.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMEd|E, d. MMMM|MMMMW-count-one|\'Woche\' W \'im\' MMMM|MMMMW-count-other|\'Woche\' W \'im\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d.M.y|yMEd|E, d.M.y|yMM|MM.y|yMMdd|dd.MM.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E, d. MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'Woche\' w \'des\' \'Jahres\' Y|yw-count-other|\'Woche\' w \'des\' \'Jahres\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|111|AFN|؋|AMD|֏|AOA|Kz|ARS|$|ATS|öS|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BGM|BGK|BGO|BGJ|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|Cub$|CUP|$|CZK|Kč|DEM|DM|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|Fl£|GBP|£|GEL|₾|GHS|₵|GIP|£|GNF|F.G.|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|FC|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RUR|р.|RWF|F.Rw|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|SYP|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|K|'));
var $enkidatron$elm_cldr$Cldr$Locale$de = $enkidatron$elm_cldr$Generated$De$de;
var $enkidatron$elm_cldr$Generated$Dsb$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Dsb$dsb = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Dsb$dayPeriods, 'dsb||||dop.|wótp.|2|am|dop.|pm|wótp.|dopołdnja|wótpołdnja|2|am|dopołdnja|pm|wótpołdnja|dop.|wótp.|2|am|dop.|pm|wótp.|d.M.yy|d.M.y|d. MMMM y|EEEE, d. MMMM y|jan.|feb.|měr.|apr.|maj.|jun.|jul.|awg.|sep.|okt.|now.|dec.|januara|februara|měrca|apryla|maja|junija|julija|awgusta|septembra|oktobra|nowembra|decembra|j|f|m|a|m|j|j|a|s|o|n|d|1|jan|feb|měr|apr|maj|jun|jul|awg|sep|okt|now|dec|januar|februar|měrc|apryl|maj|junij|julij|awgust|september|oktober|nowember|december|j|f|m|a|m|j|j|a|s|o|n|d|nje|pón|wał|srj|stw|pět|sob|njeźela|pónjeźele|wałtora|srjoda|stwórtk|pětk|sobota|n|p|w|s|s|p|s|0|pś.Chr.n.|pó Chr.n.|pśed Kristusowym naroźenim|pó Kristusowem naroźenju|pś.Chr.n.|pó Chr.n.|H:mm|H:mm:ss|H:mm:ss z|H:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|53|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d.|Ehm|E, h:mm\u202Fa|EHm|E, \'zeg\'. H:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|d.M.y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E, d. MMM y G|h|h\u202Fa|H|\'zeg\'. H|hm|h:mm\u202Fa|Hm|\'zeg\'. H:mm|hms|h:mm:ss\u202Fa|Hms|H:mm:ss|hmsv|h:mm:ss a v|Hmsv|H:mm:ss v|hmv|h:mm a v|Hmv|H:mm v|M|L|Md|d.M.|MEd|E, d.M.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMW-count-one|W. \'tyźeń\' MMMM|MMMMW-count-two|W. \'tyźeń\' MMMM|MMMMW-count-few|W. \'tyźeń\' MMMM|MMMMW-count-other|W. \'tyźeń\' MMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E, d. MMM y|yMMMM|LLLL y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|w. \'tyźeń\' \'lěta\' Y|yw-count-two|w. \'tyźeń\' \'lěta\' Y|yw-count-few|w. \'tyźeń\' \'lěta\' Y|yw-count-other|w. \'tyźeń\' \'lěta\' Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$dsb = $enkidatron$elm_cldr$Generated$Dsb$dsb;
var $enkidatron$elm_cldr$Generated$El$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'el',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(17, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(17, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(4, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$El$el = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$El$dayPeriods, 'el||||π.μ.|μ.μ.|6|afternoon1|μεσημ.|am|π.μ.|evening1|απόγ.|morning1|πρωί|night1|βράδυ|pm|μ.μ.|π.μ.|μ.μ.|6|afternoon1|το μεσημέρι|am|π.μ.|evening1|το απόγευμα|morning1|το πρωί|night1|το βράδυ|pm|μ.μ.|πμ|μμ|6|afternoon1|μεσημ.|am|πμ|evening1|απόγ.|morning1|πρωί|night1|βράδυ|pm|μμ|d/M/yy|d MMM y|d MMMM y|EEEE d MMMM y|Ιαν|Φεβ|Μαρ|Απρ|Μαΐ|Ιουν|Ιουλ|Αυγ|Σεπ|Οκτ|Νοε|Δεκ|Ιανουαρίου|Φεβρουαρίου|Μαρτίου|Απριλίου|Μαΐου|Ιουνίου|Ιουλίου|Αυγούστου|Σεπτεμβρίου|Οκτωβρίου|Νοεμβρίου|Δεκεμβρίου|Ι|Φ|Μ|Α|Μ|Ι|Ι|Α|Σ|Ο|Ν|Δ|1|Ιαν|Φεβ|Μάρ|Απρ|Μάι|Ιούν|Ιούλ|Αύγ|Σεπ|Οκτ|Νοέ|Δεκ|Ιανουάριος|Φεβρουάριος|Μάρτιος|Απρίλιος|Μάιος|Ιούνιος|Ιούλιος|Αύγουστος|Σεπτέμβριος|Οκτώβριος|Νοέμβριος|Δεκέμβριος|Ι|Φ|Μ|Α|Μ|Ι|Ι|Α|Σ|Ο|Ν|Δ|Κυρ|Δευ|Τρί|Τετ|Πέμ|Παρ|Σάβ|Κυριακή|Δευτέρα|Τρίτη|Τετάρτη|Πέμπτη|Παρασκευή|Σάββατο|Κ|Δ|Τ|Τ|Π|Π|Σ|0|π.Χ.|μ.Χ.|προ Χριστού|μετά Χριστόν|π.Χ.|μ.Χ.|h:mm\u202Fa|h:mm:ss\u202Fa|h:mm:ss\u202Fa z|h:mm:ss\u202Fa zzzz|{1}, {0}|{1}, {0}|{1} - {0}|{1} - {0}|50|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|LLL y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E d/M|MMM|MMM|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMEd|E d MMMM|MMMMW-count-one|εβδομάδα W του MMMM|MMMMW-count-other|εβδομάδα W του MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|LLLL y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|εβδομάδα w του Y|yw-count-other|εβδομάδα w του Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GRD|Δρχ|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$el = $enkidatron$elm_cldr$Generated$El$el;
var $enkidatron$elm_cldr$Generated$Es$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'es',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				])),
			_Utils_Tuple2(
			'es_co',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Es$es = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Es$dayPeriods, 'es||||a.\u202Fm.|p.\u202Fm.|7|am|a.\u202Fm.|evening1|de la tarde|morning1|de la madrugada|morning2|de la mañana|night1|de la noche|noon|del mediodía|pm|p.\u202Fm.|a.\u00A0m.|p.\u00A0m.|7|am|a.\u00A0m.|evening1|de la tarde|morning1|de la madrugada|morning2|de la mañana|night1|de la noche|noon|del mediodía|pm|p.\u00A0m.|a.\u202Fm.|p.\u202Fm.|7|am|a.\u202Fm.|evening1|de la tarde|morning1|de la madrugada|morning2|de la mañana|night1|de la noche|noon|del mediodía|pm|p.\u202Fm.|d/M/yy|d MMM y|d \'de\' MMMM \'de\' y|EEEE, d \'de\' MMMM \'de\' y|ene|feb|mar|abr|may|jun|jul|ago|sept|oct|nov|dic|enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|E|F|M|A|M|J|J|A|S|O|N|D|0|dom|lun|mar|mié|jue|vie|sáb|domingo|lunes|martes|miércoles|jueves|viernes|sábado|D|L|M|X|J|V|S|0|a. C.|d. C.|antes de Cristo|después de Cristo|a. C.|d. C.|H:mm|H:mm:ss|H:mm:ss z|H:mm:ss (zzzz)|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|60|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E, h:mm\u202Fa|EHm|E, H:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, H:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|GyMMMM|MMMM \'de\' y G|GyMMMMd|d \'de\' MMMM \'de\' y G|GyMMMMEd|E, d \'de\' MMMM \'de\' y G|h|h\u202Fa|H|H|hm|h:mm\u202Fa|Hm|H:mm|hms|h:mm:ss\u202Fa|Hms|H:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|H:mm:ss v|hmsvvvv|h:mm:ss\u202Fa (vvvv)|Hmsvvvv|H:mm:ss (vvvv)|hmv|h:mm\u202Fa v|Hmv|H:mm v|M|L|Md|d/M|MEd|E, d/M|MMd|d/M|MMdd|d/M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d \'de\' MMMM|MMMMEd|E, d \'de\' MMMM|MMMMW-count-one|\'semana\' W \'de\' MMMM|MMMMW-count-other|\'semana\' W \'de\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|EEE, d/M/y|yMM|M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|EEE, d MMM y|yMMMM|MMMM \'de\' y|yMMMMd|d \'de\' MMMM \'de\' y|yMMMMEd|EEE, d \'de\' MMMM \'de\' y|yQQQ|QQQ y|yQQQQ|QQQQ \'de\' y|yw-count-one|\'semana\' w \'de\' Y|yw-count-other|\'semana\' w \'de\' Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|EGP|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|XAF|XCD|XCD|XOF|XOF|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$es = $enkidatron$elm_cldr$Generated$Es$es;
var $enkidatron$elm_cldr$Generated$Et$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'et',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(23, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(23, 0),
					_Utils_Tuple2(5, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Et$et = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Et$dayPeriods, 'et||||AM|PM|8|afternoon1|pärastlõunal|am|AM|evening1|õhtul|midnight|keskööl|morning1|hommikul|night1|öösel|noon|keskpäeval|pm|PM|AM|PM|8|afternoon1|pärastlõunal|am|AM|evening1|õhtul|midnight|keskööl|morning1|hommikul|night1|öösel|noon|keskpäeval|pm|PM|AM|PM|8|afternoon1|pärastlõunal|am|AM|evening1|õhtul|midnight|keskööl|morning1|hommikul|night1|öösel|noon|keskpäeval|pm|PM|dd.MM.yy|d. MMM y|d. MMMM y|EEEE, d. MMMM y|jaan|veebr|märts|apr|mai|juuni|juuli|aug|sept|okt|nov|dets|jaanuar|veebruar|märts|aprill|mai|juuni|juuli|august|september|oktoober|november|detsember|J|V|M|A|M|J|J|A|S|O|N|D|0|P|E|T|K|N|R|L|pühapäev|esmaspäev|teisipäev|kolmapäev|neljapäev|reede|laupäev|P|E|T|K|N|R|L|0|eKr|pKr|enne Kristust|pärast Kristust|eKr|pKr|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|d.MM.y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E, d. MMMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|M|Md|d.M|MEd|E, d.M|MMM|MMMM|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMEd|E, d. MMMM|MMMMW-count-one|MMMM (W. \'nädal\')|MMMMW-count-other|MMMM (W. \'nädal\')|mmss|mm:ss|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E, d. MMMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|w. \'nädal\' (Y)|yw-count-other|w. \'nädal\' (Y)|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|−||||||E2W\u00A0|,|−|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|−|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EEK|kr|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$et = $enkidatron$elm_cldr$Generated$Et$et;
var $enkidatron$elm_cldr$Generated$Eu$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'eu',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(14, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(14, 0),
					_Utils_Tuple2(19, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(24, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Eu$eu = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Eu$dayPeriods, 'eu||||AM|PM|9|afternoon1|eguerd.|afternoon2|arrats.|am|AM|evening1|iluntz.|midnight|gauerdia|morning1|goizald.|morning2|goizeko|night1|gaueko|pm|PM|AM|PM|9|afternoon1|eguerdiko|afternoon2|arratsaldeko|am|AM|evening1|iluntzeko|midnight|gauerdia|morning1|goizaldeko|morning2|goizeko|night1|gaueko|pm|PM|g|a|9|afternoon1|eguerd.|afternoon2|arrats.|am|g|evening1|iluntz.|midnight|gauerd.|morning1|goizald.|morning2|goizeko|night1|gaueko|pm|a|yy/M/d|y(\'e\')\'ko\' MMM d(\'a\')|y(\'e\')\'ko\' MMMM\'ren\' d(\'a\')|y(\'e\')\'ko\' MMMM\'ren\' d(\'a\'), EEEE|urt.|ots.|mar.|api.|mai.|eka.|uzt.|abu.|ira.|urr.|aza.|abe.|urtarrila|otsaila|martxoa|apirila|maiatza|ekaina|uztaila|abuztua|iraila|urria|azaroa|abendua|U|O|M|A|M|E|U|A|I|U|A|A|0|ig.|al.|ar.|az.|og.|or.|lr.|igandea|astelehena|asteartea|asteazkena|osteguna|ostirala|larunbata|I|A|A|A|O|O|L|0|K.a.|K.o.|K.a.|Kristo ondoren|a|o|HH:mm|HH:mm:ss|HH:mm:ss (z)|HH:mm:ss (zzzz)|{1} ({0})|{1} ({0})|{1} ({0})|{1} ({0})|51|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|d, E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G y. \'urteko\' MMM|GyMMMd|G y. \'urteko\' MMM d(\'a\')|GyMMMEd|G y. \'urteko\' MMM d(\'a\'), E|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|M/d|MEd|M/d, E|MMM|LLL|MMMd|MMM d(\'a\')|MMMEd|MMM d(\'a\'), E|MMMMd|MMMM\'ren\' d(\'a\')|MMMMW-count-one|MMMM\'ren\' W. \'astea\'|MMMMW-count-other|MMMM\'ren\' W. \'astea\'|ms|mm:ss|y|y|yM|y/M|yMd|y/M/d|yMEd|y/M/d, E|yMMM|y MMM|yMMMd|y MMM d(\'a\')|yMMMEd|y MMM d(\'a\'), E|yMMMM|y(\'e\')\'ko\' MMMM|yMMMMd|y(\'e\')\'ko\' MMMM\'ren\' d(\'a\')|yMMMMEd|y(\'e\')\'ko\' MMMM\'ren\' d(\'a\'), E|yQQQ|y(\'e\')\'ko\' QQQ|yQQQQ|y(\'e\')\'ko\' QQQQ|yw-count-one|Y. \'urteko\' w. \'astea\'|yw-count-other|Y. \'urteko\' w. \'astea\'|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|−||||||E2W.|,|−|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|−%\u00A0||%\u00A0||%\u00A0||106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$eu = $enkidatron$elm_cldr$Generated$Eu$eu;
var $enkidatron$elm_cldr$Generated$Fa$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'fa',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(19, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(1, 0),
					_Utils_Tuple2(4, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(1, 0),
					'night2')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Fa$fa = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Fa$dayPeriods, 'fa||||ق.ظ.|ب.ظ.|8|afternoon1|ظهر|afternoon2|عصر|am|ق.ظ.|morning1|بامداد|morning2|صبح|night1|شب|night2|نیمه\u200Cشب|pm|ب.ظ.|قبل\u200Cازظهر|بعدازظهر|8|afternoon1|بعدازظهر|afternoon2|عصر|am|قبل\u200Cازظهر|morning1|بامداد|morning2|صبح|night1|شب|night2|نیمه\u200Cشب|pm|بعدازظهر|ق|ب|8|afternoon1|ظ|afternoon2|ع|am|ق|morning1|ب|morning2|ص|night1|ش|night2|ن|pm|ب|y/M/d|d MMM y|d MMMM y|EEEE d MMMM y|ژانویه|فوریه|مارس|آوریل|مه|ژوئن|ژوئیه|اوت|سپتامبر|اکتبر|نوامبر|دسامبر|ژانویهٔ|فوریهٔ|مارس|آوریل|مهٔ|ژوئن|ژوئیهٔ|اوت|سپتامبر|اکتبر|نوامبر|دسامبر|ژ|ف|م|آ|م|ژ|ژ|ا|س|ا|ن|د|1|ژانویه|فوریه|مارس|آوریل|مه|ژوئن|ژوئیه|اوت|سپتامبر|اکتبر|نوامبر|دسامبر|ژانویه|فوریه|مارس|آوریل|مه|ژوئن|ژوئیه|اوت|سپتامبر|اکتبر|نوامبر|دسامبر|ژ|ف|م|آ|م|ژ|ژ|ا|س|ا|ن|د|یکشنبه|دوشنبه|سه\u200Cشنبه|چهارشنبه|پنجشنبه|جمعه|شنبه|یکشنبه|دوشنبه|سه\u200Cشنبه|چهارشنبه|پنجشنبه|جمعه|شنبه|ی|د|س|چ|پ|ج|ش|0|ق.م.|م.|قبل از میلاد|میلادی|ق|م|H:mm|H:mm:ss|H:mm:ss (z)|H:mm:ss (zzzz)|{1}،\u200F {0}|{1}،\u200F {0}|{1}، ساعت {0}|{1}، ساعت {0}|53|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm a|EHm|E H:mm|Ehms|E h:mm:ss a|EHms|E H:mm:ss|Gy|y G|GyMd|y/M/d GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h a|H|H|HHmmZ|HH:mm (Z)|hm|h:mm a|Hm|H:mm|hms|h:mm:ss a|Hms|H:mm:ss|hmsv|h:mm:ss a v|Hmsv|H:mm:ss v|hmv|h:mm a v|Hmv|H:mm v|M|L|Md|M/d|MEd|E M/d|MMM|LLL|MMMd|d LLL|MMMEd|E d LLL|MMMMd|d LLLL|MMMMEd|E d LLLL|MMMMW-count-one|هفتهٔ Wم LLLL|MMMMW-count-other|هفتهٔ Wم LLLL|mmss|mm:ss|ms|m:ss|y|y|yM|y/M|yMd|y/M/d|yMEd|E y/M/d|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yMMMMEEEEd|EEEE d MMMM y|yQQQ|QQQQ y|yQQQQ|QQQQ y|yw-count-one|هفتهٔ wم Y|yw-count-other|هفتهٔ wم Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W,|.|\u200E−||||||E2W,|.|\u200E−\u200E¤\u00A0||\u200E¤\u00A0||\u200E¤\u00A0||E0W,|.|\u200E−|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|$CA|CLP|$|CNY|¥CN|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|$HK|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|IRR|ریال|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|$MX|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|$NZ|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|$EC|XOF|فرانک\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$fa = $enkidatron$elm_cldr$Generated$Fa$fa;
var $enkidatron$elm_cldr$Generated$Fi$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'fi',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(23, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(23, 0),
					_Utils_Tuple2(5, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Fi$fi = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Fi$dayPeriods, 'fi||||ap.|ip.|9|afternoon1|iltap.|am|ap.|evening1|illalla|midnight|keskiyöllä|morning1|aamulla|morning2|aamup.|night1|yöllä|noon|keskip.|pm|ip.|ap.|ip.|9|afternoon1|iltapäivällä|am|ap.|evening1|illalla|midnight|keskiyöllä|morning1|aamulla|morning2|aamupäivällä|night1|yöllä|noon|keskipäivällä|pm|ip.|ap.|ip.|9|afternoon1|ip.|am|ap.|evening1|illalla|midnight|ky.|morning1|aamulla|morning2|ap.|night1|yöllä|noon|kp.|pm|ip.|d.M.y|d.M.y|d. MMMM y|cccc d. MMMM y|tammik.|helmik.|maalisk.|huhtik.|toukok.|kesäk.|heinäk.|elok.|syysk.|lokak.|marrask.|jouluk.|tammikuuta|helmikuuta|maaliskuuta|huhtikuuta|toukokuuta|kesäkuuta|heinäkuuta|elokuuta|syyskuuta|lokakuuta|marraskuuta|joulukuuta|T|H|M|H|T|K|H|E|S|L|M|J|1|tammi|helmi|maalis|huhti|touko|kesä|heinä|elo|syys|loka|marras|joulu|tammikuu|helmikuu|maaliskuu|huhtikuu|toukokuu|kesäkuu|heinäkuu|elokuu|syyskuu|lokakuu|marraskuu|joulukuu|T|H|M|H|T|K|H|E|S|L|M|J|su|ma|ti|ke|to|pe|la|sunnuntaina|maanantaina|tiistaina|keskiviikkona|torstaina|perjantaina|lauantaina|S|M|T|K|T|P|L|1|su|ma|ti|ke|to|pe|la|sunnuntai|maanantai|tiistai|keskiviikko|torstai|perjantai|lauantai|S|M|T|K|T|P|L|eKr.|jKr.|ennen Kristuksen syntymää|jälkeen Kristuksen syntymän|eKr|jKr|H.mm|H.mm.ss|H.mm.ss z|H.mm.ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|56|Bh|h B|Bhm|h.mm B|Bhms|h.mm.ss B|d|d|E|ccc|EBhm|E h.mm B|EBhms|E h.mm.ss B|Ed|E d.|Ehm|E h.mm\u202Fa|EHm|E H.mm|Ehms|E h.mm.ss\u202Fa|EHms|E H.mm.ss|Gy|y G|GyMd|M.d.y G|GyMMM|LLL y G|GyMMMd|d. MMM y G|GyMMMEd|E d. MMM y G|GyMMMMd|d. MMMM y G|GyMMMMEd|E d. MMMM y G|h|h\u202Fa|H|H|hm|h.mm\u202Fa|Hm|H.mm|hms|h.mm.ss\u202Fa|Hms|H.mm.ss|hmsv|h.mm.ss\u202Fa v|Hmsv|H.mm.ss v|hmv|h.mm\u202Fa v|Hmv|H.mm v|M|L|Md|d.M.|MEd|E d.M.|MMM|LLL|MMMd|d. MMM|MMMEd|ccc d. MMM|MMMMd|d. MMMM|MMMMEd|ccc d. MMMM|MMMMW-count-one|LLLL\'n\' W. \'viikko\'|MMMMW-count-other|LLLL\'n\' W. \'viikko\'|ms|m.ss|y|y|yM|L.y|yMd|d.M.y|yMEd|E d.M.y|yMM|M.y|yMMM|LLL y|yMMMd|d. MMM y|yMMMEd|E d. MMM y|yMMMM|LLLL y|yMMMMccccd|cccc d. MMMM y|yMMMMd|d. MMMM y|yMMMMEd|E d. MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'vuoden\' Y \'viikko\' w|yw-count-other|\'vuoden\' Y \'viikko\' w|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W\u00A0|,|−||||||E2W\u00A0|,|−|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|−|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|AOA|ARS|ARS|AUD|AUD|AZN|₼|BAM|BAM|BBD|BBD|BDT|BDT|BMD|BMD|BND|BND|BOB|BOB|BRL|BRL|BSD|BSD|BWP|BWP|BZD|BZD|CAD|CAD|CLP|CLP|CNY|CNY|COP|COP|CRC|CRC|CUC|CUC|CUP|CUP|CZK|CZK|DKK|DKK|DOP|DOP|EGP|EGP|ESP|ESP|EUR|€|FIM|mk|FJD|FJD|FKP|FKP|GBP|£|GEL|GEL|GHS|GH₵|GIP|GIP|GNF|GNF|GTQ|GTQ|GYD|GYD|HKD|HKD|HNL|HNL|HRK|HRK|HUF|HUF|IDR|IDR|ILS|ILS|INR|INR|ISK|ISK|JMD|JMD|JPY|¥|KGS|\u20C0|KHR|KHR|KMF|KMF|KPW|KPW|KRW|KRW|KYD|KYD|KZT|KZT|LAK|LAK|LBP|LBP|LKR|LKR|LRD|LRD|LTL|LTL|LVL|LVL|MGA|MGA|MMK|MMK|MNT|MNT|MUR|MUR|MXN|MXN|MYR|MYR|NAD|NAD|NGN|NGN|NIO|NIO|NOK|NOK|NPR|NPR|NZD|NZD|PHP|PHP|PKR|PKR|PLN|PLN|PYG|PYG|RON|RON|RUB|₽|RWF|RWF|SBD|SBD|SEK|SEK|SGD|SGD|SHP|SHP|SRD|SRD|SSP|SSP|STN|STD|SYP|SYP|THB|THB|TOP|TOP|TRY|TRY|TTD|TTD|TWD|TWD|UAH|UAH|USD|$|UYU|UYU|VEF|VEF|VND|VND|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|XPF|XXX|XXX|ZAR|ZAR|ZMW|ZMW|'));
var $enkidatron$elm_cldr$Cldr$Locale$fi = $enkidatron$elm_cldr$Generated$Fi$fi;
var $enkidatron$elm_cldr$Generated$Fil$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'fil',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(18, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Fil$fil = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Fil$dayPeriods, 'fil||||AM|PM|9|afternoon1|tanghali|am|AM|evening1|ng gabi|midnight|hatinggabi|morning1|nang umaga|morning2|madaling-araw|night1|ng gabi|noon|tanghaling-tapat|pm|PM|AM|PM|9|afternoon1|tanghali|am|AM|evening1|ng gabi|midnight|hatinggabi|morning1|nang umaga|morning2|madaling-araw|night1|ng gabi|noon|tanghaling-tapat|pm|PM|am|pm|9|afternoon1|sa hapon|am|am|evening1|sa gabi|midnight|hatinggabi|morning1|umaga|morning2|madaling-araw|night1|ng gabi|noon|tanghaling-tapat|pm|pm|M/d/yy|MMM d, y|MMMM d, y|EEEE, MMMM d, y|Ene|Peb|Mar|Abr|May|Hun|Hul|Ago|Set|Okt|Nob|Dis|Enero|Pebrero|Marso|Abril|Mayo|Hunyo|Hulyo|Agosto|Setyembre|Oktubre|Nobyembre|Disyembre|Ene|Peb|Mar|Abr|May|Hun|Hul|Ago|Set|Okt|Nob|Dis|1|Ene|Peb|Mar|Abr|May|Hun|Hul|Ago|Set|Okt|Nob|Dis|Enero|Pebrero|Marso|Abril|Mayo|Hunyo|Hulyo|Agosto|Setyembre|Oktubre|Nobyembre|Disyembre|E|P|M|A|M|Hun|Hul|Ago|Set|Okt|Nob|Dis|Lin|Lun|Mar|Miy|Huw|Biy|Sab|Linggo|Lunes|Martes|Miyerkules|Huwebes|Biyernes|Sabado|Lin|Lun|Mar|Miy|Huw|Biy|Sab|0|BC|AD|Before Christ|Anno Domini|BC|AD|h:mm\u202Fa|h:mm:ss\u202Fa|h:mm:ss\u202Fa z|h:mm:ss\u202Fa zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|M/d/y G|GyMMM|MMM y G|GyMMMd|MMM d, y G|GyMMMEd|E, MMM d, y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|M/d|MEd|E, M/d|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMEd|E, MMMM d|MMMMW-count-one|\'ika\'-W \'linggo\' \'ng\' MMMM|MMMMW-count-other|\'linggo\' W \'ng\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|M/d/y|yMEd|E, M/d/y|yMM|MM/y|yMMM|MMM y|yMMMd|MMM d, y|yMMMEd|E, MMM d, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'ika\'-w \'linggo\' \'ng\' Y|yw-count-other|\'linggo\' w \'ng\' Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$fil = $enkidatron$elm_cldr$Generated$Fil$fil;
var $enkidatron$elm_cldr$Generated$Fr$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'fr',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Fr$fr = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Fr$dayPeriods, 'fr||||AM|PM|8|afternoon1|après-midi|am|AM|evening1|soir|midnight|minuit|morning1|matin|night1|matin|noon|midi|pm|PM|AM|PM|8|afternoon1|de l’après-midi|am|AM|evening1|du soir|midnight|minuit|morning1|du matin|night1|du matin|noon|midi|pm|PM|AM|PM|8|afternoon1|ap.m.|am|AM|evening1|soir|midnight|minuit|morning1|mat.|night1|matin|noon|midi|pm|PM|dd/MM/y|d MMM y|d MMMM y|EEEE d MMMM y|janv.|févr.|mars|avr.|mai|juin|juil.|août|sept.|oct.|nov.|déc.|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre|J|F|M|A|M|J|J|A|S|O|N|D|0|dim.|lun.|mar.|mer.|jeu.|ven.|sam.|dimanche|lundi|mardi|mercredi|jeudi|vendredi|samedi|D|L|M|M|J|V|S|0|av. J.-C.|ap. J.-C.|avant Jésus-Christ|après Jésus-Christ|av. J.-C.|ap. J.-C.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1}, {0}|{1}, {0}|{1}, {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|E|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|dd/MM/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h\u202Fa|H|HH \'h\'|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd/MM|MEd|E dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMW-count-one|\'semaine\' W (MMMM)|MMMMW-count-other|\'semaine\' W (MMMM)|ms|mm:ss|y|y|yM|MM/y|yMd|dd/MM/y|yMEd|E dd/MM/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'semaine\' w \'de\' Y|yw-count-other|\'semaine\' w \'de\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u202F|,|-||||||E2W\u202F|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u202F|,|-|\u00A0%||\u00A0%||\u00A0%|115|AFN|؋|AMD|֏|AOA|Kz|ARS|$AR|AUD|$AU|AZN|₼|BAM|KM|BBD|$|BDT|৳|BEF|FB|BMD|$BM|BND|$BN|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$BZ|CAD|$CA|CLP|$CL|CNY|CNY|COP|$CO|CRC|₡|CUC|$|CUP|$|CYP|£CY|CZK|Kč|DKK|kr|DOP|$|EGP|£E|ESP|₧|EUR|€|FJD|$FJ|FKP|£FK|FRF|F|GBP|£GB|GEL|₾|GHS|GH₵|GIP|£GI|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|IEP|£IE|ILP|£IL|ILS|₪|INR|₹|ISK|kr|ITL|₤IT|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|FC|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|£LB|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MTP|£MT|MUR|Rs|MXN|$MX|MYR|RM|NAD|$NA|NGN|₦|NIO|$C|NOK|kr|NPR|Rs|NZD|$NZ|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RHD|$RH|RON|L|RUB|₽|RWF|FR|SBD|$SB|SEK|kr|SGD|$SG|SHP|£|SRD|$SR|SSP|£|STN|Db|SYP|£|THB|฿|TOP|$T|TRY|₺|TTD|$TT|TWD|TWD|UAH|₴|USD|$US|UYU|$UY|VEF|Bs|VND|₫|WST|$WS|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|FCFP|XXX|¤|ZAR|R|ZMW|Kw|'));
var $enkidatron$elm_cldr$Cldr$Locale$fr = $enkidatron$elm_cldr$Generated$Fr$fr;
var $enkidatron$elm_cldr$Generated$Ga$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Ga$ga = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ga$dayPeriods, 'ga||||r.n.|i.n.|2|am|r.n.|pm|i.n.|r.n.|i.n.|2|am|r.n.|pm|i.n.|r.n.|i.n.|2|am|r.n.|pm|i.n.|dd/MM/y|d MMM y|d MMMM y|EEEE d MMMM y|Ean|Feabh|Márta|Aib|Beal|Meith|Iúil|Lún|MFómh|DFómh|Samh|Noll|Eanáir|Feabhra|Márta|Aibreán|Bealtaine|Meitheamh|Iúil|Lúnasa|Meán Fómhair|Deireadh Fómhair|Samhain|Nollaig|E|F|M|A|B|M|I|L|M|D|S|N|0|Domh|Luan|Máirt|Céad|Déar|Aoine|Sath|Dé Domhnaigh|Dé Luain|Dé Máirt|Dé Céadaoin|Déardaoin|Dé hAoine|Dé Sathairn|D|L|M|C|D|A|S|0|RC|AD|Roimh Chríost|Anno Domini|RC|AD|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|55|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|dd/MM/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|LL|Md|dd/MM|MEd|E dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMW-count-one|\'seachtain\' \'a\' W \'i\' MMMM|MMMMW-count-two|\'seachtain\' \'a\' W \'i\' MMMM|MMMMW-count-few|\'seachtain\' \'a\' W \'i\' MMMM|MMMMW-count-many|\'seachtain\' \'a\' W \'i\' MMMM|MMMMW-count-other|\'seachtain\' \'a\' W \'i\' MMMM|ms|mm:ss|y|y|yM|MM/y|yMd|dd/MM/y|yMEd|E dd/MM/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'seachtain\' \'a\' w \'in\' Y|yw-count-two|\'seachtain\' \'a\' w \'in\' Y|yw-count-few|\'seachtain\' \'a\' w \'in\' Y|yw-count-many|\'seachtain\' \'a\' w \'in\' Y|yw-count-other|\'seachtain\' \'a\' w \'in\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ga = $enkidatron$elm_cldr$Generated$Ga$ga;
var $enkidatron$elm_cldr$Generated$Gd$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Gd$gd = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Gd$dayPeriods, 'gd||||m|f|2|am|m|pm|f|m|f|2|am|m|pm|f|m|f|2|am|m|pm|f|dd/MM/y|d MMM y|d\'mh\' MMMM y|EEEE, d\'mh\' MMMM y|Faoi|Gearr|Màrt|Gibl|Cèit|Ògmh|Iuch|Lùna|Sult|Dàmh|Samh|Dùbh|dhen Fhaoilleach|dhen Ghearran|dhen Mhàrt|dhen Ghiblean|dhen Chèitean|dhen Ògmhios|dhen Iuchar|dhen Lùnastal|dhen t-Sultain|dhen Dàmhair|dhen t-Samhain|dhen Dùbhlachd|F|G|M|G|C|Ò|I|L|S|D|S|D|1|Faoi|Gearr|Màrt|Gibl|Cèit|Ògmh|Iuch|Lùna|Sult|Dàmh|Samh|Dùbh|Am Faoilleach|An Gearran|Am Màrt|An Giblean|An Cèitean|An t-Ògmhios|An t-Iuchar|An Lùnastal|An t-Sultain|An Dàmhair|An t-Samhain|An Dùbhlachd|F|G|M|G|C|Ò|I|L|S|D|S|D|DiD|DiL|DiM|DiC|Dia|Dih|DiS|DiDòmhnaich|DiLuain|DiMàirt|DiCiadain|DiarDaoin|DihAoine|DiSathairne|D|L|M|C|A|H|S|0|RC|AD|Ro Chrìosta|An dèidh Chrìosta|R|A|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|55|Bh|hB|Bhm|h:mmB|Bhms|h:mm:ssB|d|d|E|ccc|EBhm|E h:mmB|EBhms|E h:mm:ssB|Ed|E, d|Ehm|E h:mma|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|d/M/y G|GyMMM|LLL y G|GyMMMd|d\'mh\' MMM y G|GyMMMEd|E, d\'mh\' MMM y G|h|ha|H|HH|hm|h:mma|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mma v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMdd|dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d\'mh\' MMMM|MMMMW-count-one|\'seachdain\' W MMMM|MMMMW-count-two|\'seachdain\' W MMMM|MMMMW-count-few|\'seachdain\' W MMMM|MMMMW-count-other|\'seachdain\' W MMMM|ms|mm:ss|y|y|yM|L/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|LL/y|yMMM|LLL Y|yMMMd|d\'mh\' MMM y|yMMMEd|E, d\'mh\' MMM y|yMMMM|LLLL y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'seachdain\' w \'dhe\' Y|yw-count-two|\'seachdain\' w \'dhe\' Y|yw-count-few|\'seachdain\' w \'dhe\' Y|yw-count-other|\'seachdain\' w \'dhe\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|leu|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$gd = $enkidatron$elm_cldr$Generated$Gd$gd;
var $enkidatron$elm_cldr$Generated$Gl$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'gl',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(24, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Gl$gl = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Gl$dayPeriods, 'gl||||a.m.|p.m.|8|afternoon1|do mediodía|am|a.m.|evening1|da tarde|midnight|da noite|morning1|da madrugada|morning2|da mañá|night1|da noite|pm|p.m.|a.m.|p.m.|8|afternoon1|do mediodía|am|a.m.|evening1|da tarde|midnight|da noite|morning1|da madrugada|morning2|da mañá|night1|da noite|pm|p.m.|a.m.|p.m.|8|afternoon1|do mediodía|am|a.m.|evening1|da tarde|midnight|da noite|morning1|da madrugada|morning2|da mañá|night1|da noite|pm|p.m.|dd/MM/yy|d \'de\' MMM \'de\' y|d \'de\' MMMM \'de\' y|EEEE, d \'de\' MMMM \'de\' y|xan.|feb.|mar.|abr.|maio|xuño|xul.|ago.|set.|out.|nov.|dec.|xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|x.|f.|m.|a.|m.|x.|x.|a.|s.|o.|n.|d.|1|xan.|feb.|mar.|abr.|maio|xuño|xul.|ago.|set.|out.|nov.|dec.|xaneiro|febreiro|marzo|abril|maio|xuño|xullo|agosto|setembro|outubro|novembro|decembro|X|F|M|A|M|X|X|A|S|O|N|D|dom.|luns|mar.|mér.|xov.|ven.|sáb.|domingo|luns|martes|mércores|xoves|venres|sábado|d.|l.|m.|m.|x.|v.|s.|1|dom.|luns|mar.|mér.|xov.|ven.|sáb.|domingo|luns|martes|mércores|xoves|venres|sábado|D|L|M|M|X|V|S|a.C.|d.C.|antes de Cristo|despois de Cristo|a.C.|d.C.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|52|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E, h:mm B|EBhms|E, h:mm:ss B|Ed|E d|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM \'de\' y G|GyMMMd|d \'de\' MMM \'de\' y G|GyMMMEd|E, d \'de\' MMM \'de\' y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMdd|dd/MM|MMM|LLL|MMMd|d \'de\' MMM|MMMEd|E, d \'de\' MMM|MMMMd|d \'de\' MMMM|MMMMEd|E, d \'de\' MMMM|MMMMW-count-one|W.\'ª\' \'semana\' \'de\' MMMM|MMMMW-count-other|W.\'ª\' \'semana\' \'de\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|MM/y|yMMM|MMM \'de\' y|yMMMd|d \'de\' MMM \'de\' y|yMMMEd|E, d \'de\' MMM \'de\' y|yMMMM|MMMM \'de\' y|yQQQ|QQQ y|yQQQQ|QQQQ \'de\' y|yw-count-one|w.\'ª\' \'semana\' \'de\' Y|yw-count-other|w.\'ª\' \'semana\' \'de\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|Br|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|FC|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|$MX|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|руб|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$gl = $enkidatron$elm_cldr$Generated$Gl$gl;
var $enkidatron$elm_cldr$Generated$Gu$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'gu',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(4, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Gu$gu = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Gu$dayPeriods, 'gu||||AM|PM|7|afternoon1|બપોરે|am|AM|evening1|સાંજે|midnight|મધ્યરાત્રિ|morning1|સવારે|night1|રાત્રે|pm|PM|AM|PM|7|afternoon1|બપોરે|am|AM|evening1|સાંજે|midnight|મધ્યરાત્રિ|morning1|સવારે|night1|રાત્રે|pm|PM|AM|PM|7|afternoon1|બપોરે|am|AM|evening1|સાંજે|midnight|મ.રાત્રિ|morning1|સવારે|night1|રાત્રે|pm|PM|d/M/yy|d MMM, y|d MMMM, y|EEEE, d MMMM, y|જાન્યુ|ફેબ્રુ|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઈ|ઑગસ્ટ|સપ્ટે|ઑક્ટો|નવે|ડિસે|જાન્યુઆરી|ફેબ્રુઆરી|માર્ચ|એપ્રિલ|મે|જૂન|જુલાઈ|ઑગસ્ટ|સપ્ટેમ્બર|ઑક્ટોબર|નવેમ્બર|ડિસેમ્બર|જા|ફે|મા|એ|મે|જૂ|જુ|ઑ|સ|ઑ|ન|ડિ|0|રવિ|સોમ|મંગળ|બુધ|ગુરુ|શુક્ર|શનિ|રવિવાર|સોમવાર|મંગળવાર|બુધવાર|ગુરુવાર|શુક્રવાર|શનિવાર|ર|સો|મં|બુ|ગુ|શુ|શ|0|ઈ.સ.પૂર્વે|ઈ.સ.|ઈસવીસન પૂર્વે|ઇસવીસન|ઇ સ પુ|ઇસ|hh:mm a|hh:mm:ss a|hh:mm:ss a z|hh:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|MMM, G y|GyMMMd|d MMM, G y|GyMMMEd|E, d MMM, G y|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMdd|dd-MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-one|MMMMના W અઠવાડિયા|MMMMW-count-other|MMMMના W અઠવાડિયા|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|MM-y|yMMM|MMM y|yMMMd|d MMM, y|yMMMEd|E, d MMM, y|yMMMM|MMMM y|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|Y ના w અઠવાડિયા|yw-count-other|Y ના w અઠવાડિયા|ahhmm|ahhmmss|ahhmmssz|ahhmmsszzzz|X3I,|.|-||||||E2I,|.|-¤||¤||¤||E0I,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|રૂ.|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$gu = $enkidatron$elm_cldr$Generated$Gu$gu;
var $enkidatron$elm_cldr$Generated$Ha$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Ha$ha = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ha$dayPeriods, 'ha||||SF|YM|2|am|SF|pm|YM|Safiya|Yamma|2|am|Safiya|pm|Yamma|SF|YM|2|am|SF|pm|YM|d/M/yy|d MMM, y|d MMMM, y|EEEE d MMMM, y|Jan|Fab|Mar|Afi|May|Yun|Yul|Agu|Sat|Okt|Nuw|Dis|Janairu|Faburairu|Maris|Afirilu|Mayu|Yuni|Yuli|Agusta|Satumba|Oktoba|Nuwamba|Disamba|J|F|M|A|M|Y|Y|A|S|O|N|D|0|Lah|Lit|Tal|Lar|Alh|Jum|Asa|Lahadi|Litinin|Talata|Laraba|Alhamis|Jummaʼa|Asabar|L|L|T|L|A|J|A|0|K.H|BHAI|Kafin haihuwar annab|Bayan haihuwar annab|K.H|BHAI|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1} {0}|50|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|M/d|MEd|E, M/d|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMEd|E, MMMM d|MMMMW-count-one|\'satin\' W \'cikin\' MMMM|MMMMW-count-other|\'satin\' W \'cikin\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|y-MM-dd|yMEd|E, M/d/y|yMMM|MMM y|yMMMd|d MMM, y|yMMMEd|y MMM d, E|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'sati\' w \'cikin\' Y|yw-count-other|\'sati\' w \'cikin\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0W,|.|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ha = $enkidatron$elm_cldr$Generated$Ha$ha;
var $enkidatron$elm_cldr$Generated$He$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'he',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(18, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(3, 0),
					'night1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(3, 0),
					_Utils_Tuple2(6, 0),
					'night2')
				]))
		]));
var $enkidatron$elm_cldr$Generated$He$he = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$He$dayPeriods, 'he||||לפנה״צ|אחה״צ|9|afternoon1|צהריים|afternoon2|אחר הצהריים|am|לפנה״צ|evening1|ערב|midnight|חצות|morning1|בוקר|night1|לילה|night2|לפנות בוקר|pm|אחה״צ|לפנה״צ|אחה״צ|9|afternoon1|בצהריים|afternoon2|אחר הצהריים|am|לפנה״צ|evening1|בערב|midnight|חצות|morning1|בבוקר|night1|בלילה|night2|לפנות בוקר|pm|אחה״צ|לפנה״צ|אחה״צ|9|afternoon1|בצהריים|afternoon2|אחה״צ|am|לפנה״צ|evening1|בערב|midnight|חצות|morning1|בבוקר|night1|בלילה|night2|לפנות בוקר|pm|אחה״צ|d.M.y|d בMMM y|d בMMMM y|EEEE, d בMMMM y|ינו׳|פבר׳|מרץ|אפר׳|מאי|יוני|יולי|אוג׳|ספט׳|אוק׳|נוב׳|דצמ׳|ינואר|פברואר|מרץ|אפריל|מאי|יוני|יולי|אוגוסט|ספטמבר|אוקטובר|נובמבר|דצמבר|1|2|3|4|5|6|7|8|9|10|11|12|0|יום א׳|יום ב׳|יום ג׳|יום ד׳|יום ה׳|יום ו׳|שבת|יום ראשון|יום שני|יום שלישי|יום רביעי|יום חמישי|יום שישי|יום שבת|א׳|ב׳|ג׳|ד׳|ה׳|ו׳|ש׳|0|לפנה״ס|לספירה|לפני הספירה|לספירה|לפני|אחריי|H:mm|H:mm:ss|H:mm:ss z|H:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|52|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E ה-d|Ehm|E h:mm a|EHm|E H:mm|Ehms|E h:mm:ss a|EHms|E H:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d בMMM y G|GyMMMEd|E, d בMMM y G|h|\u200Fh a|H|H|hm|h:mm a|Hm|H:mm|hms|h:mm:ss a|Hms|H:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d.M|MEd|E, d.M|MMM|LLL|MMMd|d בMMM|MMMEd|E, d בMMM|MMMMd|d בMMMM|MMMMW-count-one|שבוע W בMMMM|MMMMW-count-two|שבוע W בMMMM|MMMMW-count-other|שבוע W בMMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMM|M.y|yMMM|MMM y|yMMMd|d בMMM y|yMMMEd|E, d בMMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|שבוע w בשנת Y|yw-count-two|שבוע w בשנת Y|yw-count-other|שבוע w בשנת Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W,|.|\u200E-||||||E2W,|.|\u200F-|\u00A0\u200F¤|\u200F|\u00A0\u200F¤|\u200F|\u00A0\u200F¤|E0W,|.|\u200E-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р|BZD|$|CAD|CA$|CLP|$|CNY|\u200ECN¥\u200E|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILP|ל״י|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$he = $enkidatron$elm_cldr$Generated$He$he;
var $enkidatron$elm_cldr$Generated$Hi$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'hi',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(4, 0),
					'night1')
				])),
			_Utils_Tuple2(
			'hi_latn',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Hi$hi = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Hi$dayPeriods, 'hi||||am|pm|7|afternoon1|दोपहर|am|am|evening1|शाम|midnight|मध्यरात्रि|morning1|सुबह|night1|रात|pm|pm|am|pm|7|afternoon1|दोपहर|am|am|evening1|शाम|midnight|मध्यरात्रि|morning1|सुबह|night1|रात|pm|pm|am|pm|7|afternoon1|दोपहर|am|am|evening1|शाम|midnight|मध्यरात्रि|morning1|सुबह|night1|रात|pm|pm|d/M/yy|d MMM y|d MMMM y|EEEE, d MMMM y|जन॰|फ़र॰|मार्च|अप्रैल|मई|जून|जुल॰|अग॰|सित॰|अक्तू॰|नव॰|दिस॰|जनवरी|फ़रवरी|मार्च|अप्रैल|मई|जून|जुलाई|अगस्त|सितंबर|अक्तूबर|नवंबर|दिसंबर|ज|फ़|मा|अ|म|जू|जु|अ|सि|अ|न|दि|0|रवि|सोम|मंगल|बुध|गुरु|शुक्र|शनि|रविवार|सोमवार|मंगलवार|बुधवार|गुरुवार|शुक्रवार|शनिवार|र|सो|मं|बु|गु|शु|श|0|ईसा-पूर्व|ईस्वी|ईसा-पूर्व|ईसवी सन|ईसा-पूर्व|ईस्वी|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|53|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|E d|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|GGGGG d/M/y|GyMMM|MMM G y|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMdd|dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|MMMM का सप्ताह W|MMMMW-count-other|MMMM का सप्ताह W|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|MM/y|yMMdd|dd/MM/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y का सप्ताह w|yw-count-other|Y का सप्ताह w|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2I,|.|-¤||¤||¤||E0I,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|लेई|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$hi = $enkidatron$elm_cldr$Generated$Hi$hi;
var $enkidatron$elm_cldr$Generated$Hr$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'hr',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Hr$hr = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Hr$dayPeriods, 'hr||||AM|PM|8|afternoon1|popodne|am|AM|evening1|navečer|midnight|ponoć|morning1|ujutro|night1|noću|noon|podne|pm|PM|AM|PM|8|afternoon1|poslije podne|am|AM|evening1|navečer|midnight|ponoć|morning1|ujutro|night1|noću|noon|podne|pm|PM|AM|PM|8|afternoon1|popodne|am|AM|evening1|navečer|midnight|ponoć|morning1|ujutro|night1|noću|noon|podne|pm|PM|dd. MM. y.|d. MMM y.|d. MMMM y.|EEEE, d. MMMM y.|sij|velj|ožu|tra|svi|lip|srp|kol|ruj|lis|stu|pro|siječnja|veljače|ožujka|travnja|svibnja|lipnja|srpnja|kolovoza|rujna|listopada|studenoga|prosinca|1.|2.|3.|4.|5.|6.|7.|8.|9.|10.|11.|12.|1|sij|velj|ožu|tra|svi|lip|srp|kol|ruj|lis|stu|pro|siječanj|veljača|ožujak|travanj|svibanj|lipanj|srpanj|kolovoz|rujan|listopad|studeni|prosinac|1.|2.|3.|4.|5.|6.|7.|8.|9.|10.|11.|12.|ned|pon|uto|sri|čet|pet|sub|nedjelja|ponedjeljak|utorak|srijeda|četvrtak|petak|subota|N|P|U|S|Č|P|S|1|ned|pon|uto|sri|čet|pet|sub|nedjelja|ponedjeljak|utorak|srijeda|četvrtak|petak|subota|n|p|u|s|č|p|s|pr. Kr.|po. Kr.|prije Krista|poslije Krista|pr.n.e.|AD|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss (zzzz)|{1} {0}|{1} {0}|{1} {0}|{1} {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d.|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y. G|GyMd|d. M. y. GGGGG|GyMMM|LLL y. G|GyMMMd|d. MMM y. G|GyMMMEd|E, d. MMM y. G|h|h\u202Fa|H|HH|hm|hh:mm\u202Fa|Hm|HH:mm|hms|hh:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L.|Md|dd. MM.|MEd|E, dd. MM.|MMdd|dd. MM.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMEd|E, d. MMMM|MMMMW-count-one|W. \'tjedan\' MMMM|MMMMW-count-few|W. \'tjedan\' MMMM|MMMMW-count-other|W. \'tjedan\' MMMM|ms|mm:ss|y|y.|yM|MM. y.|yMd|dd. MM. y.|yMEd|E, dd. MM. y.|yMM|MM. y.|yMMM|LLL y.|yMMMd|d. MMM y.|yMMMEd|E, d. MMM y.|yMMMM|LLLL y.|yQQQ|QQQ y.|yQQQQ|QQQQ y.|yw-count-one|w. \'tjedan\' \'u\' Y.|yw-count-few|w. \'tjedan\' \'u\' Y.|yw-count-other|w. \'tjedan\' \'u\' Y.|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|−||||||E2W.|,|−|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|−|\u00A0%||\u00A0%||\u00A0%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|XPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$hr = $enkidatron$elm_cldr$Generated$Hr$hr;
var $enkidatron$elm_cldr$Generated$Hsb$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Hsb$hsb = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Hsb$dayPeriods, 'hsb||||dop.|pop.|2|am|dop.|pm|pop.|dopołdnja|popołdnju|2|am|dopołdnja|pm|popołdnju|dop.|pop.|2|am|dop.|pm|pop.|d.M.yy|d.M.y|d. MMMM y|EEEE, d. MMMM y|jan.|feb.|měr.|apr.|mej.|jun.|jul.|awg.|sep.|okt.|now.|dec.|januara|februara|měrca|apryla|meje|junija|julija|awgusta|septembra|oktobra|nowembra|decembra|j|f|m|a|m|j|j|a|s|o|n|d|1|jan|feb|měr|apr|mej|jun|jul|awg|sep|okt|now|dec|januar|februar|měrc|apryl|meja|junij|julij|awgust|september|oktober|nowember|december|j|f|m|a|m|j|j|a|s|o|n|d|nje|pón|wut|srj|štw|pja|sob|njedźela|póndźela|wutora|srjeda|štwórtk|pjatk|sobota|n|p|w|s|š|p|s|0|př.Chr.n.|po Chr.n.|před Chrystowym narodźenjom|po Chrystowym narodźenju|př.Chr.n.|po Chr.n.|H:mm \'hodź\'.|H:mm:ss|H:mm:ss z|H:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|53|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d.|Ehm|E, h:mm\u202Fa|EHm|E, H:mm \'hodź\'.|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|d.M.y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E, d. MMM y G|h|h\u202Fa|H|H \'hodź\'.|hm|h:mm\u202Fa|Hm|H:mm \'hodź\'.|hms|h:mm:ss\u202Fa|Hms|H:mm:ss|hmsv|h:mm:ss a v|Hmsv|H:mm:ss v|hmv|h:mm a v|Hmv|H:mm v|M|L|Md|d.M.|MEd|E, d.M.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMW-count-one|W. \'tydźeń\' MMMM|MMMMW-count-two|W. \'tydźeń\' MMMM|MMMMW-count-few|W. \'tydźeń\' MMMM|MMMMW-count-other|W. \'tydźeń\' MMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E, d. MMM y|yMMMM|LLLL y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|w. \'tydźeń\' \'lěta\' Y|yw-count-two|w. \'tydźeń\' \'lěta\' Y|yw-count-few|w. \'tydźeń\' \'lěta\' Y|yw-count-other|w. \'tydźeń\' \'lěta\' Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$hsb = $enkidatron$elm_cldr$Generated$Hsb$hsb;
var $enkidatron$elm_cldr$Generated$Hu$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'hu',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(9, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(9, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(6, 0),
					'night2'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Hu$hu = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Hu$dayPeriods, 'hu||||de.|du.|10|afternoon1|du.|am|de.|evening1|este|midnight|éjfél|morning1|reggel|morning2|de.|night1|éjjel|night2|hajnal|noon|dél|pm|du.|de.|du.|10|afternoon1|délután|am|de.|evening1|este|midnight|éjfél|morning1|reggel|morning2|délelőtt|night1|éjjel|night2|hajnal|noon|dél|pm|du.|de.|du.|10|afternoon1|du.|am|de.|evening1|este|midnight|éjfél|morning1|reggel|morning2|de.|night1|éjjel|night2|hajnal|noon|dél|pm|du.|y. MM. dd.|y. MMM d.|y. MMMM d.|y. MMMM d., EEEE|jan.|febr.|márc.|ápr.|máj.|jún.|júl.|aug.|szept.|okt.|nov.|dec.|január|február|március|április|május|június|július|augusztus|szeptember|október|november|december|J|F|M|Á|M|J|J|A|Sz|O|N|D|0|V|H|K|Sze|Cs|P|Szo|vasárnap|hétfő|kedd|szerda|csütörtök|péntek|szombat|V|H|K|Sz|Cs|P|Sz|0|i. e.|i. sz.|Krisztus előtt|időszámításunk szerint|ie.|isz.|H:mm|H:mm:ss|H:mm:ss z|H:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|50|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|d., E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y.|GyMd|GGGGG y. MM. dd.|GyMMM|G y. MMM|GyMMMd|G y. MMM d.|GyMMMEd|G y. MMM d., E|h|a\u202Fh|H|H|hm|a\u202Fh:mm|Hm|H:mm|hms|a\u202Fh:mm:ss|Hms|H:mm:ss|hmsv|a\u202Fh:mm:ss v|Hmsv|HH:mm:ss v|hmv|a\u202Fh:mm v|Hmv|HH:mm v|M|L|Md|M. d.|MEd|M. d., E|MMM|LLL|MMMd|MMM d.|MMMEd|MMM d., E|MMMMd|MMMM d.|MMMMW-count-one|MMMM W. \'hete\'|MMMMW-count-other|MMMM W. \'hete\'|mmss|mm:ss|ms|mm:ss|y|y.|yM|y. M.|yMd|y. MM. dd.|yMEd|y. MM. dd., E|yMMM|y. MMM|yMMMd|y. MMM d.|yMMMEd|y. MMM d., E|yMMMM|y. MMMM|yQQQ|y. QQQ|yQQQQ|y. QQQQ|yw-count-one|Y w. \'hete\'|yw-count-other|Y w. \'hete\'|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|EUR|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$hu = $enkidatron$elm_cldr$Generated$Hu$hu;
var $enkidatron$elm_cldr$Generated$Hy$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'hy',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Hy$hy = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Hy$dayPeriods, 'hy||||AM|PM|8|afternoon1|ցերեկը|am|AM|evening1|երեկոյան|midnight|կեսգիշեր|morning1|առավոտյան|night1|գիշերը|noon|կեսօր|pm|PM|AM|PM|8|afternoon1|ցերեկվա|am|AM|evening1|երեկոյան|midnight|կեսգիշերին|morning1|առավոտյան|night1|գիշերվա|noon|կեսօրին|pm|PM|ա|հ|8|afternoon1|ցրկ|am|ա|evening1|երկ|midnight|կգ․|morning1|առվ|night1|գշր|noon|կօ․|pm|հ|dd.MM.yy|dd MMM, y թ.|dd MMMM, y թ.|y թ. MMMM d, EEEE|հնվ|փտվ|մրտ|ապր|մյս|հնս|հլս|օգս|սեպ|հոկ|նոյ|դեկ|հունվարի|փետրվարի|մարտի|ապրիլի|մայիսի|հունիսի|հուլիսի|օգոստոսի|սեպտեմբերի|հոկտեմբերի|նոյեմբերի|դեկտեմբերի|Հ|Փ|Մ|Ա|Մ|Հ|Հ|Օ|Ս|Հ|Ն|Դ|1|հնվ|փտվ|մրտ|ապր|մյս|հնս|հլս|օգս|սեպ|հոկ|նոյ|դեկ|հունվար|փետրվար|մարտ|ապրիլ|մայիս|հունիս|հուլիս|օգոստոս|սեպտեմբեր|հոկտեմբեր|նոյեմբեր|դեկտեմբեր|Հ|Փ|Մ|Ա|Մ|Հ|Հ|Օ|Ս|Հ|Ն|Դ|կիր|երկ|երք|չրք|հնգ|ուր|շբթ|կիրակի|երկուշաբթի|երեքշաբթի|չորեքշաբթի|հինգշաբթի|ուրբաթ|շաբաթ|Կ|Ե|Ե|Չ|Հ|Ո|Շ|0|մ.թ.ա.|մ.թ.|Քրիստոսից առաջ|Քրիստոսից հետո|մ.թ.ա.|մ.թ.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|49|Bh|B h-ին|Bhm|B h:mm-ին|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm-ին|EBhms|E B h:mm:ss|Ed|d, ccc|Ehm|E, h:mm a|EHm|E, HH:mm|Ehms|E, h:mm:ss a|EHms|E, HH:mm:ss|Gy|G y թ.|GyMd|dd.MM.y GGGGG|GyMMM|G y թ. MMM|GyMMMd|G y թ․ MMM d|GyMMMEd|G y թ. MMM d, E|h|h a|H|H|hm|h:mm a|Hm|H:mm|hms|h:mm:ss a|Hms|H:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|dd.MM|MEd|dd.MM, E|MMM|LLL|MMMd|d MMM|MMMEd|d MMM, E|MMMMd|MMMM d|MMMMW-count-one|MMMM W-ին շաբաթ|MMMMW-count-other|MMMM W-րդ շաբաթ|ms|mm:ss|y|y|yM|MM.y|yMd|dd.MM.y|yMEd|d.MM.y թ., E|yMMM|y թ. LLL|yMMMd|d MMM, y թ.|yMMMEd|y թ. MMM d, E|yMMMM|y թ․ LLLL|yQQQ|y թ. QQQ|yQQQQ|y թ. QQQQ|yw-count-one|Y թ․ w-ին շաբաթ|yw-count-other|Y թ․ w-րդ շաբաթ|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$hy = $enkidatron$elm_cldr$Generated$Hy$hy;
var $enkidatron$elm_cldr$Generated$Id$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'id',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(15, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(15, 0),
					_Utils_Tuple2(18, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Id$id = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Id$dayPeriods, 'id||||AM|PM|8|afternoon1|siang|am|AM|evening1|sore|midnight|tengah malam|morning1|pagi|night1|malam|noon|tengah hari|pm|PM|AM|PM|8|afternoon1|siang|am|AM|evening1|sore|midnight|tengah malam|morning1|pagi|night1|malam|noon|tengah hari|pm|PM|AM|PM|8|afternoon1|siang|am|AM|evening1|sore|midnight|tengah malam|morning1|pagi|night1|malam|noon|tengah hari|pm|PM|dd/MM/yy|d MMM y|d MMMM y|EEEE, dd MMMM y|Jan|Feb|Mar|Apr|Mei|Jun|Jul|Agu|Sep|Okt|Nov|Des|Januari|Februari|Maret|April|Mei|Juni|Juli|Agustus|September|Oktober|November|Desember|J|F|M|A|M|J|J|A|S|O|N|D|0|Min|Sen|Sel|Rab|Kam|Jum|Sab|Minggu|Senin|Selasa|Rabu|Kamis|Jumat|Sabtu|M|S|S|R|K|J|S|0|SM|M|Sebelum Masehi|Masehi|SM|M|HH.mm|HH.mm.ss|HH.mm.ss z|HH.mm.ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|48|Bh|h B|Bhm|h.mm B|Bhms|h.mm.ss B|d|d|E|ccc|EBhm|E h.mm B|EBhms|E h.mm.ss B|Ed|E, d|Ehm|E h.mm\u202Fa|EHm|E HH.mm|Ehms|E h.mm.ss\u202Fa|EHms|E HH.mm.ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h.mm\u202Fa|Hm|HH.mm|hms|h.mm.ss\u202Fa|Hms|HH.mm.ss|hmsv|h.mm.ss. a v|Hmsv|HH.mm.ss v|hmv|h.mm\u202Fa v|Hmv|HH.mm v|M|L|Md|d/M|MEd|E, d/M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-other|\'minggu\' \'ke\'-W MMMM|ms|mm.ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'minggu\' \'ke\'-w Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-¤||¤||¤||E0W.|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|Rs|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$id = $enkidatron$elm_cldr$Generated$Id$id;
var $enkidatron$elm_cldr$Generated$Ig$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Ig$ig = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ig$dayPeriods, 'ig||||A.M.|P.M.|2|am|A.M.|pm|P.M.|N’ụtụtụ|N’abali|2|am|N’ụtụtụ|pm|N’abali|A.M.|P.M.|2|am|A.M.|pm|P.M.|d/M/yy|d MMM y|d MMMM y|EEEE, d MMMM y|Jen|Feb|Maa|Epr|Mee|Juu|Jul|Ọgọ|Sep|Ọkt|Nov|Dis|Jenụwarị|Febrụwarị|Maachị|Epreel|Mee|Juun|Julaị|Ọgọọst|Septemba|Ọktoba|Novemba|Disemba|J|F|M|E|M|J|J|Ọ|S|Ọ|N|D|0|Sọn|Mọn|Tiu|Wen|Tọọ|Fraị|Sat|Sọndee|Mọnde|Tiuzdee|Wenezdee|Tọọzdee|Fraịdee|Satọdee|S|M|T|W|T|F|S|0|T.K.|A.K.|Tupu Kraist|Afọ Kraịst|T.K.|A.K.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|48|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|MMM G y|GyMMMd|d MMM, G y|GyMMMEd|E, d MMM, G y|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-other|\'Izu\' W \'n\'‘\'ime\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'Izu\' w \'n\' \'ime\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ig = $enkidatron$elm_cldr$Generated$Ig$ig;
var $enkidatron$elm_cldr$Generated$Is$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'is',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Is$is = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Is$dayPeriods, 'is||||f.h.|e.h.|8|afternoon1|síðdegis|am|f.h.|evening1|að kvöldi|midnight|miðnætti|morning1|að morgni|night1|að nóttu|noon|hádegi|pm|e.h.|f.h.|e.h.|8|afternoon1|síðdegis|am|f.h.|evening1|að kvöldi|midnight|miðnætti|morning1|að morgni|night1|að nóttu|noon|hádegi|pm|e.h.|f.|e.|8|afternoon1|sd.|am|f.|evening1|kv.|midnight|mn.|morning1|mrg.|night1|n.|noon|h.|pm|e.|d.M.y|d. MMM y|d. MMMM y|EEEE, d. MMMM y|jan.|feb.|mar.|apr.|maí|jún.|júl.|ágú.|sep.|okt.|nóv.|des.|janúar|febrúar|mars|apríl|maí|júní|júlí|ágúst|september|október|nóvember|desember|J|F|M|A|M|J|J|Á|S|O|N|D|0|sun.|mán.|þri.|mið.|fim.|fös.|lau.|sunnudagur|mánudagur|þriðjudagur|miðvikudagur|fimmtudagur|föstudagur|laugardagur|S|M|Þ|M|F|F|L|0|f.Kr.|e.Kr.|fyrir Krist|eftir Krist|f.k.|e.k.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|50|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d.|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E, d. MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|v – HH:mm:ss|hmv|h:mm\u202Fa v|Hmv|v – HH:mm|M|L|Md|d.M.|MEd|E, d.M.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMEd|E, d. MMMM|MMMMW-count-one|\'viku\' W \'í\' MMMM|MMMMW-count-other|\'viku\' W \'í\' MMMM|ms|mm:ss|y|y|yM|M. y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E, d. MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'viku\' w \'af\' Y|yw-count-other|\'viku\' w \'af\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BZD|$|CAD|CAD|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr.|DOP|$|EGP|E£|ESP|₧|EUR|EUR|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|INR|ISK|kr.|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr.|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr.|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$is = $enkidatron$elm_cldr$Generated$Is$is;
var $enkidatron$elm_cldr$Generated$It$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'it',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$It$it = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$It$dayPeriods, 'it||||AM|PM|8|afternoon1|di pomeriggio|am|AM|evening1|di sera|midnight|mezzanotte|morning1|di mattina|night1|di notte|noon|mezzogiorno|pm|PM|AM|PM|8|afternoon1|del pomeriggio|am|AM|evening1|di sera|midnight|mezzanotte|morning1|di mattina|night1|di notte|noon|mezzogiorno|pm|PM|m.|p.|8|afternoon1|di pomeriggio|am|m.|evening1|di sera|midnight|mezzanotte|morning1|di mattina|night1|di notte|noon|mezzogiorno|pm|p.|dd/MM/yy|d MMM y|d MMMM y|EEEE d MMMM y|gen|feb|mar|apr|mag|giu|lug|ago|set|ott|nov|dic|gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre|G|F|M|A|M|G|L|A|S|O|N|D|0|dom|lun|mar|mer|gio|ven|sab|domenica|lunedì|martedì|mercoledì|giovedì|venerdì|sabato|D|L|M|M|G|V|S|0|a.C.|d.C.|avanti Cristo|dopo Cristo|aC|dC|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|dd/MM/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd/MM|MEd|E dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMW-count-one|\'settimana\' W \'di\' MMMM|MMMMW-count-other|\'settimana\' W \'di\' MMMM|ms|mm:ss|y|y|yM|MM/y|yMd|dd/MM/y|yMEd|E dd/MM/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'settimana\' w \'del\' Y|yw-count-other|\'settimana\' w \'del\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|Br|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|£E|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|NKr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$it = $enkidatron$elm_cldr$Generated$It$it;
var $enkidatron$elm_cldr$Generated$Ja$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ja',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(19, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(23, 0),
					'night1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(23, 0),
					_Utils_Tuple2(4, 0),
					'night2'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ja$ja = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ja$dayPeriods, 'ja||||午前|午後|9|afternoon1|昼|am|午前|evening1|夕方|midnight|真夜中|morning1|朝|night1|夜|night2|夜中|noon|正午|pm|午後|午前|午後|9|afternoon1|昼|am|午前|evening1|夕方|midnight|真夜中|morning1|朝|night1|夜|night2|夜中|noon|正午|pm|午後|午前|午後|9|afternoon1|昼|am|午前|evening1|夕方|midnight|真夜中|morning1|朝|night1|夜|night2|夜中|noon|正午|pm|午後|y/MM/dd|y/MM/dd|y年M月d日|y年M月d日EEEE|1月|2月|3月|4月|5月|6月|7月|8月|9月|10月|11月|12月|1月|2月|3月|4月|5月|6月|7月|8月|9月|10月|11月|12月|1|2|3|4|5|6|7|8|9|10|11|12|0|日|月|火|水|木|金|土|日曜日|月曜日|火曜日|水曜日|木曜日|金曜日|土曜日|日|月|火|水|木|金|土|0|紀元前|西暦|紀元前|西暦|BC|AD|H:mm|H:mm:ss|H:mm:ss z|H時mm分ss秒 zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|54|Bh|BK時|Bhm|BK:mm|Bhms|BK:mm:ss|d|d日|E|ccc|EBhm|BK:mm (E)|EBhms|BK:mm:ss (E)|Ed|d日(E)|EEEEd|d日EEEE|Ehm|aK:mm (E)|EHm|H:mm (E)|Ehms|aK:mm:ss (E)|EHms|H:mm:ss (E)|Gy|Gy年|GyMd|Gy/M/d|GyMMM|Gy年M月|GyMMMd|Gy年M月d日|GyMMMEd|Gy年M月d日(E)|GyMMMEEEEd|Gy年M月d日EEEE|h|aK時|H|H時|hm|aK:mm|Hm|H:mm|hms|aK:mm:ss|Hms|H:mm:ss|hmsv|aK:mm:ss v|Hmsv|H:mm:ss v|hmv|aK:mm v|Hmv|H:mm v|M|M月|Md|M/d|MEd|M/d(E)|MEEEEd|M/dEEEE|MMM|M月|MMMd|M月d日|MMMEd|M月d日(E)|MMMEEEEd|M月d日EEEE|MMMMd|M月d日|MMMMW-count-other|M月第W週|ms|mm:ss|y|y年|yM|y/M|yMd|y/M/d|yMEd|y/M/d(E)|yMEEEEd|y/M/dEEEE|yMM|y/MM|yMMM|y年M月|yMMMd|y年M月d日|yMMMEd|y年M月d日(E)|yMMMEEEEd|y年M月d日EEEE|yMMMM|y年M月|yQQQ|y/QQQ|yQQQQ|y年QQQQ|yw-count-other|Y年第w週|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|元|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|￥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|レイ|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ja = $enkidatron$elm_cldr$Generated$Ja$ja;
var $enkidatron$elm_cldr$Generated$Jv$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Jv$jv = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Jv$dayPeriods, 'jv||||Isuk|Wengi|2|am|Isuk|pm|Wengi|Isuk|Wengi|2|am|Isuk|pm|Wengi|Isuk|Wengi|2|am|Isuk|pm|Wengi|dd-MM-y|d MMM y|d MMMM y|EEEE, d MMMM y|Jan|Feb|Mar|Apr|Mei|Jun|Jul|Agt|Sep|Okt|Nov|Des|Januari|Februari|Maret|April|Mei|Juni|Juli|Agustus|September|Oktober|November|Desember|J|F|M|A|M|J|J|A|S|O|N|D|0|Ahad|Sen|Sel|Rab|Kam|Jum|Sab|Ahad|Senin|Selasa|Rabu|Kamis|Jumat|Sabtu|A|S|S|R|K|J|S|0|SM|M|Sakdurunge Masehi|Masehi|SM|M|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1} {0}|{1} {0}|47|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd/MM|MEd|E dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-other|\'pekan\' W \'ing\' MMMM|ms|mm:ss|y|y|yM|MM-y|yMd|dd-MM-y|yMEd|E, dd-MM-y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'pekan\' w \'ing\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-¤\u00A0||¤\u00A0||¤\u00A0||E0W.|,|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$jv = $enkidatron$elm_cldr$Generated$Jv$jv;
var $enkidatron$elm_cldr$Generated$Ka$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ka',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(5, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ka$ka = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ka$dayPeriods, 'ka||||AM|PM|8|afternoon1|ნაშუადღ.|am|AM|evening1|საღ.|midnight|შუაღამეს|morning1|დილ.|night1|ღამ.|noon|შუადღ.|pm|PM|AM|PM|8|afternoon1|ნაშუადღევს|am|AM|evening1|საღამოს|midnight|შუაღამეს|morning1|დილით|night1|ღამით|noon|შუადღეს|pm|PM|a|p|8|afternoon1|ნაშუადღ.|am|a|evening1|საღ.|midnight|შუაღამეს|morning1|დილ.|night1|ღამ.|noon|შუადღ.|pm|p|dd.MM.yy|d MMM. y|d MMMM, y|EEEE, dd MMMM, y|იან|თებ|მარ|აპრ|მაი|ივნ|ივლ|აგვ|სექ|ოქტ|ნოე|დეკ|იანვარი|თებერვალი|მარტი|აპრილი|მაისი|ივნისი|ივლისი|აგვისტო|სექტემბერი|ოქტომბერი|ნოემბერი|დეკემბერი|ი|თ|მ|ა|მ|ი|ი|ა|ს|ო|ნ|დ|0|კვი|ორშ|სამ|ოთხ|ხუთ|პარ|შაბ|კვირა|ორშაბათი|სამშაბათი|ოთხშაბათი|ხუთშაბათი|პარასკევი|შაბათი|კ|ო|ს|ო|ხ|პ|შ|0|ძვ. წ.|ახ. წ.|ძველი წელთაღრიცხვით|ახალი წელთაღრიცხვით|ძვ. წ.|ახ. წ.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E, h:mm a|EHm|E, HH:mm|Ehms|E, h:mm:ss a|EHms|E, HH:mm:ss|Gy|y G|GyMd|d.M.y GGGGG|GyMMM|MMM. y G|GyMMMd|d MMM. y G|GyMMMEd|E, d MMM. y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d.M|MEd|E, d.M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-one|MMMMს კვირა W|MMMMW-count-other|MMMMს კვირა W|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|MMM. y|yMMMd|d MMM. y|yMMMEd|E, d MMM. y|yMMMM|MMMM, y|yQQQ|QQQ, y|yQQQQ|QQQQ, y|yw-count-one|კვირა w, Y|yw-count-other|კვირა w, Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ka = $enkidatron$elm_cldr$Generated$Ka$ka;
var $enkidatron$elm_cldr$Generated$Kk$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'kk',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Kk$kk = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Kk$dayPeriods, 'kk||||AM|PM|8|afternoon1|түстен кейінгі|am|AM|evening1|кешкі|midnight|түн жарымы|morning1|таңғы|night1|түнгі|noon|түскі|pm|PM|AM|PM|8|afternoon1|түстен кейінгі|am|AM|evening1|кешкі|midnight|түн жарымы|morning1|таңғы|night1|түнгі|noon|түскі|pm|PM|AM|PM|8|afternoon1|түстен кейінгі|am|AM|evening1|кешкі|midnight|түнгі|morning1|таңғы|night1|түнгі|noon|түскі|pm|PM|dd.MM.yy|y\u202F\'ж\'. dd MMM|y\u202F\'ж\'. d MMMM|y\u202F\'ж\'. d MMMM, EEEE|қаң.|ақп.|нау.|сәу.|мам.|мау.|шіл.|там.|қыр.|қаз.|қар.|жел.|қаңтар|ақпан|наурыз|сәуір|мамыр|маусым|шілде|тамыз|қыркүйек|қазан|қараша|желтоқсан|Қ|А|Н|С|М|М|Ш|Т|Қ|Қ|Қ|Ж|1|қаң.|ақп.|нау.|сәу.|мам.|мау.|шіл.|там.|қыр.|қаз.|қар.|жел.|Қаңтар|Ақпан|Наурыз|Сәуір|Мамыр|Маусым|Шілде|Тамыз|Қыркүйек|Қазан|Қараша|Желтоқсан|Қ|А|Н|С|М|М|Ш|Т|Қ|Қ|Қ|Ж|жс|дс|сс|ср|бс|жм|сб|жексенбі|дүйсенбі|сейсенбі|сәрсенбі|бейсенбі|жұма|сенбі|Ж|Д|С|С|Б|Ж|С|0|б.з.д.|б.з.|Біздің заманымызға дейін|біздің заманымыз|б.з.д.|б.з.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|49|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E, B h:mm|EBhms|E, B h:mm:ss|Ed|d, E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y\u202F\'ж\'.|GyMd|dd-MM-GGGGG y|GyMMM|G y\u202F\'ж\'. MMM|GyMMMd|G y\u202F\'ж\'. d MMM|GyMMMEd|G y\u202F\'ж\'. d MMM, E|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd.MM|MEd|dd.MM, E|MMM|LLL|MMMd|d MMM|MMMEd|d MMM, E|MMMMd|d MMMM|MMMMW-count-one|MMMM \'айының\' W-\'аптасы\'|MMMMW-count-other|MMMM \'айының\' W-\'аптасы\'|ms|mm:ss|y|y|yM|MM.y|yMd|dd.MM.y|yMEd|dd.MM.y, E|yMMM|y\u202F\'ж\'. MMM|yMMMd|y\u202F\'ж\'. d MMM|yMMMEd|y\u202F\'ж\'. d MMM, E|yMMMM|y\u202F\'ж\'. MMMM|yQQQ|y\u202F\'ж\'. QQQ|yQQQQ|y\u202F\'ж\'. QQQQ|yw-count-one|Y \'жылдың\' w-\'аптасы\'|yw-count-other|Y \'жылдың\' w-\'аптасы\'|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LSL|ЛСЛ|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$kk = $enkidatron$elm_cldr$Generated$Kk$kk;
var $enkidatron$elm_cldr$Generated$Km$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'km',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Km$km = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Km$dayPeriods, 'km||||AM|PM|8|afternoon1|នៅពេលរសៀល|am|AM|evening1|នៅពេល\u200Bល្ងាច|midnight|អធ្រាត្រ|morning1|នៅពេល\u200Bព្រឹក|night1|នៅពេល\u200Bយប់|noon|ថ្ងៃត្រង់|pm|PM|AM|PM|8|afternoon1|នៅពេលរសៀល|am|AM|evening1|នៅពេល\u200Bល្ងាច|midnight|អធ្រាត្រ|morning1|នៅពេល\u200Bព្រឹក|night1|នៅពេល\u200Bយប់|noon|ថ្ងៃត្រង់|pm|PM|a|p|8|afternoon1|នៅពេលរសៀល|am|a|evening1|នៅពេល\u200Bល្ងាច|midnight|អធ្រាត្រ|morning1|នៅពេល\u200Bព្រឹក|night1|នៅពេល\u200Bយប់|noon|ថ្ងៃត្រង់|pm|p|d/M/yy|d MMM y|d MMMM y|EEEE d MMMM y|មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ|មករា|កុម្ភៈ|មីនា|មេសា|ឧសភា|មិថុនា|កក្កដា|សីហា|កញ្ញា|តុលា|វិច្ឆិកា|ធ្នូ|ម|ក|ម|ម|ឧ|ម|ក|ស|ក|ត|វ|ធ|0|អាទិត្យ|ចន្ទ|អង្គារ|ពុធ|ព្រហ|សុក្រ|សៅរ៍|អាទិត្យ|ច័ន្ទ|អង្គារ|ពុធ|ព្រហស្បតិ៍|សុក្រ|សៅរ៍|អ|ច|អ|ព|ព|ស|ស|1|អាទិត្យ|ចន្ទ|អង្គារ|ពុធ|ព្រហ|សុក្រ|សៅរ៍|អាទិត្យ|ចន្ទ|អង្គារ|ពុធ|ព្រហស្បតិ៍|សុក្រ|សៅរ៍|អ|ច|អ|ព|ព|ស|ស|មុន គ.ស.|គ.ស.|មុន\u200Bគ្រិស្តសករាជ|គ្រិស្តសករាជ|មុន គ.ស.|គ.ស.|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|47|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|GGGGG y-MM-dd|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E d/M|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|MMMM d|MMMMW-count-other|សប្តាហ៍ទី W នៃខែ MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|សប្តាហ៍ទី w នៃឆ្នាំ Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-|¤||¤||¤|E0W,|.|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LSL|ឡូទី|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$km = $enkidatron$elm_cldr$Generated$Km$km;
var $enkidatron$elm_cldr$Generated$Kn$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'kn',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Kn$kn = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Kn$dayPeriods, 'kn||||ಪೂರ್ವಾಹ್ನ|ಅಪರಾಹ್ನ|7|afternoon1|ಮಧ್ಯಾಹ್ನ|am|ಪೂರ್ವಾಹ್ನ|evening1|ಸಂಜೆ|midnight|ಮಧ್ಯ ರಾತ್ರಿ|morning1|ಬೆಳಗ್ಗೆ|night1|ರಾತ್ರಿ|pm|ಅಪರಾಹ್ನ|ಪೂರ್ವಾಹ್ನ|ಅಪರಾಹ್ನ|7|afternoon1|ಮಧ್ಯಾಹ್ನ|am|ಪೂರ್ವಾಹ್ನ|evening1|ಸಂಜೆ|midnight|ಮಧ್ಯ ರಾತ್ರಿ|morning1|ಬೆಳಗ್ಗೆ|night1|ರಾತ್ರಿ|pm|ಅಪರಾಹ್ನ|ಪೂ|ಅ|7|afternoon1|ಮಧ್ಯಾಹ್ನ|am|ಪೂ|evening1|ಸಂಜೆ|midnight|ಮಧ್ಯರಾತ್ರಿ|morning1|ಬೆಳಗ್ಗೆ|night1|ರಾತ್ರಿ|pm|ಅ|d/M/yy|MMM d, y|MMMM d, y|EEEE, MMMM d, y|ಜನವರಿ|ಫೆಬ್ರವರಿ|ಮಾರ್ಚ್|ಏಪ್ರಿ|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗಸ್ಟ್|ಸೆಪ್ಟೆಂ|ಅಕ್ಟೋ|ನವೆಂ|ಡಿಸೆಂ|ಜನವರಿ|ಫೆಬ್ರವರಿ|ಮಾರ್ಚ್|ಏಪ್ರಿಲ್|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗಸ್ಟ್|ಸೆಪ್ಟೆಂಬರ್|ಅಕ್ಟೋಬರ್|ನವೆಂಬರ್|ಡಿಸೆಂಬರ್|ಜ|ಫೆ|ಮಾ|ಏ|ಮೇ|ಜೂ|ಜು|ಆ|ಸೆ|ಅ|ನ|ಡಿ|1|ಜನ|ಫೆಬ್ರ|ಮಾರ್ಚ್|ಏಪ್ರಿ|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗ|ಸೆಪ್ಟೆಂ|ಅಕ್ಟೋ|ನವೆಂ|ಡಿಸೆಂ|ಜನವರಿ|ಫೆಬ್ರವರಿ|ಮಾರ್ಚ್|ಏಪ್ರಿಲ್|ಮೇ|ಜೂನ್|ಜುಲೈ|ಆಗಸ್ಟ್|ಸೆಪ್ಟೆಂಬರ್|ಅಕ್ಟೋಬರ್|ನವೆಂಬರ್|ಡಿಸೆಂಬರ್|ಜ|ಫೆ|ಮಾ|ಏ|ಮೇ|ಜೂ|ಜು|ಆ|ಸೆ|ಅ|ನ|ಡಿ|ಭಾನು|ಸೋಮ|ಮಂಗಳ|ಬುಧ|ಗುರು|ಶುಕ್ರ|ಶನಿ|ಭಾನುವಾರ|ಸೋಮವಾರ|ಮಂಗಳವಾರ|ಬುಧವಾರ|ಗುರುವಾರ|ಶುಕ್ರವಾರ|ಶನಿವಾರ|ಭಾ|ಸೋ|ಮಂ|ಬು|ಗು|ಶು|ಶ|0|ಕ್ರಿ.ಪೂ|ಕ್ರಿ.ಶ|ಕ್ರಿಸ್ತ ಪೂರ್ವ|ಕ್ರಿಸ್ತ ಶಕ|ಕ್ರಿ.ಪೂ|ಕ್ರಿ.ಶ|hh:mm a|hh:mm:ss a|hh:mm:ss a z|hh:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|d/M, E|MMdd|dd-MM|MMM|LLL|MMMd|MMM d|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-other|\'week\' W \'of\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, M/d/y|yMM|MM-y|yMMM|MMM y|yMMMd|MMM d,y|yMMMEd|E, MMM d, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'week\' w \'of\' Y|ahhmm|ahhmmss|ahhmmssz|ahhmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|ಲೀ|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$kn = $enkidatron$elm_cldr$Generated$Kn$kn;
var $enkidatron$elm_cldr$Generated$Ko$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ko',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(3, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(3, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ko$ko = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ko$dayPeriods, 'ko||||AM|PM|9|afternoon1|오후|am|AM|evening1|저녁|midnight|자정|morning1|새벽|morning2|오전|night1|밤|noon|정오|pm|PM|오전|오후|9|afternoon1|오후|am|오전|evening1|저녁|midnight|자정|morning1|새벽|morning2|오전|night1|밤|noon|정오|pm|오후|AM|PM|9|afternoon1|오후|am|AM|evening1|저녁|midnight|자정|morning1|새벽|morning2|오전|night1|밤|noon|정오|pm|PM|yy. M. d.|y. M. d.|y년 MMMM d일|y년 MMMM d일 EEEE|1월|2월|3월|4월|5월|6월|7월|8월|9월|10월|11월|12월|1월|2월|3월|4월|5월|6월|7월|8월|9월|10월|11월|12월|1월|2월|3월|4월|5월|6월|7월|8월|9월|10월|11월|12월|0|일|월|화|수|목|금|토|일요일|월요일|화요일|수요일|목요일|금요일|토요일|일|월|화|수|목|금|토|0|BC|AD|기원전|서기|BC|AD|a h:mm|a h:mm:ss|a h시 m분 s초 z|a h시 m분 s초 zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|56|Bh|B h시|Bhm|B h:mm|Bhms|B h:mm:ss|d|d일|E|ccc|EBhm|(E) B h:mm|EBhms|(E) B h:mm:ss|Ed|d일 (E)|EEEEd|d일 EEEE|Ehm|(E) a h:mm|EHm|(E) HH:mm|Ehms|(E) a h:mm:ss|EHms|(E) HH:mm:ss|Gy|G y년|GyMd|GGGGG y/M/d|GyMMM|G y년 MMM|GyMMMd|G y년 MMM d일|GyMMMEd|G y년 MMM d일 (E)|GyMMMEEEEd|G y년 MMM d일 EEEE|h|a h시|H|H시|HHmmss|HH:mm:ss|hm|a h:mm|Hm|HH:mm|hms|a h:mm:ss|Hms|H시 m분 s초|hmsv|a h:mm:ss v|Hmsv|H시 m분 s초 v|hmv|a h:mm v|Hmv|HH:mm v|M|M월|Md|M. d.|MEd|M. d. (E)|MEEEEd|M. d. EEEE|MMM|LLL|MMMd|MMM d일|MMMEd|MMM d일 (E)|MMMEEEEd|MMM d일 EEEE|MMMMd|MMMM d일|MMMMW-count-other|MMMM W번째 주|mmss|mm:ss|ms|mm:ss|y|y년|yM|y. M.|yMd|y. M. d.|yMEd|y. M. d. (E)|yMEEEEd|y. M. d. EEEE|yMM|y. M.|yMMM|y년 MMM|yMMMd|y년 MMM d일|yMMMEd|y년 MMM d일 (E)|yMMMEEEEd|y년 MMM d일 EEEE|yMMMM|y년 MMMM|yQQQ|y년 QQQ|yQQQQ|y년 QQQQ|yw-count-other|Y년 w번째 주|ahmm|ahmmss|ahmsz|ahmszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ko = $enkidatron$elm_cldr$Generated$Ko$ko;
var $enkidatron$elm_cldr$Generated$Kok$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Kok$kok = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Kok$dayPeriods, 'kok||||AM|PM|2|am|AM|pm|PM|सकाळ|सांज|2|am|सकाळ|pm|सांज|a|p|2|am|a|pm|p|d-M-yy|d-MMM-y|d MMMM y|EEEE d MMMM y|जानेवारी|फेब्रुवारी|मार्च|एप्रील|मे|जून|जुलय|ऑगस्ट|सप्टेंबर|ऑक्टोबर|नोव्हेंबर|डिसेंबर|जानेवारी|फेब्रुवारी|मार्च|एप्रील|मे|जून|जुलय|ऑगस्ट|सप्टेंबर|ऑक्टोबर|नोव्हेंबर|डिसेंबर|1|2|3|4|5|6|7|8|9|10|11|12|1|जाने|फेब्रु|मार्च|एप्री|मे|जून|जुल|ऑग|सप्टें|ऑक्टो|नो|डिसे|जानेवारी|फेब्रुवारी|मार्च|एप्रील|मे|जून|जुलय|ऑगस्ट|सप्टेंबर|ऑक्टोबर|नोव्हेंबर|डिसेंबर|1|2|3|4|5|6|7|8|9|10|11|12|आयतार|सोमार|मंगळार|बुधवार|बिरेस्तार|शुक्रार|शेनवार|आयतार|सोमार|मंगळार|बुधवार|बिरेस्तार|शुक्रार|शेनवार|आ|सो|मं|बु|बि|शु|शे|1|आयतार|सोमार|मंगळार|बुधवार|बिरेस्तार|शुक्रार|शेनवार|आयतार|सोमार|मंगळार|बुधवार|बिरेस्तार|शुक्रार|शेनवार|आ|सो|मं|बु|ब|शु|शे|क्रिस्तपूर्व|क्रि.श.|क्रिस्तपूर्व|क्रिस्तशक|क्रिस्तपूर्व|क्रि.श.|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|47|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d-M|MEd|d-M, E|MMM|LLL|MMMd|MMM d|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-other|\'week\' W \'of\' MMMM|ms|mm:ss|y|y|yM|M-y|yMd|d-M-y|yMEd|d-M-y, E|yMMM|y MMM|yMMMd|y MMM d|yMMMEd|y MMM d, E|yMMMM|MMMM, y|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-other|\'week\' w \'of\' Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|रॉन|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$kok = $enkidatron$elm_cldr$Generated$Kok$kok;
var $enkidatron$elm_cldr$Generated$Ky$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ky',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ky$ky = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ky$dayPeriods, 'ky||||тң|тк|8|afternoon1|түштөн кийин|am|тң|evening1|кечинде|midnight|түн ортосу|morning1|эртең менен|night1|түн ичинде|noon|чак түш|pm|тк|таңкы|түштөн кийинки|8|afternoon1|түштөн кийин|am|таңкы|evening1|кечинде|midnight|түн ортосу|morning1|эртең менен|night1|түн ичинде|noon|чак түш|pm|түштөн кийинки|тң|тк|8|afternoon1|түшт кйн|am|тң|evening1|кечк|midnight|түн орт|morning1|эртң мн|night1|түн|noon|чт|pm|тк|d/M/yy|y-\'ж\'., d-MMM|y-\'ж\'., d-MMMM|y-\'ж\'., d-MMMM, EEEE|янв.|фев.|мар.|апр.|май|июн.|июл.|авг.|сен.|окт.|ноя.|дек.|январь|февраль|март|апрель|май|июнь|июль|август|сентябрь|октябрь|ноябрь|декабрь|Я|Ф|М|А|М|И|И|А|С|О|Н|Д|1|Янв|Фев|Мар|Апр|Май|Июн|Июл|Авг|Сен|Окт|Ноя|Дек|Январь|Февраль|Март|Апрель|Май|Июнь|Июль|Август|Сентябрь|Октябрь|Ноябрь|Декабрь|Я|Ф|М|А|М|И|И|А|С|О|Н|Д|жек.|дүй.|шейш.|шарш.|бейш.|жума|ишм.|жекшемби|дүйшөмбү|шейшемби|шаршемби|бейшемби|жума|ишемби|Ж|Д|Ш|Ш|Б|Ж|И|0|б.з.ч.|б.з.|биздин заманга чейин|биздин заман|б.з.ч.|б.з.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y-\'ж\'.|GyMd|GGGGG y-MM-dd|GyMMM|G y-\'ж\'. MMM|GyMMMd|G y-\'ж\'. d-MMM|GyMMMEd|G y-\'ж\'. d-MMM, E|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd-MM|MEd|dd-MM, E|MMM|LLL|MMMd|d-MMM|MMMEd|d-MMM, E|MMMMd|d-MMMM|MMMMW-count-one|MMMM \'айынын\' W-\'аптасы\'|MMMMW-count-other|MMMM \'айынын\' W-\'аптасы\'|ms|mm:ss|y|y|yM|y-MM|yMd|y-dd-MM|yMEd|y-dd-MM, E|yMMM|y-\'ж\'. MMM|yMMMd|y-\'ж\'. d-MMM|yMMMEd|y-\'ж\'. d-MMM, E|yMMMM|y-\'ж\'., MMMM|yQQQ|y-\'ж\'., QQQ|yQQQQ|y-\'ж\'., QQQQ|yw-count-one|Y-\'жылдын\' w-\'аптасы\'|yw-count-other|Y-\'жылдын\' w-\'аптасы\'|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|BD$|BND|$|BOB|Bs|BRL|BRL|BSD|B$|BWP|P|BYN|р.|BZD|BZ$|CAD|CAD|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|RD$|EGP|LE|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|Kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|J$|JPY|JP¥|KGS|сом|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|TT$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ky = $enkidatron$elm_cldr$Generated$Ky$ky;
var $enkidatron$elm_cldr$Generated$Lo$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'lo',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(5, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Lo$lo = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Lo$dayPeriods, 'lo||||ກ່ອນທ່ຽງ|ຫຼັງທ່ຽງ|8|afternoon1|ຕອນບ່າຍ|am|ກ່ອນທ່ຽງ|evening1|ຕອນແລງ|midnight|ທ່ຽງຄືນ|morning1|ຕອນເຊົ້າ|night1|ກາງຄືນ|noon|ຕອນທ່ຽງ|pm|ຫຼັງທ່ຽງ|ກ່ອນທ່ຽງ|ຫຼັງທ່ຽງ|8|afternoon1|ຕອນບ່າຍ|am|ກ່ອນທ່ຽງ|evening1|ຕອນແລງ|midnight|ທ່ຽງຄືນ|morning1|ຕອນເຊົ້າ|night1|ຕອນກາງຄືນ|noon|ຕອນທ່ຽງ|pm|ຫຼັງທ່ຽງ|ກ່ອນທ່ຽງ|ຫຼັງທ່ຽງ|8|afternoon1|ຕອນທ່ຽງ|am|ກ່ອນທ່ຽງ|evening1|ຕອນແລງ|midnight|ທ່ຽງຄືນ|morning1|ຕອນເຊົ້າ|night1|ກາງຄືນ|noon|ຕອນທ່ຽງ|pm|ຫຼັງທ່ຽງ|d/M/y|d MMM y|d MMMM y|EEEE ທີ d MMMM G y|ມ.ກ.|ກ.ພ.|ມ.ນ.|ມ.ສ.|ພ.ພ.|ມິ.ຖ.|ກ.ລ.|ສ.ຫ.|ກ.ຍ.|ຕ.ລ.|ພ.ຈ.|ທ.ວ.|ມັງກອນ|ກຸມພາ|ມີນາ|ເມສາ|ພຶດສະພາ|ມິຖຸນາ|ກໍລະກົດ|ສິງຫາ|ກັນຍາ|ຕຸລາ|ພະຈິກ|ທັນວາ|1|2|3|4|5|6|7|8|9|10|11|12|0|ອາທິດ|ຈັນ|ອັງຄານ|ພຸດ|ພະຫັດ|ສຸກ|ເສົາ|ວັນອາທິດ|ວັນຈັນ|ວັນອັງຄານ|ວັນພຸດ|ວັນພະຫັດ|ວັນສຸກ|ວັນເສົາ|ອາ|ຈ|ອ|ພ|ພຫ|ສຸ|ສ|0|ກ່ອນ ຄ.ສ.|ຄ.ສ.|ກ່ອນຄຣິດສັກກະລາດ|ຄຣິດສັກກະລາດ|ກ່ອນ ຄ.ສ.|ຄ.ສ.|H:mm|H:mm:ss|H ໂມງ m ນາທີ ss ວິນາທີ z|H ໂມງ m ນາທີ ss ວິນາທີ zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|47|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|d/M/GGGGG y|GyMMM|MMM, G y|GyMMMd|d MMMM, G y|GyMMMEd|E d MMMM, G y|h|h ໂມງa|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMW-count-other|ອາທິດທີ່ W ຂອງເດືອນ M|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|ອາທິດທີ່ w ຂອງປີ Y|Hmm|Hmmss|Hmssz|Hmsszzzz|X3W.|,|-||||||E2W.|,|¤-||¤||¤||E0W.|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$lo = $enkidatron$elm_cldr$Generated$Lo$lo;
var $enkidatron$elm_cldr$Generated$As$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$As$locale_as = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$As$dayPeriods, 'as||||পূৰ্বাহ্ন|অপৰাহ্ন|2|am|পূৰ্বাহ্ন|pm|অপৰাহ্ন|পূৰ্বাহ্ন|অপৰাহ্ন|2|am|পূৰ্বাহ্ন|pm|অপৰাহ্ন|পূৰ্বাহ্ন|অপৰাহ্ন|2|am|পূৰ্বাহ্ন|pm|অপৰাহ্ন|d-M-y|dd-MM-y|d MMMM, y|EEEE, d MMMM, y|জানু|ফেব্ৰু|মাৰ্চ|এপ্ৰিল|মে’|জুন|জুলাই|আগ|ছেপ্তে|অক্টো|নৱে|ডিচে|জানুৱাৰী|ফেব্ৰুৱাৰী|মাৰ্চ|এপ্ৰিল|মে’|জুন|জুলাই|আগষ্ট|ছেপ্তেম্বৰ|অক্টোবৰ|নৱেম্বৰ|ডিচেম্বৰ|জ|ফ|ম|এ|ম|জ|জ|আ|ছ|অ|ন|ড|0|দেও|সোম|মঙ্গল|বুধ|বৃহ|শুক্ৰ|শনি|দেওবাৰ|সোমবাৰ|মঙ্গলবাৰ|বুধবাৰ|বৃহস্পতিবাৰ|শুক্ৰবাৰ|শনিবাৰ|দ|স|ম|ব|ব|শ|শ|0|খ্ৰীঃ পূঃ|খ্ৰীঃ|খ্ৰীষ্টপূৰ্ব|খ্ৰীষ্টাব্দ|খ্ৰীঃ পূঃ|খ্ৰীঃ|a h.mm|a h.mm.ss|a h.mm.ss z|a h.mm.ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|E d|Ehm|E a h:mm|EHm|E HH:mm|Ehms|E a h:mm:ss|EHms|E HH:mm:ss|Gy|G y|GyMd|d/M/y GGGGG|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|a h|H|HH|hm|a h:mm|Hm|HH:mm|hms|a h:mm:ss|Hms|HH:mm:ss|hmsv|a h:mm:ss v|Hmsv|HH:mm:ss v|hmv|a h:mm v|Hmv|HH:mm v|M|L|Md|dd-MM|MEd|E, dd-MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-one|MMMMৰ সপ্তাহ W|MMMMW-count-other|MMMMৰ সপ্তাহ W|ms|mm:ss|y|y|yM|MM-y|yMd|dd-MM-y|yMEd|E, dd-MM-y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Yৰ সপ্তাহ w|yw-count-other|Yৰ সপ্তাহ w|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2I,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0I,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$locale_as = $enkidatron$elm_cldr$Generated$As$locale_as;
var $enkidatron$elm_cldr$Generated$Lt$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'lt',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Lt$lt = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Lt$dayPeriods, 'lt||||priešpiet|popiet|8|afternoon1|popietė|am|priešpiet|evening1|vakaras|midnight|vidurnaktis|morning1|rytas|night1|naktis|noon|perpiet|pm|popiet|priešpiet|popiet|8|afternoon1|popietė|am|priešpiet|evening1|vakaras|midnight|vidurnaktis|morning1|rytas|night1|naktis|noon|perpiet|pm|popiet|pr.\u202Fp.|pop.|8|afternoon1|popietė|am|pr.\u202Fp.|evening1|vakaras|midnight|vidurnaktis|morning1|rytas|night1|naktis|noon|perpiet|pm|pop.|y-MM-dd|y-MM-dd|y \'m\'. MMMM d \'d\'.|y \'m\'. MMMM d \'d\'., EEEE|saus.|vas.|kov.|bal.|geg.|birž.|liep.|rugp.|rugs.|spal.|lapkr.|gruod.|sausio|vasario|kovo|balandžio|gegužės|birželio|liepos|rugpjūčio|rugsėjo|spalio|lapkričio|gruodžio|S|V|K|B|G|B|L|R|R|S|L|G|1|saus.|vas.|kov.|bal.|geg.|birž.|liep.|rugp.|rugs.|spal.|lapkr.|gruod.|sausis|vasaris|kovas|balandis|gegužė|birželis|liepa|rugpjūtis|rugsėjis|spalis|lapkritis|gruodis|S|V|K|B|G|B|L|R|R|S|L|G|sk|pr|an|tr|kt|pn|št|sekmadienis|pirmadienis|antradienis|trečiadienis|ketvirtadienis|penktadienis|šeštadienis|S|P|A|T|K|P|Š|0|pr. Kr.|po Kr.|prieš Kristų|po Kristaus|pr. Kr.|po Kr.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|61|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|dd|E|ccc|EBhm|h:mm B, E|EBhms|h:mm:ss B, E|Ed|d, E|Ehm|hh:mm\u202Fa, E|EHm|HH:mm, E|Ehms|hh:mm:ss\u202Fa, E|EHms|HH:mm:ss, E|Gy|y \'m\'. G|GyMd|y-MM-dd G|GyMMM|y-MM G|GyMMMd|y-MM-dd G|GyMMMEd|y-MM-dd G, E|GyMMMM|y \'m\'. G, LLLL|GyMMMMd|y \'m\'. G MMMM d \'d\'.|GyMMMMEd|y \'m\'. G MMMM d \'d\'., E|h|hh\u202Fa|H|HH|hm|hh:mm\u202Fa|Hm|HH:mm|hms|hh:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|hh:mm:ss\u202Fa; v|Hmsv|HH:mm:ss; v|hmv|hh:mm\u202Fa; v|Hmv|HH:mm; v|M|MM|Md|MM-d|MEd|MM-dd, E|MMdd|MM-dd|MMM|MM|MMMd|MM-dd|MMMEd|MM-dd, E|MMMM|LLLL|MMMMd|MMMM d \'d\'.|MMMMEd|MMMM d \'d\'., E|MMMMW-count-one|MMMM W \'sav\'.|MMMMW-count-few|MMMM W \'sav\'.|MMMMW-count-many|MMMM W \'sav\'.|MMMMW-count-other|MMMM W \'sav\'.|ms|mm:ss|y|y|yM|y-MM|yMd|y-MM-dd|yMEd|y-MM-dd, E|yMMM|y-MM|yMMMd|y-MM-dd|yMMMEd|y-MM-dd, E|yMMMM|y \'m\'. LLLL|yMMMMd|y \'m\'. MMMM d \'d\'.|yMMMMEd|y \'m\'. MMMM d \'d\'., E|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|Y w \'sav\'.|yw-count-few|Y w \'sav\'.|yw-count-many|Y w \'sav\'.|yw-count-other|Y w \'sav\'.|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|−||||||E2W\u00A0|,|−|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|−|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|BDT|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|Br|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|KHR|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|LAK|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|MNT|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zl|PYG|Gs|RON|lei|RUB|rb|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|XAF|XCD|XCD|XOF|XOF|XPF|XPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$lt = $enkidatron$elm_cldr$Generated$Lt$lt;
var $enkidatron$elm_cldr$Generated$Lv$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'lv',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(23, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(23, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Lv$lv = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Lv$dayPeriods, 'lv||||priekšp.|pēcp.|8|afternoon1|pēcpusd.|am|priekšp.|evening1|vakarā|midnight|pusnaktī|morning1|no rīta|night1|naktī|noon|pusd.|pm|pēcp.|priekšpusdienā|pēcpusdienā|8|afternoon1|pēcpusdienā|am|priekšpusdienā|evening1|vakarā|midnight|pusnaktī|morning1|no rīta|night1|naktī|noon|pusdienlaikā|pm|pēcpusdienā|priekšp.|pēcp.|8|afternoon1|pēcpusd.|am|priekšp.|evening1|vakarā|midnight|pusnaktī|morning1|no rīta|night1|naktī|noon|pusd.|pm|pēcp.|dd.MM.yy|y. \'gada\' d. MMM|y. \'gada\' d. MMMM|EEEE, y. \'gada\' d. MMMM|janv.|febr.|marts|apr.|maijs|jūn.|jūl.|aug.|sept.|okt.|nov.|dec.|janvāris|februāris|marts|aprīlis|maijs|jūnijs|jūlijs|augusts|septembris|oktobris|novembris|decembris|J|F|M|A|M|J|J|A|S|O|N|D|0|svētd.|pirmd.|otrd.|trešd.|ceturtd.|piektd.|sestd.|svētdiena|pirmdiena|otrdiena|trešdiena|ceturtdiena|piektdiena|sestdiena|S|P|O|T|C|P|S|1|Svētd.|Pirmd.|Otrd.|Trešd.|Ceturtd.|Piektd.|Sestd.|Svētdiena|Pirmdiena|Otrdiena|Trešdiena|Ceturtdiena|Piektdiena|Sestdiena|S|P|O|T|C|P|S|p.m.ē.|m.ē.|pirms mūsu ēras|mūsu ērā|p.m.ē.|m.ē.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|53|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E, h:mm B|EBhms|E, h:mm:ss B|Ed|E, d.|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|G y. \'g\'.|GyMd|GGGGG dd-MM-y|GyMMM|G y. \'g\'. MMM|GyMMMd|G y. \'g\'. d. MMM|GyMMMEd|E, G y. \'g\'. d. MMM|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd.MM.|MEd|E, dd.MM.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMEd|E, d. MMMM|MMMMW-count-zero|MMMM, W. \'nedēļa\'|MMMMW-count-one|MMMM, W. \'nedēļa\'|MMMMW-count-other|MMMM, W. \'nedēļa\'|mmss|mm:ss|ms|mm:ss|y|y. \'g\'.|yM|MM.y.|yMd|d.MM.y.|yMEd|E, d.MM.y.|yMMM|y. \'g\'. MMM|yMMMd|y. \'g\'. d. MMM|yMMMEd|E, y. \'g\'. d. MMM|yMMMM|y. \'g\'. MMMM|yQQQ|y. \'g\'. QQQ|yQQQQ|y. \'g\'. QQQQ|yw-count-zero|Y. \'g\'. w. \'nedēļa\'|yw-count-one|Y. \'g\'. w. \'nedēļa\'|yw-count-other|Y. \'g\'. w. \'nedēļa\'|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GHS|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$lv = $enkidatron$elm_cldr$Generated$Lv$lv;
var $enkidatron$elm_cldr$Generated$Mk$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'mk',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Mk$mk = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Mk$dayPeriods, 'mk||||претпл.|попл.|9|afternoon1|попладне|am|претпл.|evening1|навечер|midnight|полноќ|morning1|наутро|morning2|претпладне|night1|ноќе|noon|напладне|pm|попл.|претпл.|попл.|9|afternoon1|попладне|am|претпл.|evening1|навечер|midnight|полноќ|morning1|наутро|morning2|претпладне|night1|ноќе|noon|напладне|pm|попл.|претпл.|попл.|9|afternoon1|попл.|am|претпл.|evening1|навечер|midnight|полн.|morning1|наутро|morning2|претпл.|night1|ноќе|noon|напл.|pm|попл.|d.M.yy|d.M.y|d MMMM y|EEEE, d MMMM y|јан.|фев.|мар.|апр.|мај|јун.|јул.|авг.|сеп.|окт.|ное.|дек.|јануари|февруари|март|април|мај|јуни|јули|август|септември|октомври|ноември|декември|ј|ф|м|а|м|ј|ј|а|с|о|н|д|0|нед.|пон.|вто.|сре.|чет.|пет.|саб.|недела|понеделник|вторник|среда|четврток|петок|сабота|н|п|в|с|ч|п|с|0|п.н.е.|н.е.|пред нашата ера|од нашата ера|п.н.е.|н.е.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|d.M.y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d.M|Mdd|d.M|MEd|E, d.M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|W. \'седмица\' \'од\' MMMM|MMMMW-count-other|W. \'седмица\' \'од\' MMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|MMM y\u202F\'г\'.|yMMMd|d MMM y\u202F\'г\'.|yMMMEd|E, d MMM y\u202F\'г\'.|yMMMM|MMMM y\u202F\'г\'.|yQQQ|QQQ y\u202F\'г\'.|yQQQQ|QQQQ y\u202F\'г\'.|yw-count-one|w. \'седмица\' \'од\' Y|yw-count-other|w. \'седмица\' \'од\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MKD|ден.|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$mk = $enkidatron$elm_cldr$Generated$Mk$mk;
var $enkidatron$elm_cldr$Generated$Ml$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ml',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(14, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(14, 0),
					_Utils_Tuple2(15, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(15, 0),
					_Utils_Tuple2(18, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(19, 0),
					'evening2'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(3, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(3, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ml$ml = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ml$dayPeriods, 'ml||||AM|PM|11|afternoon1|ഉച്ചയ്ക്ക്|afternoon2|ഉച്ചതിരിഞ്ഞ്|am|AM|evening1|വൈകുന്നേരം|evening2|സന്ധ്യ|midnight|അർദ്ധരാത്രി|morning1|പുലർച്ചെ|morning2|രാവിലെ|night1|രാത്രി|noon|ഉച്ച|pm|PM|AM|PM|11|afternoon1|ഉച്ചയ്ക്ക്|afternoon2|ഉച്ചതിരിഞ്ഞ്|am|AM|evening1|വൈകുന്നേരം|evening2|സന്ധ്യ|midnight|അർദ്ധരാത്രി|morning1|പുലർച്ചെ|morning2|രാവിലെ|night1|രാത്രി|noon|ഉച്ച|pm|PM|AM|PM|11|afternoon1|ഉച്ചയ്ക്ക്|afternoon2|ഉച്ചതിരിഞ്ഞ്|am|AM|evening1|വൈകുന്നേരം|evening2|സന്ധ്യ|midnight|അ|morning1|പുലർച്ചെ|morning2|രാവിലെ|night1|രാത്രി|noon|ഉച്ച|pm|PM|d/M/yy|y, MMM d|y, MMMM d|y, MMMM d, EEEE|ജനു|ഫെബ്രു|മാർ|ഏപ്രി|മേയ്|ജൂൺ|ജൂലൈ|ഓഗ|സെപ്റ്റം|ഒക്ടോ|നവം|ഡിസം|ജനുവരി|ഫെബ്രുവരി|മാർച്ച്|ഏപ്രിൽ|മേയ്|ജൂൺ|ജൂലൈ|ഓഗസ്റ്റ്|സെപ്റ്റംബർ|ഒക്\u200Cടോബർ|നവംബർ|ഡിസംബർ|ജ|ഫെ|മാ|ഏ|മെ|ജൂൺ|ജൂ|ഓ|സെ|ഒ|ന|ഡി|0|ഞായർ|തിങ്കൾ|ചൊവ്വ|ബുധൻ|വ്യാഴം|വെള്ളി|ശനി|ഞായറാഴ്\u200Cച|തിങ്കളാഴ്\u200Cച|ചൊവ്വാഴ്ച|ബുധനാഴ്\u200Cച|വ്യാഴാഴ്\u200Cച|വെള്ളിയാഴ്\u200Cച|ശനിയാഴ്\u200Cച|ഞ|തി|ചൊ|ബു|വ്യാ|വെ|ശ|1|ഞായർ|തിങ്കൾ|ചൊവ്വ|ബുധൻ|വ്യാഴം|വെള്ളി|ശനി|ഞായറാഴ്\u200Cച|തിങ്കളാഴ്\u200Cച|ചൊവ്വാഴ്\u200Cച|ബുധനാഴ്\u200Cച|വ്യാഴാഴ്\u200Cച|വെള്ളിയാഴ്\u200Cച|ശനിയാഴ്\u200Cച|ഞാ|തി|ചൊ|ബു|വ്യാ|വെ|ശ|ക്രി.മു.|എഡി|ക്രിസ്\u200Cതുവിന് മുമ്പ്|ആന്നോ ഡൊമിനി|ക്രി.മു.|എഡി|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|52|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E, B h:mm|EBhms|E, B h:mm:ss|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|M/d/y GGGGG|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|d/M, E|MMdd|dd/MM|MMM|LLL|MMMd|MMM d|MMMEd|MMM d, E|MMMMd|MMMM d|MMMMEd|MMMM d, E|MMMMW-count-one|MMMM - ആഴ്ച W|MMMMW-count-other|MMMM - ആഴ്ച W|ms|mm:ss|y|y|yM|y-MM|yMd|d/M/y|yMEd|d-M-y, E|yMM|y-MM|yMMM|y MMM|yMMMd|y MMM d|yMMMEd|y MMM d, E|yMMMM|y MMMM|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|Y-ലെ ആഴ്ച w|yw-count-other|Y-ലെ ആഴ്ച w|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ml = $enkidatron$elm_cldr$Generated$Ml$ml;
var $enkidatron$elm_cldr$Generated$Mn$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'mn',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Mn$mn = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Mn$dayPeriods, 'mn||||ү.ө.|ү.х.|8|afternoon1|өдөр|am|ү.ө.|evening1|орой|midnight|шөнө дунд|morning1|өглөө|night1|шөнө|noon|үд дунд|pm|ү.х.|ү.ө.|ү.х.|8|afternoon1|өдөр|am|ү.ө.|evening1|орой|midnight|шөнө дунд|morning1|өглөө|night1|шөнө|noon|үд дунд|pm|ү.х.|ү.ө.|ү.х.|8|afternoon1|өдөр|am|ү.ө.|evening1|орой|midnight|шөнө дунд|morning1|өглөө|night1|шөнө|noon|үд дунд|pm|ү.х.|y.MM.dd|y\u202F\'оны\' MMM\'ын\' d|y\u202F\'оны\' MMMM\'ын\' d|y\u202F\'оны\' MMMM\'ын\' d, EEEE \'гараг\'|1-р сар|2-р сар|3-р сар|4-р сар|5-р сар|6-р сар|7-р сар|8-р сар|9-р сар|10-р сар|11-р сар|12-р сар|нэгдүгээр сар|хоёрдугаар сар|гуравдугаар сар|дөрөвдүгээр сар|тавдугаар сар|зургаадугаар сар|долоодугаар сар|наймдугаар сар|есдүгээр сар|аравдугаар сар|арван нэгдүгээр сар|арван хоёрдугаар сар|I|II|III|IV|V|VI|VII|VIII|IX|X|XI|XII|1|1-р сар|2-р сар|3-р сар|4-р сар|5-р сар|6-р сар|7-р сар|8-р сар|9-р сар|10-р сар|11-р сар|12-р сар|Нэгдүгээр сар|Хоёрдугаар сар|Гуравдугаар сар|Дөрөвдүгээр сар|Тавдугаар сар|Зургаадугаар сар|Долоодугаар сар|Наймдугаар сар|Есдүгээр сар|Аравдугаар сар|Арван нэгдүгээр сар|Арван хоёрдугаар сар|I|II|III|IV|V|VI|VII|VIII|IX|X|XI|XII|Ня|Да|Мя|Лх|Пү|Ба|Бя|ням|даваа|мягмар|лхагва|пүрэв|баасан|бямба|Ня|Да|Мя|Лх|Пү|Ба|Бя|1|Ня|Да|Мя|Лх|Пү|Ба|Бя|Ням|Даваа|Мягмар|Лхагва|Пүрэв|Баасан|Бямба|Ня|Да|Мя|Лх|Пү|Ба|Бя|МЭӨ|МЭ|манай эриний өмнөх|манай эриний|МЭӨ|МЭ|HH:mm|HH:mm:ss|HH:mm:ss (z)|HH:mm:ss (zzzz)|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|B h \'ц\'|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E. B h:mm|EBhms|E. B h:mm:ss|Ed|dd. E|Ehm|E. h:mm\u202Fa|EHm|E. HH:mm|Ehms|E. h:mm:ss\u202Fa|EHms|E. HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G y\u202F\'оны\' MMM|GyMMMd|G y\u202F\'оны\' MMM\'ын\' d|GyMMMEd|G y\u202F\'оны\' MMM\'ын\' d. E|h|h \'ц\' a|H|HH \'ц\'|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa (v)|Hmsv|HH:mm:ss (v)|hmv|h:mm\u202Fa (v)|Hmv|HH:mm (v)|M|LLLLL|Md|MMMMM/dd|MEd|MMMMM/dd. E|MMM|LLL|MMMd|MMM\'ын\' d|MMMEd|MMM\'ын\' d. E|MMMMd|MMMM\'ын\' d|MMMMW-count-one|MMMM\'ын\' W-\'р\' \'долоо\' \'хоног\'|MMMMW-count-other|MMMM\'ын\' W-\'р\' \'долоо\' \'хоног\'|ms|mm:ss|y|y|yM|y MMMMM|yMd|y.MM.dd|yMEd|y.MM.dd. E|yMMM|y\u202F\'оны\' MMM|yMMMd|y\u202F\'оны\' MMM\'ын\' d|yMMMEd|y\u202F\'оны\' MMM\'ын\' d. E|yMMMM|y\u202F\'оны\' MMMM|yQQQ|y\u202F\'оны\' QQQ|yQQQQ|y\u202F\'оны\' QQQQ|yw-count-one|Y \'оны\' w-\'р\' \'долоо\' \'хоног\'|yw-count-other|Y \'оны\' w-\'р\' \'долоо\' \'хоног\'|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|кр|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$mn = $enkidatron$elm_cldr$Generated$Mn$mn;
var $enkidatron$elm_cldr$Generated$Mr$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'mr',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Mr$mr = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Mr$dayPeriods, 'mr||||AM|PM|9|afternoon1|दुपार|am|AM|evening1|संध्याकाळ|midnight|मध्यरात्र|morning1|पहाट|morning2|सकाळ|night1|रात्र|noon|मध्यान्ह|pm|PM|AM|PM|9|afternoon1|दुपार|am|AM|evening1|संध्याकाळ|midnight|मध्यरात्र|morning1|पहाट|morning2|सकाळ|night1|रात्र|noon|मध्यान्ह|pm|PM|a|p|9|afternoon1|दु|am|a|evening1|सं|midnight|म.रा.|morning1|प|morning2|स|night1|रा|noon|दु|pm|p|d/M/yy|d MMM, y|d MMMM, y|EEEE, d MMMM, y|जाने|फेब्रु|मार्च|एप्रि|मे|जून|जुलै|ऑग|सप्टें|ऑक्टो|नोव्हें|डिसें|जानेवारी|फेब्रुवारी|मार्च|एप्रिल|मे|जून|जुलै|ऑगस्ट|सप्टेंबर|ऑक्टोबर|नोव्हेंबर|डिसेंबर|जा|फे|मा|ए|मे|जू|जु|ऑ|स|ऑ|नो|डि|0|रवि|सोम|मंगळ|बुध|गुरु|शुक्र|शनि|रविवार|सोमवार|मंगळवार|बुधवार|गुरुवार|शुक्रवार|शनिवार|र|सो|मं|बु|गु|शु|श|0|ई. स. पू.|इ. स.|ईसवीसनपूर्व|ईसवीसन|ई. स. पू.|इ. स.|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG d/M/y|GyMMM|MMM G y|GyMMMd|d MMM, G y|GyMMMEd|E, d MMM, G y|h|h a|H|HH|hm|h:mm a|Hm|H:mm|hms|h:mm:ss a|Hms|H:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMdd|dd-MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-one|MMMM चा W रा आठवडा|MMMMW-count-other|MMMM चा W रा आठवडा|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|MM-y|yMMM|MMM y|yMMMd|d MMM, y|yMMMEd|E, d, MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y चा w वा आठवडा|yw-count-other|Y चा w वा आठवडा|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$mr = $enkidatron$elm_cldr$Generated$Mr$mr;
var $enkidatron$elm_cldr$Generated$Ms$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ms',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(14, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(14, 0),
					_Utils_Tuple2(19, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(1, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(1, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ms$ms = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ms$dayPeriods, 'ms||||PG|PTG|7|afternoon1|tengah hari|am|PG|evening1|petang|morning1|pagi|morning2|pagi|night1|malam|pm|PTG|PG|PTG|7|afternoon1|tengah hari|am|PG|evening1|petang|morning1|tengah malam|morning2|pagi|night1|malam|pm|PTG|a|p|7|afternoon1|tengah hari|am|a|evening1|petang|morning1|pagi|morning2|pagi|night1|malam|pm|p|d/MM/yy|d MMM y|d MMMM y|EEEE, d MMMM y|Jan|Feb|Mac|Apr|Mei|Jun|Jul|Ogo|Sep|Okt|Nov|Dis|Januari|Februari|Mac|April|Mei|Jun|Julai|Ogos|September|Oktober|November|Disember|J|F|M|A|M|J|J|O|S|O|N|D|0|Ahd|Isn|Sel|Rab|Kha|Jum|Sab|Ahad|Isnin|Selasa|Rabu|Khamis|Jumaat|Sabtu|A|I|S|R|K|J|S|0|S.M.|TM|S.M.|TM|S.M.|TM|h:mm\u202Fa|h:mm:ss\u202Fa|h:mm:ss\u202Fa z|h:mm:ss\u202Fa zzzz|{1}, {0}|{1}, {0}|{1} {0}|{1} {0}|48|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|GGGGG y-MM-dd|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d-M|MEd|E, d-M|MMdd|dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMW-count-other|\'week\' W \'of\' MMMM|ms|mm:ss|y|y|yM|M-y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'week\' w \'of\' Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ms = $enkidatron$elm_cldr$Generated$Ms$ms;
var $enkidatron$elm_cldr$Generated$My$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'my',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(19, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$My$my = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$My$dayPeriods, 'my||||နံနက်|ညနေ|8|afternoon1|နေ့လယ်|am|နံနက်|evening1|ညနေ|midnight|သန်းခေါင်ယံ|morning1|နံနက်|night1|ည|noon|မွန်းတည့်|pm|ညနေ|နံနက်|ညနေ|8|afternoon1|နေ့လယ်|am|နံနက်|evening1|ညနေ|midnight|သန်းခေါင်ယံ|morning1|နံနက်|night1|ည|noon|မွန်းတည့်|pm|ညနေ|နံနက်|ညနေ|8|afternoon1|နေ့လယ်|am|နံနက်|evening1|ညနေ|midnight|သန်းခေါင်ယံ|morning1|နံနက်|night1|ည|noon|မွန်းတည့်|pm|ညနေ|d/M/yy|y၊ MMM d|y၊ MMMM d|y၊ MMMM d၊ EEEE|ဇန်|ဖေ|မတ်|ဧ|မေ|ဇွန်|ဇူ|ဩ|စက်|အောက်|နို|ဒီ|ဇန်နဝါရီ|ဖေဖော်ဝါရီ|မတ်|ဧပြီ|မေ|ဇွန်|ဇူလိုင်|ဩဂုတ်|စက်တင်ဘာ|အောက်တိုဘာ|နိုဝင်ဘာ|ဒီဇင်ဘာ|ဇ|ဖ|မ|ဧ|မ|ဇ|ဇ|ဩ|စ|အ|န|ဒ|0|တနင်္ဂနွေ|တနင်္လာ|အင်္ဂါ|ဗုဒ္ဓဟူး|ကြာသပတေး|သောကြာ|စနေ|တနင်္ဂနွေ|တနင်္လာ|အင်္ဂါ|ဗုဒ္ဓဟူး|ကြာသပတေး|သောကြာ|စနေ|တ|တ|အ|ဗ|က|သ|စ|0|ဘီစီ|အဒေီ|ခရစ်တော် မပေါ်မီနှစ်|ခရစ်နှစ်|ဘီစီ|အဒေီ|H:mm|H:mm:ss|z HH:mm:ss|zzzz HH:mm:ss|{1} {0}|{1} {0}|{1} {0}|{1} {0}|48|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|d ရက် E|Ehm|E B h:mm|EHm|E HH:mm|Ehms|E B h:mm:ss|EHms|E HH:mm:ss|Gy|G y|GyMd|G y/M/d|GyMMM|G y MMM|GyMMMd|G y၊ MMM d|GyMMMEd|G y၊ MMM d၊ E|h|B h|H|HH|hm|B h:mm|Hm|HH:mm|hms|B h:mm:ss|Hms|HH:mm:ss|hmsv|v a h:mm:ss|Hmsv|v HH:mm:ss|hmv|v a h:mm|Hmv|v HH:mm|M|L|Md|d/M|MEd|d/M၊ E|MMM|LLL|MMMd|d MMM|MMMEd|MMM d၊ E|MMMMd|MMMM d|MMMMEd|MMMM d ရက် E|MMMMW-count-other|MMMM လ W ပတ်မြောက်|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|d/M/y၊ E|yMMM|MMM y|yMMMd|y၊ MMM d|yMMMEd|y၊ MMM d၊ E|yMMMM|y MMMM|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-other|Y ခု w ပတ်မြောက်|Hmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W,|.|-|%||%||%|110|AFN|؋|AMD|֏|ANG|NAf|AOA|Kz|ARS|$|AUD|A$|AWG|Afl|AZN|₼|BAM|KM|BBD|Bds$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|B$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HTG|G|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PAB|B/.|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|TT$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$my = $enkidatron$elm_cldr$Generated$My$my;
var $enkidatron$elm_cldr$Generated$Nb$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'nb',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Nb$nb = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Nb$dayPeriods, 'nb||||a.m.|p.m.|8|afternoon1|etterm.|am|a.m.|evening1|kveld|midnight|midn.|morning1|morg.|morning2|form.|night1|natt|pm|p.m.|a.m.|p.m.|8|afternoon1|på ettermiddagen|am|a.m.|evening1|på kvelden|midnight|midnatt|morning1|på morgenen|morning2|på formiddagen|night1|på natten|pm|p.m.|a|p|8|afternoon1|em.|am|a|evening1|kv.|midnight|mn.|morning1|mg.|morning2|fm.|night1|nt.|pm|p|dd.MM.y|d. MMM y|d. MMMM y|EEEE d. MMMM y|jan.|feb.|mars|apr.|mai|juni|juli|aug.|sep.|okt.|nov.|des.|januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember|J|F|M|A|M|J|J|A|S|O|N|D|1|jan|feb|mar|apr|mai|jun|jul|aug|sep|okt|nov|des|januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember|J|F|M|A|M|J|J|A|S|O|N|D|søn.|man.|tir.|ons.|tor.|fre.|lør.|søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag|S|M|T|O|T|F|L|0|f.Kr.|e.Kr.|før Kristus|etter Kristus|f.Kr.|e.Kr.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d.|Ehm|E h:mm\u202Fa|EHm|E \'kl\'. HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E \'kl\'. HH:mm:ss|Gy|y G|GyMd|dd.MM.y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E d. MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L.|Md|d.M.|MEd|E d.M.|MMdd|d.M.|MMM|LLL|MMMd|d. MMM|MMMEd|E d. MMM|MMMMd|d. MMMM|MMMMW-count-one|\'den\' W. \'uken\' \'i\' MMMM|MMMMW-count-other|\'den\' W. \'uken\' \'i\' MMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E d.M.y|yMM|MM.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E d. MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'uke\' w \'i\' Y|yw-count-other|\'uke\' w \'i\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|−||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|−|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|XAF|XCD|XCD|XOF|F\u202FCFA|XPF|XPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$nb = $enkidatron$elm_cldr$Generated$Nb$nb;
var $enkidatron$elm_cldr$Generated$Ne$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ne',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(19, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ne$ne = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ne$dayPeriods, 'ne||||पूर्वाह्न|अपराह्न|9|afternoon1|अपरान्ह|afternoon2|साँझ|am|पूर्वाह्न|evening1|बेलुकी|midnight|मध्यरात|morning1|बिहान|night1|रात|noon|मध्यान्ह|pm|अपराह्न|पूर्वाह्न|अपराह्न|9|afternoon1|अपरान्ह|afternoon2|साँझ|am|पूर्वाह्न|evening1|बेलुकी|midnight|मध्यरात|morning1|बिहान|night1|रात|noon|मध्यान्ह|pm|अपराह्न|पूर्वाह्न|अपराह्न|9|afternoon1|अपरान्ह|afternoon2|साँझ|am|पूर्वाह्न|evening1|बेलुकी|midnight|मध्यरात|morning1|बिहान|night1|रात|noon|मध्यान्ह|pm|अपराह्न|yy/M/d|y MMM d|y MMMM d|y MMMM d, EEEE|जनवरी|फेब्रुअरी|मार्च|अप्रिल|मे|जुन|जुलाई|अगस्ट|सेप्टेम्बर|अक्टोबर|नोभेम्बर|डिसेम्बर|जनवरी|फेब्रुअरी|मार्च|अप्रिल|मे|जुन|जुलाई|अगस्ट|सेप्टेम्बर|अक्टोबर|नोभेम्बर|डिसेम्बर|जन|फेब|मार्च|अप्र|मे|जुन|जुल|अग|सेप|अक्टो|नोभे|डिसे|1|जनवरी|फेब्रुअरी|मार्च|अप्रिल|मे|जुन|जुलाई|अगस्ट|सेप्टेम्बर|अक्टोबर|नोभेम्बर|डिसेम्बर|जनवरी|फेब्रुअरी|मार्च|अप्रिल|मे|जुन|जुलाई|अगस्ट|सेप्टेम्बर|अक्टोबर|नोभेम्बर|डिसेम्बर|जन|फेेब|मार्च|अप्र|मे|जुन|जुल|अग|सेप|अक्टो|नोभे|डिसे|आइत|सोम|मङ्गल|बुध|बिहि|शुक्र|शनि|आइतबार|सोमबार|मङ्गलबार|बुधबार|बिहिबार|शुक्रबार|शनिबार|आ|सो|म|बु|बि|शु|श|0|ईसा पूर्व|सन्|ईसा पूर्व|सन्|ईसा पूर्व|सन्|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|M/d/y G|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|MM-dd|MEd|MM-dd, E|MMM|LLL|MMMd|MMM d|MMMEd|MMM d, E|MMMMd|MMMM d|MMMMW-count-one|MMMM को W हप्ता|MMMMW-count-other|MMMM को W हप्ता|ms|mm:ss|y|y|yM|y-MM|yMd|y-MM-dd|yMEd|y-MM-dd, E|yMMM|y MMM|yMMMd|y MMM d|yMMMEd|y MMM d, E|yMMMM|y MMMM|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|Y को w हप्ता|yw-count-other|Y को w हप्ता|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3I,|.|-||||||E2I,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|नेरू|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ne = $enkidatron$elm_cldr$Generated$Ne$ne;
var $enkidatron$elm_cldr$Generated$Nl$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'nl',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Nl$nl = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Nl$dayPeriods, 'nl||||a.m.|p.m.|7|afternoon1|’s middags|am|a.m.|evening1|’s avonds|midnight|middernacht|morning1|’s ochtends|night1|’s nachts|pm|p.m.|a.m.|p.m.|7|afternoon1|’s middags|am|a.m.|evening1|’s avonds|midnight|middernacht|morning1|’s ochtends|night1|’s nachts|pm|p.m.|a.m.|p.m.|7|afternoon1|’s middags|am|a.m.|evening1|’s avonds|midnight|middernacht|morning1|’s ochtends|night1|’s nachts|pm|p.m.|dd-MM-y|d MMM y|d MMMM y|EEEE d MMMM y|jan|feb|mrt|apr|mei|jun|jul|aug|sep|okt|nov|dec|januari|februari|maart|april|mei|juni|juli|augustus|september|oktober|november|december|J|F|M|A|M|J|J|A|S|O|N|D|0|zo|ma|di|wo|do|vr|za|zondag|maandag|dinsdag|woensdag|donderdag|vrijdag|zaterdag|Z|M|D|W|D|V|Z|0|v.Chr.|n.Chr.|voor Christus|na Christus|v.C.|n.C.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d-M|MEd|E d-M|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMW-count-one|\'week\' W \'van\' MMMM|MMMMW-count-other|\'week\' W \'van\' MMMM|ms|mm:ss|y|y|yM|M-y|yMd|d-M-y|yMEd|E d-M-y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'week\' w \'in\' Y|yw-count-other|\'week\' w \'in\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|¤\u00A0-||¤\u00A0||¤\u00A0||E0W.|,|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|C$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|FJ$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RUR|р.|RWF|RF|SBD|SI$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|XPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$nl = $enkidatron$elm_cldr$Generated$Nl$nl;
var $enkidatron$elm_cldr$Generated$Nn$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'nn',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Nn$nn = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Nn$dayPeriods, 'nn||||f.m.|e.m.|8|afternoon1|etterm.|am|f.m.|evening1|kveld|midnight|midn.|morning1|morg.|morning2|form.|night1|natt|pm|e.m.|f.m.|e.m.|8|afternoon1|på ettermiddagen|am|f.m.|evening1|på kvelden|midnight|midnatt|morning1|på morgonen|morning2|på formiddagen|night1|på natta|pm|e.m.|a|p|8|afternoon1|em.|am|a|evening1|kv.|midnight|mn.|morning1|mg.|morning2|fm.|night1|nt.|pm|p|dd.MM.y|d. MMM y|d. MMMM y|EEEE d. MMMM y|jan.|feb.|mars|apr.|mai|juni|juli|aug.|sep.|okt.|nov.|des.|januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember|J|F|M|A|M|J|J|A|S|O|N|D|1|jan|feb|mar|apr|mai|jun|jul|aug|sep|okt|nov|des|januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember|J|F|M|A|M|J|J|A|S|O|N|D|sø.|må.|ty.|on.|to.|fr.|la.|søndag|måndag|tysdag|onsdag|torsdag|fredag|laurdag|S|M|T|O|T|F|L|1|søn|mån|tys|ons|tor|fre|lau|søndag|måndag|tysdag|onsdag|torsdag|fredag|laurdag|S|M|T|O|T|F|L|f.Kr.|e.Kr.|før Kristus|etter Kristus|f.Kr.|e.Kr.|HH:mm|HH:mm:ss|HH:mm:ss z|\'kl\'. HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1} \'kl\'. {0}|{1} {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d.|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|dd.MM.y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E d. MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L.|Md|d.M.|MEd|E d.M.|MMdd|d.M.|MMM|LLL|MMMd|d. MMM|MMMEd|E d. MMM|MMMMd|d. MMMM|MMMMW-count-one|\'veke\' W \'i\' MMMM|MMMMW-count-other|\'veke\' W \'i\' MMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E d.M.y|yMM|MM.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E d. MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'veke\' w \'i\' Y|yw-count-other|\'veke\' w \'i\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|−||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|−|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|XAF|XCD|XCD|XOF|F\u202FCFA|XPF|XPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$nn = $enkidatron$elm_cldr$Generated$Nn$nn;
var $enkidatron$elm_cldr$Generated$No$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'no',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$No$no = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$No$dayPeriods, 'no||||a.m.|p.m.|8|afternoon1|etterm.|am|a.m.|evening1|kveld|midnight|midn.|morning1|morg.|morning2|form.|night1|natt|pm|p.m.|a.m.|p.m.|8|afternoon1|på ettermiddagen|am|a.m.|evening1|på kvelden|midnight|midnatt|morning1|på morgenen|morning2|på formiddagen|night1|på natten|pm|p.m.|a|p|8|afternoon1|em.|am|a|evening1|kv.|midnight|mn.|morning1|mg.|morning2|fm.|night1|nt.|pm|p|dd.MM.y|d. MMM y|d. MMMM y|EEEE d. MMMM y|jan.|feb.|mars|apr.|mai|juni|juli|aug.|sep.|okt.|nov.|des.|januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember|J|F|M|A|M|J|J|A|S|O|N|D|1|jan|feb|mar|apr|mai|jun|jul|aug|sep|okt|nov|des|januar|februar|mars|april|mai|juni|juli|august|september|oktober|november|desember|J|F|M|A|M|J|J|A|S|O|N|D|søn.|man.|tir.|ons.|tor.|fre.|lør.|søndag|mandag|tirsdag|onsdag|torsdag|fredag|lørdag|S|M|T|O|T|F|L|0|f.Kr.|e.Kr.|før Kristus|etter Kristus|f.Kr.|e.Kr.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d.|Ehm|E h:mm\u202Fa|EHm|E \'kl\'. HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E \'kl\'. HH:mm:ss|Gy|y G|GyMd|dd.MM.y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E d. MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L.|Md|d.M.|MEd|E d.M.|MMdd|d.M.|MMM|LLL|MMMd|d. MMM|MMMEd|E d. MMM|MMMMd|d. MMMM|MMMMW-count-one|\'den\' W. \'uken\' \'i\' MMMM|MMMMW-count-other|\'den\' W. \'uken\' \'i\' MMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E d.M.y|yMM|MM.y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E d. MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'uke\' w \'i\' Y|yw-count-other|\'uke\' w \'i\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|−||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|−|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|XAF|XCD|XCD|XOF|F\u202FCFA|XPF|XPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$no = $enkidatron$elm_cldr$Generated$No$no;
var $enkidatron$elm_cldr$Generated$Or$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Or$or = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Or$dayPeriods, 'or||||AM|PM|2|am|AM|pm|PM|AM|PM|2|am|AM|pm|PM|ପୂ|ଅ|2|am|ପୂ|pm|ଅ|M/d/yy|MMM d, y|MMMM d, y|EEEE, MMMM d, y|ଜାନୁଆରୀ|ଫେବୃଆରୀ|ମାର୍ଚ୍ଚ|ଅପ୍ରେଲ|ମଇ|ଜୁନ|ଜୁଲାଇ|ଅଗଷ୍ଟ|ସେପ୍ଟେମ୍ବର|ଅକ୍ଟୋବର|ନଭେମ୍ବର|ଡିସେମ୍ବର|ଜାନୁଆରୀ|ଫେବୃଆରୀ|ମାର୍ଚ୍ଚ|ଅପ୍ରେଲ|ମଇ|ଜୁନ|ଜୁଲାଇ|ଅଗଷ୍ଟ|ସେପ୍ଟେମ୍ବର|ଅକ୍ଟୋବର|ନଭେମ୍ବର|ଡିସେମ୍ବର|ଜା|ଫେ|ମା|ଅ|ମଇ|ଜୁ|ଜୁ|ଅ|ସେ|ଅ|ନ|ଡି|0|ରବି|ସୋମ|ମଙ୍ଗଳ|ବୁଧ|ଗୁରୁ|ଶୁକ୍ର|ଶନି|ରବିବାର|ସୋମବାର|ମଙ୍ଗଳବାର|ବୁଧବାର|ଗୁରୁବାର|ଶୁକ୍ରବାର|ଶନିବାର|ର|ସୋ|ମ|ବୁ|ଗୁ|ଶୁ|ଶ|0|BC|AD|ଖ୍ରୀଷ୍ଟପୂର୍ବ|ଖ୍ରୀଷ୍ଟାବ୍ଦ|BC|AD|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|GGGGG y-MM-dd|GyMMM|MMM y G|GyMMMd|MMM d, y G|GyMMMEd|E, MMM d, y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|M/d|MEd|E, M/d|MMdd|dd-MM|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMW-count-one|MMMM ର ସପ୍ତାହ W|MMMMW-count-other|MMMM ର ସପ୍ତାହ W|ms|mm:ss|y|y|yM|M/y|yMd|M/d/y|yMEd|E, M/d/y|yMM|MM-y|yMMM|MMM y|yMMMd|MMM d, y|yMMMEd|E, MMM d, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y ର ସପ୍ତାହ w|yw-count-other|Y ର ସପ୍ତାହ w|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$or = $enkidatron$elm_cldr$Generated$Or$or;
var $enkidatron$elm_cldr$Generated$Pa$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'pa',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(4, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Pa$pa = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Pa$dayPeriods, 'pa||||ਪੂ.ਦੁ.|ਬਾ.ਦੁ.|7|afternoon1|ਦੁਪਹਿਰੇ|am|ਪੂ.ਦੁ.|evening1|ਸ਼ਾਮੀਂ|midnight|ਅੱਧੀ ਰਾਤ|morning1|ਸਵੇਰੇ|night1|ਰਾਤੀਂ|pm|ਬਾ.ਦੁ.|ਪੂ.ਦੁ.|ਬਾ.ਦੁ.|7|afternoon1|ਦੁਪਹਿਰੇ|am|ਪੂ.ਦੁ.|evening1|ਸ਼ਾਮੀਂ|midnight|ਅੱਧੀ ਰਾਤ|morning1|ਸਵੇਰੇ|night1|ਰਾਤੀਂ|pm|ਬਾ.ਦੁ.|ਸ.|ਸ਼.|7|afternoon1|ਦੁਪਹਿਰੇ|am|ਸ.|evening1|ਸ਼ਾਮੀਂ|midnight|ਅੱਧੀ ਰਾਤ|morning1|ਸਵੇਰੇ|night1|ਰਾਤੀਂ|pm|ਸ਼.|d/M/yy|d MMM y|d MMMM y|EEEE, d MMMM y|ਜਨ|ਫ਼ਰ|ਮਾਰਚ|ਅਪ੍ਰੈ|ਮਈ|ਜੂਨ|ਜੁਲਾ|ਅਗ|ਸਤੰ|ਅਕਤੂ|ਨਵੰ|ਦਸੰ|ਜਨਵਰੀ|ਫ਼ਰਵਰੀ|ਮਾਰਚ|ਅਪ੍ਰੈਲ|ਮਈ|ਜੂਨ|ਜੁਲਾਈ|ਅਗਸਤ|ਸਤੰਬਰ|ਅਕਤੂਬਰ|ਨਵੰਬਰ|ਦਸੰਬਰ|ਜ|ਫ਼|ਮਾ|ਅ|ਮ|ਜੂ|ਜੁ|ਅ|ਸ|ਅ|ਨ|ਦ|0|ਐਤ|ਸੋਮ|ਮੰਗਲ|ਬੁੱਧ|ਵੀਰ|ਸ਼ੁੱਕਰ|ਸ਼ਨਿੱਚਰ|ਐਤਵਾਰ|ਸੋਮਵਾਰ|ਮੰਗਲਵਾਰ|ਬੁੱਧਵਾਰ|ਵੀਰਵਾਰ|ਸ਼ੁੱਕਰਵਾਰ|ਸ਼ਨਿੱਚਰਵਾਰ|ਐ|ਸੋ|ਮੰ|ਬੁੱ|ਵੀ|ਸ਼ੁੱ|ਸ਼|0|ਈ. ਪੂ.|ਸੰਨ|ਈਸਵੀ ਪੂਰਵ|ਈਸਵੀ ਸੰਨ|ਈ.ਪੂ.|ਸੰਨ|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1}, {0}|{1}, {0}|{1} {0}|{1} {0}|50|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|d/M/GGGGG y|GyMMM|MMM, G y|GyMMMd|d MMM, G y|GyMMMEd|E d MMM, G y|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, dd-MM.|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|MMMM d|MMMMW-count-one|MMMM ਦਾ W ਹਫ਼ਤਾ|MMMMW-count-other|MMMM ਦਾ W ਹਫ਼ਤਾ|mmss|mm:ss|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y ਦਾ w ਹਫ਼ਤਾ|yw-count-other|Y ਦਾ w ਹਫ਼ਤਾ|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2I,|.|-¤||¤||¤||E0I,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$pa = $enkidatron$elm_cldr$Generated$Pa$pa;
var $enkidatron$elm_cldr$Generated$Pl$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'pl',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Pl$pl = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Pl$dayPeriods, 'pl||||AM|PM|9|afternoon1|po południu|am|AM|evening1|wieczorem|midnight|o północy|morning1|rano|morning2|przed południem|night1|w nocy|noon|w południe|pm|PM|AM|PM|9|afternoon1|po południu|am|AM|evening1|wieczorem|midnight|o północy|morning1|rano|morning2|przed południem|night1|w nocy|noon|w południe|pm|PM|a|p|9|afternoon1|po poł.|am|a|evening1|wiecz.|midnight|o półn.|morning1|rano|morning2|przed poł.|night1|w nocy|noon|w poł.|pm|p|d.MM.y|d MMM y|d MMMM y|EEEE, d MMMM y|sty|lut|mar|kwi|maj|cze|lip|sie|wrz|paź|lis|gru|stycznia|lutego|marca|kwietnia|maja|czerwca|lipca|sierpnia|września|października|listopada|grudnia|s|l|m|k|m|c|l|s|w|p|l|g|1|sty|lut|mar|kwi|maj|cze|lip|sie|wrz|paź|lis|gru|styczeń|luty|marzec|kwiecień|maj|czerwiec|lipiec|sierpień|wrzesień|październik|listopad|grudzień|S|L|M|K|M|C|L|S|W|P|L|G|niedz.|pon.|wt.|śr.|czw.|pt.|sob.|niedziela|poniedziałek|wtorek|środa|czwartek|piątek|sobota|n|p|w|ś|c|p|s|1|niedz.|pon.|wt.|śr.|czw.|pt.|sob.|niedziela|poniedziałek|wtorek|środa|czwartek|piątek|sobota|N|P|W|Ś|C|P|S|p.n.e.|n.e.|przed naszą erą|naszej ery|p.n.e.|n.e.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1} {0}|{1} {0}|59|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|d.MM.y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|GyMMMM|LLLL y G|GyMMMMd|d MMMM y G|GyMMMMEd|E, d MMMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d.MM|MEd|E, d.MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|LLLL, \'tydz\'. W|MMMMW-count-few|LLLL, \'tydz\'. W|MMMMW-count-many|LLLL, \'tydz\'. W|MMMMW-count-other|LLLL, \'tydz\'. W|ms|mm:ss|y|y|yM|MM.y|yMd|d.MM.y|yMEd|E, d.MM.y|yMMM|LLL y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|LLLL y|yMMMMd|d MMMM y|yMMMMEd|E, d MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y, \'tydz\'. w|yw-count-few|Y, \'tydz\'. w|yw-count-many|Y, \'tydz\'. w|yw-count-other|Y, \'tydz\'. w|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lej|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$pl = $enkidatron$elm_cldr$Generated$Pl$pl;
var $enkidatron$elm_cldr$Generated$Ps$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Ps$ps = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ps$dayPeriods, 'ps||||AM|PM|2|am|AM|pm|PM|غ.م.|غ.و.|2|am|غ.م.|pm|غ.و.|غ.م.|غ.و.|2|am|غ.م.|pm|غ.و.|y/M/d|y MMM d|y MMMM d|EEEE د y د MMMM d|جنوري|فبروري|مارچ|اپریل|مۍ|جون|جولای|اګست|سېپتمبر|اکتوبر|نومبر|دسمبر|جنوري|فبروري|مارچ|اپریل|مۍ|جون|جولای|اګست|سېپتمبر|اکتوبر|نومبر|دسمبر|ج|ف|م|ا|م|ج|ج|ا|س|ا|ن|د|1|جنوري|فبروري|مارچ|اپریل|مۍ|جون|جولای|اګست|سپتمبر|اکتوبر|نومبر|دسمبر|جنوري|فېبروري|مارچ|اپریل|مۍ|جون|جولای|اګست|سپتمبر|اکتوبر|نومبر|دسمبر|1|2|3|4|5|6|7|8|9|10|11|12|يونۍ|دونۍ|درېنۍ|څلرنۍ|پينځنۍ|جمعه|اونۍ|يونۍ|دونۍ|درېنۍ|څلرنۍ|پينځنۍ|جمعه|اونۍ|S|M|T|W|T|F|S|0|له میلاد وړاندې|م.|له میلاد څخه وړاندې|له میلاد څخه وروسته|له میلاد وړاندې|م.|H:mm|H:mm:ss|H:mm:ss (z)|H:mm:ss (zzzz)|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|M/d/y GGGGG|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|MM-dd|MEd|MM-dd, E|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMW-count-one|اونۍ W د MMMM|MMMMW-count-other|اونۍ W د MMMM|ms|mm:ss|y|y|yM|y-MM|yMd|y-MM-dd|yMEd|y-MM-dd, E|yMMM|y MMM|yMMMd|y MMM d|yMMMEd|y MMM d, E|yMMMM|y MMMM|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|اونۍ w د Y|yw-count-other|اونۍ w د Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W.|,|\u200E−||||||E2W.|,|\u200E−¤\u00A0||¤\u00A0||¤\u00A0||E0W.|,|\u200E−|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ps = $enkidatron$elm_cldr$Generated$Ps$ps;
var $enkidatron$elm_cldr$Generated$Pt$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'pt',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(19, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Pt$pt = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Pt$dayPeriods, 'pt||||AM|PM|8|afternoon1|da tarde|am|AM|evening1|da noite|midnight|meia-noite|morning1|da manhã|night1|da madrugada|noon|meio-dia|pm|PM|AM|PM|8|afternoon1|da tarde|am|AM|evening1|da noite|midnight|meia-noite|morning1|da manhã|night1|da madrugada|noon|meio-dia|pm|PM|AM|PM|8|afternoon1|da tarde|am|AM|evening1|da noite|midnight|meia-noite|morning1|da manhã|night1|da madrugada|noon|meio-dia|pm|PM|dd/MM/y|d \'de\' MMM \'de\' y|d \'de\' MMMM \'de\' y|EEEE, d \'de\' MMMM \'de\' y|jan.|fev.|mar.|abr.|mai.|jun.|jul.|ago.|set.|out.|nov.|dez.|janeiro|fevereiro|março|abril|maio|junho|julho|agosto|setembro|outubro|novembro|dezembro|J|F|M|A|M|J|J|A|S|O|N|D|0|dom.|seg.|ter.|qua.|qui.|sex.|sáb.|domingo|segunda-feira|terça-feira|quarta-feira|quinta-feira|sexta-feira|sábado|D|S|T|Q|Q|S|S|0|a.C.|d.C.|antes de Cristo|depois de Cristo|a.C.|d.C.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|dd/MM/y GGGGG|GyMMM|MMM \'de\' y G|GyMMMd|d \'de\' MMM \'de\' y G|GyMMMEd|E, d \'de\' MMM \'de\' y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd/MM|MEd|E, dd/MM|MMdd|dd/MM|MMM|LLL|MMMd|d \'de\' MMM|MMMEd|E, d \'de\' MMM|MMMMd|d \'de\' MMMM|MMMMEd|E, d \'de\' MMMM|MMMMW-count-one|W\'ª\' \'semana\' \'de\' MMMM|MMMMW-count-other|W\'ª\' \'semana\' \'de\' MMMM|ms|mm:ss|y|y|yM|MM/y|yMd|dd/MM/y|yMEd|E, dd/MM/y|yMM|MM/y|yMMM|MMM \'de\' y|yMMMd|d \'de\' MMM \'de\' y|yMMMEd|E, d \'de\' MMM \'de\' y|yMMMM|MMMM \'de\' y|yMMMMd|d \'de\' MMMM \'de\' y|yMMMMEd|E, d \'de\' MMMM \'de\' y|yQQQ|QQQ \'de\' y|yQQQQ|QQQQ \'de\' y|yw-count-one|w\'ª\' \'semana\' \'de\' Y|yw-count-other|w\'ª\' \'semana\' \'de\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-¤\u00A0||¤\u00A0||¤\u00A0||E0W.|,|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PTE|Esc.|PYG|₲|RON|L|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|S£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$pt = $enkidatron$elm_cldr$Generated$Pt$pt;
var $enkidatron$elm_cldr$Generated$Ro$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ro',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(5, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ro$ro = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ro$dayPeriods, 'ro||||a.m.|p.m.|8|afternoon1|după-amiaza|am|a.m.|evening1|seara|midnight|miezul nopții|morning1|dimineața|night1|noaptea|noon|amiază|pm|p.m.|a.m.|p.m.|8|afternoon1|după-amiaza|am|a.m.|evening1|seara|midnight|la miezul nopții|morning1|dimineața|night1|noaptea|noon|la amiază|pm|p.m.|a.m.|p.m.|8|afternoon1|după-amiaza|am|a.m.|evening1|seara|midnight|miezul nopții|morning1|dimineața|night1|noaptea|noon|amiază|pm|p.m.|dd.MM.y|d MMM y|d MMMM y|EEEE, d MMMM y|ian.|feb.|mar.|apr.|mai|iun.|iul.|aug.|sept.|oct.|nov.|dec.|ianuarie|februarie|martie|aprilie|mai|iunie|iulie|august|septembrie|octombrie|noiembrie|decembrie|I|F|M|A|M|I|I|A|S|O|N|D|0|dum.|lun.|mar.|mie.|joi|vin.|sâm.|duminică|luni|marți|miercuri|joi|vineri|sâmbătă|D|L|M|M|J|V|S|0|î.Hr.|d.Hr.|înainte de Hristos|după Hristos|î.Hr.|d.Hr.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|dd.MM.y G|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd.MM|MEd|E, dd.MM|MMdd|dd.MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|\'săptămâna\' W \'din\' MMMM|MMMMW-count-few|\'săptămâna\' W \'din\' MMMM|MMMMW-count-other|\'săptămâna\' W \'din\' MMMM|ms|mm:ss|y|y|yM|MM.y|yMd|dd.MM.y|yMEd|E, dd.MM.y|yMM|MM.y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'săptămâna\' w \'din\' Y|yw-count-few|\'săptămâna\' w \'din\' Y|yw-count-other|\'săptămâna\' w \'din\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|EUR|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ro = $enkidatron$elm_cldr$Generated$Ro$ro;
var $enkidatron$elm_cldr$Generated$Root$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Root$root = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Root$dayPeriods, 'root||||AM|PM|2|am|AM|pm|PM|AM|PM|2|am|AM|pm|PM|AM|PM|2|am|AM|pm|PM|y-MM-dd|y MMM d|y MMMM d|y MMMM d, EEEE|M01|M02|M03|M04|M05|M06|M07|M08|M09|M10|M11|M12|M01|M02|M03|M04|M05|M06|M07|M08|M09|M10|M11|M12|1|2|3|4|5|6|7|8|9|10|11|12|0|Sun|Mon|Tue|Wed|Thu|Fri|Sat|Sun|Mon|Tue|Wed|Thu|Fri|Sat|S|M|T|W|T|F|S|0|BCE|CE|BCE|CE|BCE|CE|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|47|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|MM-dd|MEd|MM-dd, E|MMM|LLL|MMMd|MMM d|MMMEd|MMM d, E|MMMMd|MMMM d|MMMMW-count-other|\'week\' W \'of\' MMMM|ms|mm:ss|y|y|yM|y-MM|yMd|y-MM-dd|yMEd|y-MM-dd, E|yMMM|y MMM|yMMMd|y MMM d|yMMMEd|y MMM d, E|yMMMM|y MMMM|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-other|\'week\' w \'of\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0W,|.|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$root = $enkidatron$elm_cldr$Generated$Root$root;
var $enkidatron$elm_cldr$Generated$Ru$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ru',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ru$ru = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ru$dayPeriods, 'ru||||AM|PM|8|afternoon1|дня|am|AM|evening1|вечера|midnight|полн.|morning1|утра|night1|ночи|noon|полд.|pm|PM|AM|PM|8|afternoon1|дня|am|AM|evening1|вечера|midnight|полночь|morning1|утра|night1|ночи|noon|полдень|pm|PM|AM|PM|8|afternoon1|дня|am|AM|evening1|веч.|midnight|полн.|morning1|утра|night1|ночи|noon|полд.|pm|PM|dd.MM.y|d MMM y\u202F\'г\'.|d MMMM y\u202F\'г\'.|EEEE, d MMMM y\u202F\'г\'.|янв.|февр.|мар.|апр.|мая|июн.|июл.|авг.|сент.|окт.|нояб.|дек.|января|февраля|марта|апреля|мая|июня|июля|августа|сентября|октября|ноября|декабря|Я|Ф|М|А|М|И|И|А|С|О|Н|Д|1|янв.|февр.|март|апр.|май|июнь|июль|авг.|сент.|окт.|нояб.|дек.|январь|февраль|март|апрель|май|июнь|июль|август|сентябрь|октябрь|ноябрь|декабрь|Я|Ф|М|А|М|И|И|А|С|О|Н|Д|вс|пн|вт|ср|чт|пт|сб|воскресенье|понедельник|вторник|среда|четверг|пятница|суббота|В|П|В|С|Ч|П|С|0|до н. э.|н. э.|до Рождества Христова|от Рождества Христова|до н.э.|н.э.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|55|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|ccc, h:mm B|EBhms|ccc, h:mm:ss B|Ed|ccc, d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y\u202F\'г\'. G|GyMd|dd.MM.y GGGGG|GyMMM|LLL y\u202F\'г\'. G|GyMMMd|d MMM y\u202F\'г\'. G|GyMMMEd|E, d MMM y\u202F\'г\'. G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd.MM|MEd|E, dd.MM|MMdd|dd.MM|MMM|LLL|MMMd|d MMM|MMMEd|ccc, d MMM|MMMMd|d MMMM|MMMMW-count-one|W-\'я\' \'неделя\' MMMM|MMMMW-count-few|W-\'я\' \'неделя\' MMMM|MMMMW-count-many|W-\'я\' \'неделя\' MMMM|MMMMW-count-other|W-\'я\' \'неделя\' MMMM|ms|mm:ss|y|y|yM|MM.y|yMd|dd.MM.y|yMEd|ccc, dd.MM.y\u202F\'г\'.|yMM|MM.y|yMMM|LLL y\u202F\'г\'.|yMMMd|d MMM y\u202F\'г\'.|yMMMEd|E, d MMM y\u202F\'г\'.|yMMMM|LLLL y\u202F\'г\'.|yQQQ|QQQ y\u202F\'г\'.|yQQQQ|QQQQ y\u202F\'г\'.|yw-count-one|w-\'я\' \'неделя\' Y \'г\'.|yw-count-few|w-\'я\' \'неделя\' Y \'г\'.|yw-count-many|w-\'я\' \'неделя\' Y \'г\'.|yw-count-other|w-\'я\' \'неделя\' Y \'г\'.|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|\u00A0%||\u00A0%||\u00A0%|108|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|ლ|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TMT|ТМТ|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ru = $enkidatron$elm_cldr$Generated$Ru$ru;
var $enkidatron$elm_cldr$Generated$Sd$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Sd$sd = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Sd$dayPeriods, 'sd||||صبح،\u202Fمنجهند|شام،\u202Fمنجهند|2|am|صبح،\u202Fمنجهند|pm|شام،\u202Fمنجهند|صبح، منجهند|منجهند، شام|2|am|صبح، منجهند|pm|منجهند، شام|صبح،\u202Fمنجهند|منجهند،\u202Fشام|2|am|صبح،\u202Fمنجهند|pm|منجهند،\u202Fشام|y-MM-dd|y MMM d|y MMMM d|EEEE, MMMM d, y|جنوري|فيبروري|مارچ|اپريل|مئي|جون|جولاءِ|آگسٽ|سيپٽمبر|آڪٽوبر|نومبر|ڊسمبر|جنوري|فيبروري|مارچ|اپريل|مئي|جون|جولاءِ|آگسٽ|سيپٽمبر|آڪٽوبر|نومبر|ڊسمبر|J|F|M|A|M|J|J|A|S|O|N|D|0|آچر|سومر|اڱارو|اربع|خميس|جمعو|ڇنڇر|آچر|سومر|اڱارو|اربع|خميس|جمعو|ڇنڇر|آچر|سو|اڱارو|اربع|خم|جمعو|ڇنڇر|0|BC|CD|قبل مسيح|عيسوي کان پهرين|BC|CD|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|M/d/y GGGGG|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|MM-dd|MEd|MM-dd, E|MMM|LLL|MMMd|MMM d|MMMEd|MMM d, E|MMMMd|MMMM d|MMMMW-count-one|ھفتو W جو MMMM|MMMMW-count-other|ھفتو W جو MMMM|ms|mm:ss|y|y|yM|y-MM|yMd|y-MM-dd|yMEd|y-MM-dd, E|yMMM|y MMM|yMMMd|y MMM d|yMMMEd|y MMM d, E|yMMMM|y MMMM|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|ھفتو w جو Y|yw-count-other|ھفتو w جو Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$sd = $enkidatron$elm_cldr$Generated$Sd$sd;
var $enkidatron$elm_cldr$Generated$Si$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'si',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(14, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(14, 0),
					_Utils_Tuple2(18, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(1, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'night1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(1, 0),
					'night2'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Si$si = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Si$dayPeriods, 'si||||පෙ.ව.|ප.ව.|10|afternoon1|දවල්|am|පෙ.ව.|evening1|හවස|midnight|මැදියම|morning1|පාන්දර|morning2|උදේ|night1|රෑ|night2|මැදියමට පසු|noon|මධ්\u200Dයාහ්නය|pm|ප.ව.|පෙ.ව.|ප.ව.|10|afternoon1|දවල්|am|පෙ.ව.|evening1|හවස|midnight|මැදියම|morning1|පාන්දර|morning2|උදේ|night1|රෑ|night2|මැදියමට පසු|noon|මධ්\u200Dයාහ්නය|pm|ප.ව.|පෙ|ප|10|afternoon1|ද|am|පෙ|evening1|හ|midnight|මැ|morning1|පා|morning2|උ|night1|රෑ|night2|මැ|noon|ම|pm|ප|y-MM-dd|y MMM d|y MMMM d|y MMMM d, EEEE|ජන|පෙබ|මාර්තු|අප්\u200Dරේල්|මැයි|ජූනි|ජූලි|අගෝ|සැප්|ඔක්|නොවැ|දෙසැ|ජනවාරි|පෙබරවාරි|මාර්තු|අප්\u200Dරේල්|මැයි|ජූනි|ජූලි|අගෝස්තු|සැප්තැම්බර්|ඔක්තෝබර්|නොවැම්බර්|දෙසැම්බර්|ජ|පෙ|මා|අ|මැ|ජූ|ජූ|අ|සැ|ඔ|නෙ|දෙ|1|ජන|පෙබ|මාර්|අප්\u200Dරේල්|මැයි|ජූනි|ජූලි|අගෝ|සැප්|ඔක්|නොවැ|දෙසැ|ජනවාරි|පෙබරවාරි|මාර්තු|අප්\u200Dරේල්|මැයි|ජූනි|ජූලි|අගෝස්තු|සැප්තැම්බර්|ඔක්තෝබර්|නොවැම්බර්|දෙසැම්බර්|ජ|පෙ|මා|අ|මැ|ජූ|ජූ|අ|සැ|ඔ|නෙ|දෙ|ඉරිදා|සඳුදා|අඟහ|බදාදා|බ්\u200Dරහස්|සිකු|සෙන|ඉරිදා|සඳුදා|අඟහරුවාදා|බදාදා|බ්\u200Dරහස්පතින්දා|සිකුරාදා|සෙනසුරාදා|ඉ|ස|අ|බ|බ්\u200Dර|සි|සෙ|0|ක්\u200Dරි.පූ.|ක්\u200Dරි.ව.|ක්\u200Dරිස්තු පූර්ව|ක්\u200Dරිස්තු වර්ෂ|ක්\u200Dරි.පූ.|ක්\u200Dරි.ව.|HH.mm|HH.mm.ss|HH.mm.ss z|HH.mm.ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E a h.mm|EHm|E HH.mm|Ehms|E a h.mm.ss|EHms|E HH.mm.ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|a h|H|HH|hm|a h.mm|Hm|HH.mm|hms|a h.mm.ss|Hms|HH.mm.ss|hmsv|h.mm.ss a v|Hmsv|HH.mm.ss v|hmv|h.mm a v|Hmv|HH.mm v|M|L|Md|M-d|MEd|M-d, E|MMM|LLL|MMMd|MMM d|MMMEd|MMM d E|MMMMd|MMMM d|MMMMW-count-one|MMMM සතිය W|MMMMW-count-other|MMMM සතිය W|ms|mm.ss|y|y|yM|y-M|yMd|y-M-d|yMEd|y-M-d, E|yMMM|y MMM|yMMMd|y MMM d|yMMMEd|y MMM d, E|yMMMM|y MMMM|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|Y සතිය w|yw-count-other|Y සතිය w|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|රු.|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|සිෆ්එ|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$si = $enkidatron$elm_cldr$Generated$Si$si;
var $enkidatron$elm_cldr$Generated$Sk$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'sk',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(9, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(9, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Sk$sk = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Sk$dayPeriods, 'sk||||AM|PM|9|afternoon1|popol.|am|AM|evening1|večer|midnight|o poln.|morning1|ráno|morning2|dopol.|night1|v noci|noon|napol.|pm|PM|AM|PM|9|afternoon1|popoludní|am|AM|evening1|večer|midnight|o polnoci|morning1|ráno|morning2|dopoludnia|night1|v noci|noon|napoludnie|pm|PM|AM|PM|9|afternoon1|pop.|am|AM|evening1|več.|midnight|o poln.|morning1|ráno|morning2|dop.|night1|v n.|noon|nap.|pm|PM|d. M. y|d. M. y|d. MMMM y|EEEE d. MMMM y|jan|feb|mar|apr|máj|jún|júl|aug|sep|okt|nov|dec|januára|februára|marca|apríla|mája|júna|júla|augusta|septembra|októbra|novembra|decembra|j|f|m|a|m|j|j|a|s|o|n|d|1|jan|feb|mar|apr|máj|jún|júl|aug|sep|okt|nov|dec|január|február|marec|apríl|máj|jún|júl|august|september|október|november|december|j|f|m|a|m|j|j|a|s|o|n|d|ne|po|ut|st|št|pi|so|nedeľa|pondelok|utorok|streda|štvrtok|piatok|sobota|n|p|u|s|š|p|s|0|pred Kr.|po Kr.|pred Kristom|po Kristovi|pred Kr.|po Kr.|H:mm|H:mm:ss|H:mm:ss z|H:mm:ss zzzz|{1} {0}|{1}, {0}|{1}, {0}|{1}, {0}|57|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d.|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|d. M. y GGGGG|GyMMM|LLLL y G|GyMMMd|d. M. y G|GyMMMEd|E d. M. y G|GyMMMMd|d. M. y G|h|h\u202Fa|H|H|hm|h:mm\u202Fa|Hm|H:mm|hms|h:mm:ss\u202Fa|Hms|H:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|H:mm:ss v|hmv|h:mm\u202Fa v|Hmv|H:mm v|M|L.|Md|d. M.|MEd|E d. M.|MMM|LLL|MMMd|d. M.|MMMEd|E d. M.|MMMMd|d. MMMM|MMMMEd|E d. MMMM|MMMMW-count-one|W. \'týždeň\' MMMM|MMMMW-count-few|W. \'týždeň\' MMMM|MMMMW-count-many|W. \'týždeň\' MMMM|MMMMW-count-other|W. \'týždeň\' MMMM|mmss|mm:ss|ms|mm:ss|y|y|yM|M/y|yMd|d. M. y|yMEd|E d. M. y|yMMM|M/y|yMMMd|d. M. y|yMMMEd|E d. M. y|yMMMM|LLLL y|yMMMMd|d. MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|w. \'týždeň\' \'roka\' Y|yw-count-few|w. \'týždeň\' \'roka\' Y|yw-count-many|w. \'týždeň\' \'roka\' Y|yw-count-other|w. \'týždeň\' \'roka\' Y|Hmm|Hmmss|Hmmssz|Hmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|\u00A0%||\u00A0%||\u00A0%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|NIS|INR|INR|ISK|kr|JMD|$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$sk = $enkidatron$elm_cldr$Generated$Sk$sk;
var $enkidatron$elm_cldr$Generated$Sl$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'sl',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Sl$sl = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Sl$dayPeriods, 'sl||||dop.|pop.|9|afternoon1|pop.|am|dop.|evening1|zveč.|midnight|opoln.|morning1|zjut.|morning2|dop.|night1|ponoči|noon|opold.|pm|pop.|dop.|pop.|9|afternoon1|popoldan|am|dop.|evening1|zvečer|midnight|opolnoči|morning1|zjutraj|morning2|dopoldan|night1|ponoči|noon|opoldne|pm|pop.|d|p|9|afternoon1|p|am|d|evening1|zv|midnight|24.00|morning1|zj|morning2|d|night1|po|noon|12.00|pm|p|d. M. yy|d. MMM y|d. MMMM y|EEEE, d. MMMM y|jan.|feb.|mar.|apr.|maj|jun.|jul.|avg.|sep.|okt.|nov.|dec.|januar|februar|marec|april|maj|junij|julij|avgust|september|oktober|november|december|j|f|m|a|m|j|j|a|s|o|n|d|0|ned.|pon.|tor.|sre.|čet.|pet.|sob.|nedelja|ponedeljek|torek|sreda|četrtek|petek|sobota|n|p|t|s|č|p|s|0|pr. Kr.|po Kr.|pred Kristusom|po Kristusu|pr. Kr.|po Kr.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1} {0}|{1} {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d.|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d.|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyM|MMM y G|GyMd|d. M. y GGGGG|GyMMM|MMM y G|GyMMMd|d. MMM y G|GyMMMEd|E, d. MMM y G|h|h\u202Fa|H|HH\'h\'|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d. M.|MEd|E, d. M.|MMM|LLL|MMMd|d. MMM|MMMEd|E, d. MMM|MMMMd|d. MMMM|MMMMW-count-one|MMMM: W. \'teden\'|MMMMW-count-two|MMMM: W. \'teden\'|MMMMW-count-few|MMMM: W. \'teden\'|MMMMW-count-other|MMMM: W. \'teden\'|ms|mm:ss|y|y|yM|M/y|yMd|d. M. y|yMEd|E, d. M. y|yMMM|MMM y|yMMMd|d. MMM y|yMMMEd|E, d. MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|w. \'teden\' \'leta\' Y|yw-count-two|w. \'teden\' \'leta\' Y|yw-count-few|w. \'teden\' \'leta\' Y|yw-count-other|w. \'teden\' \'leta\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|−||||||E2W.|,|−|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|−|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$sl = $enkidatron$elm_cldr$Generated$Sl$sl;
var $enkidatron$elm_cldr$Generated$So$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$So$so = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$So$dayPeriods, 'so||||GH|GD|2|am|GH|pm|GD|GH|GD|2|am|GH|pm|GD|h|d|2|am|h|pm|d|dd/MM/yy|dd-MMM-y|MMMM d, y|EEEE, MMMM d, y|Jan|Feb|Mar|Abr|May|Jun|Lul|Ogs|Seb|Okt|Nof|Dis|Bisha Koobaad|Bisha Labaad|Bisha Saddexaad|Bisha Afraad|Bisha Shanaad|Bisha Lixaad|Bisha Todobaad|Bisha Sideedaad|Bisha Sagaalaad|Bisha Tobnaad|Bisha Kow iyo Tobnaad|Bisha Laba iyo Tobnaad|J|F|M|A|M|J|L|O|S|O|N|D|1|Jan|Feb|Mar|Abr|May|Jun|Lul|Ogs|Seb|Okt|Nof|Dis|Jannaayo|Febraayo|Maarso|Abriil|May|Juun|Luuliyo|Ogosto|Sebteembar|Oktoobar|Noofeembar|Diseembar|J|F|M|A|M|J|L|O|S|O|N|D|Axd|Isn|Tldo|Arbc|Khms|Jmc|Sbti|Axad|Isniin|Talaado|Arbaco|Khamiis|Jimco|Sabti|A|I|T|A|Kh|J|S|0|BC|AD|Ciise Hortii|Ciise Dabadii|B|A|h:mm\u202Fa|h:mm:ss\u202Fa|h:mm:ss\u202Fa z|h:mm:ss\u202Fa zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|50|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|M/d/y GGGGG|GyMMM|MMM y G|GyMMMd|MMM d, y G|GyMMMEd|E, MMM d, y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|M/d|MEd|E, M/d|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMEd|E, MMMM d|MMMMW-count-one|\'toddobaadka\' W \'ee\' MMMM|MMMMW-count-other|\'toddobaadka\' W \'ee\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|M/d/y|yMEd|E, M/d/y|yMMM|MMM y|yMMMd|MMM d, y|yMMMEd|E, MMM d, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'toddobaadka\' w \'ee\' Y|yw-count-other|\'toddobaadka\' w \'ee\' Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|DBB|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SOS|S|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$so = $enkidatron$elm_cldr$Generated$So$so;
var $enkidatron$elm_cldr$Generated$Sq$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'sq',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(9, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(9, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Sq$sq = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Sq$dayPeriods, 'sq||||p.d.|m.d.|9|afternoon1|e pasdites|am|p.d.|evening1|e mbrëmjes|midnight|e mesnatës|morning1|e mëngjesit|morning2|e paradites|night1|e natës|noon|e mesditës|pm|m.d.|e paradites|e pasdites|9|afternoon1|e pasdites|am|e paradites|evening1|e mbrëmjes|midnight|e mesnatës|morning1|e mëngjesit|morning2|e paradites|night1|e natës|noon|e mesditës|pm|e pasdites|p.d.|m.d.|9|afternoon1|e pasdites|am|p.d.|evening1|e mbrëmjes|midnight|e mesnatës|morning1|e mëngjesit|morning2|e paradites|night1|e natës|noon|e mesditës|pm|m.d.|d.M.yy|d MMM y|d MMMM y|EEEE, d MMMM y|jan|shk|mar|pri|maj|qer|korr|gush|sht|tet|nën|dhj|janar|shkurt|mars|prill|maj|qershor|korrik|gusht|shtator|tetor|nëntor|dhjetor|j|sh|m|p|m|q|k|g|sh|t|n|dh|0|die|hën|mar|mër|enj|pre|sht|e diel|e hënë|e martë|e mërkurë|e enjte|e premte|e shtunë|d|h|m|m|e|p|sh|0|p.K.|mb.K.|para Krishtit|mbas Krishtit|p.K.|mb.K.|h:mm\u202Fa|h:mm:ss\u202Fa|h:mm:ss\u202Fa, z|h:mm:ss\u202Fa, zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|y G|GyMd|d.M.y GGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa, v|Hmsv|HH:mm:ss, v|hmv|h:mm\u202Fa, v|Hmv|HH:mm, v|M|L|Md|d.M|MEd|E, d.M|MMdd|d.M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|\'java\' W \'e\' MMMM|MMMMW-count-other|\'java\' W \'e\' MMMM|ms|mm:ss|y|y|yM|M.y|yMd|d.M.y|yMEd|E, d.M.y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|QQQ, y|yQQQQ|QQQQ, y|yw-count-one|\'java\' w \'e\' Y|yw-count-other|\'java\' w \'e\' Y|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|106|AFN|AFN|ALL|Lekë|AMD|AMD|AOA|AOA|ARS|ARS|AUD|A$|AZN|AZN|BAM|BAM|BBD|BBD|BDT|BDT|BMD|BMD|BND|BND|BOB|BOB|BRL|BRL|BSD|BSD|BWP|BWP|BZD|BZD|CAD|CA$|CLP|CLP|CNY|CN¥|COP|COP|CRC|CRC|CUC|CUC|CUP|CUP|CZK|CZK|DKK|DKK|DOP|DOP|EGP|EGP|ESP|₧|EUR|€|FJD|FJD|FKP|FKP|GBP|£|GEL|GEL|GHS|GH₵|GIP|GIP|GNF|GNF|GTQ|GTQ|GYD|GYD|HKD|HK$|HNL|HNL|HRK|HRK|HUF|HUF|IDR|IDR|ILS|₪|INR|₹|ISK|ISK|JMD|JMD|JPY|JP¥|KGS|\u20C0|KHR|KHR|KMF|KMF|KPW|KPW|KRW|₩|KYD|KYD|KZT|KZT|LAK|LAK|LBP|LBP|LKR|LKR|LRD|LRD|LTL|Lt|LVL|Ls|MGA|MGA|MMK|MMK|MNT|MNT|MUR|MUR|MXN|MX$|MYR|MYR|NAD|NAD|NGN|NGN|NIO|NIO|NOK|NOK|NPR|NPR|NZD|NZ$|PHP|PHP|PKR|PKR|PLN|PLN|PYG|PYG|RON|RON|RUB|RUB|RWF|RWF|SBD|SBD|SEK|SEK|SGD|SGD|SHP|SHP|SRD|SRD|SSP|SSP|STN|STN|SYP|SYP|THB|฿|TOP|TOP|TRY|TRY|TTD|TTD|TWD|NT$|UAH|UAH|USD|US$|UYU|UYU|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|ZAR|ZMW|ZMW|'));
var $enkidatron$elm_cldr$Cldr$Locale$sq = $enkidatron$elm_cldr$Generated$Sq$sq;
var $enkidatron$elm_cldr$Generated$Sr$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'sr',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Sr$sr = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Sr$dayPeriods, 'sr||||AM|PM|8|afternoon1|по подне|am|AM|evening1|увече|midnight|поноћ|morning1|ујутро|night1|ноћу|noon|подне|pm|PM|AM|PM|8|afternoon1|по подне|am|AM|evening1|увече|midnight|поноћ|morning1|ујутро|night1|ноћу|noon|подне|pm|PM|AM|PM|8|afternoon1|по подне|am|AM|evening1|увече|midnight|поноћ|morning1|ујутру|night1|ноћу|noon|подне|pm|PM|d.M.yy.|d. M. y.|d. MMMM y.|EEEE, d. MMMM y.|јан|феб|мар|апр|мај|јун|јул|авг|сеп|окт|нов|дец|јануар|фебруар|март|април|мај|јун|јул|август|септембар|октобар|новембар|децембар|ј|ф|м|а|м|ј|ј|а|с|о|н|д|0|нед|пон|уто|сре|чет|пет|суб|недеља|понедељак|уторак|среда|четвртак|петак|субота|н|п|у|с|ч|п|с|0|п. н. е.|н. е.|пре нове ере|нове ере|п.н.е.|н.е.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|56|Bh|h B|Bhm|hh:mm B|Bhms|hh:mm:ss B|d|d|E|E|EBhm|E hh:mm B|EBhms|E hh:mm:ss B|Ed|E d.|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y. G|GyMd|d.MM.y. GGGGG|GyMMM|MMM y. G|GyMMMd|d. MMM y. G|GyMMMEd|E, d. MMM y. G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d. M.|MEd|E, d. M.|MMdd|dd.MM.|MMM|LLL|MMMd|d. MMM|MMMdd|dd.MMM|MMMEd|E d. MMM|MMMMd|d. MMMM|MMMMEd|E, d. MMMM|MMMMW-count-one|W. \'седмица\' \'у\' MMMM.|MMMMW-count-few|W. \'седмица\' \'у\' MMMM.|MMMMW-count-other|W. \'седмица\' \'у\' MMMM.|ms|mm:ss|y|y.|yM|M. y.|yMd|d. M. y.|yMEd|E, d. M. y.|yMM|MM.y.|yMMdd|dd.MM.y.|yMMM|MMM y.|yMMMd|d. MMM y.|yMMMEd|E, d. MMM y.|yMMMM|MMMM y.|yQQQ|QQQ y.|yQQQQ|QQQQ y.|yw-count-one|w. \'седмица\' \'у\' Y.|yw-count-few|w. \'седмица\' \'у\' Y.|yw-count-other|w. \'седмица\' \'у\' Y.|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|КМ|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|ლ|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$sr = $enkidatron$elm_cldr$Generated$Sr$sr;
var $enkidatron$elm_cldr$Generated$Sv$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'sv',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(10, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(5, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Sv$sv = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Sv$dayPeriods, 'sv||||fm|em|8|afternoon1|på efterm.|am|fm|evening1|på kvällen|midnight|midnatt|morning1|på morg.|morning2|på förm.|night1|på natten|pm|em|fm|em|8|afternoon1|på eftermiddagen|am|fm|evening1|på kvällen|midnight|midnatt|morning1|på morgonen|morning2|på förmiddagen|night1|på natten|pm|em|fm|em|8|afternoon1|på efterm.|am|fm|evening1|på kvällen|midnight|midn.|morning1|på morg.|morning2|på förm.|night1|på natten|pm|em|y-MM-dd|d MMM y|d MMMM y|EEEE d MMMM y|jan.|feb.|mars|apr.|maj|juni|juli|aug.|sep.|okt.|nov.|dec.|januari|februari|mars|april|maj|juni|juli|augusti|september|oktober|november|december|J|F|M|A|M|J|J|A|S|O|N|D|0|sön|mån|tis|ons|tors|fre|lör|söndag|måndag|tisdag|onsdag|torsdag|fredag|lördag|S|M|T|O|T|F|L|0|f.Kr.|e.Kr.|före Kristus|efter Kristus|f.Kr.|e.Kr.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|53|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|y-MM-dd GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E d/M|MMd|d/M|MMdd|dd/MM|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMMd|d MMMM|MMMMEd|E d MMMM|MMMMW-count-one|\'vecka\' W \'i\' MMMM|MMMMW-count-other|\'vecka\' W \'i\' MMMM|ms|mm:ss|y|y|yM|y-MM|yMd|y-MM-dd|yMEd|E, y-MM-dd|yMM|y-MM|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|\'vecka\' w, Y|yw-count-other|\'vecka\' w, Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|−||||||E2W\u00A0|,|−|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|−|\u00A0%||\u00A0%||\u00A0%|108|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|Bds$|BDT|৳|BMD|BM$|BND|$|BOB|Bs|BRL|BR$|BSD|BS$|BWP|P|BYN|р.|BZD|BZ$|CAD|CA$|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|Dkr|DOP|RD$|EEK|Ekr|EGP|EG£|ESP|ESP|EUR|€|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|IEP|IE£|ILS|₪|INR|INR|ISK|Ikr|JMD|JM$|JPY|JPY|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|Nkr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$sv = $enkidatron$elm_cldr$Generated$Sv$sv;
var $enkidatron$elm_cldr$Generated$Sw$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'sw',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(19, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(7, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(7, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Sw$sw = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Sw$dayPeriods, 'sw||||AM|PM|9|afternoon1|mchana|am|AM|evening1|jioni|midnight|saa sita za usiku|morning1|alfajiri|morning2|asubuhi|night1|usiku|noon|adhuhuri|pm|PM|AM|PM|9|afternoon1|mchana|am|AM|evening1|jioni|midnight|saa sita za usiku|morning1|alfajiri|morning2|asubuhi|night1|usiku|noon|saa sita za mchana|pm|PM|am|pm|9|afternoon1|mchana|am|am|evening1|jioni|midnight|usiku|morning1|alfajiri|morning2|asubuhi|night1|usiku|noon|mchana|pm|pm|dd/MM/y|d MMM y|d MMMM y|EEEE, d MMMM y|Jan|Feb|Mac|Apr|Mei|Jun|Jul|Ago|Sep|Okt|Nov|Des|Januari|Februari|Machi|Aprili|Mei|Juni|Julai|Agosti|Septemba|Oktoba|Novemba|Desemba|J|F|M|A|M|J|J|A|S|O|N|D|0|Jumapili|Jumatatu|Jumanne|Jumatano|Alhamisi|Ijumaa|Jumamosi|Jumapili|Jumatatu|Jumanne|Jumatano|Alhamisi|Ijumaa|Jumamosi|S|M|T|W|T|F|S|0|KK|BK|Kabla ya Kristo|Baada ya Kristo|KK|BK|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|50|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM y G|GyMMMEd|E, d MMM y G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|\'wiki\' W \'ya\' MMMM|MMMMW-count-other|\'wiki\' W \'ya\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM y|yMMMM|MMMM y|yQQQ|y QQQ|yQQQQ|QQQQ y|yw-count-one|\'wiki\' w \'ya\' Y|yw-count-other|\'wiki\' w \'ya\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤\u00A0||¤\u00A0||¤\u00A0||E0W,|.|-|%||%||%|108|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KES|Ksh|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|TZS|TSh|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$sw = $enkidatron$elm_cldr$Generated$Sw$sw;
var $enkidatron$elm_cldr$Generated$Ta$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ta',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(14, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(14, 0),
					_Utils_Tuple2(16, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(18, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening2'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(3, 0),
					_Utils_Tuple2(5, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(3, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ta$ta = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ta$dayPeriods, 'ta||||AM|பிற்பகல்|11|afternoon1|மதியம்|afternoon2|பிற்பகல்|am|AM|evening1|மாலை|evening2|அந்தி மாலை|midnight|நள்ளிரவு|morning1|அதிகாலை|morning2|காலை|night1|இரவு|noon|நண்பகல்|pm|பிற்பகல்|AM|பிற்பகல்|11|afternoon1|மதியம்|afternoon2|பிற்பகல்|am|AM|evening1|மாலை|evening2|அந்தி மாலை|midnight|நள்ளிரவு|morning1|அதிகாலை|morning2|காலை|night1|இரவு|noon|நண்பகல்|pm|பிற்பகல்|மு.ப|பி.ப|11|afternoon1|மதி.|afternoon2|பிற்.|am|மு.ப|evening1|மா.|evening2|அந்தி மா.|midnight|நள்.|morning1|அதி.|morning2|கா.|night1|இர.|noon|நண்.|pm|பி.ப|d/M/yy|d MMM, y|d MMMM, y|EEEE, d MMMM, y|ஜன.|பிப்.|மார்.|ஏப்.|மே|ஜூன்|ஜூலை|ஆக.|செப்.|அக்.|நவ.|டிச.|ஜனவரி|பிப்ரவரி|மார்ச்|ஏப்ரல்|மே|ஜூன்|ஜூலை|ஆகஸ்ட்|செப்டம்பர்|அக்டோபர்|நவம்பர்|டிசம்பர்|ஜ|பி|மா|ஏ|மே|ஜூ|ஜூ|ஆ|செ|அ|ந|டி|0|ஞாயி.|திங்.|செவ்.|புத.|வியா.|வெள்.|சனி|ஞாயிறு|திங்கள்|செவ்வாய்|புதன்|வியாழன்|வெள்ளி|சனி|ஞா|தி|செ|பு|வி|வெ|ச|0|கி.மு.|கி.பி.|கிறிஸ்துவுக்கு முன்|அன்னோ டோமினி|கி.மு.|கி.பி.|a h:mm|a h:mm:ss|a h:mm:ss z|a h:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|51|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|d E|Ehm|E a h:mm|EHm|E HH:mm|Ehms|E a h:mm:ss|EHms|E HH:mm:ss|Gy|G y|GyMd|d/M/y G|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|a h|H|HH|hm|a h:mm|Hm|HH:mm|hms|a h:mm:ss|Hms|HH:mm:ss|hmsv|a h:mm:ss v|Hmsv|HH:mm:ss v|hmv|a h:mm v|Hmv|HH:mm v|M|L|Md|d/M|MEd|dd-MM, E|MMdd|dd-MM|MMM|LLL|MMMd|MMM d|MMMEd|MMM d, E|MMMMd|d MMMM|MMMMW-count-one|MMMM W -ஆம் வாரம்|MMMMW-count-other|MMMM W -ஆம் வாரம்|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|MM-y|yMMM|MMM y|yMMMd|d MMM, y|yMMMEd|E, d MMM, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y ஆம் ஆண்டின் w -ஆம் வாரம்|yw-count-other|Y ஆம் ஆண்டின் w -ஆம் வாரம்|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2I,|.|-¤||¤||¤||E0I,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ta = $enkidatron$elm_cldr$Generated$Ta$ta;
var $enkidatron$elm_cldr$Generated$Te$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'te',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Te$te = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Te$dayPeriods, 'te||||AM|PM|7|afternoon1|మధ్యాహ్నం|am|AM|evening1|సాయంత్రం|midnight|అర్ధరాత్రి|morning1|ఉదయం|night1|రాత్రి|pm|PM|AM|PM|7|afternoon1|మధ్యాహ్నం|am|AM|evening1|సాయంత్రం|midnight|అర్ధరాత్రి|morning1|ఉదయం|night1|రాత్రి|pm|PM|ఉ|సా|7|afternoon1|మధ్యాహ్నం|am|ఉ|evening1|సాయంత్రం|midnight|అర్ధరాత్రి|morning1|ఉదయం|night1|రాత్రి|pm|సా|dd-MM-yy|d MMM, y|d MMMM, y|d, MMMM y, EEEE|జన|ఫిబ్ర|మార్చి|ఏప్రి|మే|జూన్|జులై|ఆగ|సెప్టెం|అక్టో|నవం|డిసెం|జనవరి|ఫిబ్రవరి|మార్చి|ఏప్రిల్|మే|జూన్|జులై|ఆగస్టు|సెప్టెంబర్|అక్టోబర్|నవంబర్|డిసెంబర్|జ|ఫి|మా|ఏ|మే|జూ|జు|ఆ|సె|అ|న|డి|0|ఆది|సోమ|మంగళ|బుధ|గురు|శుక్ర|శని|ఆదివారం|సోమవారం|మంగళవారం|బుధవారం|గురువారం|శుక్రవారం|శనివారం|ఆ|సో|మ|బు|గు|శు|శ|0|క్రీపూ|క్రీశ|క్రీస్తు పూర్వం|క్రీస్తు శకం|క్రీపూ|క్రీశ|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d, E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG y-MM-dd|GyMMM|G MMM y|GyMMMd|G d, MMM y|GyMMMEd|G, d MMM, y, E|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|d/M, E|MMdd|dd-MM|MMM|LLL|MMMd|d MMM|MMMEd|d MMM, E|MMMMd|d MMMM|MMMMW-count-one|MMMMలో Wవ వారం|MMMMW-count-other|MMMMలో Wవ వారం|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|d/M/y, E|yMM|MM-y|yMMM|MMM y|yMMMd|d, MMM y|yMMMEd|d MMM, y, E|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Yలో wవ వారం|yw-count-other|Yలో wవ వారం|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3I,|.|-||||||E2I,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$te = $enkidatron$elm_cldr$Generated$Te$te;
var $enkidatron$elm_cldr$Generated$Th$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'th',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(16, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(18, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening2'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Th$th = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Th$dayPeriods, 'th||||AM|PM|10|afternoon1|ในตอนบ่าย|afternoon2|บ่าย|am|AM|evening1|ในตอนเย็น|evening2|ค่ำ|midnight|เที่ยงคืน|morning1|ในตอนเช้า|night1|กลางคืน|noon|เที่ยง|pm|PM|ก่อนเที่ยง|หลังเที่ยง|10|afternoon1|ในตอนบ่าย|afternoon2|บ่าย|am|ก่อนเที่ยง|evening1|ในตอนเย็น|evening2|ค่ำ|midnight|เที่ยงคืน|morning1|ในตอนเช้า|night1|กลางคืน|noon|เที่ยง|pm|หลังเที่ยง|a|p|10|afternoon1|เที่ยง|afternoon2|บ่าย|am|a|evening1|เย็น|evening2|ค่ำ|midnight|เที่ยงคืน|morning1|เช้า|night1|กลางคืน|noon|เที่ยง|pm|p|d/M/yy|d MMM y|d MMMM G y|EEEEที่ d MMMM G y|ม.ค.|ก.พ.|มี.ค.|เม.ย.|พ.ค.|มิ.ย.|ก.ค.|ส.ค.|ก.ย.|ต.ค.|พ.ย.|ธ.ค.|มกราคม|กุมภาพันธ์|มีนาคม|เมษายน|พฤษภาคม|มิถุนายน|กรกฎาคม|สิงหาคม|กันยายน|ตุลาคม|พฤศจิกายน|ธันวาคม|ม.ค.|ก.พ.|มี.ค.|เม.ย.|พ.ค.|มิ.ย.|ก.ค.|ส.ค.|ก.ย.|ต.ค.|พ.ย.|ธ.ค.|0|อา.|จ.|อ.|พ.|พฤ.|ศ.|ส.|วันอาทิตย์|วันจันทร์|วันอังคาร|วันพุธ|วันพฤหัสบดี|วันศุกร์|วันเสาร์|อา|จ|อ|พ|พฤ|ศ|ส|0|ก่อน ค.ศ.|ค.ศ.|ปีก่อนคริสตกาล|คริสต์ศักราช|ก่อน ค.ศ.|ค.ศ.|HH:mm|HH:mm:ss|H นาฬิกา mm นาที ss วินาที z|H นาฬิกา mm นาที ss วินาที zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|56|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E d|Ehm|E h:mm a|EHm|E HH:mm น.|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|G y|GyMd|d/M/GGGGG y|GyMMM|MMM G y|GyMMMd|d MMM G y|GyMMMEd|E d MMM G y|GyMMMEEEEd|EEEEที่ d MMM G y|h|h a|H|HH|hm|h:mm a|Hm|HH:mm น.|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm น. a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E d/M|MMM|LLL|MMMd|d MMM|MMMEd|E d MMM|MMMEEEEd|EEEEที่ d MMM|MMMMd|d MMMM|MMMMEd|E d MMMM|MMMMEEEEd|EEEEที่ d MMMM|MMMMW-count-other|สัปดาห์ที่ W ของเดือนMMMM|mmss|mm:ss|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E d/M/y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E d MMM y|yMMMEEEEd|EEEEที่ d MMM y|yMMMM|MMMM y|yMMMMd|d MMMM y|yMMMMEd|E d MMMM y|yMMMMEEEEd|EEEEที่ d MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ G y|yw-count-other|สัปดาห์ที่ w ของปี Y|HHmm|HHmmss|Hmmssz|Hmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$th = $enkidatron$elm_cldr$Generated$Th$th;
var $enkidatron$elm_cldr$Generated$Tk$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Tk$tk = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Tk$dayPeriods, 'tk||||go.öň|go.soň|2|am|go.öň|pm|go.soň|günortadan öň|günortadan soň|2|am|günortadan öň|pm|günortadan soň|öň|soň|2|am|öň|pm|soň|dd.MM.y|d MMM y|d MMMM y|d MMMM y EEEE|ýan|few|mart|apr|maý|iýun|iýul|awg|sen|okt|noý|dek|ýanwar|fewral|mart|aprel|maý|iýun|iýul|awgust|sentýabr|oktýabr|noýabr|dekabr|Ý|F|M|A|M|I|I|A|S|O|N|D|1|Ýan|Few|Mar|Apr|Maý|Iýun|Iýul|Awg|Sen|Okt|Noý|Dek|Ýanwar|Fewral|Mart|Aprel|Maý|Iýun|Iýul|Awgust|Sentýabr|Oktýabr|Noýabr|Dekabr|Ý|F|M|A|M|I|I|A|S|O|N|D|ýek|duş|siş|çar|pen|ann|şen|ýekşenbe|duşenbe|sişenbe|çarşenbe|penşenbe|anna|şenbe|Ý|D|S|Ç|P|A|Ş|1|Ýek|Duş|Siş|Çar|Pen|Ann|Şen|Ýekşenbe|Duşenbe|Sişenbe|Çarşenbe|Penşenbe|Anna|Şenbe|Ý|D|S|Ç|P|A|Ş|B.e.öň|B.e.|Isadan öň|Isadan soň|B.e.öň|B.e.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|51|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y|GyMd|GGGGG dd.MM.y|GyMMM|G MMM y|GyMMMd|G d MMM y|GyMMMEd|G d MMM y E|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|dd.MM|MEd|dd.MM E|MMM|LLL|MMMd|d MMM|MMMEd|d MMM E|MMMMd|d MMMM|MMMMEd|d MMMM E|MMMMW-count-one|\'hepde\' W, MMMM|MMMMW-count-other|\'hepde\' W, MMMM|mmss|mm:ss|ms|mm:ss|y|y|yM|MM.y|yMd|dd.MM.y|yMEd|dd.MM.y E|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|d MMM y E|yMMMM|MMMM y|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|\'hepde\' w, Y|yw-count-other|\'hepde\' w, Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|\u00A0%||\u00A0%||\u00A0%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|EUR|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$tk = $enkidatron$elm_cldr$Generated$Tk$tk;
var $enkidatron$elm_cldr$Generated$Tr$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'tr',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(19, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(11, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(11, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Tr$tr = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Tr$dayPeriods, 'tr||||ÖÖ|ÖS|10|afternoon1|öğleden sonra|afternoon2|akşamüstü|am|ÖÖ|evening1|akşam|midnight|gece yarısı|morning1|sabah|morning2|öğleden önce|night1|gece|noon|öğle|pm|ÖS|ÖÖ|ÖS|10|afternoon1|öğleden sonra|afternoon2|akşamüstü|am|ÖÖ|evening1|akşam|midnight|gece yarısı|morning1|sabah|morning2|öğleden önce|night1|gece|noon|öğle|pm|ÖS|öö|ös|10|afternoon1|öğleden sonra|afternoon2|akşamüstü|am|öö|evening1|akşam|midnight|gece|morning1|sabah|morning2|öğleden önce|night1|gece|noon|ö|pm|ös|d.MM.y|d MMM y|d MMMM y|d MMMM y EEEE|Oca|Şub|Mar|Nis|May|Haz|Tem|Ağu|Eyl|Eki|Kas|Ara|Ocak|Şubat|Mart|Nisan|Mayıs|Haziran|Temmuz|Ağustos|Eylül|Ekim|Kasım|Aralık|O|Ş|M|N|M|H|T|A|E|E|K|A|0|Paz|Pzt|Sal|Çar|Per|Cum|Cmt|Pazar|Pazartesi|Salı|Çarşamba|Perşembe|Cuma|Cumartesi|P|P|S|Ç|P|C|C|0|MÖ|MS|Milattan Önce|Milattan Sonra|MÖ|MS|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|52|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E B h:mm|EBhms|E B h:mm:ss|Ed|d E|Ehm|E a\u202Fh:mm|EHm|E HH:mm|Ehms|E a\u202Fh:mm:ss|EHms|E HH:mm:ss|Gy|G y|GyMd|d/M/y GGGGG|GyMMM|G MMM y|GyMMMd|G d MMM y|GyMMMEd|G d MMM y E|h|a\u202Fh|H|HH|hm|a\u202Fh:mm|Hm|HH:mm|hms|a\u202Fh:mm:ss|Hms|HH:mm:ss|hmsv|a\u202Fh:mm:ss v|Hmsv|HH:mm:ss v|hmv|a\u202Fh:mm v|Hmv|HH:mm v|M|L|Md|d/M|MEd|d/MM E|MMM|LLL|MMMd|d MMM|MMMEd|d MMM E|MMMMd|d MMMM|MMMMEd|d MMMM E|MMMMW-count-one|MMMM \'ayının\' W. \'haftası\'|MMMMW-count-other|MMMM \'ayının\' W. \'haftası\'|mmss|mm:ss|ms|mm:ss|y|y|yM|MM/y|yMd|dd.MM.y|yMEd|d.M.y E|yMM|MM.y|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|d MMM y E|yMMMM|MMMM y|yQQQ|y QQQ|yQQQQ|y QQQQ|yw-count-one|Y \'yılının\' w. \'haftası\'|yw-count-other|Y \'yılının\' w. \'haftası\'|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-¤||¤||¤||E0W.|,|-%||%||%||107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|L|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$tr = $enkidatron$elm_cldr$Generated$Tr$tr;
var $enkidatron$elm_cldr$Generated$Uk$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'uk',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Uk$uk = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Uk$dayPeriods, 'uk||||дп|пп|8|afternoon1|дня|am|дп|evening1|вечора|midnight|опівночі|morning1|ранку|night1|ночі|noon|опівдні|pm|пп|дп|пп|8|afternoon1|дня|am|дп|evening1|вечора|midnight|опівночі|morning1|ранку|night1|ночі|noon|опівдні|pm|пп|дп|пп|8|afternoon1|дня|am|дп|evening1|вечора|midnight|ночі|morning1|ранку|night1|ночі|noon|дня|pm|пп|dd.MM.yy|d MMM y\u202F\'р\'.|d MMMM y\u202F\'р\'.|EEEE, d MMMM y\u202F\'р\'.|січ.|лют.|бер.|квіт.|трав.|черв.|лип.|серп.|вер.|жовт.|лист.|груд.|січня|лютого|березня|квітня|травня|червня|липня|серпня|вересня|жовтня|листопада|грудня|с|л|б|к|т|ч|л|с|в|ж|л|г|1|січ.|лют.|бер.|квіт.|трав.|черв.|лип.|серп.|вер.|жовт.|лист.|груд.|січень|лютий|березень|квітень|травень|червень|липень|серпень|вересень|жовтень|листопад|грудень|С|Л|Б|К|Т|Ч|Л|С|В|Ж|Л|Г|нд|пн|вт|ср|чт|пт|сб|неділю|понеділок|вівторок|середу|четвер|пʼятницю|суботу|Н|П|В|С|Ч|П|С|1|нд|пн|вт|ср|чт|пт|сб|неділя|понеділок|вівторок|середа|четвер|пʼятниця|субота|Н|П|В|С|Ч|П|С|до н. е.|н. е.|до нашої ери|нашої ери|до н.е.|н.е.|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|54|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|y G|GyMd|dd-MM-y GGGGG|GyMMM|LLL y\u202F\'р\'. G|GyMMMd|d MMM y\u202F\'р\'. G|GyMMMEd|E, d MMM y\u202F\'р\'. G|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|LL|Md|dd.MM|MEd|E, dd.MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-one|W-\'й\' \'тиж\'. MMMM|MMMMW-count-few|W-\'й\' \'тиж\'. MMMM|MMMMW-count-many|W-\'й\' \'тиж\'. MMMM|MMMMW-count-other|W-\'й\' \'тиж\'. MMMM|ms|mm:ss|y|y|yM|MM.y|yMd|dd.MM.y|yMEd|E, dd.MM.y|yMMM|LLL y\u202F\'р\'.|yMMMd|d MMM y\u202F\'р\'.|yMMMEd|E, d MMM y\u202F\'р\'.|yMMMM|LLLL y\u202F\'р\'.|yQQQ|QQQ y|yQQQQ|QQQQ y\u202F\'р\'.|yw-count-one|w-\'й\' \'тиж\'. Y \'р\'.|yw-count-few|w-\'й\' \'тиж\'. Y \'р\'.|yw-count-many|w-\'й\' \'тиж\'. Y \'р\'.|yw-count-other|w-\'й\' \'тиж\'. Y \'р\'.|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|108|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AUD|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|BRL|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CAD|CLP|$|CNY|CNY|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|EUR|FJD|$|FKP|£|GBP|GBP|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HKD|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|ILS|INR|INR|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|KRW|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MXN|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZD|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|TWD|UAH|₴|UAK|крб.|USD|USD|UYU|$|VEF|Bs|VND|VND|XAF|FCFA|XCD|XCD|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$uk = $enkidatron$elm_cldr$Generated$Uk$uk;
var $enkidatron$elm_cldr$Generated$Ur$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'ur',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(16, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(16, 0),
					_Utils_Tuple2(18, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(20, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(20, 0),
					_Utils_Tuple2(4, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Ur$ur = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Ur$dayPeriods, 'ur||||AM|PM|8|afternoon1|دوپہر|afternoon2|سہ پہر|am|AM|evening1|شام|midnight|آدھی رات|morning1|صبح|night1|رات|pm|PM|AM|PM|8|afternoon1|دوپہر میں|afternoon2|سہ پہر|am|AM|evening1|شام میں|midnight|آدھی رات|morning1|صبح میں|night1|رات میں|pm|PM|a|p|8|afternoon1|دوپہر|afternoon2|سہ پہر|am|a|evening1|شام|midnight|آدھی رات|morning1|صبح|night1|رات|pm|p|d/M/yy|d MMM، y|d MMMM، y|EEEE، d MMMM، y|جنوری|فروری|مارچ|اپریل|مئی|جون|جولائی|اگست|ستمبر|اکتوبر|نومبر|دسمبر|جنوری|فروری|مارچ|اپریل|مئی|جون|جولائی|اگست|ستمبر|اکتوبر|نومبر|دسمبر|J|F|M|A|M|J|J|A|S|O|N|D|0|اتوار|پیر|منگل|بدھ|جمعرات|جمعہ|ہفتہ|اتوار|پیر|منگل|بدھ|جمعرات|جمعہ|ہفتہ|S|M|T|W|T|F|S|0|قبل مسیح|عیسوی|قبل مسیح|عیسوی|قبل مسیح|عیسوی|h:mm a|h:mm:ss a|h:mm:ss a z|h:mm:ss a zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm a|EHm|E HH:mm|Ehms|E h:mm:ss a|EHms|E HH:mm:ss|Gy|y G|GyMd|d/M/y GGGGG|GyMMM|MMM y G|GyMMMd|d MMM، y G|GyMMMEd|E، d MMM، y G|h|h a|H|HH|hm|h:mm a|Hm|HH:mm|hms|h:mm:ss a|Hms|HH:mm:ss|hmsv|h:mm:ss a v|Hmsv|HH:mm:ss v|hmv|h:mm a v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E، d/M|MMM|LLL|MMMd|d MMM|MMMEd|E، d MMM|MMMMd|d MMMM|MMMMW-count-one|MMMM کا ہفتہ W|MMMMW-count-other|MMMM کا ہفتہ W|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E، d/M/y|yMMM|MMM y|yMMMd|d MMM، y|yMMMEd|E، d MMM، y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-one|Y کا w ہفتہ|yw-count-other|Y کا w ہفتہ|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|\u200E-||||||E2W,|.|\u200E-¤||¤||¤||E0W,|.|\u200E-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$ur = $enkidatron$elm_cldr$Generated$Ur$ur;
var $enkidatron$elm_cldr$Generated$Uz$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'uz',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(11, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(22, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(11, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(22, 0),
					_Utils_Tuple2(6, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Uz$uz = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Uz$dayPeriods, 'uz||||TO|TK|8|afternoon1|kunduzi|am|TO|evening1|kechqurun|midnight|yarim tun|morning1|ertalab|night1|kechasi|noon|tush payti|pm|TK|TO|TK|8|afternoon1|kunduzi|am|TO|evening1|kechqurun|midnight|yarim tun|morning1|ertalab|night1|kechasi|noon|tush payti|pm|TK|TO|TK|8|afternoon1|kunduzi|am|TO|evening1|kechqurun|midnight|yarim tun|morning1|ertalab|night1|kechasi|noon|tush payti|pm|TK|dd/MM/yy|d-MMM, y|d-MMMM, y|EEEE, d-MMMM, y|yan|fev|mar|apr|may|iyn|iyl|avg|sen|okt|noy|dek|yanvar|fevral|mart|aprel|may|iyun|iyul|avgust|sentabr|oktabr|noyabr|dekabr|Y|F|M|A|M|I|I|A|S|O|N|D|1|Yan|Fev|Mar|Apr|May|Iyn|Iyl|Avg|Sen|Okt|Noy|Dek|Yanvar|Fevral|Mart|Aprel|May|Iyun|Iyul|Avgust|Sentabr|Oktabr|Noyabr|Dekabr|Y|F|M|A|M|I|I|A|S|O|N|D|Yak|Dush|Sesh|Chor|Pay|Jum|Shan|yakshanba|dushanba|seshanba|chorshanba|payshanba|juma|shanba|Y|D|S|C|P|J|S|0|m.a.|milodiy|miloddan avvalgi|milodiy|m.a.|milodiy|HH:mm|HH:mm:ss|H:mm:ss (z)|H:mm:ss (zzzz)|{1}, {0}|{1}, {0}|{1}, {0}|{1}, {0}|49|Bh|B h|Bhm|B h:mm|Bhms|B h:mm:ss|d|d|E|ccc|EBhm|E, B h:mm|EBhms|E, B h:mm:ss|Ed|d, E|Ehm|E, h:mm\u202Fa|EHm|E, HH:mm|Ehms|E, h:mm:ss\u202Fa|EHms|E, HH:mm:ss|Gy|G y|GyMd|dd.MM.y GGGGG|GyMMM|MMM, G y|GyMMMd|d-MMM, G y|GyMMMEd|E, d-MMM, G y|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa (v)|Hmsv|HH:mm:ss (v)|hmv|h:mm\u202Fa (v)|Hmv|HH:mm (v)|M|LL|Md|dd/MM|MEd|E, dd/MM|MMM|LLL|MMMd|d-MMM|MMMEd|E, d-MMM|MMMMd|d-MMMM|MMMMW-count-one|MMMM, W-\'hafta\'|MMMMW-count-other|MMMM, W-\'hafta\'|ms|mm:ss|y|y|yM|MM.y|yMd|dd/MM/y|yMEd|E, dd/MM/y|yMMM|MMM, y|yMMMd|d-MMM, y|yMMMEd|E, d-MMM, y|yMMMM|MMMM, y|yQQQ|y, QQQ|yQQQQ|y, QQQQ|yw-count-one|Y, w-\'hafta\'|yw-count-other|Y, w-\'hafta\'|HHmm|HHmmss|Hmmssz|Hmmsszzzz|X3W\u00A0|,|-||||||E2W\u00A0|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W\u00A0|,|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|UZS|soʻm|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$uz = $enkidatron$elm_cldr$Generated$Uz$uz;
var $enkidatron$elm_cldr$Generated$Vi$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'vi',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(18, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(18, 0),
					_Utils_Tuple2(21, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(4, 0),
					_Utils_Tuple2(12, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(21, 0),
					_Utils_Tuple2(4, 0),
					'night1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(12, 0),
					'noon')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Vi$vi = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Vi$dayPeriods, 'vi||||SA|CH|8|afternoon1|chiều|am|SA|evening1|tối|midnight|nửa đêm|morning1|sáng|night1|đêm|noon|TR|pm|CH|SA|CH|8|afternoon1|chiều|am|SA|evening1|tối|midnight|nửa đêm|morning1|sáng|night1|đêm|noon|trưa|pm|CH|s|c|8|afternoon1|chiều|am|s|evening1|tối|midnight|nửa đêm|morning1|sáng|night1|đêm|noon|tr|pm|c|d/M/yy|d MMM, y|d MMMM, y|EEEE, d MMMM, y|thg 1|thg 2|thg 3|thg 4|thg 5|thg 6|thg 7|thg 8|thg 9|thg 10|thg 11|thg 12|tháng 1|tháng 2|tháng 3|tháng 4|tháng 5|tháng 6|tháng 7|tháng 8|tháng 9|tháng 10|tháng 11|tháng 12|1|2|3|4|5|6|7|8|9|10|11|12|1|Tháng 1|Tháng 2|Tháng 3|Tháng 4|Tháng 5|Tháng 6|Tháng 7|Tháng 8|Tháng 9|Tháng 10|Tháng 11|Tháng 12|Tháng 1|Tháng 2|Tháng 3|Tháng 4|Tháng 5|Tháng 6|Tháng 7|Tháng 8|Tháng 9|Tháng 10|Tháng 11|Tháng 12|1|2|3|4|5|6|7|8|9|10|11|12|CN|Th 2|Th 3|Th 4|Th 5|Th 6|Th 7|Chủ Nhật|Thứ Hai|Thứ Ba|Thứ Tư|Thứ Năm|Thứ Sáu|Thứ Bảy|CN|T2|T3|T4|T5|T6|T7|0|TCN|SCN|Trước Chúa Giáng Sinh|Sau Công Nguyên|TCN|CN|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{0} {1}|{0} {1}|{0} {1}|{0} {1}|51|Bh|h \'giờ\' B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|h:mm B E|EBhms|h:mm:ss B E|Ed|E, \'ngày\' d|Ehm|h:mm\u202Fa E|EHm|HH:mm E|Ehms|h:mm:ss\u202Fa E|EHms|HH:mm:ss E|Gy|y G|GyMd|d/M/y G|GyMMM|MMM y G|GyMMMd|d MMM, y G|GyMMMEd|E, d MMM, y G|h|h\u202Fa|H|HH \'giờ\'|hm|h:mm\u202Fa|Hm|H:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMdd|dd-MM|MMM|LLL|MMMd|d MMM|MMMEd|E, d MMM|MMMMd|d MMMM|MMMMEd|E, d MMMM|MMMMW-count-other|\'tuần\' W \'của\' \'tháng\' M|mmss|mm:ss|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|E, d/M/y|yMM|\'tháng\' MM, y|yMMM|MMM y|yMMMd|d MMM, y|yMMMEd|E, d MMM, y|yMMMM|MMMM \'năm\' y|yQQQ|QQQ y|yQQQQ|QQQQ \'năm\' y|yw-count-other|\'tuần\' w \'của\' \'năm\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W.|,|-||||||E2W.|,|-|\u00A0¤||\u00A0¤||\u00A0¤|E0W.|,|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$vi = $enkidatron$elm_cldr$Generated$Vi$vi;
var $enkidatron$elm_cldr$Generated$Yo$dayPeriods = $elm$core$Dict$fromList(_List_Nil);
var $enkidatron$elm_cldr$Generated$Yo$yo = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Yo$dayPeriods, 'yo||||Àárọ̀|Ọ̀sán|2|am|Àárọ̀|pm|Ọ̀sán|Àárọ̀|Ọ̀sán|2|am|Àárọ̀|pm|Ọ̀sán|Àárọ̀|Ọ̀sán|2|am|Àárọ̀|pm|Ọ̀sán|d/M/y|d MM y|d MMM y|EEEE, d MMM y|Ṣẹ́r|Èrèl|Ẹrẹ̀n|Ìgb|Ẹ̀bi|Òkú|Agẹ|Ògú|Owe|Ọ̀wà|Bél|Ọ̀pẹ|Oṣù Ṣẹ́rẹ́|Oṣù Èrèlè|Oṣù Ẹrẹ̀nà|Oṣù Ìgbé|Oṣù Ẹ̀bibi|Oṣù Òkúdu|Oṣù Agẹmọ|Oṣù Ògún|Oṣù Owewe|Oṣù Ọ̀wàrà|Oṣù Bélú|Oṣù Ọ̀pẹ̀|S|È|Ẹ|Ì|Ẹ̀|Ò|A|Ò|O|Ọ̀|B|Ọ̀|1|Ṣẹ́|Èr|Ẹr|Ìg|Ẹ̀b|Òk|Ag|Òg|Ow|Ọ̀w|Bé|Ọ̀p|Ṣẹ́rẹ́|Èrèlè|Ẹrẹ̀nà|Ìgbé|Ẹ̀bibi|Òkúdu|Agẹmọ|Ògún|Owewe|Ọ̀wàrà|Bélú|Ọ̀pẹ̀|S|È|Ẹ|Ì|Ẹ̀|Ò|A|Ò|O|Ọ̀|B|Ọ̀|Àìk|Aj|Ìsẹ́g|Ọjọ́r|Ọjọ́b|Ẹt|Àbám|Ọjọ́ Àìkú|Ọjọ́ Ajé|Ọjọ́ Ìsẹ́gun|Ọjọ́rú|Ọjọ́bọ|Ọjọ́ Ẹtì|Ọjọ́ Àbámẹ́ta|À|A|Ì|Ọ|Ọ|Ẹ|À|1|Àìk|Aj|Ìsẹ́g|Ọjọ́r|Ọjọ́b|Ẹt|Àbám|Àìkú|Ajé|Ìsẹ́gun|Ọjọ́rú|Ọjọ́bọ|Ẹtì|Àbámẹ́ta|À|A|Ì|Ọ|Ọ|Ẹ|À|BCE|AD|Saju Kristi|Lehin Kristi|BCE|AD|H:m|H:m:s|H:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|48|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|E, d|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y|GyMd|d/M/y GGGGG|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|d/M|MEd|E, d/M|MMM|LLL|MMMd|d MMM|MMMEd|d MMM, E|MMMMd|d MMMM|MMMMEd|d, MMMM E|MMMMW-count-other|\'week\' W \'of\' MMMM|ms|mm:ss|y|y|yM|M/y|yMd|d/M/y|yMEd|d/M/y, E|yMMM|MMM y|yMMMd|d MMM y|yMMMEd|E, d MMM , y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'week\' w \'of\' Y|Hm|Hms|Hmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|105|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|₱|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$yo = $enkidatron$elm_cldr$Generated$Yo$yo;
var $enkidatron$elm_cldr$Generated$Yue$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'yue',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(19, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(8, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(8, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(5, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Yue$yue = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Yue$dayPeriods, 'yue||||上午|下午|9|afternoon1|中午|afternoon2|下晝|am|上午|evening1|夜晚|midnight|午夜|morning1|清晨|morning2|朝早|night1|凌晨|pm|下午|上午|下午|9|afternoon1|中午|afternoon2|下晝|am|上午|evening1|夜晚|midnight|午夜|morning1|清晨|morning2|朝早|night1|凌晨|pm|下午|上午|下午|9|afternoon1|中午|afternoon2|下晝|am|上午|evening1|夜晚|midnight|午夜|morning1|清晨|morning2|朝早|night1|凌晨|pm|下午|y/M/d|y年M月d日|y年M月d日|y年M月d日 EEEE|1月|2月|3月|4月|5月|6月|7月|8月|9月|10月|11月|12月|1月|2月|3月|4月|5月|6月|7月|8月|9月|10月|11月|12月|1|2|3|4|5|6|7|8|9|10|11|12|0|星期日|星期一|星期二|星期三|星期四|星期五|星期六|星期日|星期一|星期二|星期三|星期四|星期五|星期六|日|一|二|三|四|五|六|0|西元前|西元|西元前|西元|西元前|西元|ah:mm|ah:mm:ss|ah:mm:ss [z]|ah:mm:ss [zzzz]|{1} {0}|{1} {0}|{1} {0}|{1} {0}|49|Bh|Bh時|Bhm|Bh:mm|Bhms|Bh:mm:ss|d|d日|E|ccc|EBhm|E Bh:mm|EBhms|E Bh:mm:ss|Ed|d E|Ehm|E ah:mm|EHm|E HH:mm|Ehms|E ah:mm:ss|EHms|E HH:mm:ss|Gy|Gy年|GyMd|GGGGG y-MM-dd|GyMMM|Gy年M月|GyMMMd|Gy年M月d日|GyMMMEd|Gy年M月d日 E|h|ah時|H|H時|hm|ah:mm|Hm|HH:mm|hms|ah:mm:ss|Hms|HH:mm:ss|hmsv|ah:mm:ss [v]|Hmsv|HH:mm:ss [v]|hmv|ah:mm [v]|Hmv|HH:mm [v]|M|M月|Md|M/d|MEd|M/d（E）|MMdd|MM/dd|MMM|LLL|MMMd|M月d日|MMMEd|M月d日 E|MMMMd|M月d日|MMMMW-count-other|M月第W個星期|ms|mm:ss|y|y年|yM|y/M|yMd|y/M/d|yMEd|y/M/d（E）|yMM|y/MM|yMMM|y年M月|yMMMd|y年M月d日|yMMMEd|y年M月d日 E|yMMMM|y年M月|yQQQ|y年QQQ|yQQQQ|y年QQQQ|yw-count-other|Y年第w個星期|ahmm|ahmmss|ahmmssz|ahmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|107|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|￦|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$yue = $enkidatron$elm_cldr$Generated$Yue$yue;
var $enkidatron$elm_cldr$Generated$Zh$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'zh',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(12, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(19, 0),
					'afternoon2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'evening1'),
					A2(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$At,
					_Utils_Tuple2(0, 0),
					'midnight'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(5, 0),
					_Utils_Tuple2(8, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(8, 0),
					_Utils_Tuple2(12, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(5, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Zh$zh = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Zh$dayPeriods, 'zh||||上午|下午|9|afternoon1|中午|afternoon2|下午|am|上午|evening1|晚上|midnight|午夜|morning1|早上|morning2|上午|night1|凌晨|pm|下午|上午|下午|9|afternoon1|中午|afternoon2|下午|am|上午|evening1|晚上|midnight|午夜|morning1|清晨|morning2|上午|night1|凌晨|pm|下午|上午|下午|9|afternoon1|中午|afternoon2|下午|am|上午|evening1|晚上|midnight|午夜|morning1|早上|morning2|上午|night1|凌晨|pm|下午|y/M/d|y年M月d日|y年M月d日|y年M月d日EEEE|1月|2月|3月|4月|5月|6月|7月|8月|9月|10月|11月|12月|一月|二月|三月|四月|五月|六月|七月|八月|九月|十月|十一月|十二月|1|2|3|4|5|6|7|8|9|10|11|12|0|周日|周一|周二|周三|周四|周五|周六|星期日|星期一|星期二|星期三|星期四|星期五|星期六|日|一|二|三|四|五|六|0|公元前|公元|公元前|公元|公元前|公元|HH:mm|HH:mm:ss|z HH:mm:ss|zzzz HH:mm:ss|{1} {0}|{1} {0}|{1} {0}|{1} {0}|50|Bh|Bh时|Bhm|Bh:mm|Bhms|Bh:mm:ss|d|d日|E|ccc|EBhm|EBh:mm|EBhms|EBh:mm:ss|Ed|d日E|Ehm|Eah:mm|EHm|EHH:mm|Ehms|Eah:mm:ss|EHms|EHH:mm:ss|Gy|Gy年|GyMd|GGGGG y-MM-dd|GyMMM|Gy年M月|GyMMMd|Gy年M月d日|GyMMMEd|Gy年M月d日E|h|ah时|H|H时|hm|ah:mm|Hm|HH:mm|hms|ah:mm:ss|Hms|HH:mm:ss|hmsv|v ah:mm:ss|Hmsv|v HH:mm:ss|hmv|v ah:mm|Hmv|v HH:mm|M|M月|Md|M/d|MEd|M/dE|MMdd|MM/dd|MMM|LLL|MMMd|M月d日|MMMEd|M月d日E|MMMMd|M月d日|MMMMW-count-other|MMMM第W周|ms|mm:ss|y|y年|yM|y/M|yMd|y/M/d|yMEd|y/M/dE|yMEEEEd|y年M月d日EEEE|yMM|y年M月|yMMM|y年M月|yMMMd|y年M月d日|yMMMEd|y年M月d日E|yMMMM|y年M月|yQQQ|y年第Q季度|yQQQQ|y年第Q季度|yw-count-other|Y年第w周|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|108|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|AU$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|р.|BZD|$|CAD|CA$|CLP|$|CNY|¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|kn|HUF|Ft|IDR|Rp|ILR|ILS|ILS|₪|INR|₹|ISK|kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|￦|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|zł|PYG|₲|RON|lei|RUB|₽|RUR|р.|RWF|RF|SBD|$|SEK|kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|US$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|XXX|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$zh = $enkidatron$elm_cldr$Generated$Zh$zh;
var $enkidatron$elm_cldr$Generated$Zu$dayPeriods = $elm$core$Dict$fromList(
	_List_fromArray(
		[
			_Utils_Tuple2(
			'zu',
			_List_fromArray(
				[
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(10, 0),
					_Utils_Tuple2(13, 0),
					'afternoon1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(13, 0),
					_Utils_Tuple2(19, 0),
					'evening1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(0, 0),
					_Utils_Tuple2(6, 0),
					'morning1'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(6, 0),
					_Utils_Tuple2(10, 0),
					'morning2'),
					A3(
					$enkidatron$elm_cldr$Internal$DayPeriodRule$FromBefore,
					_Utils_Tuple2(19, 0),
					_Utils_Tuple2(24, 0),
					'night1')
				]))
		]));
var $enkidatron$elm_cldr$Generated$Zu$zu = A2(
	$elm$core$Maybe$withDefault,
	$enkidatron$elm_cldr$Internal$Locale$empty,
	A2($enkidatron$elm_cldr$Internal$Parse$parse, $enkidatron$elm_cldr$Generated$Zu$dayPeriods, 'zu||||AM|PM|7|afternoon1|emini|am|AM|evening1|ntambama|morning1|entathakusa|morning2|ekuseni|night1|ebusuku|pm|PM|AM|PM|7|afternoon1|emini|am|AM|evening1|ntambama|morning1|entathakusa|morning2|ekuseni|night1|ebusuku|pm|PM|a|p|7|afternoon1|emini|am|a|evening1|ntambama|morning1|entathakusa|morning2|ekuseni|night1|ebusuku|pm|p|M/d/yy|MMM d, y|MMMM d, y|EEEE, MMMM d, y|Jan|Feb|Mas|Eph|Mey|Jun|Jul|Aga|Sep|Okt|Nov|Dis|Januwari|Februwari|Mashi|Ephreli|Meyi|Juni|Julayi|Agasti|Septhemba|Okthoba|Novemba|Disemba|J|F|M|E|M|J|J|A|S|O|N|D|1|Jan|Feb|Mas|Eph|Mey|Jun|Jul|Aga|Sep|Okt|Nov|Dis|Januwari|Februwari|Mashi|Ephreli|Meyi|Juni|Julayi|Agasti|Septhemba|Okthoba|Novemba|Disemba|J|F|M|A|M|J|J|A|S|O|N|D|Son|Mso|Bil|Tha|Sin|Hla|Mgq|ISonto|UMsombuluko|ULwesibili|ULwesithathu|ULwesine|ULwesihlanu|UMgqibelo|S|M|B|T|S|H|M|0|BC|AD|BC|AD|BC|AD|HH:mm|HH:mm:ss|HH:mm:ss z|HH:mm:ss zzzz|{1} {0}|{1} {0}|{1} {0}|{1} {0}|47|Bh|h B|Bhm|h:mm B|Bhms|h:mm:ss B|d|d|E|ccc|EBhm|E h:mm B|EBhms|E h:mm:ss B|Ed|d E|Ehm|E h:mm\u202Fa|EHm|E HH:mm|Ehms|E h:mm:ss\u202Fa|EHms|E HH:mm:ss|Gy|G y|GyMd|M/d/y GGGGG|GyMMM|G y MMM|GyMMMd|G y MMM d|GyMMMEd|G y MMM d, E|h|h\u202Fa|H|HH|hm|h:mm\u202Fa|Hm|HH:mm|hms|h:mm:ss\u202Fa|Hms|HH:mm:ss|hmsv|h:mm:ss\u202Fa v|Hmsv|HH:mm:ss v|hmv|h:mm\u202Fa v|Hmv|HH:mm v|M|L|Md|MM-dd|MEd|MM-dd, E|MMM|LLL|MMMd|MMM d|MMMEd|E, MMM d|MMMMd|MMMM d|MMMMW-count-other|\'week\' W \'of\' MMMM|ms|mm:ss|y|y|yM|y-MM|yMd|y-MM-dd|yMEd|y-MM-dd, E|yMMM|MMM y|yMMMd|MMM d, y|yMMMEd|E, MMM d, y|yMMMM|MMMM y|yQQQ|QQQ y|yQQQQ|QQQQ y|yw-count-other|\'week\' w \'of\' Y|HHmm|HHmmss|HHmmssz|HHmmsszzzz|X3W,|.|-||||||E2W,|.|-¤||¤||¤||E0W,|.|-|%||%||%|106|AFN|؋|AMD|֏|AOA|Kz|ARS|$|AUD|A$|AZN|₼|BAM|KM|BBD|$|BDT|৳|BMD|$|BND|$|BOB|Bs|BRL|R$|BSD|$|BWP|P|BYN|P.|BZD|$|CAD|CA$|CLP|$|CNY|CN¥|COP|$|CRC|₡|CUC|$|CUP|$|CZK|Kč|DKK|Kr|DOP|$|EGP|E£|ESP|₧|EUR|€|FJD|$|FKP|£|GBP|£|GEL|₾|GHS|GH₵|GIP|£|GNF|FG|GTQ|Q|GYD|$|HKD|HK$|HNL|L|HRK|Kn|HUF|Ft|IDR|Rp|ILS|₪|INR|₹|ISK|Kr|JMD|$|JPY|JP¥|KGS|\u20C0|KHR|៛|KMF|CF|KPW|₩|KRW|₩|KYD|$|KZT|₸|LAK|₭|LBP|L£|LKR|Rs|LRD|$|LTL|Lt|LVL|Ls|MGA|Ar|MMK|K|MNT|₮|MUR|Rs|MXN|MX$|MYR|RM|NAD|$|NGN|₦|NIO|C$|NOK|Kr|NPR|Rs|NZD|NZ$|PHP|PHP|PKR|Rs|PLN|Zł|PYG|₲|RON|lei|RUB|₽|RWF|RF|SBD|$|SEK|Kr|SGD|$|SHP|£|SRD|$|SSP|£|STN|Db|SYP|£|THB|฿|TOP|T$|TRY|₺|TTD|$|TWD|NT$|UAH|₴|USD|$|UYU|$|VEF|Bs|VND|₫|XAF|FCFA|XCD|EC$|XOF|F\u202FCFA|XPF|CFPF|XXX|¤|ZAR|R|ZMW|ZK|'));
var $enkidatron$elm_cldr$Cldr$Locale$zu = $enkidatron$elm_cldr$Generated$Zu$zu;
var $enkidatron$elm_cldr$Cldr$Locale$basicLocales = _List_fromArray(
	[$enkidatron$elm_cldr$Cldr$Locale$af, $enkidatron$elm_cldr$Cldr$Locale$am, $enkidatron$elm_cldr$Cldr$Locale$ar, $enkidatron$elm_cldr$Cldr$Locale$locale_as, $enkidatron$elm_cldr$Cldr$Locale$az, $enkidatron$elm_cldr$Cldr$Locale$be, $enkidatron$elm_cldr$Cldr$Locale$bg, $enkidatron$elm_cldr$Cldr$Locale$bn, $enkidatron$elm_cldr$Cldr$Locale$bs, $enkidatron$elm_cldr$Cldr$Locale$ca, $enkidatron$elm_cldr$Cldr$Locale$chr, $enkidatron$elm_cldr$Cldr$Locale$cs, $enkidatron$elm_cldr$Cldr$Locale$cy, $enkidatron$elm_cldr$Cldr$Locale$da, $enkidatron$elm_cldr$Cldr$Locale$de, $enkidatron$elm_cldr$Cldr$Locale$dsb, $enkidatron$elm_cldr$Cldr$Locale$el, $enkidatron$elm_cldr$Cldr$Locale$en, $enkidatron$elm_cldr$Cldr$Locale$es, $enkidatron$elm_cldr$Cldr$Locale$et, $enkidatron$elm_cldr$Cldr$Locale$eu, $enkidatron$elm_cldr$Cldr$Locale$fa, $enkidatron$elm_cldr$Cldr$Locale$fi, $enkidatron$elm_cldr$Cldr$Locale$fil, $enkidatron$elm_cldr$Cldr$Locale$fr, $enkidatron$elm_cldr$Cldr$Locale$ga, $enkidatron$elm_cldr$Cldr$Locale$gd, $enkidatron$elm_cldr$Cldr$Locale$gl, $enkidatron$elm_cldr$Cldr$Locale$gu, $enkidatron$elm_cldr$Cldr$Locale$ha, $enkidatron$elm_cldr$Cldr$Locale$he, $enkidatron$elm_cldr$Cldr$Locale$hi, $enkidatron$elm_cldr$Cldr$Locale$hr, $enkidatron$elm_cldr$Cldr$Locale$hsb, $enkidatron$elm_cldr$Cldr$Locale$hu, $enkidatron$elm_cldr$Cldr$Locale$hy, $enkidatron$elm_cldr$Cldr$Locale$id, $enkidatron$elm_cldr$Cldr$Locale$ig, $enkidatron$elm_cldr$Cldr$Locale$is, $enkidatron$elm_cldr$Cldr$Locale$it, $enkidatron$elm_cldr$Cldr$Locale$ja, $enkidatron$elm_cldr$Cldr$Locale$jv, $enkidatron$elm_cldr$Cldr$Locale$ka, $enkidatron$elm_cldr$Cldr$Locale$kk, $enkidatron$elm_cldr$Cldr$Locale$km, $enkidatron$elm_cldr$Cldr$Locale$kn, $enkidatron$elm_cldr$Cldr$Locale$ko, $enkidatron$elm_cldr$Cldr$Locale$kok, $enkidatron$elm_cldr$Cldr$Locale$ky, $enkidatron$elm_cldr$Cldr$Locale$lo, $enkidatron$elm_cldr$Cldr$Locale$lt, $enkidatron$elm_cldr$Cldr$Locale$lv, $enkidatron$elm_cldr$Cldr$Locale$mk, $enkidatron$elm_cldr$Cldr$Locale$ml, $enkidatron$elm_cldr$Cldr$Locale$mn, $enkidatron$elm_cldr$Cldr$Locale$mr, $enkidatron$elm_cldr$Cldr$Locale$ms, $enkidatron$elm_cldr$Cldr$Locale$my, $enkidatron$elm_cldr$Cldr$Locale$nb, $enkidatron$elm_cldr$Cldr$Locale$ne, $enkidatron$elm_cldr$Cldr$Locale$nl, $enkidatron$elm_cldr$Cldr$Locale$nn, $enkidatron$elm_cldr$Cldr$Locale$no, $enkidatron$elm_cldr$Cldr$Locale$or, $enkidatron$elm_cldr$Cldr$Locale$pa, $enkidatron$elm_cldr$Cldr$Locale$pl, $enkidatron$elm_cldr$Cldr$Locale$ps, $enkidatron$elm_cldr$Cldr$Locale$pt, $enkidatron$elm_cldr$Cldr$Locale$ro, $enkidatron$elm_cldr$Cldr$Locale$ru, $enkidatron$elm_cldr$Cldr$Locale$sd, $enkidatron$elm_cldr$Cldr$Locale$si, $enkidatron$elm_cldr$Cldr$Locale$sk, $enkidatron$elm_cldr$Cldr$Locale$sl, $enkidatron$elm_cldr$Cldr$Locale$so, $enkidatron$elm_cldr$Cldr$Locale$sq, $enkidatron$elm_cldr$Cldr$Locale$sr, $enkidatron$elm_cldr$Cldr$Locale$sv, $enkidatron$elm_cldr$Cldr$Locale$sw, $enkidatron$elm_cldr$Cldr$Locale$ta, $enkidatron$elm_cldr$Cldr$Locale$te, $enkidatron$elm_cldr$Cldr$Locale$th, $enkidatron$elm_cldr$Cldr$Locale$tk, $enkidatron$elm_cldr$Cldr$Locale$tr, $enkidatron$elm_cldr$Cldr$Locale$uk, $enkidatron$elm_cldr$Cldr$Locale$root, $enkidatron$elm_cldr$Cldr$Locale$ur, $enkidatron$elm_cldr$Cldr$Locale$uz, $enkidatron$elm_cldr$Cldr$Locale$vi, $enkidatron$elm_cldr$Cldr$Locale$yo, $enkidatron$elm_cldr$Cldr$Locale$yue, $enkidatron$elm_cldr$Cldr$Locale$zh, $enkidatron$elm_cldr$Cldr$Locale$zu]);
var $elm$core$Basics$ge = _Utils_ge;
var $joneshf$elm_tagged$Tagged$tag = $joneshf$elm_tagged$Tagged$Tagged;
var $enkidatron$elm_cldr$Internal$Locale$langSubtagParser = A2(
	$elm$parser$Parser$keeper,
	$elm$parser$Parser$succeed($joneshf$elm_tagged$Tagged$tag),
	A2(
		$elm$parser$Parser$andThen,
		function (words) {
			var len = $elm$core$String$length(words);
			return (((len >= 2) && (len <= 3)) || ((len >= 5) && (len <= 8))) ? $elm$parser$Parser$succeed(words) : $elm$parser$Parser$problem('a language subtag must have 2-3 or 5-8 characters');
		},
		$elm$parser$Parser$getChompedString(
			$elm$parser$Parser$chompWhile($elm$core$Char$isAlpha))));
var $enkidatron$elm_cldr$Internal$Locale$maybeParse = function (innerParser) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2($elm$parser$Parser$map, $elm$core$Maybe$Just, innerParser),
				$elm$parser$Parser$succeed($elm$core$Maybe$Nothing)
			]));
};
var $elm$core$List$all = F2(
	function (isOkay, list) {
		return !A2(
			$elm$core$List$any,
			A2($elm$core$Basics$composeL, $elm$core$Basics$not, isOkay),
			list);
	});
var $elm$parser$Parser$Advanced$backtrackable = function (_v0) {
	var parse = _v0.a;
	return $elm$parser$Parser$Advanced$Parser(
		function (s0) {
			var _v1 = parse(s0);
			if (_v1.$ === 'Bad') {
				var x = _v1.b;
				return A2($elm$parser$Parser$Advanced$Bad, false, x);
			} else {
				var a = _v1.b;
				var s1 = _v1.c;
				return A3($elm$parser$Parser$Advanced$Good, false, a, s1);
			}
		});
};
var $elm$parser$Parser$backtrackable = $elm$parser$Parser$Advanced$backtrackable;
var $enkidatron$elm_cldr$Internal$Locale$sepParser = $elm$parser$Parser$chompIf(
	function (_char) {
		return _Utils_eq(
			_char,
			_Utils_chr('-')) || _Utils_eq(
			_char,
			_Utils_chr('_'));
	});
var $enkidatron$elm_cldr$Internal$Locale$regionSubtagParser = $elm$parser$Parser$backtrackable(
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$succeed($joneshf$elm_tagged$Tagged$tag),
			$enkidatron$elm_cldr$Internal$Locale$sepParser),
		A2(
			$elm$parser$Parser$andThen,
			function (words) {
				var len = $elm$core$String$length(words);
				return ((len === 2) && A2(
					$elm$core$List$all,
					$elm$core$Char$isAlpha,
					$elm$core$String$toList(words))) ? $elm$parser$Parser$succeed(words) : (((len === 3) && A2(
					$elm$core$List$all,
					$elm$core$Char$isDigit,
					$elm$core$String$toList(words))) ? $elm$parser$Parser$succeed(words) : $elm$parser$Parser$problem('a region subtag must have 2-3 characters'));
			},
			$elm$parser$Parser$getChompedString(
				$elm$parser$Parser$chompWhile($elm$core$Char$isAlphaNum)))));
var $enkidatron$elm_cldr$Internal$Locale$scriptSubtagParser = $elm$parser$Parser$backtrackable(
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$ignorer,
			$elm$parser$Parser$succeed($joneshf$elm_tagged$Tagged$tag),
			$enkidatron$elm_cldr$Internal$Locale$sepParser),
		A2(
			$elm$parser$Parser$andThen,
			function (words) {
				return ($elm$core$String$length(words) === 4) ? $elm$parser$Parser$succeed(words) : $elm$parser$Parser$problem('a script subtag must have 4 characters');
			},
			$elm$parser$Parser$getChompedString(
				$elm$parser$Parser$chompWhile($elm$core$Char$isAlpha)))));
var $enkidatron$elm_cldr$Internal$Locale$isValidVariant = function (words) {
	var _v0 = $elm$core$String$toList(words);
	if ((((_v0.b && _v0.b.b) && _v0.b.b.b) && _v0.b.b.b.b) && (!_v0.b.b.b.b.b)) {
		var first = _v0.a;
		var _v1 = _v0.b;
		var second = _v1.a;
		var _v2 = _v1.b;
		var third = _v2.a;
		var _v3 = _v2.b;
		var fourth = _v3.a;
		return $elm$core$Char$isDigit(first) && A2(
			$elm$core$List$all,
			$elm$core$Char$isAlphaNum,
			_List_fromArray(
				[second, third, fourth]));
	} else {
		var length = $elm$core$String$length(words);
		return (length >= 5) && ((length <= 8) && A2(
			$elm$core$List$all,
			$elm$core$Char$isAlphaNum,
			$elm$core$String$toList(words)));
	}
};
var $enkidatron$elm_cldr$Internal$Locale$variantSubtagParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$succeed($joneshf$elm_tagged$Tagged$tag),
		$enkidatron$elm_cldr$Internal$Locale$sepParser),
	A2(
		$elm$parser$Parser$andThen,
		function (words) {
			return $enkidatron$elm_cldr$Internal$Locale$isValidVariant(words) ? $elm$parser$Parser$succeed(words) : $elm$parser$Parser$problem('\'' + (words + '\' is not a valid variantn subtag'));
		},
		$elm$parser$Parser$getChompedString(
			$elm$parser$Parser$chompWhile($elm$core$Char$isAlpha))));
var $enkidatron$elm_cldr$Internal$Locale$langParser = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Locale$Lang),
				$enkidatron$elm_cldr$Internal$Locale$langSubtagParser),
			$enkidatron$elm_cldr$Internal$Locale$maybeParse($enkidatron$elm_cldr$Internal$Locale$scriptSubtagParser)),
		$enkidatron$elm_cldr$Internal$Locale$maybeParse($enkidatron$elm_cldr$Internal$Locale$regionSubtagParser)),
	$enkidatron$elm_cldr$Internal$Locale$maybeParse($enkidatron$elm_cldr$Internal$Locale$variantSubtagParser));
var $elm$parser$Parser$ExpectingKeyword = function (a) {
	return {$: 'ExpectingKeyword', a: a};
};
var $elm$parser$Parser$Advanced$keyword = function (_v0) {
	var kwd = _v0.a;
	var expecting = _v0.b;
	var progress = !$elm$core$String$isEmpty(kwd);
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			var _v1 = A5($elm$parser$Parser$Advanced$isSubString, kwd, s.offset, s.row, s.col, s.src);
			var newOffset = _v1.a;
			var newRow = _v1.b;
			var newCol = _v1.c;
			return (_Utils_eq(newOffset, -1) || (0 <= A3(
				$elm$parser$Parser$Advanced$isSubChar,
				function (c) {
					return $elm$core$Char$isAlphaNum(c) || _Utils_eq(
						c,
						_Utils_chr('_'));
				},
				newOffset,
				s.src))) ? A2(
				$elm$parser$Parser$Advanced$Bad,
				false,
				A2($elm$parser$Parser$Advanced$fromState, s, expecting)) : A3(
				$elm$parser$Parser$Advanced$Good,
				progress,
				_Utils_Tuple0,
				{col: newCol, context: s.context, indent: s.indent, offset: newOffset, row: newRow, src: s.src});
		});
};
var $elm$parser$Parser$keyword = function (kwd) {
	return $elm$parser$Parser$Advanced$keyword(
		A2(
			$elm$parser$Parser$Advanced$Token,
			kwd,
			$elm$parser$Parser$ExpectingKeyword(kwd)));
};
var $enkidatron$elm_cldr$Internal$Locale$rootParser = A2(
	$elm$parser$Parser$ignorer,
	A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$succeed($enkidatron$elm_cldr$Internal$Locale$Root),
		$elm$parser$Parser$keyword('root')),
	$elm$parser$Parser$end);
var $enkidatron$elm_cldr$Internal$Locale$languageIdParser = $elm$parser$Parser$oneOf(
	_List_fromArray(
		[$enkidatron$elm_cldr$Internal$Locale$rootParser, $enkidatron$elm_cldr$Internal$Locale$langParser]));
var $enkidatron$elm_cldr$Internal$Locale$languageIdFromString = function (words) {
	return $elm$core$Result$toMaybe(
		A2($elm$parser$Parser$run, $enkidatron$elm_cldr$Internal$Locale$languageIdParser, words));
};
var $enkidatron$elm_cldr$Internal$Locale$languageIdNoConflicts = F2(
	function (langA, langB) {
		var _v0 = _Utils_Tuple2(langA, langB);
		_v0$2:
		while (true) {
			if (_v0.a.$ === 'Root') {
				if (_v0.b.$ === 'Root') {
					var _v1 = _v0.a;
					var _v2 = _v0.b;
					return true;
				} else {
					break _v0$2;
				}
			} else {
				if (_v0.b.$ === 'Lang') {
					var _v3 = _v0.a;
					var tagA = _v3.a;
					var scriptTagA = _v3.b;
					var regionTagA = _v3.c;
					var variantTagA = _v3.d;
					var _v4 = _v0.b;
					var tagB = _v4.a;
					var scriptTagB = _v4.b;
					var regionTagB = _v4.c;
					var variantTagB = _v4.d;
					return _Utils_eq(tagA, tagB) && (A2(
						$elm$core$Maybe$withDefault,
						true,
						A3($elm$core$Maybe$map2, $elm$core$Basics$eq, scriptTagA, scriptTagB)) && (A2(
						$elm$core$Maybe$withDefault,
						true,
						A3($elm$core$Maybe$map2, $elm$core$Basics$eq, regionTagA, regionTagB)) && A2(
						$elm$core$Maybe$withDefault,
						true,
						A3($elm$core$Maybe$map2, $elm$core$Basics$eq, variantTagA, variantTagB))));
				} else {
					break _v0$2;
				}
			}
		}
		return false;
	});
var $enkidatron$elm_cldr$Internal$Locale$similarityHelper = F3(
	function (points, requested, checked) {
		var _v0 = _Utils_Tuple2(requested, checked);
		if (_v0.a.$ === 'Just') {
			if (_v0.b.$ === 'Just') {
				var req = _v0.a.a;
				var chck = _v0.b.a;
				return _Utils_eq(req, chck) ? (2 * points) : 0;
			} else {
				var _v3 = _v0.b;
				return points;
			}
		} else {
			if (_v0.b.$ === 'Nothing') {
				var _v1 = _v0.a;
				var _v2 = _v0.b;
				return 2 * points;
			} else {
				var _v4 = _v0.a;
				return points;
			}
		}
	});
var $enkidatron$elm_cldr$Internal$Locale$languageIdSimilarity = F2(
	function (requested, checked) {
		var _v0 = _Utils_Tuple2(requested, checked);
		_v0$2:
		while (true) {
			if (_v0.a.$ === 'Root') {
				if (_v0.b.$ === 'Root') {
					var _v1 = _v0.a;
					var _v2 = _v0.b;
					return (-1) * A2($elm$core$Basics$pow, 10, 4);
				} else {
					break _v0$2;
				}
			} else {
				if (_v0.b.$ === 'Lang') {
					var _v3 = _v0.a;
					var langTagA = _v3.a;
					var scriptTagA = _v3.b;
					var regionTagA = _v3.c;
					var variantTagA = _v3.d;
					var _v4 = _v0.b;
					var langTagB = _v4.a;
					var scriptTagB = _v4.b;
					var regionTagB = _v4.c;
					var variantTagB = _v4.d;
					var variantPoints = A3(
						$enkidatron$elm_cldr$Internal$Locale$similarityHelper,
						A2($elm$core$Basics$pow, 10, 1),
						variantTagA,
						variantTagB);
					var scriptPoints = A3(
						$enkidatron$elm_cldr$Internal$Locale$similarityHelper,
						A2($elm$core$Basics$pow, 10, 3),
						scriptTagA,
						scriptTagB);
					var regionPoints = A3(
						$enkidatron$elm_cldr$Internal$Locale$similarityHelper,
						A2($elm$core$Basics$pow, 10, 2),
						regionTagA,
						regionTagB);
					var langPoints = _Utils_eq(langTagA, langTagB) ? A2($elm$core$Basics$pow, 10, 4) : 0;
					return (((langPoints + scriptPoints) + regionPoints) + variantPoints) * (-1);
				} else {
					break _v0$2;
				}
			}
		}
		return 0;
	});
var $enkidatron$elm_cldr$Internal$Locale$unwrapLocale = function (_v0) {
	var internal = _v0.a;
	return internal;
};
var $enkidatron$elm_cldr$Internal$Locale$matchNearestLocale = F2(
	function (locales, langId) {
		var normalized = $enkidatron$elm_cldr$Internal$Locale$normalize(langId);
		return A2(
			$elm$core$Maybe$map,
			$enkidatron$elm_cldr$Internal$Locale$Locale,
			$elm$core$List$head(
				A2(
					$elm$core$List$sortBy,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.languageId;
						},
						$enkidatron$elm_cldr$Internal$Locale$languageIdSimilarity(normalized)),
					A2(
						$elm$core$List$filter,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.languageId;
							},
							$enkidatron$elm_cldr$Internal$Locale$languageIdNoConflicts(normalized)),
						A2($elm$core$List$map, $enkidatron$elm_cldr$Internal$Locale$unwrapLocale, locales)))));
	});
var $enkidatron$elm_cldr$Cldr$Locale$fromString = F2(
	function (candidateLocales, localeString) {
		return A2(
			$elm$core$Maybe$andThen,
			$enkidatron$elm_cldr$Internal$Locale$matchNearestLocale(candidateLocales),
			$enkidatron$elm_cldr$Internal$Locale$languageIdFromString(localeString));
	});
var $author$project$Timeline$setLanguage = F2(
	function (str, tl) {
		return _Utils_update(
			tl,
			{
				locale: A2(
					$elm$core$Maybe$withDefault,
					$enkidatron$elm_cldr$Cldr$Locale$en,
					A2($enkidatron$elm_cldr$Cldr$Locale$fromString, $enkidatron$elm_cldr$Cldr$Locale$basicLocales, str))
			});
	});
var $author$project$Widget$WindowResize = function (a) {
	return {$: 'WindowResize', a: a};
};
var $author$project$Widget$sizeToMsg = F2(
	function (w, h) {
		return $author$project$Widget$WindowResize(
			{height: h, width: w});
	});
var $author$project$Widget$startDateFromFlags = function (flags) {
	var result = A2(
		$elm$json$Json$Decode$decodeValue,
		A2($elm$json$Json$Decode$field, 'startDate', $elm$json$Json$Decode$int),
		flags);
	if (result.$ === 'Ok') {
		var _int = result.a;
		return $elm$time$Time$millisToPosix(_int);
	} else {
		return $elm$time$Time$millisToPosix(1735686000000);
	}
};
var $author$project$Widget$totalsHorizSize = 25;
var $elm$json$Json$Decode$keyValuePairs = _Json_decodeKeyValuePairs;
var $elm$json$Json$Decode$dict = function (decoder) {
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$Dict$fromList,
		$elm$json$Json$Decode$keyValuePairs(decoder));
};
var $elm$json$Json$Decode$lazy = function (thunk) {
	return A2(
		$elm$json$Json$Decode$andThen,
		thunk,
		$elm$json$Json$Decode$succeed(_Utils_Tuple0));
};
var $elm$json$Json$Decode$oneOf = _Json_oneOf;
function $ChristophP$elm_i18next$I18Next$cyclic$treeDecoder() {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $ChristophP$elm_i18next$I18Next$Leaf, $elm$json$Json$Decode$string),
				$elm$json$Json$Decode$lazy(
				function (_v0) {
					return A2(
						$elm$json$Json$Decode$map,
						$ChristophP$elm_i18next$I18Next$Branch,
						$elm$json$Json$Decode$dict(
							$ChristophP$elm_i18next$I18Next$cyclic$treeDecoder()));
				})
			]));
}
try {
	var $ChristophP$elm_i18next$I18Next$treeDecoder = $ChristophP$elm_i18next$I18Next$cyclic$treeDecoder();
	$ChristophP$elm_i18next$I18Next$cyclic$treeDecoder = function () {
		return $ChristophP$elm_i18next$I18Next$treeDecoder;
	};
} catch ($) {
	throw 'Some top-level definitions from `I18Next` are causing infinite recursion:\n\n  ┌─────┐\n  │    treeDecoder\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $ChristophP$elm_i18next$I18Next$translationsDecoder = A2(
	$elm$json$Json$Decode$map,
	A2($elm$core$Basics$composeR, $ChristophP$elm_i18next$I18Next$flattenTranslations, $ChristophP$elm_i18next$I18Next$Translations),
	$elm$json$Json$Decode$dict($ChristophP$elm_i18next$I18Next$treeDecoder));
var $author$project$Widget$init = function (flags) {
	var lang = $author$project$Widget$languageFromFlags(flags);
	var loadManCmd = $elm$http$Http$get(
		{
			expect: $elm$http$Http$expectString($author$project$Widget$GotHelp),
			url: '../public/locales/' + (A3($elm$core$String$slice, 0, 2, lang) + '/help.md')
		});
	var loadTransCmd = $elm$http$Http$get(
		{
			expect: A2($elm$http$Http$expectJson, $author$project$Widget$GotTranslations, $ChristophP$elm_i18next$I18Next$translationsDecoder),
			url: '../public/locales/' + (A3($elm$core$String$slice, 0, 2, lang) + '/translations.json')
		});
	var du = $author$project$Widget$durationUnitFromFlags(flags);
	return _Utils_Tuple2(
		{
			bounce: $grotsev$elm_debouncer$Bounce$init,
			box: {height: 500, width: 1000},
			colorScheme: $author$project$Widget$Light,
			contentFields: _List_Nil,
			currency: $author$project$Widget$currencyFromFlags(flags),
			durationUnit: du,
			editableFields: _List_Nil,
			editableStates: $elm$core$Dict$empty,
			error: _List_Nil,
			errorId: 0,
			fields: $elm$core$Dict$empty,
			focus: '',
			groupId: '',
			groupsFields: _List_Nil,
			groupsStates: $elm$core$Dict$empty,
			hasCreated: false,
			help: '',
			language: lang,
			options: $author$project$Widget$Options(
				$elm$time$Time$millisToPosix(0))(0)(0)(38)($author$project$Timeline$Models$Horizontal)(false)(du)(false)(false)($elm$core$Maybe$Nothing),
			records: $elm$core$Dict$empty,
			selectStates: $elm$core$Dict$empty,
			showInspector: false,
			showModal: $author$project$Widget$None,
			subgroupId: $elm$core$Maybe$Nothing,
			timelineState: A2(
				$author$project$Timeline$setLanguage,
				lang,
				A2(
					$author$project$Timeline$canSortGroups,
					false,
					A2(
						$author$project$Timeline$canEditGroups,
						false,
						A2(
							$author$project$Timeline$init,
							_List_Nil,
							$author$project$Widget$startDateFromFlags(flags))))),
			totalFields: _List_Nil,
			totalState: A2(
				$author$project$Timeline$displayAxis,
				false,
				A2(
					$author$project$Timeline$changeLineSize,
					$author$project$Widget$totalsHorizSize,
					A2(
						$author$project$Timeline$setLanguage,
						lang,
						A2(
							$author$project$Timeline$canSortGroups,
							false,
							A2(
								$author$project$Timeline$canEditGroups,
								false,
								A2(
									$author$project$Timeline$init,
									_List_Nil,
									$author$project$Widget$startDateFromFlags(flags))))))),
			translations: _List_fromArray(
				[$author$project$Widget$Language$defaultLanguage])
		},
		$elm$core$Platform$Cmd$batch(
			_List_fromArray(
				[
					A2(
					$elm$core$Task$perform,
					function (size) {
						return A2(
							$author$project$Widget$sizeToMsg,
							$elm$core$Basics$round(size.viewport.width),
							$elm$core$Basics$round(size.viewport.height));
					},
					$elm$browser$Browser$Dom$getViewport),
					loadManCmd,
					loadTransCmd
				])));
};
var $elm$core$Platform$Sub$map = _Platform_map;
var $elm$browser$Browser$Events$onKeyDown = A2($elm$browser$Browser$Events$on, $elm$browser$Browser$Events$Document, 'keydown');
var $elm$browser$Browser$Events$Window = {$: 'Window'};
var $elm$browser$Browser$Events$onResize = function (func) {
	return A3(
		$elm$browser$Browser$Events$on,
		$elm$browser$Browser$Events$Window,
		'resize',
		A2(
			$elm$json$Json$Decode$field,
			'target',
			A3(
				$elm$json$Json$Decode$map2,
				func,
				A2($elm$json$Json$Decode$field, 'innerWidth', $elm$json$Json$Decode$int),
				A2($elm$json$Json$Decode$field, 'innerHeight', $elm$json$Json$Decode$int))));
};
var $author$project$Widget$setError = _Platform_incomingPort('setError', $elm$json$Json$Decode$string);
var $elm$json$Json$Decode$value = _Json_decodeValue;
var $author$project$Widget$setOptions = _Platform_incomingPort('setOptions', $elm$json$Json$Decode$value);
var $author$project$Widget$setRecords = _Platform_incomingPort('setRecords', $elm$json$Json$Decode$value);
var $author$project$Widget$setSelection = _Platform_incomingPort('setSelection', $elm$json$Json$Decode$value);
var $author$project$Timeline$NoOp = {$: 'NoOp'};
var $author$project$Timeline$StopInteraction = {$: 'StopInteraction'};
var $author$project$Timeline$UpdateTime = function (a) {
	return {$: 'UpdateTime', a: a};
};
var $elm$time$Time$Every = F2(
	function (a, b) {
		return {$: 'Every', a: a, b: b};
	});
var $elm$time$Time$State = F2(
	function (taggers, processes) {
		return {processes: processes, taggers: taggers};
	});
var $elm$time$Time$init = $elm$core$Task$succeed(
	A2($elm$time$Time$State, $elm$core$Dict$empty, $elm$core$Dict$empty));
var $elm$time$Time$addMySub = F2(
	function (_v0, state) {
		var interval = _v0.a;
		var tagger = _v0.b;
		var _v1 = A2($elm$core$Dict$get, interval, state);
		if (_v1.$ === 'Nothing') {
			return A3(
				$elm$core$Dict$insert,
				interval,
				_List_fromArray(
					[tagger]),
				state);
		} else {
			var taggers = _v1.a;
			return A3(
				$elm$core$Dict$insert,
				interval,
				A2($elm$core$List$cons, tagger, taggers),
				state);
		}
	});
var $elm$time$Time$Name = function (a) {
	return {$: 'Name', a: a};
};
var $elm$time$Time$Offset = function (a) {
	return {$: 'Offset', a: a};
};
var $elm$time$Time$setInterval = _Time_setInterval;
var $elm$time$Time$spawnHelp = F3(
	function (router, intervals, processes) {
		if (!intervals.b) {
			return $elm$core$Task$succeed(processes);
		} else {
			var interval = intervals.a;
			var rest = intervals.b;
			var spawnTimer = $elm$core$Process$spawn(
				A2(
					$elm$time$Time$setInterval,
					interval,
					A2($elm$core$Platform$sendToSelf, router, interval)));
			var spawnRest = function (id) {
				return A3(
					$elm$time$Time$spawnHelp,
					router,
					rest,
					A3($elm$core$Dict$insert, interval, id, processes));
			};
			return A2($elm$core$Task$andThen, spawnRest, spawnTimer);
		}
	});
var $elm$time$Time$onEffects = F3(
	function (router, subs, _v0) {
		var processes = _v0.processes;
		var rightStep = F3(
			function (_v6, id, _v7) {
				var spawns = _v7.a;
				var existing = _v7.b;
				var kills = _v7.c;
				return _Utils_Tuple3(
					spawns,
					existing,
					A2(
						$elm$core$Task$andThen,
						function (_v5) {
							return kills;
						},
						$elm$core$Process$kill(id)));
			});
		var newTaggers = A3($elm$core$List$foldl, $elm$time$Time$addMySub, $elm$core$Dict$empty, subs);
		var leftStep = F3(
			function (interval, taggers, _v4) {
				var spawns = _v4.a;
				var existing = _v4.b;
				var kills = _v4.c;
				return _Utils_Tuple3(
					A2($elm$core$List$cons, interval, spawns),
					existing,
					kills);
			});
		var bothStep = F4(
			function (interval, taggers, id, _v3) {
				var spawns = _v3.a;
				var existing = _v3.b;
				var kills = _v3.c;
				return _Utils_Tuple3(
					spawns,
					A3($elm$core$Dict$insert, interval, id, existing),
					kills);
			});
		var _v1 = A6(
			$elm$core$Dict$merge,
			leftStep,
			bothStep,
			rightStep,
			newTaggers,
			processes,
			_Utils_Tuple3(
				_List_Nil,
				$elm$core$Dict$empty,
				$elm$core$Task$succeed(_Utils_Tuple0)));
		var spawnList = _v1.a;
		var existingDict = _v1.b;
		var killTask = _v1.c;
		return A2(
			$elm$core$Task$andThen,
			function (newProcesses) {
				return $elm$core$Task$succeed(
					A2($elm$time$Time$State, newTaggers, newProcesses));
			},
			A2(
				$elm$core$Task$andThen,
				function (_v2) {
					return A3($elm$time$Time$spawnHelp, router, spawnList, existingDict);
				},
				killTask));
	});
var $elm$time$Time$now = _Time_now($elm$time$Time$millisToPosix);
var $elm$time$Time$onSelfMsg = F3(
	function (router, interval, state) {
		var _v0 = A2($elm$core$Dict$get, interval, state.taggers);
		if (_v0.$ === 'Nothing') {
			return $elm$core$Task$succeed(state);
		} else {
			var taggers = _v0.a;
			var tellTaggers = function (time) {
				return $elm$core$Task$sequence(
					A2(
						$elm$core$List$map,
						function (tagger) {
							return A2(
								$elm$core$Platform$sendToApp,
								router,
								tagger(time));
						},
						taggers));
			};
			return A2(
				$elm$core$Task$andThen,
				function (_v1) {
					return $elm$core$Task$succeed(state);
				},
				A2($elm$core$Task$andThen, tellTaggers, $elm$time$Time$now));
		}
	});
var $elm$time$Time$subMap = F2(
	function (f, _v0) {
		var interval = _v0.a;
		var tagger = _v0.b;
		return A2(
			$elm$time$Time$Every,
			interval,
			A2($elm$core$Basics$composeL, f, tagger));
	});
_Platform_effectManagers['Time'] = _Platform_createManager($elm$time$Time$init, $elm$time$Time$onEffects, $elm$time$Time$onSelfMsg, 0, $elm$time$Time$subMap);
var $elm$time$Time$subscription = _Platform_leaf('Time');
var $elm$time$Time$every = F2(
	function (interval, tagger) {
		return $elm$time$Time$subscription(
			A2($elm$time$Time$Every, interval, tagger));
	});
var $elm$browser$Browser$AnimationManager$Time = function (a) {
	return {$: 'Time', a: a};
};
var $elm$browser$Browser$AnimationManager$State = F3(
	function (subs, request, oldTime) {
		return {oldTime: oldTime, request: request, subs: subs};
	});
var $elm$browser$Browser$AnimationManager$init = $elm$core$Task$succeed(
	A3($elm$browser$Browser$AnimationManager$State, _List_Nil, $elm$core$Maybe$Nothing, 0));
var $elm$browser$Browser$AnimationManager$now = _Browser_now(_Utils_Tuple0);
var $elm$browser$Browser$AnimationManager$rAF = _Browser_rAF(_Utils_Tuple0);
var $elm$browser$Browser$AnimationManager$onEffects = F3(
	function (router, subs, _v0) {
		var request = _v0.request;
		var oldTime = _v0.oldTime;
		var _v1 = _Utils_Tuple2(request, subs);
		if (_v1.a.$ === 'Nothing') {
			if (!_v1.b.b) {
				var _v2 = _v1.a;
				return $elm$browser$Browser$AnimationManager$init;
			} else {
				var _v4 = _v1.a;
				return A2(
					$elm$core$Task$andThen,
					function (pid) {
						return A2(
							$elm$core$Task$andThen,
							function (time) {
								return $elm$core$Task$succeed(
									A3(
										$elm$browser$Browser$AnimationManager$State,
										subs,
										$elm$core$Maybe$Just(pid),
										time));
							},
							$elm$browser$Browser$AnimationManager$now);
					},
					$elm$core$Process$spawn(
						A2(
							$elm$core$Task$andThen,
							$elm$core$Platform$sendToSelf(router),
							$elm$browser$Browser$AnimationManager$rAF)));
			}
		} else {
			if (!_v1.b.b) {
				var pid = _v1.a.a;
				return A2(
					$elm$core$Task$andThen,
					function (_v3) {
						return $elm$browser$Browser$AnimationManager$init;
					},
					$elm$core$Process$kill(pid));
			} else {
				return $elm$core$Task$succeed(
					A3($elm$browser$Browser$AnimationManager$State, subs, request, oldTime));
			}
		}
	});
var $elm$browser$Browser$AnimationManager$onSelfMsg = F3(
	function (router, newTime, _v0) {
		var subs = _v0.subs;
		var oldTime = _v0.oldTime;
		var send = function (sub) {
			if (sub.$ === 'Time') {
				var tagger = sub.a;
				return A2(
					$elm$core$Platform$sendToApp,
					router,
					tagger(
						$elm$time$Time$millisToPosix(newTime)));
			} else {
				var tagger = sub.a;
				return A2(
					$elm$core$Platform$sendToApp,
					router,
					tagger(newTime - oldTime));
			}
		};
		return A2(
			$elm$core$Task$andThen,
			function (pid) {
				return A2(
					$elm$core$Task$andThen,
					function (_v1) {
						return $elm$core$Task$succeed(
							A3(
								$elm$browser$Browser$AnimationManager$State,
								subs,
								$elm$core$Maybe$Just(pid),
								newTime));
					},
					$elm$core$Task$sequence(
						A2($elm$core$List$map, send, subs)));
			},
			$elm$core$Process$spawn(
				A2(
					$elm$core$Task$andThen,
					$elm$core$Platform$sendToSelf(router),
					$elm$browser$Browser$AnimationManager$rAF)));
	});
var $elm$browser$Browser$AnimationManager$Delta = function (a) {
	return {$: 'Delta', a: a};
};
var $elm$browser$Browser$AnimationManager$subMap = F2(
	function (func, sub) {
		if (sub.$ === 'Time') {
			var tagger = sub.a;
			return $elm$browser$Browser$AnimationManager$Time(
				A2($elm$core$Basics$composeL, func, tagger));
		} else {
			var tagger = sub.a;
			return $elm$browser$Browser$AnimationManager$Delta(
				A2($elm$core$Basics$composeL, func, tagger));
		}
	});
_Platform_effectManagers['Browser.AnimationManager'] = _Platform_createManager($elm$browser$Browser$AnimationManager$init, $elm$browser$Browser$AnimationManager$onEffects, $elm$browser$Browser$AnimationManager$onSelfMsg, 0, $elm$browser$Browser$AnimationManager$subMap);
var $elm$browser$Browser$AnimationManager$subscription = _Platform_leaf('Browser.AnimationManager');
var $elm$browser$Browser$AnimationManager$onAnimationFrame = function (tagger) {
	return $elm$browser$Browser$AnimationManager$subscription(
		$elm$browser$Browser$AnimationManager$Time(tagger));
};
var $elm$browser$Browser$Events$onAnimationFrame = $elm$browser$Browser$AnimationManager$onAnimationFrame;
var $author$project$Timeline$subscriptions = function (box) {
	return $elm$core$Platform$Sub$batch(
		_List_fromArray(
			[
				box.canSortGroups ? $author$project$Timeline$system(box.direction).subscriptions(box.dnd) : $elm$core$Platform$Sub$none,
				(!box.standby) ? $elm$browser$Browser$Events$onMouseUp(
				$elm$json$Json$Decode$succeed($author$project$Timeline$StopInteraction)) : $elm$core$Platform$Sub$none,
				(box.zoomChange > 0) ? $elm$browser$Browser$Events$onAnimationFrame(
				function (_v0) {
					return $author$project$Timeline$NoOp;
				}) : $elm$core$Platform$Sub$none,
				(!$elm$time$Time$posixToMillis(box.currentPosix)) ? A2($elm$time$Time$every, 200, $author$project$Timeline$UpdateTime) : A2($elm$time$Time$every, 20000, $author$project$Timeline$UpdateTime)
			]));
};
var $author$project$Widget$Error = F2(
	function (a, b) {
		return {$: 'Error', a: a, b: b};
	});
var $author$project$Widget$NoOp = {$: 'NoOp'};
var $author$project$Widget$NoValue = {$: 'NoValue'};
var $author$project$Widget$OptionsBounceMsg = {$: 'OptionsBounceMsg'};
var $author$project$Widget$SelectizeMsg = F4(
	function (a, b, c, d) {
		return {$: 'SelectizeMsg', a: a, b: b, c: c, d: d};
	});
var $author$project$Widget$Val = function (a) {
	return {$: 'Val', a: a};
};
var $author$project$Widget$addError = F2(
	function (err, model) {
		return _Utils_eq(
			A2(
				$elm_community$list_extra$List$Extra$find,
				function (_v0) {
					var e = _v0.b;
					return _Utils_eq(e, err);
				},
				model.error),
			$elm$core$Maybe$Nothing) ? _Utils_update(
			model,
			{
				error: A2(
					$elm$core$List$cons,
					_Utils_Tuple2(model.errorId, err),
					A2($elm$core$List$take, 4, model.error)),
				errorId: model.errorId + 1
			}) : model;
	});
var $elm_community$list_extra$List$Extra$groupWhile = F2(
	function (isSameGroup, items) {
		return A3(
			$elm$core$List$foldr,
			F2(
				function (x, acc) {
					if (!acc.b) {
						return _List_fromArray(
							[
								_Utils_Tuple2(x, _List_Nil)
							]);
					} else {
						var _v1 = acc.a;
						var y = _v1.a;
						var restOfGroup = _v1.b;
						var groups = acc.b;
						return A2(isSameGroup, x, y) ? A2(
							$elm$core$List$cons,
							_Utils_Tuple2(
								x,
								A2($elm$core$List$cons, y, restOfGroup)),
							groups) : A2(
							$elm$core$List$cons,
							_Utils_Tuple2(x, _List_Nil),
							acc);
					}
				}),
			_List_Nil,
			items);
	});
var $author$project$Widget$computeTotal = F3(
	function (toValue, toString, sections) {
		var evol = A2(
			$elm$core$List$filter,
			function (_v12) {
				var v = _v12.b;
				return !(!v);
			},
			A2(
				$elm$core$List$map,
				function (_v9) {
					var x = _v9.a;
					var xs = _v9.b;
					return A3(
						$elm$core$List$foldl,
						F2(
							function (_v10, _v11) {
								var c1 = _v10.a;
								var v1 = _v10.b;
								var date = _v10.c;
								var c2 = _v11.a;
								var v2 = _v11.b;
								return _Utils_Tuple3(c1 + c2, v1 + v2, date);
							}),
						x,
						xs);
				},
				A2(
					$elm_community$list_extra$List$Extra$groupWhile,
					F2(
						function (_v7, _v8) {
							var a = _v7.c;
							var b = _v8.c;
							return _Utils_eq(a, b);
						}),
					A2(
						$elm$core$List$sortBy,
						function (_v6) {
							var date = _v6.c;
							return date;
						},
						A3(
							$elm$core$List$foldl,
							F2(
								function (s, acc) {
									return A2(
										$elm$core$List$cons,
										_Utils_Tuple3(
											1,
											toValue(s.id),
											$elm$time$Time$posixToMillis(s.start)),
										A2(
											$elm$core$List$cons,
											_Utils_Tuple3(
												-1,
												-toValue(s.id),
												$elm$time$Time$posixToMillis(s.end)),
											acc));
								}),
							_List_Nil,
							sections)))));
		if (evol.b) {
			var _v1 = evol.a;
			var xcount = _v1.a;
			var xval = _v1.b;
			var xdate = _v1.c;
			var xs = evol.b;
			var _v2 = A3(
				$elm$core$List$foldl,
				F2(
					function (_v3, _v4) {
						var countN = _v3.a;
						var value = _v3.b;
						var next = _v3.c;
						var last = _v4.a;
						var ls = _v4.b;
						var _v5 = _v4.c;
						var qtt = _v5.a;
						var total = _v5.b;
						var id = _v5.c;
						return _Utils_Tuple3(
							next,
							(qtt > 0) ? A2(
								$elm$core$List$cons,
								{
									color: '#FFF',
									end: $elm$time$Time$millisToPosix(next),
									hasComment: false,
									id: '_usage' + $elm$core$String$fromInt(id),
									isGlobal: false,
									isLocked: false,
									labels: _List_fromArray(
										[
											toString(total)
										]),
									start: $elm$time$Time$millisToPosix(last)
								},
								ls) : ls,
							_Utils_Tuple3(qtt + countN, total + value, id + 1));
					}),
				_Utils_Tuple3(
					xdate,
					_List_Nil,
					_Utils_Tuple3(xcount, xval, 0)),
				xs);
			var list = _v2.b;
			return $elm$core$List$reverse(list);
		} else {
			return _List_Nil;
		}
	});
var $ChristophP$elm_i18next$I18Next$tf = F2(
	function (translationsList, key) {
		if (translationsList.b) {
			var translations = translationsList.a.a;
			var rest = translationsList.b;
			return A2(
				$elm$core$Maybe$withDefault,
				A2($ChristophP$elm_i18next$I18Next$tf, rest, key),
				A2($elm$core$Dict$get, key, translations));
		} else {
			return key;
		}
	});
var $author$project$Widget$Translations$count = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'count');
};
var $author$project$Field$Parens = {$: 'Parens'};
var $author$project$Field$Percent = {$: 'Percent'};
var $author$project$Field$Standard = {$: 'Standard'};
var $cuducos$elm_format_number$FormatNumber$Parser$FormattedNumber = F5(
	function (original, integers, decimals, prefix, suffix) {
		return {decimals: decimals, integers: integers, original: original, prefix: prefix, suffix: suffix};
	});
var $cuducos$elm_format_number$FormatNumber$Parser$Negative = {$: 'Negative'};
var $cuducos$elm_format_number$FormatNumber$Parser$Positive = {$: 'Positive'};
var $cuducos$elm_format_number$FormatNumber$Parser$Zero = {$: 'Zero'};
var $elm$core$String$concat = function (strings) {
	return A2($elm$core$String$join, '', strings);
};
var $elm$core$List$singleton = function (value) {
	return _List_fromArray(
		[value]);
};
var $cuducos$elm_format_number$FormatNumber$Parser$classify = function (formatted) {
	var onlyZeros = A2(
		$elm$core$String$all,
		function (_char) {
			return _Utils_eq(
				_char,
				_Utils_chr('0'));
		},
		$elm$core$String$concat(
			A2(
				$elm$core$List$append,
				formatted.integers,
				$elm$core$List$singleton(formatted.decimals))));
	return onlyZeros ? $cuducos$elm_format_number$FormatNumber$Parser$Zero : ((formatted.original < 0) ? $cuducos$elm_format_number$FormatNumber$Parser$Negative : $cuducos$elm_format_number$FormatNumber$Parser$Positive);
};
var $elm$core$String$filter = _String_filter;
var $elm$core$Basics$abs = function (n) {
	return (n < 0) ? (-n) : n;
};
var $cuducos$elm_format_number$FormatNumber$Parser$addZerosToFit = F2(
	function (desiredLength, value) {
		var length = $elm$core$String$length(value);
		var missing = (_Utils_cmp(length, desiredLength) < 0) ? $elm$core$Basics$abs(desiredLength - length) : 0;
		return _Utils_ap(
			value,
			A2($elm$core$String$repeat, missing, '0'));
	});
var $elm$core$String$dropRight = F2(
	function (n, string) {
		return (n < 1) ? string : A3($elm$core$String$slice, 0, -n, string);
	});
var $elm$core$String$right = F2(
	function (n, string) {
		return (n < 1) ? '' : A3(
			$elm$core$String$slice,
			-n,
			$elm$core$String$length(string),
			string);
	});
var $cuducos$elm_format_number$FormatNumber$Parser$removeZeros = function (decimals) {
	return (A2($elm$core$String$right, 1, decimals) !== '0') ? decimals : $cuducos$elm_format_number$FormatNumber$Parser$removeZeros(
		A2($elm$core$String$dropRight, 1, decimals));
};
var $cuducos$elm_format_number$FormatNumber$Parser$getDecimals = F2(
	function (locale, digits) {
		var _v0 = locale.decimals;
		switch (_v0.$) {
			case 'Max':
				return $cuducos$elm_format_number$FormatNumber$Parser$removeZeros(digits);
			case 'Exact':
				return digits;
			default:
				var min = _v0.a;
				return A2($cuducos$elm_format_number$FormatNumber$Parser$addZerosToFit, min, digits);
		}
	});
var $elm$core$String$fromFloat = _String_fromNumber;
var $myrho$elm_round$Round$addSign = F2(
	function (signed, str) {
		var isNotZero = A2(
			$elm$core$List$any,
			function (c) {
				return (!_Utils_eq(
					c,
					_Utils_chr('0'))) && (!_Utils_eq(
					c,
					_Utils_chr('.')));
			},
			$elm$core$String$toList(str));
		return _Utils_ap(
			(signed && isNotZero) ? '-' : '',
			str);
	});
var $elm$core$Char$fromCode = _Char_fromCode;
var $myrho$elm_round$Round$increaseNum = function (_v0) {
	var head = _v0.a;
	var tail = _v0.b;
	if (_Utils_eq(
		head,
		_Utils_chr('9'))) {
		var _v1 = $elm$core$String$uncons(tail);
		if (_v1.$ === 'Nothing') {
			return '01';
		} else {
			var headtail = _v1.a;
			return A2(
				$elm$core$String$cons,
				_Utils_chr('0'),
				$myrho$elm_round$Round$increaseNum(headtail));
		}
	} else {
		var c = $elm$core$Char$toCode(head);
		return ((c >= 48) && (c < 57)) ? A2(
			$elm$core$String$cons,
			$elm$core$Char$fromCode(c + 1),
			tail) : '0';
	}
};
var $elm$core$Basics$isInfinite = _Basics_isInfinite;
var $elm$core$Basics$isNaN = _Basics_isNaN;
var $elm$core$String$padRight = F3(
	function (n, _char, string) {
		return _Utils_ap(
			string,
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)));
	});
var $elm$core$String$reverse = _String_reverse;
var $myrho$elm_round$Round$splitComma = function (str) {
	var _v0 = A2($elm$core$String$split, '.', str);
	if (_v0.b) {
		if (_v0.b.b) {
			var before = _v0.a;
			var _v1 = _v0.b;
			var after = _v1.a;
			return _Utils_Tuple2(before, after);
		} else {
			var before = _v0.a;
			return _Utils_Tuple2(before, '0');
		}
	} else {
		return _Utils_Tuple2('0', '0');
	}
};
var $elm$core$Tuple$mapFirst = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			func(x),
			y);
	});
var $myrho$elm_round$Round$toDecimal = function (fl) {
	var _v0 = A2(
		$elm$core$String$split,
		'e',
		$elm$core$String$fromFloat(
			$elm$core$Basics$abs(fl)));
	if (_v0.b) {
		if (_v0.b.b) {
			var num = _v0.a;
			var _v1 = _v0.b;
			var exp = _v1.a;
			var e = A2(
				$elm$core$Maybe$withDefault,
				0,
				$elm$core$String$toInt(
					A2($elm$core$String$startsWith, '+', exp) ? A2($elm$core$String$dropLeft, 1, exp) : exp));
			var _v2 = $myrho$elm_round$Round$splitComma(num);
			var before = _v2.a;
			var after = _v2.b;
			var total = _Utils_ap(before, after);
			var zeroed = (e < 0) ? A2(
				$elm$core$Maybe$withDefault,
				'0',
				A2(
					$elm$core$Maybe$map,
					function (_v3) {
						var a = _v3.a;
						var b = _v3.b;
						return a + ('.' + b);
					},
					A2(
						$elm$core$Maybe$map,
						$elm$core$Tuple$mapFirst($elm$core$String$fromChar),
						$elm$core$String$uncons(
							_Utils_ap(
								A2(
									$elm$core$String$repeat,
									$elm$core$Basics$abs(e),
									'0'),
								total))))) : A3(
				$elm$core$String$padRight,
				e + 1,
				_Utils_chr('0'),
				total);
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				zeroed);
		} else {
			var num = _v0.a;
			return _Utils_ap(
				(fl < 0) ? '-' : '',
				num);
		}
	} else {
		return '';
	}
};
var $myrho$elm_round$Round$roundFun = F3(
	function (functor, s, fl) {
		if ($elm$core$Basics$isInfinite(fl) || $elm$core$Basics$isNaN(fl)) {
			return $elm$core$String$fromFloat(fl);
		} else {
			var signed = fl < 0;
			var _v0 = $myrho$elm_round$Round$splitComma(
				$myrho$elm_round$Round$toDecimal(
					$elm$core$Basics$abs(fl)));
			var before = _v0.a;
			var after = _v0.b;
			var r = $elm$core$String$length(before) + s;
			var normalized = _Utils_ap(
				A2($elm$core$String$repeat, (-r) + 1, '0'),
				A3(
					$elm$core$String$padRight,
					r,
					_Utils_chr('0'),
					_Utils_ap(before, after)));
			var totalLen = $elm$core$String$length(normalized);
			var roundDigitIndex = A2($elm$core$Basics$max, 1, r);
			var increase = A2(
				functor,
				signed,
				A3($elm$core$String$slice, roundDigitIndex, totalLen, normalized));
			var remains = A3($elm$core$String$slice, 0, roundDigitIndex, normalized);
			var num = increase ? $elm$core$String$reverse(
				A2(
					$elm$core$Maybe$withDefault,
					'1',
					A2(
						$elm$core$Maybe$map,
						$myrho$elm_round$Round$increaseNum,
						$elm$core$String$uncons(
							$elm$core$String$reverse(remains))))) : remains;
			var numLen = $elm$core$String$length(num);
			var numZeroed = (num === '0') ? num : ((s <= 0) ? _Utils_ap(
				num,
				A2(
					$elm$core$String$repeat,
					$elm$core$Basics$abs(s),
					'0')) : ((_Utils_cmp(
				s,
				$elm$core$String$length(after)) < 0) ? (A3($elm$core$String$slice, 0, numLen - s, num) + ('.' + A3($elm$core$String$slice, numLen - s, numLen, num))) : _Utils_ap(
				before + '.',
				A3(
					$elm$core$String$padRight,
					s,
					_Utils_chr('0'),
					after))));
			return A2($myrho$elm_round$Round$addSign, signed, numZeroed);
		}
	});
var $myrho$elm_round$Round$round = $myrho$elm_round$Round$roundFun(
	F2(
		function (signed, str) {
			var _v0 = $elm$core$String$uncons(str);
			if (_v0.$ === 'Nothing') {
				return false;
			} else {
				if ('5' === _v0.a.a.valueOf()) {
					if (_v0.a.b === '') {
						var _v1 = _v0.a;
						return !signed;
					} else {
						var _v2 = _v0.a;
						return true;
					}
				} else {
					var _v3 = _v0.a;
					var _int = _v3.a;
					return function (i) {
						return ((i > 53) && signed) || ((i >= 53) && (!signed));
					}(
						$elm$core$Char$toCode(_int));
				}
			}
		}));
var $cuducos$elm_format_number$FormatNumber$Parser$splitInParts = F2(
	function (locale, value) {
		var toString = function () {
			var _v1 = locale.decimals;
			switch (_v1.$) {
				case 'Max':
					var max = _v1.a;
					return $myrho$elm_round$Round$round(max);
				case 'Min':
					return $elm$core$String$fromFloat;
				default:
					var exact = _v1.a;
					return $myrho$elm_round$Round$round(exact);
			}
		}();
		var asList = A2(
			$elm$core$String$split,
			'.',
			toString(value));
		var decimals = function () {
			var _v0 = $elm$core$List$tail(asList);
			if (_v0.$ === 'Just') {
				var values = _v0.a;
				return A2(
					$elm$core$Maybe$withDefault,
					'',
					$elm$core$List$head(values));
			} else {
				return '';
			}
		}();
		var integers = A2(
			$elm$core$Maybe$withDefault,
			'',
			$elm$core$List$head(asList));
		return _Utils_Tuple2(integers, decimals);
	});
var $cuducos$elm_format_number$FormatNumber$Parser$splitByIndian = function (integers) {
	var thousand = ($elm$core$String$length(integers) > 3) ? A2($elm$core$String$right, 3, integers) : integers;
	var reversedSplitHundreds = function (value) {
		return ($elm$core$String$length(value) > 2) ? A2(
			$elm$core$List$cons,
			A2($elm$core$String$right, 2, value),
			reversedSplitHundreds(
				A2($elm$core$String$dropRight, 2, value))) : ((!$elm$core$String$length(value)) ? _List_Nil : _List_fromArray(
			[value]));
	};
	return $elm$core$List$reverse(
		A2(
			$elm$core$List$cons,
			thousand,
			reversedSplitHundreds(
				A2($elm$core$String$dropRight, 3, integers))));
};
var $cuducos$elm_format_number$FormatNumber$Parser$splitByWestern = function (integers) {
	var reversedSplitThousands = function (value) {
		return ($elm$core$String$length(value) > 3) ? A2(
			$elm$core$List$cons,
			A2($elm$core$String$right, 3, value),
			reversedSplitThousands(
				A2($elm$core$String$dropRight, 3, value))) : _List_fromArray(
			[value]);
	};
	return $elm$core$List$reverse(
		reversedSplitThousands(integers));
};
var $cuducos$elm_format_number$FormatNumber$Parser$splitIntegers = F2(
	function (system, integers) {
		if (system.$ === 'Western') {
			return $cuducos$elm_format_number$FormatNumber$Parser$splitByWestern(
				A2($elm$core$String$filter, $elm$core$Char$isDigit, integers));
		} else {
			return $cuducos$elm_format_number$FormatNumber$Parser$splitByIndian(
				A2($elm$core$String$filter, $elm$core$Char$isDigit, integers));
		}
	});
var $cuducos$elm_format_number$FormatNumber$Parser$parse = F2(
	function (locale, original) {
		var parts = A2($cuducos$elm_format_number$FormatNumber$Parser$splitInParts, locale, original);
		var integers = A2(
			$cuducos$elm_format_number$FormatNumber$Parser$splitIntegers,
			locale.system,
			A2($elm$core$String$filter, $elm$core$Char$isDigit, parts.a));
		var decimals = A2($cuducos$elm_format_number$FormatNumber$Parser$getDecimals, locale, parts.b);
		var partial = A5($cuducos$elm_format_number$FormatNumber$Parser$FormattedNumber, original, integers, decimals, '', '');
		var _v0 = $cuducos$elm_format_number$FormatNumber$Parser$classify(partial);
		switch (_v0.$) {
			case 'Negative':
				return _Utils_update(
					partial,
					{prefix: locale.negativePrefix, suffix: locale.negativeSuffix});
			case 'Positive':
				return _Utils_update(
					partial,
					{prefix: locale.positivePrefix, suffix: locale.positiveSuffix});
			default:
				return _Utils_update(
					partial,
					{prefix: locale.zeroPrefix, suffix: locale.zeroSuffix});
		}
	});
var $cuducos$elm_format_number$FormatNumber$Stringfy$formatDecimals = F2(
	function (locale, decimals) {
		return (decimals === '') ? '' : _Utils_ap(locale.decimalSeparator, decimals);
	});
var $cuducos$elm_format_number$FormatNumber$Stringfy$stringfy = F2(
	function (locale, formatted) {
		var stringfyDecimals = $cuducos$elm_format_number$FormatNumber$Stringfy$formatDecimals(locale);
		var integers = A2($elm$core$String$join, locale.thousandSeparator, formatted.integers);
		var decimals = stringfyDecimals(formatted.decimals);
		return $elm$core$String$concat(
			_List_fromArray(
				[formatted.prefix, integers, decimals, formatted.suffix]));
	});
var $cuducos$elm_format_number$FormatNumber$format = F2(
	function (locale, number_) {
		return A2(
			$cuducos$elm_format_number$FormatNumber$Stringfy$stringfy,
			locale,
			A2($cuducos$elm_format_number$FormatNumber$Parser$parse, locale, number_));
	});
var $Chadtech$elm_money$Money$toSymbol = function (currency) {
	switch (currency.$) {
		case 'USD':
			return '$';
		case 'CAD':
			return 'CA$';
		case 'EUR':
			return '€';
		case 'BTC':
			return 'BTC';
		case 'AED':
			return 'AED';
		case 'AFN':
			return 'Af';
		case 'ALL':
			return 'ALL';
		case 'AMD':
			return 'AMD';
		case 'ARS':
			return 'AR$';
		case 'AUD':
			return 'AU$';
		case 'AZN':
			return 'man.';
		case 'BAM':
			return 'KM';
		case 'BDT':
			return 'Tk';
		case 'BGN':
			return 'BGN';
		case 'BHD':
			return 'BD';
		case 'BIF':
			return 'FBu';
		case 'BND':
			return 'BN$';
		case 'BOB':
			return 'Bs';
		case 'BRL':
			return 'R$';
		case 'BWP':
			return 'BWP';
		case 'BYN':
			return 'Br';
		case 'BZD':
			return 'BZ$';
		case 'CDF':
			return 'CDF';
		case 'CHF':
			return 'CHF';
		case 'CLP':
			return 'CL$';
		case 'CNY':
			return 'CN¥';
		case 'COP':
			return 'CO$';
		case 'CRC':
			return '₡';
		case 'CVE':
			return 'CV$';
		case 'CZK':
			return 'Kč';
		case 'DJF':
			return 'Fdj';
		case 'DKK':
			return 'Dkr';
		case 'DOP':
			return 'RD$';
		case 'DZD':
			return 'DA';
		case 'EEK':
			return 'Ekr';
		case 'EGP':
			return 'EGP';
		case 'ERN':
			return 'Nfk';
		case 'ETB':
			return 'Br';
		case 'GBP':
			return '£';
		case 'GEL':
			return 'GEL';
		case 'GHS':
			return 'GH₵';
		case 'GNF':
			return 'FG';
		case 'GTQ':
			return 'GTQ';
		case 'HKD':
			return 'HK$';
		case 'HNL':
			return 'HNL';
		case 'HRK':
			return 'kn';
		case 'HUF':
			return 'Ft';
		case 'IDR':
			return 'Rp';
		case 'ILS':
			return '₪';
		case 'INR':
			return '₹';
		case 'IQD':
			return 'IQD';
		case 'IRR':
			return 'IRR';
		case 'ISK':
			return 'Ikr';
		case 'JMD':
			return 'J$';
		case 'JOD':
			return 'JD';
		case 'JPY':
			return '¥';
		case 'KES':
			return 'Ksh';
		case 'KHR':
			return 'KHR';
		case 'KMF':
			return 'CF';
		case 'KRW':
			return '₩';
		case 'KWD':
			return 'KD';
		case 'KZT':
			return 'KZT';
		case 'LAK':
			return '₭';
		case 'LBP':
			return 'LB£';
		case 'LKR':
			return 'SLRs';
		case 'LTL':
			return 'Lt';
		case 'LVL':
			return 'Ls';
		case 'LYD':
			return 'LD';
		case 'MAD':
			return 'MAD';
		case 'MDL':
			return 'MDL';
		case 'MGA':
			return 'MGA';
		case 'MKD':
			return 'MKD';
		case 'MMK':
			return 'MMK';
		case 'MOP':
			return 'MOP$';
		case 'MUR':
			return 'MURs';
		case 'MXN':
			return 'MX$';
		case 'MYR':
			return 'RM';
		case 'MZN':
			return 'MTn';
		case 'NAD':
			return 'N$';
		case 'NGN':
			return '₦';
		case 'NIO':
			return 'C$';
		case 'NOK':
			return 'Nkr';
		case 'NPR':
			return 'NPRs';
		case 'NZD':
			return 'NZ$';
		case 'OMR':
			return 'OMR';
		case 'PAB':
			return 'B/.';
		case 'PEN':
			return 'S/.';
		case 'PHP':
			return '₱';
		case 'PKR':
			return 'PKRs';
		case 'PLN':
			return 'zł';
		case 'PYG':
			return '₲';
		case 'QAR':
			return 'QR';
		case 'RON':
			return 'RON';
		case 'RSD':
			return 'din.';
		case 'RUB':
			return 'RUB';
		case 'RWF':
			return 'RWF';
		case 'SAR':
			return 'SR';
		case 'SDG':
			return 'SDG';
		case 'SEK':
			return 'Skr';
		case 'SGD':
			return 'S$';
		case 'SOS':
			return 'Ssh';
		case 'SYP':
			return 'SY£';
		case 'THB':
			return '฿';
		case 'TND':
			return 'DT';
		case 'TOP':
			return 'T$';
		case 'TRY':
			return 'TL';
		case 'TTD':
			return 'TT$';
		case 'TWD':
			return 'NT$';
		case 'TZS':
			return 'TSh';
		case 'UAH':
			return '₴';
		case 'UGX':
			return 'USh';
		case 'UYU':
			return '$U';
		case 'UZS':
			return 'UZS';
		case 'VED':
			return 'Bs.F.';
		case 'VND':
			return '₫';
		case 'XAF':
			return 'FCFA';
		case 'XOF':
			return 'CFA';
		case 'YER':
			return 'YR';
		case 'ZAR':
			return 'R';
		case 'ZMK':
			return 'ZK';
		case 'AOA':
			return 'Kz';
		case 'XCD':
			return 'EC$';
		case 'AWG':
			return 'Afl';
		case 'BSD':
			return 'B$';
		case 'BBD':
			return 'BBD$';
		case 'BMD':
			return 'BD$';
		case 'BTN':
			return 'Nu';
		case 'KYD':
			return 'CI$';
		case 'CUP':
			return '$MN';
		case 'ANG':
			return 'NAƒ';
		case 'SZL':
			return 'E';
		case 'FKP':
			return 'FK£';
		case 'FJD':
			return 'FJ$';
		case 'XPF':
			return 'F';
		case 'GMD':
			return 'D';
		case 'GIP':
			return '£';
		case 'GYD':
			return 'G$';
		case 'HTG':
			return 'G';
		case 'KPW':
			return '₩';
		case 'KGS':
			return 'С̲';
		case 'LSL':
			return 'M';
		case 'LRD':
			return 'L$';
		case 'MWK':
			return 'MK';
		case 'MVR':
			return 'Rf';
		case 'MRU':
			return 'UM';
		case 'MNT':
			return '₮';
		case 'PGK':
			return 'K';
		case 'SHP':
			return '£';
		case 'WST':
			return 'SAT';
		case 'STN':
			return 'Db';
		case 'SCR':
			return 'SR';
		case 'SLE':
			return 'Le';
		case 'SBD':
			return 'SI$';
		case 'SSP':
			return 'SS£';
		case 'SRD':
			return 'SR$';
		case 'TJS':
			return 'SM';
		case 'TMT':
			return 'm';
		case 'VUV':
			return 'VT';
		case 'VES':
			return 'Bs.S';
		case 'ZMW':
			return 'ZK';
		default:
			return 'Z$';
	}
};
var $author$project$Field$floatToString = F4(
	function (locale, defaultCurrency, format, _float) {
		var pow = A2($elm$core$Basics$pow, 10, format.maxDecimals);
		var fper = _Utils_eq(format.format, $author$project$Field$Percent) ? (_float * 100) : _float;
		var float_ = $elm$core$Basics$round(fper * pow) / pow;
		return _Utils_ap(
			A2(
				$cuducos$elm_format_number$FormatNumber$format,
				_Utils_update(
					locale,
					{
						decimals: $cuducos$elm_format_number$FormatNumber$Locales$Min(format.decimals),
						negativePrefix: _Utils_eq(format.numSign, $author$project$Field$Parens) ? '(' : '-',
						negativeSuffix: _Utils_eq(format.numSign, $author$project$Field$Parens) ? ')' : '',
						thousandSeparator: _Utils_eq(format.format, $author$project$Field$Standard) ? '' : locale.thousandSeparator
					}),
				float_),
			function () {
				var _v0 = format.format;
				switch (_v0.$) {
					case 'Currency':
						var cur = _v0.a;
						return ' ' + $Chadtech$elm_money$Money$toSymbol(
							A2($elm$core$Maybe$withDefault, defaultCurrency, cur));
					case 'Percent':
						return ' %';
					default:
						return '';
				}
			}());
	});
var $author$project$Widget$floatToString = F5(
	function (locale, currency, field, fields, _float) {
		return A2(
			$elm$core$Maybe$withDefault,
			$elm$core$String$fromFloat(_float),
			A2(
				$elm$core$Maybe$map,
				function (f) {
					var _v0 = f.ofType;
					switch (_v0.$) {
						case 'Int':
							var format = _v0.a;
							return A4($author$project$Field$floatToString, locale, currency, format, _float);
						case 'Float':
							var format = _v0.a;
							return A4($author$project$Field$floatToString, locale, currency, format, _float);
						default:
							return $elm$core$String$fromFloat(_float);
					}
				},
				A2($elm$core$Dict$get, field, fields)));
	});
var $elm_community$list_extra$List$Extra$getAt = F2(
	function (idx, xs) {
		return (idx < 0) ? $elm$core$Maybe$Nothing : $elm$core$List$head(
			A2($elm$core$List$drop, idx, xs));
	});
var $cuducos$elm_format_number$FormatNumber$Locales$frenchLocale = _Utils_update(
	$cuducos$elm_format_number$FormatNumber$Locales$base,
	{
		decimalSeparator: ',',
		decimals: $cuducos$elm_format_number$FormatNumber$Locales$Exact(3),
		thousandSeparator: '\u202F'
	});
var $cuducos$elm_format_number$FormatNumber$Locales$usLocale = _Utils_update(
	$cuducos$elm_format_number$FormatNumber$Locales$base,
	{
		decimals: $cuducos$elm_format_number$FormatNumber$Locales$Exact(2),
		thousandSeparator: ','
	});
var $author$project$Field$localeForLanguage = function (str) {
	var _v0 = $elm$core$String$toLower(
		A2($elm$core$String$left, 2, str));
	if (_v0 === 'fr') {
		return $cuducos$elm_format_number$FormatNumber$Locales$frenchLocale;
	} else {
		return $cuducos$elm_format_number$FormatNumber$Locales$usLocale;
	}
};
var $author$project$Widget$addSubtotals = F2(
	function (model, groups) {
		var toValue = F2(
			function (idx, id) {
				return A2(
					$elm$core$Maybe$withDefault,
					1,
					A2(
						$elm$core$Maybe$andThen,
						function (rec) {
							return A2($elm_community$list_extra$List$Extra$getAt, idx, rec.totals);
						},
						A2($elm$core$Dict$get, id, model.records)));
			});
		var locale = $author$project$Field$localeForLanguage(model.language);
		return A2(
			$elm$core$List$concatMap,
			function (g) {
				return _Utils_ap(
					model.options.countMoments ? _List_fromArray(
						[
							_Utils_update(
							g,
							{
								id: '_subtotal_count_' + g.id,
								isSubtotal: true,
								label: function () {
									var _v0 = g.label;
									if (_v0.b) {
										var x = _v0.a;
										return _List_fromArray(
											[
												x,
												$author$project$Widget$Translations$count(model.translations)
											]);
									} else {
										return _List_fromArray(
											[
												$author$project$Widget$Translations$count(model.translations)
											]);
									}
								}(),
								sections: A3(
									$author$project$Widget$computeTotal,
									$elm$core$Basics$always(1),
									$elm$core$String$fromFloat,
									g.sections)
							})
						]) : _List_Nil,
					_Utils_ap(
						A2(
							$elm$core$List$indexedMap,
							F2(
								function (idx, field) {
									var toString = A4($author$project$Widget$floatToString, locale, model.currency, field, model.fields);
									return _Utils_update(
										g,
										{
											id: '_subtotal_' + (field + ('_' + g.id)),
											isSubtotal: true,
											label: function () {
												var _v1 = g.label;
												if (_v1.b) {
													var x = _v1.a;
													return _List_fromArray(
														[x, field]);
												} else {
													return _List_fromArray(
														[field]);
												}
											}(),
											sections: A3(
												$author$project$Widget$computeTotal,
												toValue(idx),
												toString,
												g.sections)
										});
								}),
							model.totalFields),
						_List_fromArray(
							[g])));
			},
			groups);
	});
var $elm$core$Dict$values = function (dict) {
	return A3(
		$elm$core$Dict$foldr,
		F3(
			function (key, value, valueList) {
				return A2($elm$core$List$cons, value, valueList);
			}),
		_List_Nil,
		dict);
};
var $author$project$Widget$addTotals = function (model) {
	var toValue = F2(
		function (idx, id) {
			return A2(
				$elm$core$Maybe$withDefault,
				1,
				A2(
					$elm$core$Maybe$andThen,
					function (rec) {
						return A2($elm_community$list_extra$List$Extra$getAt, idx, rec.totals);
					},
					A2($elm$core$Dict$get, id, model.records)));
		});
	var sections = A2(
		$elm$core$List$map,
		function (rec) {
			return {
				end: $elm$time$Time$millisToPosix(
					rec.date + $elm$core$Basics$round(rec.amplitude * 1000)),
				id: $elm$core$String$fromInt(rec.id),
				start: $elm$time$Time$millisToPosix(rec.date)
			};
		},
		$elm$core$Dict$values(model.records));
	var locale = $author$project$Field$localeForLanguage(model.language);
	return _Utils_ap(
		model.options.countMoments ? _List_fromArray(
			[
				{
				id: '_total_count',
				isSubtotal: true,
				label: _List_fromArray(
					[
						$author$project$Widget$Translations$count(model.translations)
					]),
				sections: A3(
					$author$project$Widget$computeTotal,
					$elm$core$Basics$always(1),
					$elm$core$String$fromFloat,
					sections)
			}
			]) : _List_Nil,
		A2(
			$elm$core$List$indexedMap,
			F2(
				function (idx, field) {
					var toString = A4($author$project$Widget$floatToString, locale, model.currency, field, model.fields);
					return {
						id: '_total_' + field,
						isSubtotal: true,
						label: _List_fromArray(
							[field]),
						sections: A3(
							$author$project$Widget$computeTotal,
							toValue(idx),
							toString,
							sections)
					};
				}),
			model.totalFields));
};
var $elm$browser$Browser$Dom$blur = _Browser_call('blur');
var $author$project$Timeline$changeDirection = F2(
	function (dir, tl) {
		return _Utils_update(
			tl,
			{
				direction: dir,
				dnd: $author$project$Timeline$system(dir).model
			});
	});
var $author$project$Timeline$changeStartAndZoom = F3(
	function (posix, zoom, tl) {
		var start = -((($elm$time$Time$posixToMillis(posix) - $elm$time$Time$posixToMillis(tl.first)) * zoom) / $author$project$Timeline$Models$duration.day);
		return _Utils_update(
			tl,
			{start: start, zoom: zoom});
	});
var $author$project$Timeline$changeYOffset = F2(
	function (y, tl) {
		return _Utils_update(
			tl,
			{sectionOffsetY: y});
	});
var $author$project$Field$choiceIdToString = function (cid) {
	if (cid.$ === 'ChoiceString') {
		var str = cid.a;
		return str;
	} else {
		var _int = cid.a;
		return '_Int:' + $elm$core$String$fromInt(_int);
	}
};
var $elm$core$Process$sleep = _Process_sleep;
var $grotsev$elm_debouncer$Bounce$delay = F2(
	function (milliseconds, msg) {
		return A2(
			$elm$core$Task$perform,
			$elm$core$Basics$always(msg),
			$elm$core$Process$sleep(milliseconds));
	});
var $elm$json$Json$Encode$int = _Json_wrap;
var $elm$json$Json$Encode$string = _Json_wrap;
var $author$project$Field$encodeChoiceId = function (cid) {
	if (cid.$ === 'ChoiceString') {
		var str = cid.a;
		return $elm$json$Json$Encode$string(str);
	} else {
		var _int = cid.a;
		return $elm$json$Json$Encode$int(_int);
	}
};
var $elm$json$Json$Encode$bool = _Json_wrap;
var $author$project$Widget$encodeColorScheme = function (cs) {
	if (cs.$ === 'Light') {
		return $elm$json$Json$Encode$string('light');
	} else {
		return $elm$json$Json$Encode$string('dark');
	}
};
var $author$project$Widget$encodeDirection = function (dir) {
	if (dir.$ === 'Horizontal') {
		return $elm$json$Json$Encode$string('horizontal');
	} else {
		return $elm$json$Json$Encode$string('vertical');
	}
};
var $author$project$Widget$encodeDurationUnit = function (du) {
	if (du.$ === 'Hours') {
		return $elm$json$Json$Encode$string('Hours');
	} else {
		return $elm$json$Json$Encode$string('Minutes');
	}
};
var $elm$json$Json$Encode$float = _Json_wrap;
var $elm$json$Json$Encode$null = _Json_encodeNull;
var $elm$json$Json$Encode$object = function (pairs) {
	return _Json_wrap(
		A3(
			$elm$core$List$foldl,
			F2(
				function (_v0, obj) {
					var k = _v0.a;
					var v = _v0.b;
					return A3(_Json_addField, k, v, obj);
				}),
			_Json_emptyObject(_Utils_Tuple0),
			pairs));
};
var $author$project$Widget$encodeOptions = function (options) {
	return $elm$json$Json$Encode$object(
		_List_fromArray(
			[
				_Utils_Tuple2(
				'start',
				$elm$json$Json$Encode$int(
					$elm$time$Time$posixToMillis(options.start))),
				_Utils_Tuple2(
				'zoom',
				$elm$json$Json$Encode$float(options.zoom)),
				_Utils_Tuple2(
				'sectionOffsetY',
				$elm$json$Json$Encode$float(options.sectionOffsetY)),
				_Utils_Tuple2(
				'lineSize',
				$elm$json$Json$Encode$float(options.lineSize)),
				_Utils_Tuple2(
				'direction',
				$author$project$Widget$encodeDirection(options.direction)),
				_Utils_Tuple2(
				'wrapText',
				$elm$json$Json$Encode$bool(options.wrapText)),
				_Utils_Tuple2(
				'durationUnit',
				$author$project$Widget$encodeDurationUnit(options.durationUnit)),
				_Utils_Tuple2(
				'displaySubtotals',
				$elm$json$Json$Encode$bool(options.displaySubtotals)),
				_Utils_Tuple2(
				'countMoments',
				$elm$json$Json$Encode$bool(options.countMoments)),
				_Utils_Tuple2(
				'colorScheme',
				A2(
					$elm$core$Maybe$withDefault,
					$elm$json$Json$Encode$null,
					A2($elm$core$Maybe$map, $author$project$Widget$encodeColorScheme, options.colorScheme)))
			]));
};
var $author$project$Widget$Multi = {$: 'Multi'};
var $author$project$Widget$debutFieldId = '_timeline_Debut';
var $author$project$Widget$dureeFieldId = '_timeline_Duree';
var $elm$core$Dict$filter = F2(
	function (isGood, dict) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, d) {
					return A2(isGood, k, v) ? A3($elm$core$Dict$insert, k, v, d) : d;
				}),
			$elm$core$Dict$empty,
			dict);
	});
var $author$project$Widget$finFieldId = '_timeline_Fin';
var $elm$core$Basics$min = F2(
	function (x, y) {
		return (_Utils_cmp(x, y) < 0) ? x : y;
	});
var $elm$core$List$minimum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$min, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Widget$secondsForDurationUnit = function (du) {
	if (du.$ === 'Hours') {
		return 3600;
	} else {
		return 60;
	}
};
var $elm$core$Set$union = F2(
	function (_v0, _v1) {
		var dict1 = _v0.a;
		var dict2 = _v1.a;
		return $elm$core$Set$Set_elm_builtin(
			A2($elm$core$Dict$union, dict1, dict2));
	});
var $author$project$Timeline$Models$selectionToSet = function (_v0) {
	var dict = _v0.a;
	return A3(
		$elm$core$Dict$foldl,
		F3(
			function (_v1, set, out) {
				return A2($elm$core$Set$union, set, out);
			}),
		$elm$core$Set$empty,
		dict);
};
var $f0i$iso8601$Iso8601$Second = {$: 'Second'};
var $f0i$iso8601$Iso8601$Day = {$: 'Day'};
var $f0i$iso8601$Iso8601$HourMilli = {$: 'HourMilli'};
var $f0i$iso8601$Iso8601$HourMinute = {$: 'HourMinute'};
var $f0i$iso8601$Iso8601$HourOnly = {$: 'HourOnly'};
var $f0i$iso8601$Iso8601$HourSecond = {$: 'HourSecond'};
var $f0i$iso8601$Iso8601$iToS2 = function (i) {
	return (i < 10) ? ('0' + $elm$core$String$fromInt(i)) : $elm$core$String$fromInt(i);
};
var $f0i$iso8601$Iso8601$iToS3 = function (i) {
	return (i < 10) ? ('00' + $elm$core$String$fromInt(i)) : ((i < 100) ? ('0' + $elm$core$String$fromInt(i)) : $elm$core$String$fromInt(i));
};
var $f0i$iso8601$Iso8601$monthToS = function (month) {
	switch (month.$) {
		case 'Jan':
			return '01';
		case 'Feb':
			return '02';
		case 'Mar':
			return '03';
		case 'Apr':
			return '04';
		case 'May':
			return '05';
		case 'Jun':
			return '06';
		case 'Jul':
			return '07';
		case 'Aug':
			return '08';
		case 'Sep':
			return '09';
		case 'Oct':
			return '10';
		case 'Nov':
			return '11';
		default:
			return '12';
	}
};
var $elm$time$Time$flooredDiv = F2(
	function (numerator, denominator) {
		return $elm$core$Basics$floor(numerator / denominator);
	});
var $elm$time$Time$toAdjustedMinutesHelp = F3(
	function (defaultOffset, posixMinutes, eras) {
		toAdjustedMinutesHelp:
		while (true) {
			if (!eras.b) {
				return posixMinutes + defaultOffset;
			} else {
				var era = eras.a;
				var olderEras = eras.b;
				if (_Utils_cmp(era.start, posixMinutes) < 0) {
					return posixMinutes + era.offset;
				} else {
					var $temp$defaultOffset = defaultOffset,
						$temp$posixMinutes = posixMinutes,
						$temp$eras = olderEras;
					defaultOffset = $temp$defaultOffset;
					posixMinutes = $temp$posixMinutes;
					eras = $temp$eras;
					continue toAdjustedMinutesHelp;
				}
			}
		}
	});
var $elm$time$Time$toAdjustedMinutes = F2(
	function (_v0, time) {
		var defaultOffset = _v0.a;
		var eras = _v0.b;
		return A3(
			$elm$time$Time$toAdjustedMinutesHelp,
			defaultOffset,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				60000),
			eras);
	});
var $elm$time$Time$toCivil = function (minutes) {
	var rawDay = A2($elm$time$Time$flooredDiv, minutes, 60 * 24) + 719468;
	var era = (((rawDay >= 0) ? rawDay : (rawDay - 146096)) / 146097) | 0;
	var dayOfEra = rawDay - (era * 146097);
	var yearOfEra = ((((dayOfEra - ((dayOfEra / 1460) | 0)) + ((dayOfEra / 36524) | 0)) - ((dayOfEra / 146096) | 0)) / 365) | 0;
	var dayOfYear = dayOfEra - (((365 * yearOfEra) + ((yearOfEra / 4) | 0)) - ((yearOfEra / 100) | 0));
	var mp = (((5 * dayOfYear) + 2) / 153) | 0;
	var month = mp + ((mp < 10) ? 3 : (-9));
	var year = yearOfEra + (era * 400);
	return {
		day: (dayOfYear - ((((153 * mp) + 2) / 5) | 0)) + 1,
		month: month,
		year: year + ((month <= 2) ? 1 : 0)
	};
};
var $elm$time$Time$toDay = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).day;
	});
var $elm$time$Time$toHour = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			24,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60));
	});
var $elm$time$Time$toMillis = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			1000,
			$elm$time$Time$posixToMillis(time));
	});
var $elm$time$Time$toMinute = F2(
	function (zone, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2($elm$time$Time$toAdjustedMinutes, zone, time));
	});
var $elm$time$Time$Aug = {$: 'Aug'};
var $elm$time$Time$Dec = {$: 'Dec'};
var $elm$time$Time$Feb = {$: 'Feb'};
var $elm$time$Time$Jul = {$: 'Jul'};
var $elm$time$Time$Jun = {$: 'Jun'};
var $elm$time$Time$May = {$: 'May'};
var $elm$time$Time$Nov = {$: 'Nov'};
var $elm$time$Time$toMonth = F2(
	function (zone, time) {
		var _v0 = $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).month;
		switch (_v0) {
			case 1:
				return $elm$time$Time$Jan;
			case 2:
				return $elm$time$Time$Feb;
			case 3:
				return $elm$time$Time$Mar;
			case 4:
				return $elm$time$Time$Apr;
			case 5:
				return $elm$time$Time$May;
			case 6:
				return $elm$time$Time$Jun;
			case 7:
				return $elm$time$Time$Jul;
			case 8:
				return $elm$time$Time$Aug;
			case 9:
				return $elm$time$Time$Sep;
			case 10:
				return $elm$time$Time$Oct;
			case 11:
				return $elm$time$Time$Nov;
			default:
				return $elm$time$Time$Dec;
		}
	});
var $elm$time$Time$toSecond = F2(
	function (_v0, time) {
		return A2(
			$elm$core$Basics$modBy,
			60,
			A2(
				$elm$time$Time$flooredDiv,
				$elm$time$Time$posixToMillis(time),
				1000));
	});
var $elm$time$Time$toYear = F2(
	function (zone, time) {
		return $elm$time$Time$toCivil(
			A2($elm$time$Time$toAdjustedMinutes, zone, time)).year;
	});
var $f0i$iso8601$Iso8601$toString = F3(
	function (mode, zone, time) {
		switch (mode.$) {
			case 'Year':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toYear, zone, time));
			case 'Month':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toYear, zone, time)) + ('-' + $f0i$iso8601$Iso8601$monthToS(
					A2($elm$time$Time$toMonth, zone, time)));
			case 'Day':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toYear, zone, time)) + ('-' + ($f0i$iso8601$Iso8601$monthToS(
					A2($elm$time$Time$toMonth, zone, time)) + ('-' + $f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toDay, zone, time)))));
			case 'HourOnly':
				return $f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toHour, zone, time));
			case 'HourMinute':
				return $f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toHour, zone, time)) + (':' + $f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toMinute, zone, time)));
			case 'HourSecond':
				return $f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toHour, zone, time)) + (':' + ($f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toMinute, zone, time)) + (':' + $f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toSecond, zone, time)))));
			case 'HourMilli':
				return $f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toHour, zone, time)) + (':' + ($f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toMinute, zone, time)) + (':' + ($f0i$iso8601$Iso8601$iToS2(
					A2($elm$time$Time$toSecond, zone, time)) + ('.' + $f0i$iso8601$Iso8601$iToS3(
					A2($elm$time$Time$toMillis, zone, time)))))));
			case 'Hour':
				return A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$Day, zone, time) + ('T' + A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$HourOnly, zone, time));
			case 'Minute':
				return A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$Day, zone, time) + ('T' + A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$HourMinute, zone, time));
			case 'Second':
				return A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$Day, zone, time) + ('T' + A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$HourSecond, zone, time));
			default:
				return A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$Day, zone, time) + ('T' + A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$HourMilli, zone, time));
		}
	});
var $f0i$iso8601$Iso8601$toDateTimeString = F2(
	function (zone, time) {
		return A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$Second, zone, time);
	});
var $elm_community$list_extra$List$Extra$uniqueHelp = F4(
	function (f, existing, remaining, accumulator) {
		uniqueHelp:
		while (true) {
			if (!remaining.b) {
				return $elm$core$List$reverse(accumulator);
			} else {
				var first = remaining.a;
				var rest = remaining.b;
				var computedFirst = f(first);
				if (A2($elm$core$List$member, computedFirst, existing)) {
					var $temp$f = f,
						$temp$existing = existing,
						$temp$remaining = rest,
						$temp$accumulator = accumulator;
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				} else {
					var $temp$f = f,
						$temp$existing = A2($elm$core$List$cons, computedFirst, existing),
						$temp$remaining = rest,
						$temp$accumulator = A2($elm$core$List$cons, first, accumulator);
					f = $temp$f;
					existing = $temp$existing;
					remaining = $temp$remaining;
					accumulator = $temp$accumulator;
					continue uniqueHelp;
				}
			}
		}
	});
var $elm_community$list_extra$List$Extra$unique = function (list) {
	return A4($elm_community$list_extra$List$Extra$uniqueHelp, $elm$core$Basics$identity, _List_Nil, list, _List_Nil);
};
var $author$project$Widget$fieldsFromSelection = F5(
	function (zone, durationUnit, selids, allRecords, fields) {
		var selSet = $author$project$Timeline$Models$selectionToSet(selids);
		var records = $elm$core$Dict$values(
			A2(
				$elm$core$Dict$filter,
				F2(
					function (k, _v6) {
						return A2($elm$core$Set$member, k, selSet);
					}),
				allRecords));
		var sel = A2(
			$elm$core$List$map,
			function ($) {
				return $.fields;
			},
			records);
		var fins = $elm_community$list_extra$List$Extra$unique(
			A2(
				$elm$core$List$map,
				function (rec) {
					return $elm$core$Basics$round(rec.amplitude * 1000) + rec.date;
				},
				records));
		var mbFinVal = function () {
			if (!fins.b) {
				return $elm$core$Maybe$Just(
					A2($author$project$Widget$Error, $author$project$Widget$NoValue, ''));
			} else {
				if (!fins.b.b) {
					var fin = fins.a;
					return $elm$core$Maybe$Just(
						$author$project$Widget$Val(
							A2(
								$f0i$iso8601$Iso8601$toDateTimeString,
								zone,
								$elm$time$Time$millisToPosix(fin))));
				} else {
					return $elm$core$Maybe$Nothing;
				}
			}
		}();
		var durees = $elm_community$list_extra$List$Extra$unique(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.amplitude;
				},
				records));
		var dureeVal = function () {
			if (!durees.b) {
				return A2($author$project$Widget$Error, $author$project$Widget$NoValue, '');
			} else {
				if (!durees.b.b) {
					var duree = durees.a;
					return $author$project$Widget$Val(
						$elm$core$String$fromFloat(
							duree / $author$project$Widget$secondsForDurationUnit(durationUnit)));
				} else {
					return $author$project$Widget$Multi;
				}
			}
		}();
		var debuts = $elm_community$list_extra$List$Extra$unique(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.date;
				},
				records));
		var debutVal = function () {
			if (!debuts.b) {
				return A2($author$project$Widget$Error, $author$project$Widget$NoValue, '');
			} else {
				if (!debuts.b.b) {
					var debut = debuts.a;
					return $author$project$Widget$Val(
						A2(
							$f0i$iso8601$Iso8601$toDateTimeString,
							zone,
							$elm$time$Time$millisToPosix(debut)));
				} else {
					return A2(
						$elm$core$Maybe$withDefault,
						A2($author$project$Widget$Error, $author$project$Widget$NoValue, ''),
						A2(
							$elm$core$Maybe$map,
							A2(
								$elm$core$Basics$composeR,
								$elm$time$Time$millisToPosix,
								A2(
									$elm$core$Basics$composeR,
									$f0i$iso8601$Iso8601$toDateTimeString(zone),
									$author$project$Widget$Val)),
							$elm$core$List$minimum(debuts)));
				}
			}
		}();
		return A3(
			$elm$core$Dict$insert,
			$author$project$Widget$dureeFieldId,
			dureeVal,
			function () {
				if (mbFinVal.$ === 'Just') {
					var finVal = mbFinVal.a;
					return A2($elm$core$Dict$insert, $author$project$Widget$finFieldId, finVal);
				} else {
					return $elm$core$Dict$remove($author$project$Widget$finFieldId);
				}
			}()(
				A3(
					$elm$core$Dict$insert,
					$author$project$Widget$debutFieldId,
					debutVal,
					$elm$core$Dict$fromList(
						A2(
							$elm$core$List$map,
							function (key) {
								var values = $elm_community$list_extra$List$Extra$unique(
									A2(
										$elm$core$List$map,
										$elm$core$Dict$get(key),
										sel));
								return _Utils_Tuple2(
									key,
									function () {
										_v0$3:
										while (true) {
											if (!values.b) {
												return A2($author$project$Widget$Error, $author$project$Widget$NoValue, '');
											} else {
												if (values.a.$ === 'Nothing') {
													if (!values.b.b) {
														var _v1 = values.a;
														return A2($author$project$Widget$Error, $author$project$Widget$NoValue, '');
													} else {
														break _v0$3;
													}
												} else {
													if (!values.b.b) {
														var one = values.a.a;
														return $author$project$Widget$Val(one);
													} else {
														break _v0$3;
													}
												}
											}
										}
										return $author$project$Widget$Multi;
									}());
							},
							fields)))));
	});
var $elm$browser$Browser$Dom$focus = _Browser_call('focus');
var $elm$json$Json$Decode$list = _Json_decodeList;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$fractionsOfASecondInMs = A2(
	$elm$parser$Parser$andThen,
	function (str) {
		if ($elm$core$String$length(str) <= 9) {
			var _v0 = $elm$core$String$toFloat('0.' + str);
			if (_v0.$ === 'Just') {
				var floatVal = _v0.a;
				return $elm$parser$Parser$succeed(
					$elm$core$Basics$round(floatVal * 1000));
			} else {
				return $elm$parser$Parser$problem('Invalid float: \"' + (str + '\"'));
			}
		} else {
			return $elm$parser$Parser$problem(
				'Expected at most 9 digits, but got ' + $elm$core$String$fromInt(
					$elm$core$String$length(str)));
		}
	},
	$elm$parser$Parser$getChompedString(
		$elm$parser$Parser$chompWhile($elm$core$Char$isDigit)));
var $rtfeldman$elm_iso8601_date_strings$Iso8601$fromParts = F6(
	function (monthYearDayMs, hour, minute, second, ms, utcOffsetMinutes) {
		return $elm$time$Time$millisToPosix((((monthYearDayMs + (((hour * 60) * 60) * 1000)) + (((minute - utcOffsetMinutes) * 60) * 1000)) + (second * 1000)) + ms);
	});
var $elm$core$String$append = _String_append;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt = function (quantity) {
	var helper = function (str) {
		if (_Utils_eq(
			$elm$core$String$length(str),
			quantity)) {
			var _v0 = $elm$core$String$toInt(str);
			if (_v0.$ === 'Just') {
				var intVal = _v0.a;
				return A2(
					$elm$parser$Parser$map,
					$elm$parser$Parser$Done,
					$elm$parser$Parser$succeed(intVal));
			} else {
				return $elm$parser$Parser$problem('Invalid integer: \"' + (str + '\"'));
			}
		} else {
			return A2(
				$elm$parser$Parser$map,
				function (nextChar) {
					return $elm$parser$Parser$Loop(
						A2($elm$core$String$append, str, nextChar));
				},
				$elm$parser$Parser$getChompedString(
					$elm$parser$Parser$chompIf($elm$core$Char$isDigit)));
		}
	};
	return A2($elm$parser$Parser$loop, '', helper);
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$epochYear = 1970;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay = function (day) {
	return $elm$parser$Parser$problem(
		'Invalid day: ' + $elm$core$String$fromInt(day));
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$isLeapYear = function (year) {
	return (!A2($elm$core$Basics$modBy, 4, year)) && ((!(!A2($elm$core$Basics$modBy, 100, year))) || (!A2($elm$core$Basics$modBy, 400, year)));
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$leapYearsBefore = function (y1) {
	var y = y1 - 1;
	return (((y / 4) | 0) - ((y / 100) | 0)) + ((y / 400) | 0);
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerDay = 86400000;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerYear = 31536000000;
var $rtfeldman$elm_iso8601_date_strings$Iso8601$yearMonthDay = function (_v0) {
	var year = _v0.a;
	var month = _v0.b;
	var dayInMonth = _v0.c;
	if (dayInMonth < 0) {
		return $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth);
	} else {
		var succeedWith = function (extraMs) {
			var yearMs = $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerYear * (year - $rtfeldman$elm_iso8601_date_strings$Iso8601$epochYear);
			var days = ((month < 3) || (!$rtfeldman$elm_iso8601_date_strings$Iso8601$isLeapYear(year))) ? (dayInMonth - 1) : dayInMonth;
			var dayMs = $rtfeldman$elm_iso8601_date_strings$Iso8601$msPerDay * (days + ($rtfeldman$elm_iso8601_date_strings$Iso8601$leapYearsBefore(year) - $rtfeldman$elm_iso8601_date_strings$Iso8601$leapYearsBefore($rtfeldman$elm_iso8601_date_strings$Iso8601$epochYear)));
			return $elm$parser$Parser$succeed((extraMs + yearMs) + dayMs);
		};
		switch (month) {
			case 1:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(0);
			case 2:
				return ((dayInMonth > 29) || ((dayInMonth === 29) && (!$rtfeldman$elm_iso8601_date_strings$Iso8601$isLeapYear(year)))) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(2678400000);
			case 3:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(5097600000);
			case 4:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(7776000000);
			case 5:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(10368000000);
			case 6:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(13046400000);
			case 7:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(15638400000);
			case 8:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(18316800000);
			case 9:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(20995200000);
			case 10:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(23587200000);
			case 11:
				return (dayInMonth > 30) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(26265600000);
			case 12:
				return (dayInMonth > 31) ? $rtfeldman$elm_iso8601_date_strings$Iso8601$invalidDay(dayInMonth) : succeedWith(28857600000);
			default:
				return $elm$parser$Parser$problem(
					'Invalid month: \"' + ($elm$core$String$fromInt(month) + '\"'));
		}
	}
};
var $rtfeldman$elm_iso8601_date_strings$Iso8601$monthYearDayInMs = A2(
	$elm$parser$Parser$andThen,
	$rtfeldman$elm_iso8601_date_strings$Iso8601$yearMonthDay,
	A2(
		$elm$parser$Parser$keeper,
		A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed(
					F3(
						function (year, month, day) {
							return _Utils_Tuple3(year, month, day);
						})),
				$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(4)),
			$elm$parser$Parser$oneOf(
				_List_fromArray(
					[
						A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$ignorer,
							$elm$parser$Parser$succeed($elm$core$Basics$identity),
							$elm$parser$Parser$symbol('-')),
						$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
						$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)
					]))),
		$elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$ignorer,
						$elm$parser$Parser$succeed($elm$core$Basics$identity),
						$elm$parser$Parser$symbol('-')),
					$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
					$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)
				]))));
var $rtfeldman$elm_iso8601_date_strings$Iso8601$utcOffsetInMinutes = function () {
	var utcOffsetMinutesFromParts = F3(
		function (multiplier, hours, minutes) {
			return (multiplier * (hours * 60)) + minutes;
		});
	return A2(
		$elm$parser$Parser$keeper,
		$elm$parser$Parser$succeed($elm$core$Basics$identity),
		$elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$map,
					function (_v0) {
						return 0;
					},
					$elm$parser$Parser$symbol('Z')),
					A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							$elm$parser$Parser$succeed(utcOffsetMinutesFromParts),
							$elm$parser$Parser$oneOf(
								_List_fromArray(
									[
										A2(
										$elm$parser$Parser$map,
										function (_v1) {
											return 1;
										},
										$elm$parser$Parser$symbol('+')),
										A2(
										$elm$parser$Parser$map,
										function (_v2) {
											return -1;
										},
										$elm$parser$Parser$symbol('-'))
									]))),
						$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
					$elm$parser$Parser$oneOf(
						_List_fromArray(
							[
								A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$ignorer,
									$elm$parser$Parser$succeed($elm$core$Basics$identity),
									$elm$parser$Parser$symbol(':')),
								$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
								$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2),
								$elm$parser$Parser$succeed(0)
							]))),
					A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed(0),
					$elm$parser$Parser$end)
				])));
}();
var $rtfeldman$elm_iso8601_date_strings$Iso8601$iso8601 = A2(
	$elm$parser$Parser$andThen,
	function (datePart) {
		return $elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					A2(
					$elm$parser$Parser$keeper,
					A2(
						$elm$parser$Parser$keeper,
						A2(
							$elm$parser$Parser$keeper,
							A2(
								$elm$parser$Parser$keeper,
								A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$ignorer,
										$elm$parser$Parser$succeed(
											$rtfeldman$elm_iso8601_date_strings$Iso8601$fromParts(datePart)),
										$elm$parser$Parser$symbol('T')),
									$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
								$elm$parser$Parser$oneOf(
									_List_fromArray(
										[
											A2(
											$elm$parser$Parser$keeper,
											A2(
												$elm$parser$Parser$ignorer,
												$elm$parser$Parser$succeed($elm$core$Basics$identity),
												$elm$parser$Parser$symbol(':')),
											$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
											$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)
										]))),
							$elm$parser$Parser$oneOf(
								_List_fromArray(
									[
										A2(
										$elm$parser$Parser$keeper,
										A2(
											$elm$parser$Parser$ignorer,
											$elm$parser$Parser$succeed($elm$core$Basics$identity),
											$elm$parser$Parser$symbol(':')),
										$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2)),
										$rtfeldman$elm_iso8601_date_strings$Iso8601$paddedInt(2),
										$elm$parser$Parser$succeed(0)
									]))),
						$elm$parser$Parser$oneOf(
							_List_fromArray(
								[
									A2(
									$elm$parser$Parser$keeper,
									A2(
										$elm$parser$Parser$ignorer,
										$elm$parser$Parser$succeed($elm$core$Basics$identity),
										$elm$parser$Parser$symbol('.')),
									$rtfeldman$elm_iso8601_date_strings$Iso8601$fractionsOfASecondInMs),
									$elm$parser$Parser$succeed(0)
								]))),
					A2($elm$parser$Parser$ignorer, $rtfeldman$elm_iso8601_date_strings$Iso8601$utcOffsetInMinutes, $elm$parser$Parser$end)),
					A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$succeed(
						A6($rtfeldman$elm_iso8601_date_strings$Iso8601$fromParts, datePart, 0, 0, 0, 0, 0)),
					$elm$parser$Parser$end)
				]));
	},
	$rtfeldman$elm_iso8601_date_strings$Iso8601$monthYearDayInMs);
var $rtfeldman$elm_iso8601_date_strings$Iso8601$toTime = function (str) {
	return A2($elm$parser$Parser$run, $rtfeldman$elm_iso8601_date_strings$Iso8601$iso8601, str);
};
var $elm_community$json_extra$Json$Decode$Extra$datetime = A2(
	$elm$json$Json$Decode$andThen,
	function (dateString) {
		var _v0 = $rtfeldman$elm_iso8601_date_strings$Iso8601$toTime(dateString);
		if (_v0.$ === 'Ok') {
			var v = _v0.a;
			return $elm$json$Json$Decode$succeed(v);
		} else {
			return $elm$json$Json$Decode$fail('Expecting an ISO-8601 formatted date+time string');
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Moment$Duration = function (a) {
	return {$: 'Duration', a: a};
};
var $author$project$Moment$durationBetween = F2(
	function (start, end) {
		return $author$project$Moment$Duration(
			$elm$time$Time$posixToMillis(end) - $elm$time$Time$posixToMillis(start));
	});
var $author$project$Moment$fromDuration = function (_v0) {
	var _int = _v0.a;
	return _int;
};
var $elm$json$Json$Encode$list = F2(
	function (func, entries) {
		return _Json_wrap(
			A3(
				$elm$core$List$foldl,
				_Json_addEntry(func),
				_Json_emptyArray(_Utils_Tuple0),
				entries));
	});
var $author$project$Widget$updateField = _Platform_outgoingPort('updateField', $elm$core$Basics$identity);
var $author$project$Widget$makeFieldUpdate_ = F3(
	function (sel, field, value) {
		return $author$project$Widget$updateField(
			$elm$json$Json$Encode$object(
				_List_fromArray(
					[
						_Utils_Tuple2(
						'ids',
						A2(
							$elm$json$Json$Encode$list,
							$elm$json$Json$Encode$int,
							A2(
								$elm$core$List$filterMap,
								$elm$core$String$toInt,
								$elm$core$Set$toList(
									$author$project$Timeline$Models$selectionToSet(sel))))),
						_Utils_Tuple2(
						'field',
						$elm$json$Json$Encode$string(field)),
						_Utils_Tuple2('value', value)
					])));
	});
var $author$project$Widget$modifyRecords = _Platform_outgoingPort('modifyRecords', $elm$core$Basics$identity);
var $author$project$Widget$modifyRecordsDelta = function (args) {
	return $author$project$Widget$modifyRecords(
		$elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ids',
					A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$int, args.ids)),
					_Utils_Tuple2(
					'changeDebut',
					$elm$json$Json$Encode$int(args.changeDebut)),
					_Utils_Tuple2(
					'changeAmplitude',
					$elm$json$Json$Encode$int(args.changeAmplitude))
				])));
};
var $author$project$Widget$modifyRecordsDuree = function (args) {
	return $author$project$Widget$modifyRecords(
		$elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ids',
					A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$int, args.ids)),
					_Utils_Tuple2(
					'setDuree',
					$elm$json$Json$Encode$float(args.setDuree))
				])));
};
var $author$project$Widget$modifyRecordsFin = function (args) {
	return $author$project$Widget$modifyRecords(
		$elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ids',
					A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$int, args.ids)),
					_Utils_Tuple2(
					'setFin',
					$elm$json$Json$Encode$string(args.setFin))
				])));
};
var $justinmimbs$date$Date$toRataDie = function (_v0) {
	var rd = _v0.a;
	return rd;
};
var $justinmimbs$time_extra$Time$Extra$dateToMillis = function (date) {
	var daysSinceEpoch = $justinmimbs$date$Date$toRataDie(date) - 719163;
	return daysSinceEpoch * 86400000;
};
var $justinmimbs$date$Date$RD = function (a) {
	return {$: 'RD', a: a};
};
var $justinmimbs$date$Date$isLeapYear = function (y) {
	return ((!A2($elm$core$Basics$modBy, 4, y)) && (!(!A2($elm$core$Basics$modBy, 100, y)))) || (!A2($elm$core$Basics$modBy, 400, y));
};
var $justinmimbs$date$Date$daysBeforeMonth = F2(
	function (y, m) {
		var leapDays = $justinmimbs$date$Date$isLeapYear(y) ? 1 : 0;
		switch (m.$) {
			case 'Jan':
				return 0;
			case 'Feb':
				return 31;
			case 'Mar':
				return 59 + leapDays;
			case 'Apr':
				return 90 + leapDays;
			case 'May':
				return 120 + leapDays;
			case 'Jun':
				return 151 + leapDays;
			case 'Jul':
				return 181 + leapDays;
			case 'Aug':
				return 212 + leapDays;
			case 'Sep':
				return 243 + leapDays;
			case 'Oct':
				return 273 + leapDays;
			case 'Nov':
				return 304 + leapDays;
			default:
				return 334 + leapDays;
		}
	});
var $justinmimbs$date$Date$floorDiv = F2(
	function (a, b) {
		return $elm$core$Basics$floor(a / b);
	});
var $justinmimbs$date$Date$daysBeforeYear = function (y1) {
	var y = y1 - 1;
	var leapYears = (A2($justinmimbs$date$Date$floorDiv, y, 4) - A2($justinmimbs$date$Date$floorDiv, y, 100)) + A2($justinmimbs$date$Date$floorDiv, y, 400);
	return (365 * y) + leapYears;
};
var $justinmimbs$date$Date$daysInMonth = F2(
	function (y, m) {
		switch (m.$) {
			case 'Jan':
				return 31;
			case 'Feb':
				return $justinmimbs$date$Date$isLeapYear(y) ? 29 : 28;
			case 'Mar':
				return 31;
			case 'Apr':
				return 30;
			case 'May':
				return 31;
			case 'Jun':
				return 30;
			case 'Jul':
				return 31;
			case 'Aug':
				return 31;
			case 'Sep':
				return 30;
			case 'Oct':
				return 31;
			case 'Nov':
				return 30;
			default:
				return 31;
		}
	});
var $justinmimbs$date$Date$fromCalendarDate = F3(
	function (y, m, d) {
		return $justinmimbs$date$Date$RD(
			($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A3(
				$elm$core$Basics$clamp,
				1,
				A2($justinmimbs$date$Date$daysInMonth, y, m),
				d));
	});
var $justinmimbs$date$Date$fromPosix = F2(
	function (zone, posix) {
		return A3(
			$justinmimbs$date$Date$fromCalendarDate,
			A2($elm$time$Time$toYear, zone, posix),
			A2($elm$time$Time$toMonth, zone, posix),
			A2($elm$time$Time$toDay, zone, posix));
	});
var $justinmimbs$time_extra$Time$Extra$timeFromClock = F4(
	function (hour, minute, second, millisecond) {
		return (((hour * 3600000) + (minute * 60000)) + (second * 1000)) + millisecond;
	});
var $justinmimbs$time_extra$Time$Extra$timeFromPosix = F2(
	function (zone, posix) {
		return A4(
			$justinmimbs$time_extra$Time$Extra$timeFromClock,
			A2($elm$time$Time$toHour, zone, posix),
			A2($elm$time$Time$toMinute, zone, posix),
			A2($elm$time$Time$toSecond, zone, posix),
			A2($elm$time$Time$toMillis, zone, posix));
	});
var $justinmimbs$time_extra$Time$Extra$toOffset = F2(
	function (zone, posix) {
		var millis = $elm$time$Time$posixToMillis(posix);
		var localMillis = $justinmimbs$time_extra$Time$Extra$dateToMillis(
			A2($justinmimbs$date$Date$fromPosix, zone, posix)) + A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix);
		return ((localMillis - millis) / 60000) | 0;
	});
var $elm$time$Time$utc = A2($elm$time$Time$Zone, 0, _List_Nil);
var $f0i$iso8601$Iso8601$toUtcDateTimeString = function (time) {
	return A3($f0i$iso8601$Iso8601$toString, $f0i$iso8601$Iso8601$Second, $elm$time$Time$utc, time);
};
var $author$project$Widget$makeFieldUpdate = F3(
	function (model, field, str) {
		if (_Utils_eq(field, $author$project$Widget$debutFieldId)) {
			var _v0 = A2($elm$json$Json$Decode$decodeString, $elm_community$json_extra$Json$Decode$Extra$datetime, '\"' + (str + '\"'));
			if (_v0.$ === 'Ok') {
				var date = _v0.a;
				var selSet = $author$project$Timeline$Models$selectionToSet(model.timelineState.selection);
				var records = $elm$core$Dict$values(
					A2(
						$elm$core$Dict$filter,
						F2(
							function (k, _v1) {
								return A2($elm$core$Set$member, k, selSet);
							}),
						model.records));
				var offset = A2($justinmimbs$time_extra$Time$Extra$toOffset, model.timelineState.zone, date) * 60000;
				var base = A2(
					$elm$core$Maybe$withDefault,
					date,
					A2(
						$elm$core$Maybe$map,
						$elm$time$Time$millisToPosix,
						$elm$core$List$minimum(
							A2(
								$elm$core$List$map,
								function ($) {
									return $.date;
								},
								records))));
				var change = $author$project$Moment$fromDuration(
					A2($author$project$Moment$durationBetween, base, date)) - offset;
				return $author$project$Widget$modifyRecordsDelta(
					{
						changeAmplitude: 0,
						changeDebut: (change / 1000) | 0,
						ids: A2(
							$elm$core$List$filterMap,
							$elm$core$String$toInt,
							$elm$core$Set$toList(selSet))
					});
			} else {
				return $elm$core$Platform$Cmd$none;
			}
		} else {
			if (_Utils_eq(field, $author$project$Widget$finFieldId)) {
				var _v2 = A2($elm$json$Json$Decode$decodeString, $elm_community$json_extra$Json$Decode$Extra$datetime, '\"' + (str + '\"'));
				if (_v2.$ === 'Ok') {
					var date = _v2.a;
					var selSet = $author$project$Timeline$Models$selectionToSet(model.timelineState.selection);
					return $author$project$Widget$modifyRecordsFin(
						{
							ids: A2(
								$elm$core$List$filterMap,
								$elm$core$String$toInt,
								$elm$core$Set$toList(selSet)),
							setFin: $f0i$iso8601$Iso8601$toUtcDateTimeString(date)
						});
				} else {
					return $elm$core$Platform$Cmd$none;
				}
			} else {
				if (_Utils_eq(field, $author$project$Widget$dureeFieldId)) {
					var _v3 = $elm$core$String$toFloat(str);
					if (_v3.$ === 'Just') {
						var _float = _v3.a;
						var selSet = $author$project$Timeline$Models$selectionToSet(model.timelineState.selection);
						return $author$project$Widget$modifyRecordsDuree(
							{
								ids: A2(
									$elm$core$List$filterMap,
									$elm$core$String$toInt,
									$elm$core$Set$toList(selSet)),
								setDuree: _float * $author$project$Widget$secondsForDurationUnit(model.durationUnit)
							});
					} else {
						return $elm$core$Platform$Cmd$none;
					}
				} else {
					return A3(
						$author$project$Widget$makeFieldUpdate_,
						model.timelineState.selection,
						field,
						$elm$json$Json$Encode$string(str));
				}
			}
		}
	});
var $elm$core$Platform$Cmd$map = _Platform_map;
var $elm$json$Json$Decode$bool = _Json_decodeBool;
var $author$project$Widget$Dark = {$: 'Dark'};
var $author$project$Widget$colorSchemeDecoder = A2(
	$elm$json$Json$Decode$map,
	function (str) {
		if (str === 'dark') {
			return $author$project$Widget$Dark;
		} else {
			return $author$project$Widget$Light;
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Widget$directionDecoder = A2(
	$elm$json$Json$Decode$map,
	function (dir) {
		switch (dir) {
			case 'horizontal':
				return $author$project$Timeline$Models$Horizontal;
			case 'vertical':
				return $author$project$Timeline$Models$Vertical;
			default:
				return $author$project$Timeline$Models$Horizontal;
		}
	},
	$elm$json$Json$Decode$string);
var $author$project$Widget$durationUnitDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (str) {
		switch (str) {
			case 'Hours':
				return $elm$json$Json$Decode$succeed($author$project$Widget$Hours);
			case 'Minutes':
				return $elm$json$Json$Decode$succeed($author$project$Widget$Minutes);
			default:
				return $elm$json$Json$Decode$fail('bad duration');
		}
	},
	$elm$json$Json$Decode$string);
var $elm$json$Json$Decode$maybe = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder),
				$elm$json$Json$Decode$succeed($elm$core$Maybe$Nothing)
			]));
};
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom = $elm$json$Json$Decode$map2($elm$core$Basics$apR);
var $elm$json$Json$Decode$at = F2(
	function (fields, decoder) {
		return A3($elm$core$List$foldr, $elm$json$Json$Decode$field, decoder, fields);
	});
var $elm$json$Json$Decode$null = _Json_decodeNull;
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder = F3(
	function (path, valDecoder, fallback) {
		var nullOr = function (decoder) {
			return $elm$json$Json$Decode$oneOf(
				_List_fromArray(
					[
						decoder,
						$elm$json$Json$Decode$null(fallback)
					]));
		};
		var handleResult = function (input) {
			var _v0 = A2(
				$elm$json$Json$Decode$decodeValue,
				A2($elm$json$Json$Decode$at, path, $elm$json$Json$Decode$value),
				input);
			if (_v0.$ === 'Ok') {
				var rawValue = _v0.a;
				var _v1 = A2(
					$elm$json$Json$Decode$decodeValue,
					nullOr(valDecoder),
					rawValue);
				if (_v1.$ === 'Ok') {
					var finalResult = _v1.a;
					return $elm$json$Json$Decode$succeed(finalResult);
				} else {
					return A2(
						$elm$json$Json$Decode$at,
						path,
						nullOr(valDecoder));
				}
			} else {
				return $elm$json$Json$Decode$succeed(fallback);
			}
		};
		return A2($elm$json$Json$Decode$andThen, handleResult, $elm$json$Json$Decode$value);
	});
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional = F4(
	function (key, valDecoder, fallback, decoder) {
		return A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optionalDecoder,
				_List_fromArray(
					[key]),
				valDecoder,
				fallback),
			decoder);
	});
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required = F3(
	function (key, valDecoder, decoder) {
		return A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A2($elm$json$Json$Decode$field, key, valDecoder),
			decoder);
	});
var $author$project$Widget$optionsDecoder = A4(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
	'colorScheme',
	$elm$json$Json$Decode$maybe($author$project$Widget$colorSchemeDecoder),
	$elm$core$Maybe$Nothing,
	A4(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
		'countMoments',
		$elm$json$Json$Decode$bool,
		false,
		A4(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
			'displaySubtotals',
			$elm$json$Json$Decode$bool,
			false,
			A4(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
				'durationUnit',
				$author$project$Widget$durationUnitDecoder,
				$author$project$Widget$Hours,
				A4(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
					'wrapText',
					$elm$json$Json$Decode$bool,
					false,
					A4(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
						'direction',
						$author$project$Widget$directionDecoder,
						$author$project$Timeline$Models$Horizontal,
						A4(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
							'lineSize',
							$elm$json$Json$Decode$float,
							38,
							A4(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
								'sectionOffsetY',
								$elm$json$Json$Decode$float,
								0,
								A3(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
									'zoom',
									$elm$json$Json$Decode$float,
									A3(
										$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
										'start',
										A2($elm$json$Json$Decode$map, $elm$time$Time$millisToPosix, $elm$json$Json$Decode$int),
										$elm$json$Json$Decode$succeed($author$project$Widget$Options)))))))))));
var $author$project$Selectize$Internal$LDivider = function (a) {
	return {$: 'LDivider', a: a};
};
var $author$project$Selectize$Internal$LEntry = F2(
	function (a, b) {
		return {$: 'LEntry', a: a, b: b};
	});
var $author$project$Selectize$Internal$closed = F3(
	function (id, toLabel, entries) {
		var addLabel = function (e) {
			if (e.$ === 'Entry') {
				var a = e.a;
				return A2(
					$author$project$Selectize$Internal$LEntry,
					a,
					toLabel(a));
			} else {
				var text = e.a;
				return $author$project$Selectize$Internal$LDivider(text);
			}
		};
		var labeledEntries = A2($elm$core$List$map, addLabel, entries);
		return {entries: labeledEntries, entryHeights: _List_Nil, id: id, menuHeight: 0, mouseFocus: $elm$core$Maybe$Nothing, open: false, preventBlur: false, query: '', scrollTop: 0, zipList: $elm$core$Maybe$Nothing};
	});
var $author$project$Selectize$closed = F3(
	function (id, toLabel, entries) {
		return A3($author$project$Selectize$Internal$closed, id, toLabel, entries);
	});
var $author$project$Field$DateTime = {$: 'DateTime'};
var $author$project$Field$ListInt = function (a) {
	return {$: 'ListInt', a: a};
};
var $author$project$Widget$Translations$startDate = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'startDate');
};
var $author$project$Widget$debutField = function (trans) {
	return {
		id: $author$project$Widget$debutFieldId,
		isFormula: false,
		label: $author$project$Widget$Translations$startDate(trans),
		ofType: $author$project$Field$DateTime,
		values: $author$project$Field$ListInt(_List_Nil)
	};
};
var $author$project$Field$ListFloat = function (a) {
	return {$: 'ListFloat', a: a};
};
var $author$project$Widget$Translations$duration = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'duration');
};
var $author$project$Field$Float = function (a) {
	return {$: 'Float', a: a};
};
var $author$project$Field$Minus = {$: 'Minus'};
var $author$project$Field$Right = {$: 'Right'};
var $author$project$Field$standardFloat = $author$project$Field$Float(
	{align: $author$project$Field$Right, decimals: 0, format: $author$project$Field$Standard, maxDecimals: 10, numSign: $author$project$Field$Minus, wrap: false});
var $author$project$Widget$dureeField = function (trans) {
	return {
		id: $author$project$Widget$dureeFieldId,
		isFormula: false,
		label: $author$project$Widget$Translations$duration(trans),
		ofType: $author$project$Field$standardFloat,
		values: $author$project$Field$ListFloat(_List_Nil)
	};
};
var $author$project$Selectize$Internal$Entry = function (a) {
	return {$: 'Entry', a: a};
};
var $author$project$Selectize$Internal$entry = function (a) {
	return $author$project$Selectize$Internal$Entry(a);
};
var $author$project$Selectize$entry = function (a) {
	return $author$project$Selectize$Internal$entry(a);
};
var $author$project$Widget$Translations$endDate = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'endDate');
};
var $author$project$Widget$finField = function (trans) {
	return {
		id: $author$project$Widget$finFieldId,
		isFormula: false,
		label: $author$project$Widget$Translations$endDate(trans),
		ofType: $author$project$Field$DateTime,
		values: $author$project$Field$ListInt(_List_Nil)
	};
};
var $elm_community$list_extra$List$Extra$gatherWith = F2(
	function (testFn, list) {
		var helper = F2(
			function (scattered, gathered) {
				helper:
				while (true) {
					if (!scattered.b) {
						return $elm$core$List$reverse(gathered);
					} else {
						var toGather = scattered.a;
						var population = scattered.b;
						var _v1 = A2(
							$elm$core$List$partition,
							testFn(toGather),
							population);
						var gathering = _v1.a;
						var remaining = _v1.b;
						var $temp$scattered = remaining,
							$temp$gathered = A2(
							$elm$core$List$cons,
							_Utils_Tuple2(toGather, gathering),
							gathered);
						scattered = $temp$scattered;
						gathered = $temp$gathered;
						continue helper;
					}
				}
			});
		return A2(helper, list, _List_Nil);
	});
var $elm_community$list_extra$List$Extra$gatherEqualsBy = F2(
	function (extract, list) {
		return A2(
			$elm_community$list_extra$List$Extra$gatherWith,
			F2(
				function (a, b) {
					return _Utils_eq(
						extract(a),
						extract(b));
				}),
			list);
	});
var $author$project$Widget$ReceiveData = F9(
	function (records, maybeSelection, fields, content, editable, totals, group, subgroup, colorScheme) {
		return {colorScheme: colorScheme, content: content, editable: editable, fields: fields, group: group, maybeSelection: maybeSelection, records: records, subgroup: subgroup, totals: totals};
	});
var $author$project$Field$ListString = function (a) {
	return {$: 'ListString', a: a};
};
var $author$project$Field$emptyValuesFor = function (ofType) {
	switch (ofType.$) {
		case 'Text':
			return $author$project$Field$ListString(_List_Nil);
		case 'Float':
			return $author$project$Field$ListFloat(_List_Nil);
		case 'Int':
			return $author$project$Field$ListInt(_List_Nil);
		case 'Bool':
			return $author$project$Field$ListInt(_List_Nil);
		case 'Date':
			return $author$project$Field$ListInt(_List_Nil);
		case 'DateTime':
			return $author$project$Field$ListInt(_List_Nil);
		case 'ToOne':
			return $author$project$Field$ListInt(_List_Nil);
		case 'ToMany':
			return $author$project$Field$ListInt(_List_Nil);
		case 'Ref':
			return $author$project$Field$ListInt(_List_Nil);
		case 'Choice':
			return $author$project$Field$ListString(_List_Nil);
		case 'ChoiceList':
			return $author$project$Field$ListString(_List_Nil);
		default:
			return $author$project$Field$ListString(_List_Nil);
	}
};
var $author$project$Field$Bool = {$: 'Bool'};
var $author$project$Field$Choice = function (a) {
	return {$: 'Choice', a: a};
};
var $author$project$Field$ChoiceString = function (a) {
	return {$: 'ChoiceString', a: a};
};
var $author$project$Field$Date = {$: 'Date'};
var $author$project$Field$Int = function (a) {
	return {$: 'Int', a: a};
};
var $author$project$Field$Ref = function (a) {
	return {$: 'Ref', a: a};
};
var $author$project$Field$Text = function (a) {
	return {$: 'Text', a: a};
};
var $author$project$Field$Unknow = {$: 'Unknow'};
var $author$project$Field$ChoiceRecord = F8(
	function (id, label, textColor, backgroundColor, bold, italic, underline, crossedOut) {
		return {backgroundColor: backgroundColor, bold: bold, crossedOut: crossedOut, id: id, italic: italic, label: label, textColor: textColor, underline: underline};
	});
var $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded = A2($elm$core$Basics$composeR, $elm$json$Json$Decode$succeed, $NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom);
var $author$project$Field$choiceDecoder = F2(
	function (defaultChoice, label) {
		return A4(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
			'fontStrikethrough',
			$elm$json$Json$Decode$bool,
			defaultChoice.crossedOut,
			A4(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
				'fontUnderline',
				$elm$json$Json$Decode$bool,
				defaultChoice.underline,
				A4(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
					'fontItalic',
					$elm$json$Json$Decode$bool,
					defaultChoice.italic,
					A4(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
						'fontBold',
						$elm$json$Json$Decode$bool,
						defaultChoice.bold,
						A4(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
							'fillColor',
							$elm$json$Json$Decode$string,
							defaultChoice.backgroundColor,
							A4(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
								'textColor',
								$elm$json$Json$Decode$string,
								defaultChoice.textColor,
								A2(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
									label,
									A2(
										$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
										$author$project$Field$ChoiceString(label),
										$elm$json$Json$Decode$succeed($author$project$Field$ChoiceRecord)))))))));
	});
var $elm_community$json_extra$Json$Decode$Extra$combine = A2(
	$elm$core$List$foldr,
	$elm$json$Json$Decode$map2($elm$core$List$cons),
	$elm$json$Json$Decode$succeed(_List_Nil));
var $author$project$Field$choicesDecoder = F2(
	function (defaultChoice, keys) {
		return A2(
			$elm$json$Json$Decode$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$map(
					function (c) {
						return _Utils_Tuple2(c.label, c);
					}),
				$elm$core$Dict$fromList),
			$elm_community$json_extra$Json$Decode$Extra$combine(
				A2(
					$elm$core$List$map,
					function (key) {
						return A2(
							$elm$json$Json$Decode$field,
							key,
							A2($author$project$Field$choiceDecoder, defaultChoice, key));
					},
					keys)));
	});
var $elm_community$json_extra$Json$Decode$Extra$keys = A2(
	$elm$json$Json$Decode$map,
	$elm$core$List$map($elm$core$Tuple$first),
	$elm$json$Json$Decode$keyValuePairs(
		$elm$json$Json$Decode$succeed(_Utils_Tuple0)));
var $author$project$Field$NumberFormat = F6(
	function (format, numSign, wrap, align, decimals, maxDecimals) {
		return {align: align, decimals: decimals, format: format, maxDecimals: maxDecimals, numSign: numSign, wrap: wrap};
	});
var $author$project$Field$Center = {$: 'Center'};
var $author$project$Field$Left = {$: 'Left'};
var $author$project$Field$alignDecoder = A2(
	$elm$json$Json$Decode$map,
	function (str) {
		switch (str) {
			case 'left':
				return $author$project$Field$Left;
			case 'center':
				return $author$project$Field$Center;
			default:
				return $author$project$Field$Right;
		}
	},
	$elm$json$Json$Decode$string);
var $elm$json$Json$Decode$map6 = _Json_map6;
var $author$project$Field$numSignDecoder = A2(
	$elm$json$Json$Decode$map,
	function (str) {
		return (str === 'parens') ? $author$project$Field$Parens : $author$project$Field$Minus;
	},
	$elm$json$Json$Decode$string);
var $author$project$Field$Currency = function (a) {
	return {$: 'Currency', a: a};
};
var $author$project$Field$Scientific = {$: 'Scientific'};
var $author$project$Field$Thousands = {$: 'Thousands'};
var $author$project$Field$numberModeDecoder = A2(
	$elm$json$Json$Decode$andThen,
	function (_v0) {
		var str = _v0.a;
		var maybe = _v0.b;
		var _v1 = _Utils_Tuple2(str, maybe);
		switch (_v1.a) {
			case 'currency':
				if (_v1.b.$ === 'Just') {
					var curstr = _v1.b.a;
					return $elm$json$Json$Decode$succeed(
						$author$project$Field$Currency(
							$Chadtech$elm_money$Money$fromString(curstr)));
				} else {
					var _v2 = _v1.b;
					return $elm$json$Json$Decode$succeed(
						$author$project$Field$Currency($elm$core$Maybe$Nothing));
				}
			case 'decimal':
				return $elm$json$Json$Decode$succeed($author$project$Field$Thousands);
			case 'percent':
				return $elm$json$Json$Decode$succeed($author$project$Field$Percent);
			case 'scientific':
				return $elm$json$Json$Decode$succeed($author$project$Field$Scientific);
			default:
				return $elm$json$Json$Decode$succeed($author$project$Field$Standard);
		}
	},
	A3(
		$elm$json$Json$Decode$map2,
		$elm$core$Tuple$pair,
		A2($elm$json$Json$Decode$field, 'numMode', $elm$json$Json$Decode$string),
		$elm$json$Json$Decode$maybe(
			A2($elm$json$Json$Decode$field, 'currency', $elm$json$Json$Decode$string))));
var $author$project$Field$numberFormatDecoder = A7(
	$elm$json$Json$Decode$map6,
	$author$project$Field$NumberFormat,
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$author$project$Field$numberModeDecoder,
				$elm$json$Json$Decode$succeed($author$project$Field$Standard)
			])),
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$field, 'numSign', $author$project$Field$numSignDecoder),
				$elm$json$Json$Decode$succeed($author$project$Field$Minus)
			])),
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$field, 'wrap', $elm$json$Json$Decode$bool),
				$elm$json$Json$Decode$succeed(false)
			])),
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$field, 'alignment', $author$project$Field$alignDecoder),
				$elm$json$Json$Decode$succeed($author$project$Field$Right)
			])),
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$field, 'decimals', $elm$json$Json$Decode$int),
				$elm$json$Json$Decode$succeed(0)
			])),
	$elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				A2($elm$json$Json$Decode$field, 'maxDecimals', $elm$json$Json$Decode$int),
				$elm$json$Json$Decode$succeed(10)
			])));
var $author$project$Field$ChoiceInt = function (a) {
	return {$: 'ChoiceInt', a: a};
};
var $author$project$Field$refDecoder = function (defaultChoice) {
	return A2(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
		defaultChoice.crossedOut,
		A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
			defaultChoice.underline,
			A2(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
				defaultChoice.italic,
				A2(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
					defaultChoice.bold,
					A2(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
						defaultChoice.backgroundColor,
						A2(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$hardcoded,
							defaultChoice.textColor,
							A3(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
								'label',
								$elm$json$Json$Decode$string,
								A3(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
									'id',
									A2($elm$json$Json$Decode$map, $author$project$Field$ChoiceInt, $elm$json$Json$Decode$int),
									$elm$json$Json$Decode$succeed($author$project$Field$ChoiceRecord)))))))));
};
var $author$project$Field$fieldTypeDecoder = function (defaultChoice) {
	return A2(
		$elm$json$Json$Decode$andThen,
		function (t) {
			var radical = A2($elm$core$String$startsWith, 'Ref:', t) ? 'Ref' : (A2($elm$core$String$startsWith, 'DateTime:', t) ? 'DateTime' : t);
			switch (radical) {
				case 'Text':
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Field$Text,
						$elm$json$Json$Decode$oneOf(
							_List_fromArray(
								[
									A2(
									$elm$json$Json$Decode$at,
									_List_fromArray(
										['widgetOptions', 'wrap']),
									$elm$json$Json$Decode$bool),
									$elm$json$Json$Decode$succeed(false)
								])));
				case 'Numeric':
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Field$Float,
						A2($elm$json$Json$Decode$field, 'widgetOptions', $author$project$Field$numberFormatDecoder));
				case 'Int':
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Field$Int,
						A2($elm$json$Json$Decode$field, 'widgetOptions', $author$project$Field$numberFormatDecoder));
				case 'Bool':
					return $elm$json$Json$Decode$succeed($author$project$Field$Bool);
				case 'Date':
					return $elm$json$Json$Decode$succeed($author$project$Field$Date);
				case 'DateTime':
					return $elm$json$Json$Decode$succeed($author$project$Field$DateTime);
				case 'Ref':
					return A2(
						$elm$json$Json$Decode$map,
						$author$project$Field$Ref,
						$elm$json$Json$Decode$oneOf(
							_List_fromArray(
								[
									A2(
									$elm$json$Json$Decode$field,
									'references',
									$elm$json$Json$Decode$list(
										$author$project$Field$refDecoder(defaultChoice))),
									$elm$json$Json$Decode$succeed(_List_Nil)
								])));
				case 'Choice':
					return A3(
						$elm$json$Json$Decode$map2,
						F2(
							function (chl, opts) {
								return $author$project$Field$Choice(
									A2(
										$elm$core$List$map,
										function (ch) {
											return A2(
												$elm$core$Maybe$withDefault,
												_Utils_update(
													defaultChoice,
													{
														id: $author$project$Field$ChoiceString(ch),
														label: ch
													}),
												A2($elm$core$Dict$get, ch, opts));
										},
										chl));
							}),
						A2(
							$elm$json$Json$Decode$at,
							_List_fromArray(
								['widgetOptions', 'choices']),
							$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
						A2(
							$elm$json$Json$Decode$at,
							_List_fromArray(
								['widgetOptions', 'choiceOptions']),
							A2(
								$elm$json$Json$Decode$andThen,
								$author$project$Field$choicesDecoder(defaultChoice),
								$elm_community$json_extra$Json$Decode$Extra$keys)));
				default:
					return $elm$json$Json$Decode$succeed($author$project$Field$Unknow);
			}
		},
		A2($elm$json$Json$Decode$field, 'type', $elm$json$Json$Decode$string));
};
var $elm$json$Json$Decode$map5 = _Json_map5;
var $author$project$Field$valuesDecoder = F2(
	function (decdr, vlist) {
		return A2(
			$elm$json$Json$Decode$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$List$filterMap($elm$core$Basics$identity),
				vlist),
			$elm$json$Json$Decode$list(
				$elm$json$Json$Decode$maybe(
					A3(
						$elm$json$Json$Decode$map2,
						F2(
							function (value, label) {
								return {label: label, value: value};
							}),
						A2($elm$json$Json$Decode$field, 'value', decdr),
						A2($elm$json$Json$Decode$field, 'label', $elm$json$Json$Decode$string)))));
	});
var $author$project$Field$valuesDecoderFor = function (ofType) {
	switch (ofType.$) {
		case 'Text':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$string, $author$project$Field$ListString);
		case 'Float':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$float, $author$project$Field$ListFloat);
		case 'Int':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$int, $author$project$Field$ListInt);
		case 'Bool':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$int, $author$project$Field$ListInt);
		case 'Date':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$int, $author$project$Field$ListInt);
		case 'DateTime':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$int, $author$project$Field$ListInt);
		case 'ToOne':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$int, $author$project$Field$ListInt);
		case 'ToMany':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$int, $author$project$Field$ListInt);
		case 'Ref':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$int, $author$project$Field$ListInt);
		case 'Choice':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$string, $author$project$Field$ListString);
		case 'ChoiceList':
			return A2($author$project$Field$valuesDecoder, $elm$json$Json$Decode$string, $author$project$Field$ListString);
		default:
			return A2(
				$elm$json$Json$Decode$map,
				$author$project$Field$ListInt,
				$elm$json$Json$Decode$succeed(_List_Nil));
	}
};
var $author$project$Field$decoder = function (defaultChoice) {
	return A2(
		$elm$json$Json$Decode$andThen,
		function (f) {
			return A2(
				$elm$json$Json$Decode$map,
				function (values) {
					return {
						id: f.id,
						isFormula: f.isFormula && (!$elm$core$String$isEmpty(f.formula)),
						label: f.label,
						ofType: f.ofType,
						values: values
					};
				},
				A2(
					$elm$json$Json$Decode$map,
					$elm$core$Maybe$withDefault(
						$author$project$Field$emptyValuesFor(f.ofType)),
					$elm$json$Json$Decode$maybe(
						A2(
							$elm$json$Json$Decode$field,
							'values',
							$author$project$Field$valuesDecoderFor(f.ofType)))));
		},
		A6(
			$elm$json$Json$Decode$map5,
			F5(
				function (id, label, ofType, isFormula, formula) {
					return {formula: formula, id: id, isFormula: isFormula, label: label, ofType: ofType};
				}),
			A2($elm$json$Json$Decode$field, 'colId', $elm$json$Json$Decode$string),
			A2($elm$json$Json$Decode$field, 'label', $elm$json$Json$Decode$string),
			$author$project$Field$fieldTypeDecoder(defaultChoice),
			A2($elm$json$Json$Decode$field, 'isFormula', $elm$json$Json$Decode$bool),
			A2($elm$json$Json$Decode$field, 'formula', $elm$json$Json$Decode$string)));
};
var $author$project$Widget$defaultChoice = {
	backgroundColor: '',
	bold: false,
	crossedOut: false,
	id: $author$project$Field$ChoiceString('def'),
	italic: false,
	label: 'def',
	textColor: '',
	underline: false
};
var $author$project$Widget$Record = function (id) {
	return function (date) {
		return function (amplitude) {
			return function (groupe) {
				return function (groupeId) {
					return function (sousGroupe) {
						return function (sousGroupeId) {
							return function (contenu) {
								return function (fields) {
									return function (totals) {
										return function (couleur) {
											return function (isLocked) {
												return function (isGlobal) {
													return function (comment) {
														return {amplitude: amplitude, comment: comment, contenu: contenu, couleur: couleur, date: date, fields: fields, groupe: groupe, groupeId: groupeId, id: id, isGlobal: isGlobal, isLocked: isLocked, sousGroupe: sousGroupe, sousGroupeId: sousGroupeId, totals: totals};
													};
												};
											};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
function $author$project$Widget$cyclic$anyDecoder() {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$elm$json$Json$Decode$string,
				A2($elm$json$Json$Decode$map, $elm$core$String$fromInt, $elm$json$Json$Decode$int),
				A2($elm$json$Json$Decode$map, $elm$core$String$fromFloat, $elm$json$Json$Decode$float),
				A2(
				$elm$json$Json$Decode$map,
				function (b) {
					return b ? 'true' : 'false';
				},
				$elm$json$Json$Decode$bool),
				$elm$json$Json$Decode$null(''),
				A2(
				$elm$json$Json$Decode$map,
				$elm$core$String$join(', '),
				$elm$json$Json$Decode$list(
					$elm$json$Json$Decode$lazy(
						function (_v0) {
							return $author$project$Widget$cyclic$anyDecoder();
						})))
			]));
}
try {
	var $author$project$Widget$anyDecoder = $author$project$Widget$cyclic$anyDecoder();
	$author$project$Widget$cyclic$anyDecoder = function () {
		return $author$project$Widget$anyDecoder;
	};
} catch ($) {
	throw 'Some top-level definitions from `Widget` are causing infinite recursion:\n\n  ┌─────┐\n  │    anyDecoder\n  └─────┘\n\nThese errors are very tricky, so read https://elm-lang.org/0.19.1/bad-recursion to learn how to fix it!';}
var $elm$json$Json$Decode$nullable = function (decoder) {
	return $elm$json$Json$Decode$oneOf(
		_List_fromArray(
			[
				$elm$json$Json$Decode$null($elm$core$Maybe$Nothing),
				A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, decoder)
			]));
};
var $author$project$Widget$numericOrBoolDecoder = $elm$json$Json$Decode$oneOf(
	_List_fromArray(
		[
			$elm$json$Json$Decode$float,
			A2(
			$elm$json$Json$Decode$map,
			function (b) {
				return b ? 1 : 0;
			},
			$elm$json$Json$Decode$bool),
			$elm$json$Json$Decode$null(0)
		]));
var $author$project$Widget$recordDecoder = A4(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
	'commentaire',
	A2(
		$elm$json$Json$Decode$map,
		function (s) {
			return $elm$core$String$isEmpty(s) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(s);
		},
		$elm$json$Json$Decode$string),
	$elm$core$Maybe$Nothing,
	A4(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
		'isGlobal',
		$elm$json$Json$Decode$bool,
		false,
		A4(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
			'isLocked',
			$elm$json$Json$Decode$bool,
			false,
			A3(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
				'couleur',
				A2(
					$elm$json$Json$Decode$map,
					$elm$core$Maybe$withDefault(''),
					$elm$json$Json$Decode$oneOf(
						_List_fromArray(
							[
								$elm$json$Json$Decode$maybe($elm$json$Json$Decode$string),
								$elm$json$Json$Decode$nullable($elm$json$Json$Decode$string)
							]))),
				A4(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
					'totals',
					$elm$json$Json$Decode$list($author$project$Widget$numericOrBoolDecoder),
					_List_Nil,
					A4(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
						'fields',
						$elm$json$Json$Decode$dict($author$project$Widget$anyDecoder),
						$elm$core$Dict$empty,
						A4(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
							'contenu',
							$elm$json$Json$Decode$list($author$project$Widget$anyDecoder),
							_List_Nil,
							A4(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
								'sousGroupeId',
								A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, $elm$json$Json$Decode$string),
								$elm$core$Maybe$Nothing,
								A4(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
									'sousGroupe',
									A2($elm$json$Json$Decode$map, $elm$core$Maybe$Just, $elm$json$Json$Decode$string),
									$elm$core$Maybe$Nothing,
									A3(
										$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
										'groupeId',
										$author$project$Widget$anyDecoder,
										A3(
											$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
											'groupe',
											$author$project$Widget$anyDecoder,
											A3(
												$elm$core$Basics$apL,
												$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required('duree'),
												$elm$json$Json$Decode$oneOf(
													_List_fromArray(
														[
															$elm$json$Json$Decode$float,
															$elm$json$Json$Decode$null(25200)
														])),
												A3(
													$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
													'date',
													A2($elm$json$Json$Decode$map, $elm$time$Time$posixToMillis, $elm_community$json_extra$Json$Decode$Extra$datetime),
													A3(
														$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
														'id',
														$elm$json$Json$Decode$int,
														$elm$json$Json$Decode$succeed($author$project$Widget$Record)))))))))))))));
var $author$project$Widget$receiveDecoder = A2(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
	A2($elm$json$Json$Decode$field, 'colorScheme', $author$project$Widget$colorSchemeDecoder),
	A2(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
		A2(
			$elm$json$Json$Decode$field,
			'subgroup',
			$elm$json$Json$Decode$maybe($elm$json$Json$Decode$string)),
		A2(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
			A2($elm$json$Json$Decode$field, 'group', $elm$json$Json$Decode$string),
			A2(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
				A2(
					$elm$json$Json$Decode$field,
					'totals',
					$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
				A2(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
					A2(
						$elm$json$Json$Decode$field,
						'editable',
						$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
					A2(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
						A2(
							$elm$json$Json$Decode$field,
							'content',
							$elm$json$Json$Decode$list($elm$json$Json$Decode$string)),
						A2(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
							A2(
								$elm$json$Json$Decode$field,
								'fields',
								$elm$json$Json$Decode$list(
									$author$project$Field$decoder($author$project$Widget$defaultChoice))),
							A2(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
								$elm$json$Json$Decode$maybe(
									A2(
										$elm$json$Json$Decode$field,
										'selection',
										$elm$json$Json$Decode$list($elm$json$Json$Decode$int))),
								A2(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$custom,
									A2(
										$elm$json$Json$Decode$field,
										'rows',
										$elm$json$Json$Decode$list($author$project$Widget$recordDecoder)),
									$elm$json$Json$Decode$succeed($author$project$Widget$ReceiveData))))))))));
var $author$project$Timeline$reinit = F2(
	function (groups, old) {
		return A2($author$project$Timeline$toTimelineBox, groups, old);
	});
var $author$project$Timeline$Models$addToSelection = F3(
	function (gid, ids, _v0) {
		var dict = _v0.a;
		var addSet = $elm$core$Set$fromList(ids);
		return $author$project$Timeline$Models$Selection(
			A3(
				$elm$core$Dict$update,
				gid,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Maybe$map(
						$elm$core$Set$union(addSet)),
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Maybe$withDefault(addSet),
						$elm$core$Maybe$Just)),
				dict));
	});
var $elm_community$list_extra$List$Extra$findMap = F2(
	function (f, list) {
		findMap:
		while (true) {
			if (!list.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var a = list.a;
				var tail = list.b;
				var _v1 = f(a);
				if (_v1.$ === 'Just') {
					var b = _v1.a;
					return $elm$core$Maybe$Just(b);
				} else {
					var $temp$f = f,
						$temp$list = tail;
					f = $temp$f;
					list = $temp$list;
					continue findMap;
				}
			}
		}
	});
var $author$project$Widget$sectionIdsToSelection = F2(
	function (groups, ids) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (id, sel) {
					return A2(
						$elm$core$Maybe$withDefault,
						sel,
						A2(
							$elm_community$list_extra$List$Extra$findMap,
							function (group) {
								return A2(
									$elm$core$Maybe$map,
									function (sid) {
										return A3(
											$author$project$Timeline$Models$addToSelection,
											group.id,
											_List_fromArray(
												[sid]),
											sel);
									},
									A2(
										$elm_community$list_extra$List$Extra$findMap,
										function (sec) {
											return _Utils_eq(
												sec.id,
												$elm$core$String$fromInt(id)) ? $elm$core$Maybe$Just(sec.id) : $elm$core$Maybe$Nothing;
										},
										group.sections));
							},
							groups));
				}),
			$author$project$Timeline$Models$emptySelection,
			ids);
	});
var $author$project$Widget$textSelectAndFocus = _Platform_outgoingPort('textSelectAndFocus', $elm$json$Json$Encode$string);
var $author$project$Timeline$Models$addSelection = F2(
	function (_v0, _v1) {
		var add = _v0.a;
		var sel = _v1.a;
		return $author$project$Timeline$Models$Selection(
			A6(
				$elm$core$Dict$merge,
				$elm$core$Dict$insert,
				F4(
					function (gid, left, right, result) {
						return A3(
							$elm$core$Dict$insert,
							gid,
							A2($elm$core$Set$union, left, right),
							result);
					}),
				$elm$core$Dict$insert,
				add,
				sel,
				$elm$core$Dict$empty));
	});
var $author$project$Timeline$Models$groupDiffSelection = F2(
	function (_v0, _v1) {
		var left = _v0.a;
		var right = _v1.a;
		return A6(
			$elm$core$Dict$merge,
			F3(
				function (gid, _v2, result) {
					return A2($elm$core$Set$insert, gid, result);
				}),
			F4(
				function (gid, lset, rset, result) {
					return _Utils_eq(lset, rset) ? result : A2($elm$core$Set$insert, gid, result);
				}),
			F3(
				function (gid, _v3, result) {
					return A2($elm$core$Set$insert, gid, result);
				}),
			left,
			right,
			$elm$core$Set$empty);
	});
var $elm$core$Dict$diff = F2(
	function (t1, t2) {
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (k, v, t) {
					return A2($elm$core$Dict$remove, k, t);
				}),
			t1,
			t2);
	});
var $elm$core$Set$diff = F2(
	function (_v0, _v1) {
		var dict1 = _v0.a;
		var dict2 = _v1.a;
		return $elm$core$Set$Set_elm_builtin(
			A2($elm$core$Dict$diff, dict1, dict2));
	});
var $author$project$Timeline$Models$substractSelection = F2(
	function (_v0, _v1) {
		var rem = _v0.a;
		var sel = _v1.a;
		return $author$project$Timeline$Models$Selection(
			A6(
				$elm$core$Dict$merge,
				F3(
					function (_v2, _v3, result) {
						return result;
					}),
				F4(
					function (gid, remS, selS, result) {
						return A3(
							$elm$core$Dict$insert,
							gid,
							A2($elm$core$Set$diff, selS, remS),
							result);
					}),
				$elm$core$Dict$insert,
				rem,
				sel,
				$elm$core$Dict$empty));
	});
var $author$project$Timeline$Update$updateMeshes = function (box) {
	var selection = function () {
		var _v1 = box.interaction;
		if (_v1.$ === 'Select') {
			var selAction = _v1.a;
			var sel = _v1.c;
			if (selAction.$ === 'AddSelection') {
				return A2($author$project$Timeline$Models$addSelection, sel, box.selection);
			} else {
				return A2($author$project$Timeline$Models$substractSelection, sel, box.selection);
			}
		} else {
			return box.selection;
		}
	}();
	var groups = A2($author$project$Timeline$Models$groupDiffSelection, selection, box.meshesSelection);
	var _v0 = A5(
		$author$project$Timeline$Models$meshesForGroups,
		box.first,
		box.groups,
		$elm$core$Set$toList(groups),
		selection,
		_Utils_Tuple2(box.meshes, box.selectedMeshes));
	var meshes = _v0.a;
	var selected = _v0.b;
	return _Utils_update(
		box,
		{meshes: meshes, meshesSelection: selection, selectedMeshes: selected});
};
var $author$project$Timeline$Update$updateSelection = F2(
	function (selection, box) {
		return $author$project$Timeline$Update$updateMeshes(
			_Utils_update(
				box,
				{selection: selection}));
	});
var $author$project$Widget$wrapGroupe = function (g) {
	var _v0 = g.sousGroupe;
	if (_v0.$ === 'Just') {
		var sId = _v0.a;
		return _List_fromArray(
			[g.groupe, sId]);
	} else {
		return _List_fromArray(
			[g.groupe]);
	}
};
var $author$project$Widget$wrapGroupeId = function (g) {
	var _v0 = g.sousGroupeId;
	if (_v0.$ === 'Just') {
		var sId = _v0.a;
		return g.groupeId + (':' + sId);
	} else {
		return g.groupeId;
	}
};
var $author$project$Timeline$groupsWidth = 250;
var $author$project$Timeline$zoomAllTime = F2(
	function (width, tl) {
		var mblast = A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.section;
				},
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.end;
					},
					$elm$time$Time$posixToMillis)),
			$elm_community$list_extra$List$Extra$last(tl.sections));
		var mbfirst = A2(
			$elm$core$Maybe$map,
			A2(
				$elm$core$Basics$composeR,
				function ($) {
					return $.section;
				},
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.start;
					},
					$elm$time$Time$posixToMillis)),
			$elm$core$List$head(tl.sections));
		var _v0 = _Utils_Tuple2(mbfirst, mblast);
		if ((_v0.a.$ === 'Just') && (_v0.b.$ === 'Just')) {
			var first = _v0.a.a;
			var last = _v0.b.a;
			var dur = (last - first) / $author$project$Timeline$Models$duration.day;
			return _Utils_update(
				tl,
				{start: (width - $author$project$Timeline$groupsWidth) * 0.02, zoom: ((width - $author$project$Timeline$groupsWidth) / dur) * 0.96});
		} else {
			return tl;
		}
	});
var $author$project$Widget$receiveData = F2(
	function (data, model) {
		var _v0 = A2($elm$json$Json$Decode$decodeValue, $author$project$Widget$receiveDecoder, data);
		if (_v0.$ === 'Err') {
			var err = _v0.a;
			return _Utils_Tuple2(
				A2(
					$author$project$Widget$addError,
					$elm$json$Json$Decode$errorToString(err),
					_Utils_update(
						model,
						{
							contentFields: _List_Nil,
							editableFields: _List_Nil,
							editableStates: $elm$core$Dict$empty,
							fields: $elm$core$Dict$empty,
							groupsFields: _List_Nil,
							groupsStates: $elm$core$Dict$empty,
							hasCreated: false,
							records: $elm$core$Dict$empty,
							selectStates: $elm$core$Dict$empty,
							showInspector: false,
							timelineState: A2($author$project$Timeline$reinit, _List_Nil, model.timelineState),
							totalFields: _List_Nil
						})),
				$elm$core$Platform$Cmd$none);
		} else {
			var records = _v0.a.records;
			var content = _v0.a.content;
			var maybeSelection = _v0.a.maybeSelection;
			var fields = _v0.a.fields;
			var editable = _v0.a.editable;
			var totals = _v0.a.totals;
			var group = _v0.a.group;
			var subgroup = _v0.a.subgroup;
			var colorScheme = _v0.a.colorScheme;
			var recordsDict = $elm$core$Dict$fromList(
				A2(
					$elm$core$List$map,
					function (r) {
						return _Utils_Tuple2(
							$elm$core$String$fromInt(r.id),
							r);
					},
					records));
			var locale = $author$project$Field$localeForLanguage(model.language);
			var groupsFields = A2(
				$elm$core$Maybe$withDefault,
				_List_fromArray(
					[group]),
				A2(
					$elm$core$Maybe$map,
					function (sg) {
						return _List_fromArray(
							[group, sg]);
					},
					subgroup));
			var fields_ = A3(
				$elm$core$Dict$insert,
				$author$project$Widget$dureeFieldId,
				$author$project$Widget$dureeField(model.translations),
				A3(
					$elm$core$Dict$insert,
					$author$project$Widget$finFieldId,
					$author$project$Widget$finField(model.translations),
					A3(
						$elm$core$Dict$insert,
						$author$project$Widget$debutFieldId,
						$author$project$Widget$debutField(model.translations),
						$elm$core$Dict$fromList(
							A2(
								$elm$core$List$map,
								function (f) {
									return _Utils_Tuple2(f.id, f);
								},
								fields)))));
			var groups = A2(
				$elm$core$List$map,
				function (_v6) {
					var head = _v6.a;
					var tail = _v6.b;
					return {
						id: $author$project$Widget$wrapGroupeId(head),
						isSubtotal: false,
						label: $author$project$Widget$wrapGroupe(head),
						sections: A2(
							$elm$core$List$sortBy,
							A2(
								$elm$core$Basics$composeR,
								function ($) {
									return $.start;
								},
								$elm$time$Time$posixToMillis),
							A2(
								$elm$core$List$map,
								function (rec) {
									return {
										color: rec.couleur,
										end: $elm$time$Time$millisToPosix(
											rec.date + $elm$core$Basics$round(rec.amplitude * 1000)),
										hasComment: !_Utils_eq(rec.comment, $elm$core$Maybe$Nothing),
										id: $elm$core$String$fromInt(rec.id),
										isGlobal: rec.isGlobal,
										isLocked: rec.isLocked,
										labels: rec.contenu,
										start: $elm$time$Time$millisToPosix(rec.date)
									};
								},
								A2($elm$core$List$cons, head, tail)))
					};
				},
				A2(
					$elm_community$list_extra$List$Extra$gatherEqualsBy,
					$author$project$Widget$wrapGroupeId,
					A2(
						$elm$core$List$map,
						function (rec) {
							return _Utils_update(
								rec,
								{
									contenu: A3(
										$elm$core$List$map2,
										F2(
											function (fid, str) {
												var _v4 = A2($elm$core$Dict$get, fid, fields_);
												if (_v4.$ === 'Just') {
													var field = _v4.a;
													var _v5 = field.ofType;
													switch (_v5.$) {
														case 'Int':
															var format = _v5.a;
															return A2(
																$elm$core$Maybe$withDefault,
																str,
																A2(
																	$elm$core$Maybe$map,
																	A3($author$project$Field$floatToString, locale, model.currency, format),
																	$elm$core$String$toFloat(str)));
														case 'Float':
															var format = _v5.a;
															return A2(
																$elm$core$Maybe$withDefault,
																str,
																A2(
																	$elm$core$Maybe$map,
																	A3($author$project$Field$floatToString, locale, model.currency, format),
																	$elm$core$String$toFloat(str)));
														default:
															return str;
													}
												} else {
													return str;
												}
											}),
										content,
										rec.contenu)
								});
						},
						records)));
			var model_ = _Utils_update(
				model,
				{fields: fields_, records: recordsDict, totalFields: totals});
			var groupsUsage = model.options.displaySubtotals ? A2($author$project$Widget$addSubtotals, model_, groups) : groups;
			var newtl = function () {
				if (maybeSelection.$ === 'Nothing') {
					return A2($author$project$Timeline$reinit, groupsUsage, model.timelineState);
				} else {
					var sel = maybeSelection.a;
					return A2(
						$author$project$Timeline$Update$updateSelection,
						A2($author$project$Widget$sectionIdsToSelection, groupsUsage, sel),
						A2($author$project$Timeline$reinit, groupsUsage, model.timelineState));
				}
			}();
			var totalGroups = $author$project$Widget$addTotals(model_);
			var editableStates = A5($author$project$Widget$fieldsFromSelection, model.timelineState.zone, model.durationUnit, newtl.selection, recordsDict, editable);
			var cmd = ((!_Utils_eq(maybeSelection, $elm$core$Maybe$Nothing)) && model.hasCreated) ? A2(
				$elm$core$Maybe$withDefault,
				$elm$core$Platform$Cmd$none,
				A2(
					$elm$core$Maybe$map,
					function (id) {
						return $author$project$Widget$textSelectAndFocus(id);
					},
					$elm$core$List$head(editable))) : $elm$core$Platform$Cmd$none;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						colorScheme: colorScheme,
						contentFields: content,
						editableFields: A2(
							$elm$core$List$cons,
							$author$project$Widget$debutFieldId,
							A2(
								$elm$core$List$cons,
								$author$project$Widget$finFieldId,
								A2($elm$core$List$cons, $author$project$Widget$dureeFieldId, editable))),
						editableStates: editableStates,
						fields: fields_,
						groupId: group,
						groupsFields: A2(
							$elm$core$List$cons,
							$author$project$Widget$debutFieldId,
							A2(
								$elm$core$List$cons,
								$author$project$Widget$finFieldId,
								A2($elm$core$List$cons, $author$project$Widget$dureeFieldId, groupsFields))),
						groupsStates: A2(
							$elm$core$Dict$filter,
							F2(
								function (k, _v1) {
									return A2($elm$core$List$member, k, groupsFields);
								}),
							model.groupsStates),
						hasCreated: false,
						records: recordsDict,
						selectStates: $elm$core$Dict$fromList(
							A2(
								$elm$core$List$filterMap,
								function (id) {
									return A2(
										$elm$core$Maybe$andThen,
										function (field) {
											var _v2 = field.ofType;
											switch (_v2.$) {
												case 'Choice':
													var choices = _v2.a;
													return $elm$core$Maybe$Just(
														_Utils_Tuple2(
															field.id,
															A3(
																$author$project$Selectize$closed,
																'_select_' + field.id,
																function ($) {
																	return $.label;
																},
																A2($elm$core$List$map, $author$project$Selectize$entry, choices))));
												case 'Ref':
													var choices = _v2.a;
													return $elm$core$Maybe$Just(
														_Utils_Tuple2(
															field.id,
															A3(
																$author$project$Selectize$closed,
																'_select_' + field.id,
																function ($) {
																	return $.label;
																},
																A2($elm$core$List$map, $author$project$Selectize$entry, choices))));
												default:
													return $elm$core$Maybe$Nothing;
											}
										},
										A2($elm$core$Dict$get, id, fields_));
								},
								_Utils_ap(groupsFields, editable))),
						showInspector: !_Utils_eq(maybeSelection, $elm$core$Maybe$Nothing),
						subgroupId: subgroup,
						timelineState: (!model.options.zoom) ? A2($author$project$Timeline$zoomAllTime, model.box.width, newtl) : newtl,
						totalFields: totals,
						totalState: A2($author$project$Timeline$reinit, totalGroups, model.totalState)
					}),
				cmd);
		}
	});
var $author$project$Widget$removeSubtotals = function (groups) {
	return A2(
		$elm$core$List$filter,
		function (g) {
			return !A2($elm$core$String$startsWith, '_subtotal_', g.id);
		},
		groups);
};
var $author$project$Timeline$setWrapText = F2(
	function (bool, tl) {
		return _Utils_update(
			tl,
			{wrapText: bool});
	});
var $author$project$Widget$New = {$: 'New'};
var $author$project$Moment$addDurationToPosix = F2(
	function (posix, _v0) {
		var dur = _v0.a;
		return $elm$time$Time$millisToPosix(
			$elm$time$Time$posixToMillis(posix) + dur);
	});
var $author$project$Timeline$Models$selectedSections = function (tm) {
	var _v0 = tm.selection;
	var sel = _v0.a;
	return A2(
		$elm$core$List$sortBy,
		A2(
			$elm$core$Basics$composeR,
			function ($) {
				return $.start;
			},
			$elm$time$Time$posixToMillis),
		A2(
			$elm$core$List$map,
			function ($) {
				return $.section;
			},
			A3(
				$elm$core$Dict$foldl,
				F3(
					function (gid, set, res) {
						var list = A2(
							$elm$core$Maybe$withDefault,
							_List_Nil,
							A2(
								$elm$core$Maybe$map,
								function (gb) {
									return A2(
										$elm$core$List$filter,
										function (sb) {
											return A2(
												$elm$core$Set$member,
												function ($) {
													return $.id;
												}(sb.section),
												set);
										},
										gb.sections);
								},
								A2($elm$core$Dict$get, gid, tm.groups)));
						return _Utils_ap(list, res);
					}),
				_List_Nil,
				sel)));
};
var $author$project$Moment$toDuration = $author$project$Moment$Duration;
var $author$project$Timeline$applyAction = F2(
	function (action, tl) {
		switch (action.$) {
			case 'ModifySections':
				var ids = action.a;
				var _v1 = action.b;
				var addstart = _v1.a;
				var addend = _v1.b;
				var groups = A2(
					$elm$core$List$map,
					function (g) {
						return _Utils_update(
							g,
							{
								sections: A2(
									$elm$core$List$map,
									function (s) {
										if (A3($author$project$Timeline$Models$isSelected, g.id, s.id, ids)) {
											var start = A2($author$project$Moment$addDurationToPosix, s.start, addstart);
											return _Utils_update(
												s,
												{
													end: A2(
														$author$project$Moment$addDurationToPosix,
														start,
														$author$project$Moment$toDuration(
															A2(
																$elm$core$Basics$max,
																($author$project$Moment$fromDuration(addend) + $elm$time$Time$posixToMillis(s.end)) - $elm$time$Time$posixToMillis(s.start),
																0))),
													start: start
												});
										} else {
											return s;
										}
									},
									g.sections)
							});
					},
					tl.srcgroups);
				return A2($author$project$Timeline$reinit, groups, tl);
			case 'MoveSections':
				var ids = action.a;
				var gid = action.b;
				var sections = $author$project$Timeline$Models$selectedSections(tl);
				var groups = A2(
					$elm$core$List$map,
					function (g) {
						var filtered = A2(
							$elm$core$List$filter,
							function (s) {
								return !A3($author$project$Timeline$Models$isSelected, g.id, s.id, ids);
							},
							g.sections);
						return _Utils_update(
							g,
							{
								sections: _Utils_eq(gid, g.id) ? A2(
									$elm$core$List$sortBy,
									A2(
										$elm$core$Basics$composeR,
										function ($) {
											return $.start;
										},
										$elm$time$Time$posixToMillis),
									_Utils_ap(filtered, sections)) : filtered
							});
					},
					tl.srcgroups);
				return A2($author$project$Timeline$reinit, groups, tl);
			default:
				return tl;
		}
	});
var $author$project$Widget$cloneRecords = _Platform_outgoingPort(
	'cloneRecords',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'changeDebut',
					$elm$json$Json$Encode$int($.changeDebut)),
					_Utils_Tuple2(
					'groupeId',
					$elm$json$Json$Encode$string($.groupeId)),
					_Utils_Tuple2(
					'ids',
					$elm$json$Json$Encode$list($elm$json$Json$Encode$int)($.ids)),
					_Utils_Tuple2(
					'sousGroupeId',
					$elm$json$Json$Encode$string($.sousGroupeId))
				]));
	});
var $author$project$Widget$createRecord = _Platform_outgoingPort(
	'createRecord',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'date',
					$elm$json$Json$Encode$string($.date)),
					_Utils_Tuple2(
					'duree',
					$elm$json$Json$Encode$int($.duree)),
					_Utils_Tuple2(
					'groupeId',
					$elm$json$Json$Encode$string($.groupeId)),
					_Utils_Tuple2(
					'sousGroupeId',
					$elm$json$Json$Encode$string($.sousGroupeId))
				]));
	});
var $author$project$Widget$deleteRecords = _Platform_outgoingPort(
	'deleteRecords',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ids',
					$elm$json$Json$Encode$list($elm$json$Json$Encode$int)($.ids))
				]));
	});
var $author$project$Widget$msForDurationUnit = function (du) {
	if (du.$ === 'Hours') {
		return 3600000;
	} else {
		return 60000;
	}
};
var $author$project$Widget$fieldsFromDates = F5(
	function (zone, durationUnit, debut, fin, states) {
		var finVal = $author$project$Widget$Val(
			A2($f0i$iso8601$Iso8601$toDateTimeString, zone, fin));
		var dureeVal = $author$project$Widget$Val(
			$elm$core$String$fromFloat(
				$author$project$Moment$fromDuration(
					A2($author$project$Moment$durationBetween, debut, fin)) / $author$project$Widget$msForDurationUnit(durationUnit)));
		var debutVal = $author$project$Widget$Val(
			A2($f0i$iso8601$Iso8601$toDateTimeString, zone, debut));
		return A3(
			$elm$core$Dict$insert,
			$author$project$Widget$dureeFieldId,
			dureeVal,
			A3(
				$elm$core$Dict$insert,
				$author$project$Widget$finFieldId,
				finVal,
				A3($elm$core$Dict$insert, $author$project$Widget$debutFieldId, debutVal, states)));
	});
var $author$project$Widget$modifyRecordsGroup = function (args) {
	return $author$project$Widget$modifyRecords(
		$elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'ids',
					A2($elm$json$Json$Encode$list, $elm$json$Json$Encode$int, args.ids)),
					_Utils_Tuple2(
					'groupeId',
					$elm$json$Json$Encode$string(args.groupeId)),
					_Utils_Tuple2(
					'sousGroupeId',
					$elm$json$Json$Encode$string(args.sousGroupeId))
				])));
};
var $author$project$Widget$selectRecords = _Platform_outgoingPort(
	'selectRecords',
	$elm$json$Json$Encode$list($elm$json$Json$Encode$int));
var $elm$core$Dict$isEmpty = function (dict) {
	if (dict.$ === 'RBEmpty_elm_builtin') {
		return true;
	} else {
		return false;
	}
};
var $elm$core$Set$isEmpty = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$isEmpty(dict);
};
var $author$project$Timeline$Models$selectionIsEmpty = function (_v0) {
	var dict = _v0.a;
	return A3(
		$elm$core$Dict$foldl,
		F3(
			function (_v1, set, out) {
				return $elm$core$Set$isEmpty(set) && out;
			}),
		true,
		dict);
};
var $author$project$Widget$splitRecords = _Platform_outgoingPort(
	'splitRecords',
	function ($) {
		return $elm$json$Json$Encode$object(
			_List_fromArray(
				[
					_Utils_Tuple2(
					'date',
					$elm$json$Json$Encode$string($.date)),
					_Utils_Tuple2(
					'ids',
					$elm$json$Json$Encode$list($elm$json$Json$Encode$int)($.ids))
				]));
	});
var $author$project$Widget$unwrapGroupeId = function (id) {
	var _v0 = A2($elm$core$String$split, ':', id);
	_v0$2:
	while (true) {
		if (_v0.b) {
			if (_v0.b.b) {
				if (!_v0.b.b.b) {
					var gid = _v0.a;
					var _v1 = _v0.b;
					var sgid = _v1.a;
					return {
						groupeId: gid,
						sousGroupeId: $elm$core$Maybe$Just(sgid)
					};
				} else {
					break _v0$2;
				}
			} else {
				var gid = _v0.a;
				return {groupeId: gid, sousGroupeId: $elm$core$Maybe$Nothing};
			}
		} else {
			break _v0$2;
		}
	}
	return {groupeId: '', sousGroupeId: $elm$core$Maybe$Nothing};
};
var $author$project$Timeline$Action$DeleteSections = function (a) {
	return {$: 'DeleteSections', a: a};
};
var $author$project$Timeline$Action$DuplicateSections = function (a) {
	return {$: 'DuplicateSections', a: a};
};
var $author$project$Timeline$Models$EditGroupLabel = F2(
	function (a, b) {
		return {$: 'EditGroupLabel', a: a, b: b};
	});
var $author$project$Timeline$Action$ModifyGroupLabel = F2(
	function (a, b) {
		return {$: 'ModifyGroupLabel', a: a, b: b};
	});
var $author$project$Timeline$Action$NoAction = {$: 'NoAction'};
var $author$project$Timeline$Action$ReorderGroups = function (a) {
	return {$: 'ReorderGroups', a: a};
};
var $author$project$Timeline$Action$SelectSections = function (a) {
	return {$: 'SelectSections', a: a};
};
var $author$project$Timeline$Action$Split = F2(
	function (a, b) {
		return {$: 'Split', a: a, b: b};
	});
var $author$project$Timeline$axisHeight = 50;
var $author$project$Timeline$axisWidth = 180;
var $author$project$Timeline$Action$ChangeZoom = function (a) {
	return {$: 'ChangeZoom', a: a};
};
var $author$project$Timeline$Models$unscale = F2(
	function (zoom, delta) {
		return (delta * $author$project$Timeline$Models$duration.day) / zoom;
	});
var $author$project$Timeline$Action$changeWheelAction = function (tl) {
	var start = $elm$time$Time$millisToPosix(
		$elm$core$Basics$round(
			A2($author$project$Timeline$Models$unscale, tl.zoom, -tl.start) + $elm$time$Time$posixToMillis(tl.first)));
	return _Utils_Tuple3(
		tl,
		$author$project$Timeline$Action$ChangeZoom(
			{lineSize: tl.lineSize, sectionOffsetY: tl.sectionOffsetY, start: start, zoom: tl.zoom}),
		$elm$core$Platform$Cmd$none);
};
var $author$project$Timeline$Models$directionGetter = function (dir) {
	if (dir.$ === 'Horizontal') {
		return {
			date: $elm$core$Tuple$first,
			h: $elm$core$Tuple$first,
			line: $elm$core$Tuple$second,
			mapBoth: F3(
				function (hfunc, vfunc, _v1) {
					var a = _v1.a;
					var b = _v1.b;
					return _Utils_Tuple2(
						hfunc(a),
						vfunc(b));
				}),
			v: $elm$core$Tuple$second,
			xy: $elm$core$Basics$identity
		};
	} else {
		return {
			date: $elm$core$Tuple$second,
			h: $elm$core$Tuple$second,
			line: $elm$core$Tuple$first,
			mapBoth: F3(
				function (hfunc, vfunc, _v2) {
					var a = _v2.a;
					var b = _v2.b;
					return _Utils_Tuple2(
						vfunc(a),
						hfunc(b));
				}),
			v: $elm$core$Tuple$first,
			xy: function (_v3) {
				var x = _v3.a;
				var y = _v3.b;
				return _Utils_Tuple2(y, x);
			}
		};
	}
};
var $author$project$Timeline$Update$groupsWheel = F3(
	function (box, rect, _v0) {
		var clientY = _v0.clientY;
		var dx = _v0.dx;
		var dy = _v0.dy;
		var altKey = _v0.altKey;
		var shiftKey = _v0.shiftKey;
		if (altKey) {
			var lineSize = A2(
				$elm$core$Basics$min,
				300,
				A2(
					$elm$core$Basics$max,
					_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? 18 : 50,
					box.lineSize + (dy / 10)));
			return $author$project$Timeline$Action$changeWheelAction(
				_Utils_update(
					box,
					{
						lineSize: lineSize,
						sectionOffsetY: A2(
							$elm$core$Basics$max,
							A2($elm$core$Basics$min, 0, ((-(box.lines + 0)) * lineSize) + rect.height),
							A2($elm$core$Basics$min, 0, box.sectionOffsetY - ((((clientY - rect.top) - box.sectionOffsetY) / box.lineSize) * (lineSize - box.lineSize)))),
						zoomChange: 10
					}));
		} else {
			var getter = $author$project$Timeline$Models$directionGetter(box.direction);
			var _v1 = shiftKey ? _Utils_Tuple2(dy, 0) : _Utils_Tuple2(dx, dy);
			var movex = _v1.a;
			var movey = _v1.b;
			var offset = A2(
				$elm$core$Basics$max,
				A2($elm$core$Basics$min, 0, ((-(box.lines + 0)) * box.lineSize) + rect.height),
				A2(
					$elm$core$Basics$min,
					0,
					box.sectionOffsetY - getter.v(
						_Utils_Tuple2(movex, movey))));
			return $author$project$Timeline$Action$changeWheelAction(
				_Utils_update(
					box,
					{
						sectionOffsetY: offset,
						start: box.start - getter.h(
							_Utils_Tuple2(movex, movey))
					}));
		}
	});
var $author$project$Timeline$Models$normalize = F3(
	function (box, ax, ay) {
		var dir = $author$project$Timeline$Models$directionGetter(box.direction);
		return A3(
			$elm$core$Tuple$mapBoth,
			function (x) {
				return $elm$time$Time$millisToPosix(
					$elm$core$Basics$round(
						(((x - box.start) * $author$project$Timeline$Models$duration.day) / box.zoom) + $elm$time$Time$posixToMillis(box.first)));
			},
			function (y) {
				return ((y - 2) - box.sectionOffsetY) / box.lineSize;
			},
			_Utils_Tuple2(
				dir.date(
					_Utils_Tuple2(ax, ay)),
				dir.line(
					_Utils_Tuple2(ax, ay))));
	});
var $author$project$Timeline$Models$mouseOverInteraction = F3(
	function (box, x, y) {
		return $author$project$Timeline$Models$MouseOver(
			A3($author$project$Timeline$Models$normalize, box, x, y));
	});
var $author$project$Timeline$Action$noAction = function (b) {
	return _Utils_Tuple3(b, $author$project$Timeline$Action$NoAction, $elm$core$Platform$Cmd$none);
};
var $author$project$Timeline$Models$AddSelection = {$: 'AddSelection'};
var $author$project$Timeline$Models$Clone = {$: 'Clone'};
var $author$project$Timeline$Models$Draw = F3(
	function (a, b, c) {
		return {$: 'Draw', a: a, b: b, c: c};
	});
var $author$project$Timeline$Models$Move = F4(
	function (a, b, c, d) {
		return {$: 'Move', a: a, b: b, c: c, d: d};
	});
var $author$project$Timeline$Models$ResizeLeft = F2(
	function (a, b) {
		return {$: 'ResizeLeft', a: a, b: b};
	});
var $author$project$Timeline$Models$ResizeRight = F2(
	function (a, b) {
		return {$: 'ResizeRight', a: a, b: b};
	});
var $author$project$Timeline$Models$Select = F4(
	function (a, b, c, d) {
		return {$: 'Select', a: a, b: b, c: c, d: d};
	});
var $author$project$Timeline$Models$SimpleMove = {$: 'SimpleMove'};
var $author$project$Timeline$Models$SubstractSelection = {$: 'SubstractSelection'};
var $author$project$Moment$between = F3(
	function (pa, pb, pc) {
		var _v0 = _Utils_Tuple3(
			$elm$time$Time$posixToMillis(pa),
			$elm$time$Time$posixToMillis(pb),
			$elm$time$Time$posixToMillis(pc));
		var a = _v0.a;
		var b = _v0.b;
		var c = _v0.c;
		return (_Utils_cmp(a, b) > 0) && (_Utils_cmp(a, c) < 0);
	});
var $author$project$Timeline$Utils$between = F3(
	function (a, b, c) {
		return (_Utils_cmp(a, b) > 0) && (_Utils_cmp(a, c) < 0);
	});
var $author$project$Timeline$Utils$findSection = F3(
	function (posix, _v0, sections) {
		var line = _v0.a;
		var size = _v0.b;
		return A2(
			$elm_community$list_extra$List$Extra$find,
			function (sbox) {
				var section = sbox.section;
				return A3($author$project$Moment$between, posix, section.start, section.end) && (section.isGlobal || A3($author$project$Timeline$Utils$between, line, sbox.line, sbox.line + size));
			},
			sections);
	});
var $author$project$Moment$Day = {$: 'Day'};
var $author$project$Moment$Hour = {$: 'Hour'};
var $author$project$Moment$Minute = {$: 'Minute'};
var $author$project$Moment$Month = {$: 'Month'};
var $author$project$Moment$Week = {$: 'Week'};
var $author$project$Moment$Year = {$: 'Year'};
var $author$project$Timeline$Axis$lastDef = {
	divs: _List_fromArray(
		[
			{
			delta: 1,
			hformat: $elm$core$Maybe$Just(''),
			unit: $author$project$Moment$Week,
			vformat: $elm$core$Maybe$Just('')
		},
			{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Month, vformat: $elm$core$Maybe$Nothing},
			{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Year, vformat: $elm$core$Maybe$Nothing}
		]),
	snap: 168,
	unit: 200
};
var $author$project$Timeline$Axis$axisDefs = _List_fromArray(
	[
		{
		divs: _List_fromArray(
			[
				{
				delta: 5,
				hformat: $elm$core$Maybe$Just(''),
				unit: $author$project$Moment$Minute,
				vformat: $elm$core$Maybe$Just('')
			},
				{delta: 15, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Minute, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('xx'),
				unit: $author$project$Moment$Hour,
				vformat: $elm$core$Maybe$Just('x')
			}
			]),
		snap: 1 / 12,
		unit: 1 / 18
	},
		{
		divs: _List_fromArray(
			[
				{delta: 15, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Minute, vformat: $elm$core$Maybe$Nothing},
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Hour, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('xx'),
				unit: $author$project$Moment$Day,
				vformat: $elm$core$Maybe$Just('x')
			}
			]),
		snap: 1 / 12,
		unit: 1 / 6
	},
		{
		divs: _List_fromArray(
			[
				{delta: 30, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Minute, vformat: $elm$core$Maybe$Nothing},
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Hour, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('xx'),
				unit: $author$project$Moment$Day,
				vformat: $elm$core$Maybe$Just('x')
			}
			]),
		snap: 1 / 4,
		unit: 1 / 5
	},
		{
		divs: _List_fromArray(
			[
				{delta: 2, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Hour, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 12,
				hformat: $elm$core$Maybe$Just(''),
				unit: $author$project$Moment$Hour,
				vformat: $elm$core$Maybe$Just('')
			},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('xx'),
				unit: $author$project$Moment$Day,
				vformat: $elm$core$Maybe$Just('x')
			}
			]),
		snap: 1 / 2,
		unit: 1 / 2
	},
		{
		divs: _List_fromArray(
			[
				{delta: 3, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Hour, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('ddd dd'),
				unit: $author$project$Moment$Day,
				vformat: $elm$core$Maybe$Just('ddd dd')
			},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('MMMM yyyy'),
				unit: $author$project$Moment$Month,
				vformat: $elm$core$Maybe$Just('MMM yyyy')
			}
			]),
		snap: 1,
		unit: 1
	},
		{
		divs: _List_fromArray(
			[
				{delta: 6, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Hour, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('ddd dd'),
				unit: $author$project$Moment$Day,
				vformat: $elm$core$Maybe$Just('ddd dd/MM')
			},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('MMMM yyyy'),
				unit: $author$project$Moment$Month,
				vformat: $elm$core$Maybe$Just('MMM yyyy')
			}
			]),
		snap: 2,
		unit: 2
	},
		{
		divs: _List_fromArray(
			[
				{
				delta: 12,
				hformat: $elm$core$Maybe$Just(''),
				unit: $author$project$Moment$Hour,
				vformat: $elm$core$Maybe$Nothing
			},
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Day, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('MMMM yyyy'),
				unit: $author$project$Moment$Month,
				vformat: $elm$core$Maybe$Just('MMM yyyy')
			}
			]),
		snap: 6,
		unit: 4
	},
		{
		divs: _List_fromArray(
			[
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Day, vformat: $elm$core$Maybe$Nothing},
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Week, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('MMMM yyyy'),
				unit: $author$project$Moment$Month,
				vformat: $elm$core$Maybe$Just('MMM yyyy')
			}
			]),
		snap: 12,
		unit: 6
	},
		{
		divs: _List_fromArray(
			[
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('dd'),
				unit: $author$project$Moment$Day,
				vformat: $elm$core$Maybe$Nothing
			},
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Week, vformat: $elm$core$Maybe$Nothing},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('MMMM yyyy'),
				unit: $author$project$Moment$Month,
				vformat: $elm$core$Maybe$Just('MMM yyyy')
			}
			]),
		snap: 12,
		unit: 12
	},
		{
		divs: _List_fromArray(
			[
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just(''),
				unit: $author$project$Moment$Day,
				vformat: $elm$core$Maybe$Just('')
			},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('ddd dd'),
				unit: $author$project$Moment$Week,
				vformat: $elm$core$Maybe$Just('ddd dd')
			},
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('MMMM yyyy'),
				unit: $author$project$Moment$Month,
				vformat: $elm$core$Maybe$Just('MMM yyyy')
			}
			]),
		snap: 24,
		unit: 40
	},
		{
		divs: _List_fromArray(
			[
				{
				delta: 1,
				hformat: $elm$core$Maybe$Just('dd'),
				unit: $author$project$Moment$Week,
				vformat: $elm$core$Maybe$Just('dd')
			},
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Month, vformat: $elm$core$Maybe$Nothing},
				{delta: 1, hformat: $elm$core$Maybe$Nothing, unit: $author$project$Moment$Year, vformat: $elm$core$Maybe$Nothing}
			]),
		snap: 168,
		unit: 60
	},
		$author$project$Timeline$Axis$lastDef
	]);
var $author$project$Timeline$Axis$axisUnit = 10;
var $author$project$Timeline$Axis$getGrid = function (val) {
	var unit = (val / 3600000) * $author$project$Timeline$Axis$axisUnit;
	return A2(
		$elm$core$Maybe$withDefault,
		$author$project$Timeline$Axis$lastDef,
		A2(
			$elm_community$list_extra$List$Extra$find,
			function (g) {
				return _Utils_cmp(unit, g.unit) < 0;
			},
			$author$project$Timeline$Axis$axisDefs));
};
var $author$project$Timeline$Update$getUnit = function (zoom) {
	return $author$project$Moment$toDuration(
		$elm$core$Basics$round(
			$author$project$Timeline$Axis$getGrid($author$project$Timeline$Models$duration.day / zoom).snap * 3600000));
};
var $author$project$Moment$greaterThan = F2(
	function (a, b) {
		return _Utils_cmp(
			$elm$time$Time$posixToMillis(a),
			$elm$time$Time$posixToMillis(b)) > 0;
	});
var $author$project$Timeline$Event$leftButton = 0;
var $author$project$Moment$lessThan = F2(
	function (a, b) {
		return _Utils_cmp(
			$elm$time$Time$posixToMillis(a),
			$elm$time$Time$posixToMillis(b)) < 0;
	});
var $author$project$Timeline$Action$selectAction = function (b) {
	return _Utils_Tuple3(
		b,
		$author$project$Timeline$Action$SelectSections(b.selection),
		$elm$core$Platform$Cmd$none);
};
var $elm$core$Dict$singleton = F2(
	function (key, value) {
		return A5($elm$core$Dict$RBNode_elm_builtin, $elm$core$Dict$Black, key, value, $elm$core$Dict$RBEmpty_elm_builtin, $elm$core$Dict$RBEmpty_elm_builtin);
	});
var $elm$core$Set$singleton = function (key) {
	return $elm$core$Set$Set_elm_builtin(
		A2($elm$core$Dict$singleton, key, _Utils_Tuple0));
};
var $author$project$Timeline$Models$selectionWith = F2(
	function (gid, sid) {
		return $author$project$Timeline$Models$Selection(
			A2(
				$elm$core$Dict$singleton,
				gid,
				$elm$core$Set$singleton(sid)));
	});
var $justinmimbs$time_extra$Time$Extra$Week = {$: 'Week'};
var $justinmimbs$date$Date$Day = {$: 'Day'};
var $justinmimbs$date$Date$Friday = {$: 'Friday'};
var $justinmimbs$date$Date$Monday = {$: 'Monday'};
var $justinmimbs$date$Date$Month = {$: 'Month'};
var $justinmimbs$date$Date$Quarter = {$: 'Quarter'};
var $justinmimbs$date$Date$Saturday = {$: 'Saturday'};
var $justinmimbs$date$Date$Sunday = {$: 'Sunday'};
var $justinmimbs$date$Date$Thursday = {$: 'Thursday'};
var $justinmimbs$date$Date$Tuesday = {$: 'Tuesday'};
var $justinmimbs$date$Date$Wednesday = {$: 'Wednesday'};
var $justinmimbs$date$Date$Week = {$: 'Week'};
var $justinmimbs$date$Date$Year = {$: 'Year'};
var $elm$time$Time$Fri = {$: 'Fri'};
var $elm$time$Time$Mon = {$: 'Mon'};
var $elm$time$Time$Sat = {$: 'Sat'};
var $elm$time$Time$Thu = {$: 'Thu'};
var $elm$time$Time$Tue = {$: 'Tue'};
var $elm$time$Time$Wed = {$: 'Wed'};
var $justinmimbs$date$Date$weekdayNumber = function (_v0) {
	var rd = _v0.a;
	var _v1 = A2($elm$core$Basics$modBy, 7, rd);
	if (!_v1) {
		return 7;
	} else {
		var n = _v1;
		return n;
	}
};
var $justinmimbs$date$Date$weekdayToNumber = function (wd) {
	switch (wd.$) {
		case 'Mon':
			return 1;
		case 'Tue':
			return 2;
		case 'Wed':
			return 3;
		case 'Thu':
			return 4;
		case 'Fri':
			return 5;
		case 'Sat':
			return 6;
		default:
			return 7;
	}
};
var $justinmimbs$date$Date$daysSincePreviousWeekday = F2(
	function (wd, date) {
		return A2(
			$elm$core$Basics$modBy,
			7,
			($justinmimbs$date$Date$weekdayNumber(date) + 7) - $justinmimbs$date$Date$weekdayToNumber(wd));
	});
var $justinmimbs$date$Date$firstOfMonth = F2(
	function (y, m) {
		return $justinmimbs$date$Date$RD(
			($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + 1);
	});
var $justinmimbs$date$Date$firstOfYear = function (y) {
	return $justinmimbs$date$Date$RD(
		$justinmimbs$date$Date$daysBeforeYear(y) + 1);
};
var $justinmimbs$date$Date$monthToNumber = function (m) {
	switch (m.$) {
		case 'Jan':
			return 1;
		case 'Feb':
			return 2;
		case 'Mar':
			return 3;
		case 'Apr':
			return 4;
		case 'May':
			return 5;
		case 'Jun':
			return 6;
		case 'Jul':
			return 7;
		case 'Aug':
			return 8;
		case 'Sep':
			return 9;
		case 'Oct':
			return 10;
		case 'Nov':
			return 11;
		default:
			return 12;
	}
};
var $justinmimbs$date$Date$numberToMonth = function (mn) {
	var _v0 = A2($elm$core$Basics$max, 1, mn);
	switch (_v0) {
		case 1:
			return $elm$time$Time$Jan;
		case 2:
			return $elm$time$Time$Feb;
		case 3:
			return $elm$time$Time$Mar;
		case 4:
			return $elm$time$Time$Apr;
		case 5:
			return $elm$time$Time$May;
		case 6:
			return $elm$time$Time$Jun;
		case 7:
			return $elm$time$Time$Jul;
		case 8:
			return $elm$time$Time$Aug;
		case 9:
			return $elm$time$Time$Sep;
		case 10:
			return $elm$time$Time$Oct;
		case 11:
			return $elm$time$Time$Nov;
		default:
			return $elm$time$Time$Dec;
	}
};
var $justinmimbs$date$Date$toCalendarDateHelp = F3(
	function (y, m, d) {
		toCalendarDateHelp:
		while (true) {
			var monthDays = A2($justinmimbs$date$Date$daysInMonth, y, m);
			var mn = $justinmimbs$date$Date$monthToNumber(m);
			if ((mn < 12) && (_Utils_cmp(d, monthDays) > 0)) {
				var $temp$y = y,
					$temp$m = $justinmimbs$date$Date$numberToMonth(mn + 1),
					$temp$d = d - monthDays;
				y = $temp$y;
				m = $temp$m;
				d = $temp$d;
				continue toCalendarDateHelp;
			} else {
				return {day: d, month: m, year: y};
			}
		}
	});
var $justinmimbs$date$Date$divWithRemainder = F2(
	function (a, b) {
		return _Utils_Tuple2(
			A2($justinmimbs$date$Date$floorDiv, a, b),
			A2($elm$core$Basics$modBy, b, a));
	});
var $justinmimbs$date$Date$year = function (_v0) {
	var rd = _v0.a;
	var _v1 = A2($justinmimbs$date$Date$divWithRemainder, rd, 146097);
	var n400 = _v1.a;
	var r400 = _v1.b;
	var _v2 = A2($justinmimbs$date$Date$divWithRemainder, r400, 36524);
	var n100 = _v2.a;
	var r100 = _v2.b;
	var _v3 = A2($justinmimbs$date$Date$divWithRemainder, r100, 1461);
	var n4 = _v3.a;
	var r4 = _v3.b;
	var _v4 = A2($justinmimbs$date$Date$divWithRemainder, r4, 365);
	var n1 = _v4.a;
	var r1 = _v4.b;
	var n = (!r1) ? 0 : 1;
	return ((((n400 * 400) + (n100 * 100)) + (n4 * 4)) + n1) + n;
};
var $justinmimbs$date$Date$toOrdinalDate = function (_v0) {
	var rd = _v0.a;
	var y = $justinmimbs$date$Date$year(
		$justinmimbs$date$Date$RD(rd));
	return {
		ordinalDay: rd - $justinmimbs$date$Date$daysBeforeYear(y),
		year: y
	};
};
var $justinmimbs$date$Date$toCalendarDate = function (_v0) {
	var rd = _v0.a;
	var date = $justinmimbs$date$Date$toOrdinalDate(
		$justinmimbs$date$Date$RD(rd));
	return A3($justinmimbs$date$Date$toCalendarDateHelp, date.year, $elm$time$Time$Jan, date.ordinalDay);
};
var $justinmimbs$date$Date$month = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toCalendarDate,
	function ($) {
		return $.month;
	});
var $justinmimbs$date$Date$monthToQuarter = function (m) {
	return (($justinmimbs$date$Date$monthToNumber(m) + 2) / 3) | 0;
};
var $justinmimbs$date$Date$quarter = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$month, $justinmimbs$date$Date$monthToQuarter);
var $justinmimbs$date$Date$quarterToMonth = function (q) {
	return $justinmimbs$date$Date$numberToMonth((q * 3) - 2);
};
var $justinmimbs$date$Date$floor = F2(
	function (interval, date) {
		var rd = date.a;
		switch (interval.$) {
			case 'Year':
				return $justinmimbs$date$Date$firstOfYear(
					$justinmimbs$date$Date$year(date));
			case 'Quarter':
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$quarterToMonth(
						$justinmimbs$date$Date$quarter(date)));
			case 'Month':
				return A2(
					$justinmimbs$date$Date$firstOfMonth,
					$justinmimbs$date$Date$year(date),
					$justinmimbs$date$Date$month(date));
			case 'Week':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Mon, date));
			case 'Monday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Mon, date));
			case 'Tuesday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Tue, date));
			case 'Wednesday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Wed, date));
			case 'Thursday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Thu, date));
			case 'Friday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Fri, date));
			case 'Saturday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Sat, date));
			case 'Sunday':
				return $justinmimbs$date$Date$RD(
					rd - A2($justinmimbs$date$Date$daysSincePreviousWeekday, $elm$time$Time$Sun, date));
			default:
				return date;
		}
	});
var $justinmimbs$time_extra$Time$Extra$posixFromDateTime = F3(
	function (zone, date, time) {
		var millis = $justinmimbs$time_extra$Time$Extra$dateToMillis(date) + time;
		var offset0 = A2(
			$justinmimbs$time_extra$Time$Extra$toOffset,
			zone,
			$elm$time$Time$millisToPosix(millis));
		var posix1 = $elm$time$Time$millisToPosix(millis - (offset0 * 60000));
		var offset1 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix1);
		if (_Utils_eq(offset0, offset1)) {
			return posix1;
		} else {
			var posix2 = $elm$time$Time$millisToPosix(millis - (offset1 * 60000));
			var offset2 = A2($justinmimbs$time_extra$Time$Extra$toOffset, zone, posix2);
			return _Utils_eq(offset1, offset2) ? posix2 : posix1;
		}
	});
var $justinmimbs$time_extra$Time$Extra$floorDate = F3(
	function (dateInterval, zone, posix) {
		return A3(
			$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
			zone,
			A2(
				$justinmimbs$date$Date$floor,
				dateInterval,
				A2($justinmimbs$date$Date$fromPosix, zone, posix)),
			0);
	});
var $justinmimbs$time_extra$Time$Extra$floor = F3(
	function (interval, zone, posix) {
		switch (interval.$) {
			case 'Millisecond':
				return posix;
			case 'Second':
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix),
						A2($elm$time$Time$toSecond, zone, posix),
						0));
			case 'Minute':
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix),
						0,
						0));
			case 'Hour':
				return A3(
					$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
					zone,
					A2($justinmimbs$date$Date$fromPosix, zone, posix),
					A4(
						$justinmimbs$time_extra$Time$Extra$timeFromClock,
						A2($elm$time$Time$toHour, zone, posix),
						0,
						0,
						0));
			case 'Day':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Day, zone, posix);
			case 'Month':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Month, zone, posix);
			case 'Year':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Year, zone, posix);
			case 'Quarter':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Quarter, zone, posix);
			case 'Week':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Week, zone, posix);
			case 'Monday':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Monday, zone, posix);
			case 'Tuesday':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Tuesday, zone, posix);
			case 'Wednesday':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Wednesday, zone, posix);
			case 'Thursday':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Thursday, zone, posix);
			case 'Friday':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Friday, zone, posix);
			case 'Saturday':
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Saturday, zone, posix);
			default:
				return A3($justinmimbs$time_extra$Time$Extra$floorDate, $justinmimbs$date$Date$Sunday, zone, posix);
		}
	});
var $author$project$Moment$mapDuration = F2(
	function (func, _v0) {
		var d = _v0.a;
		return $author$project$Moment$Duration(
			func(d));
	});
var $author$project$Timeline$Update$zoneOffset = F2(
	function (zone, val) {
		var delta = A2($elm$time$Time$toHour, zone, val) - A2($elm$time$Time$toHour, $elm$time$Time$utc, val);
		return (delta > 12) ? (delta - 24) : ((_Utils_cmp(delta, -12) < 0) ? (delta + 24) : delta);
	});
var $author$project$Timeline$Update$snapToGrid_ = F4(
	function (func, zone, unit, date) {
		var gridUnit = $author$project$Moment$fromDuration(unit);
		if (gridUnit > 86400000) {
			var startWeek = A3($justinmimbs$time_extra$Time$Extra$floor, $justinmimbs$time_extra$Time$Extra$Week, zone, date);
			var add = A2(
				$author$project$Moment$mapDuration,
				function (dur) {
					return func(dur / 604800000) * 604800000;
				},
				A2($author$project$Moment$durationBetween, startWeek, date));
			return A3(
				$justinmimbs$time_extra$Time$Extra$floor,
				$justinmimbs$time_extra$Time$Extra$Week,
				zone,
				A2($author$project$Moment$addDurationToPosix, startWeek, add));
		} else {
			var offset = (gridUnit > 3600000) ? (A2($author$project$Timeline$Update$zoneOffset, zone, date) * 3600000) : 0;
			return $elm$time$Time$millisToPosix(
				(func(
					($elm$time$Time$posixToMillis(date) + offset) / gridUnit) * gridUnit) - offset);
		}
	});
var $author$project$Timeline$Update$snapToGridFloor = F3(
	function (zone, unit, val) {
		return A4($author$project$Timeline$Update$snapToGrid_, $elm$core$Basics$floor, zone, unit, val);
	});
var $author$project$Moment$subtractDuration = F2(
	function (posix, _v0) {
		var dur = _v0.a;
		return $elm$time$Time$millisToPosix(
			$elm$time$Time$posixToMillis(posix) - dur);
	});
var $author$project$Timeline$Update$sectionsDown = F2(
	function (box, _v0) {
		var x = _v0.x;
		var y = _v0.y;
		var altKey = _v0.altKey;
		var shiftKey = _v0.shiftKey;
		var button = _v0.button;
		var margin = $author$project$Moment$toDuration(
			$elm$core$Basics$round((6 * $author$project$Timeline$Models$duration.day) / box.zoom));
		var _v1 = A3($author$project$Timeline$Models$normalize, box, x, y);
		var posix = _v1.a;
		var line = _v1.b;
		var mbsec = A2(
			$elm$core$Maybe$andThen,
			function (sbox) {
				return A2(
					$elm$core$Maybe$andThen,
					function (gbox) {
						return gbox.isSubtotal ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(sbox);
					},
					A2($elm$core$Dict$get, sbox.groupId, box.groups));
			},
			A3(
				$author$project$Timeline$Utils$findSection,
				posix,
				_Utils_Tuple2(line, 1 - (4 / box.lineSize)),
				box.sections));
		var _v2 = box.interaction;
		if (_v2.$ === 'MouseOver') {
			if (_Utils_eq(button, $author$project$Timeline$Event$leftButton)) {
				if (altKey && _Utils_eq(mbsec, $elm$core$Maybe$Nothing)) {
					var unit = $author$project$Timeline$Update$getUnit(box.zoom);
					var snapx = A3($author$project$Timeline$Update$snapToGridFloor, box.zone, unit, posix);
					return $author$project$Timeline$Action$selectAction(
						A2(
							$author$project$Timeline$Update$updateSelection,
							$author$project$Timeline$Models$emptySelection,
							_Utils_update(
								box,
								{
									interaction: box.canEditSections ? A3(
										$author$project$Timeline$Models$Draw,
										snapx,
										A2($author$project$Moment$addDurationToPosix, snapx, unit),
										$elm$core$Basics$floor(line)) : box.interaction
								})));
				} else {
					if (mbsec.$ === 'Just') {
						var sbox = mbsec.a;
						var section = sbox.section;
						return $author$project$Timeline$Action$selectAction(
							A2(
								$author$project$Timeline$Update$updateSelection,
								shiftKey ? box.selection : (A3($author$project$Timeline$Models$isSelected, sbox.groupId, section.id, box.selection) ? box.selection : A2($author$project$Timeline$Models$selectionWith, sbox.groupId, section.id)),
								_Utils_update(
									box,
									{
										interaction: shiftKey ? A4(
											$author$project$Timeline$Models$Select,
											A3($author$project$Timeline$Models$isSelected, sbox.groupId, section.id, box.selection) ? $author$project$Timeline$Models$SubstractSelection : $author$project$Timeline$Models$AddSelection,
											_Utils_Tuple2(posix, line),
											A2($author$project$Timeline$Models$selectionWith, sbox.groupId, section.id),
											_Utils_Tuple2(
												_Utils_Tuple2(posix, line),
												_Utils_Tuple2(
													$author$project$Moment$toDuration(0),
													0))) : (A3(
											$elm$core$List$foldl,
											F2(
												function (s, res) {
													return res || s.isLocked;
												}),
											false,
											A2(
												$elm$core$List$cons,
												section,
												$author$project$Timeline$Models$selectedSections(box))) ? box.interaction : ((box.canEditSections && A2(
											$author$project$Moment$greaterThan,
											posix,
											A2($author$project$Moment$subtractDuration, section.end, margin))) ? A2(
											$author$project$Timeline$Models$ResizeRight,
											_Utils_Tuple2(posix, line),
											$author$project$Moment$toDuration(0)) : ((box.canEditSections && A2(
											$author$project$Moment$lessThan,
											posix,
											A2($author$project$Moment$addDurationToPosix, section.start, margin))) ? A2(
											$author$project$Timeline$Models$ResizeLeft,
											_Utils_Tuple2(posix, line),
											$author$project$Moment$toDuration(0)) : (box.canEditSections ? A4(
											$author$project$Timeline$Models$Move,
											altKey ? $author$project$Timeline$Models$Clone : $author$project$Timeline$Models$SimpleMove,
											sbox,
											_Utils_Tuple2(posix, line),
											_Utils_Tuple2(
												$author$project$Moment$toDuration(0),
												0)) : box.interaction))))
									})));
					} else {
						return $author$project$Timeline$Action$selectAction(
							A2(
								$author$project$Timeline$Update$updateSelection,
								shiftKey ? box.selection : $author$project$Timeline$Models$emptySelection,
								_Utils_update(
									box,
									{
										interaction: A4(
											$author$project$Timeline$Models$Select,
											$author$project$Timeline$Models$AddSelection,
											_Utils_Tuple2(posix, line),
											$author$project$Timeline$Models$emptySelection,
											_Utils_Tuple2(
												_Utils_Tuple2(posix, line),
												_Utils_Tuple2(
													$author$project$Moment$toDuration(0),
													0)))
									})));
					}
				}
			} else {
				return $author$project$Timeline$Action$noAction(box);
			}
		} else {
			return $author$project$Timeline$Action$noAction(box);
		}
	});
var $author$project$Moment$maxPosix = F2(
	function (a, b) {
		return $elm$time$Time$millisToPosix(
			A2(
				$elm$core$Basics$max,
				$elm$time$Time$posixToMillis(a),
				$elm$time$Time$posixToMillis(b)));
	});
var $author$project$Moment$minPosix = F2(
	function (a, b) {
		return $elm$time$Time$millisToPosix(
			A2(
				$elm$core$Basics$min,
				$elm$time$Time$posixToMillis(a),
				$elm$time$Time$posixToMillis(b)));
	});
var $elm$core$Dict$sizeHelp = F2(
	function (n, dict) {
		sizeHelp:
		while (true) {
			if (dict.$ === 'RBEmpty_elm_builtin') {
				return n;
			} else {
				var left = dict.d;
				var right = dict.e;
				var $temp$n = A2($elm$core$Dict$sizeHelp, n + 1, right),
					$temp$dict = left;
				n = $temp$n;
				dict = $temp$dict;
				continue sizeHelp;
			}
		}
	});
var $elm$core$Dict$size = function (dict) {
	return A2($elm$core$Dict$sizeHelp, 0, dict);
};
var $author$project$Timeline$Models$selectionOverManyGroups = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$size(dict) > 1;
};
var $author$project$Moment$intersect = F4(
	function (pa1, pa2, pb1, pb2) {
		var _v0 = _Utils_Tuple2(
			$elm$time$Time$posixToMillis(pa1),
			$elm$time$Time$posixToMillis(pb1));
		var a1 = _v0.a;
		var b1 = _v0.b;
		return (_Utils_cmp(a1, b1) > -1) ? (_Utils_cmp(
			a1,
			$elm$time$Time$posixToMillis(pb2)) < 1) : (_Utils_cmp(
			b1,
			$elm$time$Time$posixToMillis(pa2)) < 1);
	});
var $author$project$Timeline$Utils$intersect = F4(
	function (a1, a2, b1, b2) {
		return (_Utils_cmp(a1, b1) > -1) ? (_Utils_cmp(a1, b2) < 1) : (_Utils_cmp(b1, a2) < 1);
	});
var $author$project$Timeline$Utils$findSectionsIds = F3(
	function (_v0, _v1, groups) {
		var fromH = _v0.a;
		var fromV = _v0.b;
		var toH = _v1.a;
		var toV = _v1.b;
		return A3(
			$elm$core$List$foldl,
			F2(
				function (gbox, selset) {
					return A3(
						$elm$core$List$foldl,
						F2(
							function (sbox, set) {
								var section = sbox.section;
								return (A4($author$project$Moment$intersect, section.start, section.end, fromH, toH) && ((section.isGlobal || A4($author$project$Timeline$Utils$intersect, sbox.line + gbox.position, (sbox.line + gbox.position) + 1, fromV, toV)) && (!gbox.isSubtotal))) ? A3(
									$author$project$Timeline$Models$addToSelection,
									gbox.id,
									_List_fromArray(
										[section.id]),
									set) : set;
							}),
						selset,
						gbox.sections);
				}),
			$author$project$Timeline$Models$emptySelection,
			groups);
	});
var $author$project$Timeline$Utils$setLasso = F4(
	function (interaction, box, _v0, _v1) {
		var fromP = _v0.a;
		var fromL = _v0.b;
		var toP = _v1.a;
		var toL = _v1.b;
		var _v2 = (_Utils_cmp(fromL, toL) > 0) ? _Utils_Tuple2(toL, fromL) : _Utils_Tuple2(fromL, toL);
		var startLine = _v2.a;
		var endLine = _v2.b;
		var _v3 = A2($author$project$Moment$greaterThan, fromP, toP) ? _Utils_Tuple2(toP, fromP) : _Utils_Tuple2(fromP, toP);
		var start = _v3.a;
		var end = _v3.b;
		return _Utils_update(
			box,
			{
				interaction: A4(
					$author$project$Timeline$Models$Select,
					interaction,
					_Utils_Tuple2(fromP, fromL),
					A3(
						$author$project$Timeline$Utils$findSectionsIds,
						_Utils_Tuple2(start, startLine),
						_Utils_Tuple2(end, endLine),
						$elm$core$Dict$values(box.groups)),
					_Utils_Tuple2(
						_Utils_Tuple2(start, startLine),
						_Utils_Tuple2(
							A2($author$project$Moment$durationBetween, start, end),
							endLine - startLine)))
			});
	});
var $author$project$Timeline$Update$snapToGrid = F3(
	function (zone, unit, val) {
		return A4($author$project$Timeline$Update$snapToGrid_, $elm$core$Basics$round, zone, unit, val);
	});
var $author$project$Timeline$Update$sectionsMove = F2(
	function (box, _v0) {
		var x = _v0.x;
		var y = _v0.y;
		var unit = $author$project$Timeline$Update$getUnit(box.zoom);
		var _v1 = A3($author$project$Timeline$Models$normalize, box, x, y);
		var posix = _v1.a;
		var toLine = _v1.b;
		var _v2 = box.interaction;
		switch (_v2.$) {
			case 'MouseOver':
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, x, y)
						}));
			case 'Select':
				var selAction = _v2.a;
				var pos = _v2.b;
				return $author$project$Timeline$Action$noAction(
					$author$project$Timeline$Update$updateMeshes(
						A4(
							$author$project$Timeline$Utils$setLasso,
							selAction,
							box,
							pos,
							_Utils_Tuple2(posix, toLine))));
			case 'Move':
				var mtype = _v2.a;
				var msec = _v2.b;
				var pos = _v2.c;
				var posDate = pos.a;
				var posLine = pos.b;
				var deltaTime = A2($author$project$Moment$durationBetween, posDate, posix);
				var deltaLine = toLine - posLine;
				var _v3 = A3(
					$elm$core$Tuple$mapBoth,
					function (d) {
						return ($author$project$Moment$fromDuration(d) * box.zoom) / $author$project$Timeline$Models$duration.day;
					},
					function (v) {
						return v * box.lineSize;
					},
					_Utils_Tuple2(deltaTime, deltaLine));
				var pix = _v3.a;
				var piy = _v3.b;
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A4(
								$author$project$Timeline$Models$Move,
								mtype,
								msec,
								pos,
								((_Utils_cmp(
									$elm$core$Basics$abs(pix),
									$elm$core$Basics$abs(piy)) > 0) || $author$project$Timeline$Models$selectionOverManyGroups(box.selection)) ? _Utils_Tuple2(deltaTime, 0) : _Utils_Tuple2(
									$author$project$Moment$toDuration(0),
									$elm$core$Basics$round(deltaLine)))
						}));
			case 'ResizeLeft':
				var pos = _v2.a;
				var posDate = pos.a;
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A2(
								$author$project$Timeline$Models$ResizeLeft,
								pos,
								A2($author$project$Moment$durationBetween, posDate, posix))
						}));
			case 'ResizeRight':
				var pos = _v2.a;
				var posDate = pos.a;
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A2(
								$author$project$Timeline$Models$ResizeRight,
								pos,
								A2($author$project$Moment$durationBetween, posDate, posix))
						}));
			case 'Draw':
				var start = _v2.a;
				var line = _v2.c;
				var snapx = A3(
					$author$project$Timeline$Update$snapToGrid,
					box.zone,
					unit,
					A2($author$project$Moment$lessThan, posix, start) ? A2(
						$author$project$Moment$minPosix,
						A2($author$project$Moment$subtractDuration, start, unit),
						posix) : A2(
						$author$project$Moment$maxPosix,
						A2($author$project$Moment$addDurationToPosix, start, unit),
						posix));
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$Draw, start, snapx, line)
						}));
			default:
				return $author$project$Timeline$Action$noAction(box);
		}
	});
var $author$project$Timeline$Action$CloneSections = F3(
	function (a, b, c) {
		return {$: 'CloneSections', a: a, b: b, c: c};
	});
var $author$project$Timeline$Action$CreateSection = F3(
	function (a, b, c) {
		return {$: 'CreateSection', a: a, b: b, c: c};
	});
var $author$project$Timeline$Action$ModifySections = F2(
	function (a, b) {
		return {$: 'ModifySections', a: a, b: b};
	});
var $author$project$Timeline$Action$MoveSections = F2(
	function (a, b) {
		return {$: 'MoveSections', a: a, b: b};
	});
var $author$project$Moment$durationNotZero = function (_v0) {
	var dur = _v0.a;
	return !(!dur);
};
var $author$project$Timeline$Update$findGroupAtPosition = F2(
	function (line, box) {
		return A2(
			$elm_community$list_extra$List$Extra$find,
			function (g) {
				return (_Utils_cmp(line, g.position) > -1) && (_Utils_cmp(line, g.position + g.size) < 0);
			},
			$elm$core$Dict$values(box.groups));
	});
var $elm$core$Dict$map = F2(
	function (func, dict) {
		if (dict.$ === 'RBEmpty_elm_builtin') {
			return $elm$core$Dict$RBEmpty_elm_builtin;
		} else {
			var color = dict.a;
			var key = dict.b;
			var value = dict.c;
			var left = dict.d;
			var right = dict.e;
			return A5(
				$elm$core$Dict$RBNode_elm_builtin,
				color,
				key,
				A2(func, key, value),
				A2($elm$core$Dict$map, func, left),
				A2($elm$core$Dict$map, func, right));
		}
	});
var $author$project$Timeline$Models$mapSelection = F2(
	function (func, _v0) {
		var sel = _v0.a;
		return $author$project$Timeline$Models$Selection(
			A2($elm$core$Dict$map, func, sel));
	});
var $elm$core$Set$foldl = F3(
	function (func, initialState, _v0) {
		var dict = _v0.a;
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (key, _v1, state) {
					return A2(func, key, state);
				}),
			initialState,
			dict);
	});
var $author$project$Timeline$Models$foldSelection = F3(
	function (fun, acc, _v0) {
		var dict = _v0.a;
		return A3(
			$elm$core$Dict$foldl,
			F3(
				function (gid, set, result) {
					return A3(
						$elm$core$Set$foldl,
						fun(gid),
						result,
						set);
				}),
			acc,
			dict);
	});
var $author$project$Timeline$Models$maxDuration = ((((365 * 100) * 24) * 60) * 60) * 1000;
var $author$project$Timeline$Models$minDurationOf = F2(
	function (groups, sel) {
		return A3(
			$author$project$Timeline$Models$foldSelection,
			F3(
				function (gid, sid, res) {
					var _v0 = A2($elm$core$Dict$get, gid, groups);
					if (_v0.$ === 'Nothing') {
						return res;
					} else {
						var gbox = _v0.a;
						var _v1 = A2(
							$elm_community$list_extra$List$Extra$find,
							function (a) {
								return _Utils_eq(a.section.id, sid);
							},
							gbox.sections);
						if (_v1.$ === 'Nothing') {
							return res;
						} else {
							var s = _v1.a;
							return A2(
								$elm$core$Basics$min,
								$elm$time$Time$posixToMillis(s.section.end) - $elm$time$Time$posixToMillis(s.section.start),
								res);
						}
					}
				}),
			$author$project$Timeline$Models$maxDuration,
			sel);
	});
var $author$project$Timeline$Update$snapToGridInt = function (grid) {
	var unit = grid.snap * 3600000;
	return $author$project$Moment$mapDuration(
		function (xx) {
			return $elm$core$Basics$round(
				$elm$core$Basics$round(xx / unit) * unit);
		});
};
var $author$project$Timeline$Update$sectionsUp = F2(
	function (box, _v0) {
		var x = _v0.x;
		var y = _v0.y;
		var selection = A2(
			$author$project$Timeline$Models$mapSelection,
			F2(
				function (gid, set) {
					var _v6 = A2($elm$core$Dict$get, gid, box.groups);
					if (_v6.$ === 'Just') {
						var group = _v6.a;
						return group.isSubtotal ? $elm$core$Set$empty : set;
					} else {
						return $elm$core$Set$empty;
					}
				}),
			box.selection);
		var _v1 = box.interaction;
		switch (_v1.$) {
			case 'Select':
				var selAction = _v1.a;
				var ids = _v1.c;
				var newsel = function () {
					if (selAction.$ === 'AddSelection') {
						return A2($author$project$Timeline$Models$addSelection, ids, box.selection);
					} else {
						return A2($author$project$Timeline$Models$substractSelection, ids, box.selection);
					}
				}();
				return _Utils_Tuple3(
					A2(
						$author$project$Timeline$Update$updateSelection,
						newsel,
						_Utils_update(
							box,
							{
								interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, x, y)
							})),
					$author$project$Timeline$Action$SelectSections(newsel),
					$elm$core$Platform$Cmd$none);
			case 'Move':
				var mtype = _v1.a;
				var msec = _v1.b;
				var _v3 = _v1.d;
				var deltaTime = _v3.a;
				var deltaLine = _v3.b;
				return _Utils_Tuple3(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, x, y)
						}),
					function () {
						if ($author$project$Moment$durationNotZero(deltaTime)) {
							var grid = $author$project$Timeline$Axis$getGrid($author$project$Timeline$Models$duration.day / box.zoom);
							return _Utils_eq(mtype, $author$project$Timeline$Models$SimpleMove) ? A2(
								$author$project$Timeline$Action$ModifySections,
								selection,
								_Utils_Tuple2(
									A2($author$project$Timeline$Update$snapToGridInt, grid, deltaTime),
									$author$project$Moment$toDuration(0))) : A3(
								$author$project$Timeline$Action$CloneSections,
								selection,
								A2($author$project$Timeline$Update$snapToGridInt, grid, deltaTime),
								$elm$core$Maybe$Nothing);
						} else {
							if (!(!deltaLine)) {
								var destGI = msec.line + deltaLine;
								var destGroup = A2($author$project$Timeline$Update$findGroupAtPosition, destGI, box);
								if (destGroup.$ === 'Just') {
									var g = destGroup.a;
									return g.isSubtotal ? $author$project$Timeline$Action$NoAction : (_Utils_eq(mtype, $author$project$Timeline$Models$SimpleMove) ? A2($author$project$Timeline$Action$MoveSections, selection, g.id) : A3(
										$author$project$Timeline$Action$CloneSections,
										selection,
										$author$project$Moment$toDuration(0),
										$elm$core$Maybe$Just(g.id)));
								} else {
									return $author$project$Timeline$Action$NoAction;
								}
							} else {
								return $author$project$Timeline$Action$NoAction;
							}
						}
					}(),
					$elm$core$Platform$Cmd$none);
			case 'ResizeLeft':
				var delta = _v1.b;
				return _Utils_Tuple3(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, x, y)
						}),
					function () {
						if ($author$project$Moment$durationNotZero(delta)) {
							var minDuration = A2($author$project$Timeline$Models$minDurationOf, box.groups, selection);
							var grid = $author$project$Timeline$Axis$getGrid($author$project$Timeline$Models$duration.day / box.zoom);
							var unit = grid.snap * 3600000;
							var minSnap = A2(
								$elm$core$Basics$min,
								$elm$core$Basics$round(unit),
								minDuration);
							var deltaSnap = A2(
								$author$project$Timeline$Update$snapToGridInt,
								grid,
								A2(
									$author$project$Moment$mapDuration,
									function (d) {
										return A2($elm$core$Basics$min, d, minDuration - minSnap);
									},
									delta));
							return A2(
								$author$project$Timeline$Action$ModifySections,
								selection,
								_Utils_Tuple2(
									deltaSnap,
									A2($author$project$Moment$mapDuration, $elm$core$Basics$negate, deltaSnap)));
						} else {
							return $author$project$Timeline$Action$NoAction;
						}
					}(),
					$elm$core$Platform$Cmd$none);
			case 'ResizeRight':
				var delta = _v1.b;
				return _Utils_Tuple3(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, x, y)
						}),
					function () {
						if ($author$project$Moment$durationNotZero(delta)) {
							var minDuration = A2($author$project$Timeline$Models$minDurationOf, box.groups, selection);
							var grid = $author$project$Timeline$Axis$getGrid($author$project$Timeline$Models$duration.day / box.zoom);
							var unit = grid.snap * 3600000;
							var minSnap = A2(
								$elm$core$Basics$min,
								$elm$core$Basics$round(unit),
								minDuration);
							var deltaSnap = A2(
								$author$project$Timeline$Update$snapToGridInt,
								grid,
								A2(
									$author$project$Moment$mapDuration,
									function (d) {
										return A2($elm$core$Basics$max, d, minSnap - minDuration);
									},
									delta));
							return A2(
								$author$project$Timeline$Action$ModifySections,
								selection,
								_Utils_Tuple2(
									$author$project$Moment$toDuration(0),
									deltaSnap));
						} else {
							return $author$project$Timeline$Action$NoAction;
						}
					}(),
					$elm$core$Platform$Cmd$none);
			case 'Draw':
				var start = _v1.a;
				var end = _v1.b;
				var lineInt = _v1.c;
				var maybe = A2($author$project$Timeline$Update$findGroupAtPosition, lineInt, box);
				var maybeGId = A2(
					$elm$core$Maybe$map,
					function ($) {
						return $.id;
					},
					maybe);
				var create = function () {
					if (maybe.$ === 'Just') {
						var g = maybe.a;
						return !g.isSubtotal;
					} else {
						return true;
					}
				}();
				return _Utils_Tuple3(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, x, y)
						}),
					create ? (A2($author$project$Moment$lessThan, start, end) ? A3($author$project$Timeline$Action$CreateSection, maybeGId, start, end) : A3($author$project$Timeline$Action$CreateSection, maybeGId, end, start)) : $author$project$Timeline$Action$NoAction,
					$elm$core$Platform$Cmd$none);
			default:
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, x, y)
						}));
		}
	});
var $author$project$Timeline$Update$sectionsWheel = F3(
	function (box, rect, _v0) {
		var x = _v0.x;
		var y = _v0.y;
		var dx = _v0.dx;
		var dy = _v0.dy;
		var altKey = _v0.altKey;
		var shiftKey = _v0.shiftKey;
		var getter = $author$project$Timeline$Models$directionGetter(box.direction);
		var startPixel = getter.h(
			_Utils_Tuple2(x, y));
		var _v1 = shiftKey ? _Utils_Tuple2(dy, 0) : _Utils_Tuple2(dx, dy);
		var movex = _v1.a;
		var movey = _v1.b;
		var offset = A2(
			$elm$core$Basics$max,
			A2($elm$core$Basics$min, 0, ((-(box.lines + 0)) * box.lineSize) + rect.height),
			A2(
				$elm$core$Basics$min,
				0,
				box.sectionOffsetY - getter.v(
					_Utils_Tuple2(movex, movey))));
		if (altKey) {
			var zoom = A2(
				$elm$core$Basics$min,
				6000,
				A2(
					$elm$core$Basics$max,
					_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? 2 : 5,
					box.zoom - ((dy / 200) * box.zoom)));
			var newstart = (((box.start - startPixel) / box.zoom) * zoom) + startPixel;
			var newbox = _Utils_update(
				box,
				{start: newstart, zoom: zoom, zoomChange: 5});
			return $author$project$Timeline$Action$changeWheelAction(newbox);
		} else {
			var unit = $author$project$Timeline$Update$getUnit(box.zoom);
			var newbox = _Utils_update(
				box,
				{
					sectionOffsetY: offset,
					start: box.start - getter.h(
						_Utils_Tuple2(movex, movey))
				});
			var movetime = A2(
				$author$project$Timeline$Models$unscale,
				box.zoom,
				getter.h(
					_Utils_Tuple2(movex, movey)));
			var _v2 = box.interaction;
			switch (_v2.$) {
				case 'Select':
					var selaction = _v2.a;
					var pos = _v2.b;
					return $author$project$Timeline$Action$changeWheelAction(
						$author$project$Timeline$Update$updateMeshes(
							A4(
								$author$project$Timeline$Utils$setLasso,
								selaction,
								newbox,
								pos,
								A3($author$project$Timeline$Models$normalize, newbox, x, y))));
				case 'Move':
					var mtype = _v2.a;
					var msec = _v2.b;
					var pos = _v2.c;
					var start = pos.a;
					var fromLine = pos.b;
					return $author$project$Timeline$Action$changeWheelAction(
						_Utils_update(
							newbox,
							{
								interaction: A4(
									$author$project$Timeline$Models$Move,
									mtype,
									msec,
									pos,
									function (_v3) {
										var deltax = _v3.a;
										var deltay = _v3.b;
										var _v4 = A3(
											$elm$core$Tuple$mapBoth,
											function (d) {
												return ($author$project$Moment$fromDuration(d) * box.zoom) / $author$project$Timeline$Models$duration.day;
											},
											function (v) {
												return v * box.lineSize;
											},
											_Utils_Tuple2(deltax, deltay));
										var pix = _v4.a;
										var piy = _v4.b;
										return ((_Utils_cmp(
											$elm$core$Basics$abs(pix),
											$elm$core$Basics$abs(piy)) > 0) || $author$project$Timeline$Models$selectionOverManyGroups(box.selection)) ? _Utils_Tuple2(deltax, 0) : _Utils_Tuple2(
											$author$project$Moment$toDuration(0),
											$elm$core$Basics$round(deltay));
									}(
										A3(
											$elm$core$Tuple$mapBoth,
											function (end) {
												return A2($author$project$Moment$durationBetween, start, end);
											},
											function (toLine) {
												return toLine - fromLine;
											},
											A3($author$project$Timeline$Models$normalize, box, x, y))))
							}));
				case 'ResizeLeft':
					var pos = _v2.a;
					var start = pos.a;
					return $author$project$Timeline$Action$changeWheelAction(
						_Utils_update(
							newbox,
							{
								interaction: A2(
									$author$project$Timeline$Models$ResizeLeft,
									pos,
									A2(
										$author$project$Moment$durationBetween,
										start,
										A3($author$project$Timeline$Models$normalize, box, x, y).a))
							}));
				case 'ResizeRight':
					var pos = _v2.a;
					var start = pos.a;
					return $author$project$Timeline$Action$changeWheelAction(
						_Utils_update(
							newbox,
							{
								interaction: A2(
									$author$project$Timeline$Models$ResizeRight,
									pos,
									A2(
										$author$project$Moment$durationBetween,
										start,
										A3($author$project$Timeline$Models$normalize, box, x, y).a))
							}));
				case 'Draw':
					var start = _v2.a;
					var line = _v2.c;
					var ax = A3($author$project$Timeline$Models$normalize, newbox, x, y).a;
					var snapx = A3(
						$author$project$Timeline$Update$snapToGrid,
						newbox.zone,
						unit,
						A2($author$project$Moment$lessThan, ax, start) ? A2(
							$author$project$Moment$minPosix,
							A2($author$project$Moment$subtractDuration, start, unit),
							ax) : A2(
							$author$project$Moment$maxPosix,
							A2($author$project$Moment$addDurationToPosix, start, unit),
							ax));
					return $author$project$Timeline$Action$changeWheelAction(
						_Utils_update(
							newbox,
							{
								interaction: A3($author$project$Timeline$Models$Draw, start, snapx, line)
							}));
				case 'MouseOver':
					var _v5 = _v2.a;
					var time = _v5.a;
					var _float = _v5.b;
					return $author$project$Timeline$Action$changeWheelAction(
						_Utils_update(
							newbox,
							{
								interaction: $author$project$Timeline$Models$MouseOver(
									_Utils_Tuple2(
										A2(
											$author$project$Moment$addDurationToPosix,
											time,
											$author$project$Moment$toDuration(
												$elm$core$Basics$round(movetime))),
										_float))
							}));
				default:
					return $author$project$Timeline$Action$changeWheelAction(newbox);
			}
		}
	});
var $author$project$Timeline$showDate = F3(
	function (first, width, tl) {
		var firstms = $elm$time$Time$posixToMillis(first);
		return _Utils_update(
			tl,
			{
				interaction: $author$project$Timeline$Models$MouseOver(
					_Utils_Tuple2(
						$elm$time$Time$millisToPosix(-1),
						-1)),
				start: (($elm$time$Time$posixToMillis(tl.first) - firstms) * (tl.zoom / $author$project$Timeline$Models$duration.day)) + ((width - $author$project$Timeline$groupsWidth) * 0.02)
			});
	});
var $author$project$Timeline$Update$snapToGridForZoom = F3(
	function (zoom, zone, time) {
		return A3(
			$author$project$Timeline$Update$snapToGrid,
			zone,
			$author$project$Timeline$Update$getUnit(zoom),
			time);
	});
var $author$project$Timeline$zoomOver = F4(
	function (first, last, width, tl) {
		var lastms = $elm$time$Time$posixToMillis(last);
		var firstms = $elm$time$Time$posixToMillis(first);
		var dur = (lastms - firstms) / $author$project$Timeline$Models$duration.day;
		var zoom = ((width - $author$project$Timeline$groupsWidth) / dur) * 0.96;
		return _Utils_update(
			tl,
			{
				interaction: $author$project$Timeline$Models$MouseOver(
					_Utils_Tuple2(
						$elm$time$Time$millisToPosix(-1),
						-1)),
				start: (($elm$time$Time$posixToMillis(tl.first) - firstms) * (zoom / $author$project$Timeline$Models$duration.day)) + ((width - $author$project$Timeline$groupsWidth) * 0.02),
				zoom: zoom
			});
	});
var $author$project$Timeline$update = F3(
	function (msg, bb, rect) {
		var box = _Utils_update(
			bb,
			{
				zoomChange: A2($elm$core$Basics$max, 0, bb.zoomChange - 1)
			});
		var axisSize = box.displayAxis ? (_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? $author$project$Timeline$axisHeight : $author$project$Timeline$axisWidth) : 0;
		switch (msg.$) {
			case 'NoOp':
				return $author$project$Timeline$Action$noAction(box);
			case 'SectionsWheel':
				var event = msg.a;
				return A3(
					$author$project$Timeline$Update$sectionsWheel,
					box,
					_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? _Utils_update(
						rect,
						{height: rect.height - axisSize}) : _Utils_update(
						rect,
						{width: rect.width - axisSize}),
					event);
			case 'SectionsMove':
				var event = msg.a;
				return A2($author$project$Timeline$Update$sectionsMove, box, event);
			case 'SectionsDown':
				var event = msg.a;
				return A2($author$project$Timeline$Update$sectionsDown, box, event);
			case 'SectionsDoubleClick':
				return $author$project$Timeline$Action$noAction(
					A2($author$project$Timeline$zoomAllTime, rect.width, box));
			case 'SectionsUp':
				var event = msg.a;
				return A2($author$project$Timeline$Update$sectionsUp, box, event);
			case 'SectionsOver':
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{standby: false}));
			case 'SectionsOut':
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							standby: !_Utils_eq(
								box.interaction,
								A3($author$project$Timeline$Models$mouseOverInteraction, box, -1, -1))
						}));
			case 'StopInteraction':
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A3($author$project$Timeline$Models$mouseOverInteraction, box, -1, -1),
							standby: true
						}));
			case 'GroupsWheel':
				var event = msg.a;
				return A3(
					$author$project$Timeline$Update$groupsWheel,
					box,
					_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? {height: rect.height - axisSize, top: axisSize, width: rect.width} : {height: rect.width - axisSize, top: axisSize, width: rect.height},
					event);
			case 'DndMsg':
				var dndmsg = msg.a;
				var orig = A2(
					$elm$core$List$sortBy,
					function ($) {
						return $.position;
					},
					$elm$core$Dict$values(box.groups));
				var _v1 = A3(
					$author$project$Timeline$system(box.direction).update,
					dndmsg,
					box.dnd,
					orig);
				var dnd = _v1.a;
				var groups = _v1.b;
				return _Utils_Tuple3(
					_Utils_update(
						box,
						{dnd: dnd}),
					_Utils_eq(groups, orig) ? $author$project$Timeline$Action$NoAction : $author$project$Timeline$Action$ReorderGroups(
						A2(
							$elm$core$List$map,
							function ($) {
								return $.id;
							},
							groups)),
					$author$project$Timeline$system(box.direction).commands(dnd));
			case 'SelectGroup':
				var gid = msg.a;
				var shiftKey = msg.b;
				var selection = A3(
					$author$project$Timeline$Models$addToSelection,
					gid,
					A2(
						$elm$core$List$map,
						A2(
							$elm$core$Basics$composeR,
							function ($) {
								return $.section;
							},
							function ($) {
								return $.id;
							}),
						A2(
							$elm$core$Maybe$withDefault,
							_List_Nil,
							A2(
								$elm$core$Maybe$map,
								function ($) {
									return $.sections;
								},
								A2($elm$core$Dict$get, gid, box.groups)))),
					shiftKey ? box.selection : $author$project$Timeline$Models$emptySelection);
				return _Utils_Tuple3(
					A2($author$project$Timeline$Update$updateSelection, selection, box),
					$author$project$Timeline$Action$SelectSections(selection),
					$elm$core$Platform$Cmd$none);
			case 'DoubleClickGroup':
				var gid = msg.a;
				var _v2 = A2($elm$core$Dict$get, gid, box.groups);
				if (_v2.$ === 'Just') {
					var group = _v2.a;
					return _Utils_Tuple3(
						_Utils_update(
							box,
							{
								interaction: A2(
									$author$project$Timeline$Models$EditGroupLabel,
									gid,
									A2(
										$elm$core$Maybe$withDefault,
										'',
										$elm$core$List$head(group.label)))
							}),
						$author$project$Timeline$Action$NoAction,
						A2(
							$elm$core$Task$attempt,
							function (_v3) {
								return $author$project$Timeline$NoOp;
							},
							$elm$browser$Browser$Dom$focus(gid + 'label')));
				} else {
					return $author$project$Timeline$Action$noAction(box);
				}
			case 'UpdateGroupLabel':
				var gid = msg.a;
				var string = msg.b;
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: A2($author$project$Timeline$Models$EditGroupLabel, gid, string)
						}));
			case 'ValidateGroupLabel':
				var gid = msg.a;
				var string = msg.b;
				return _Utils_Tuple3(
					_Utils_update(
						box,
						{
							interaction: $author$project$Timeline$Models$MouseOver(
								_Utils_Tuple2(
									$elm$time$Time$millisToPosix(-1),
									-1))
						}),
					A2($author$project$Timeline$Action$ModifyGroupLabel, gid, string),
					$elm$core$Platform$Cmd$none);
			case 'CancelGroupLabelEdit':
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{
							interaction: $author$project$Timeline$Models$MouseOver(
								_Utils_Tuple2(
									$elm$time$Time$millisToPosix(-1),
									-1))
						}));
			case 'Keypress':
				var _int = msg.a;
				var _v4 = _Utils_Tuple2(_int, box.canEditSections);
				_v4$5:
				while (true) {
					switch (_v4.a) {
						case 8:
							if (_v4.b) {
								var sections = $elm$core$Set$toList(
									$author$project$Timeline$Models$selectionToSet(box.selection));
								return _Utils_Tuple3(
									A2(
										$author$project$Timeline$Update$updateSelection,
										$author$project$Timeline$Models$emptySelection,
										_Utils_update(
											box,
											{
												interaction: $author$project$Timeline$Models$MouseOver(
													_Utils_Tuple2(
														$elm$time$Time$millisToPosix(-1),
														-1))
											})),
									$author$project$Timeline$Action$DeleteSections(sections),
									$elm$core$Platform$Cmd$none);
							} else {
								break _v4$5;
							}
						case 68:
							if (_v4.b) {
								return _Utils_Tuple3(
									box,
									$author$project$Timeline$Action$DuplicateSections(box.selection),
									$elm$core$Platform$Cmd$none);
							} else {
								break _v4$5;
							}
						case 78:
							return $author$project$Timeline$Action$selectAction(
								A2(
									$author$project$Timeline$Update$updateSelection,
									$author$project$Timeline$Models$emptySelection,
									A3($author$project$Timeline$showDate, box.currentPosix, rect.width, box)));
						case 83:
							if (_v4.b) {
								var _v5 = box.interaction;
								if (_v5.$ === 'MouseOver') {
									var _v6 = _v5.a;
									var time = _v6.a;
									return _Utils_Tuple3(
										box,
										A2(
											$author$project$Timeline$Action$Split,
											box.selection,
											A3($author$project$Timeline$Update$snapToGridForZoom, box.zoom, box.zone, time)),
										$elm$core$Platform$Cmd$none);
								} else {
									return $author$project$Timeline$Action$noAction(box);
								}
							} else {
								break _v4$5;
							}
						case 90:
							var selection = $author$project$Timeline$Models$selectionIsEmpty(box.selection) ? A2(
								$elm$core$List$map,
								function ($) {
									return $.section;
								},
								box.sections) : $author$project$Timeline$Models$selectedSections(box);
							var _v7 = _Utils_Tuple2(
								$elm$core$List$head(selection),
								$elm_community$list_extra$List$Extra$last(selection));
							if ((_v7.a.$ === 'Just') && (_v7.b.$ === 'Just')) {
								var first = _v7.a.a;
								var last = _v7.b.a;
								return $author$project$Timeline$Action$selectAction(
									A2(
										$author$project$Timeline$Update$updateSelection,
										$author$project$Timeline$Models$emptySelection,
										A4($author$project$Timeline$zoomOver, first.start, last.end, rect.width, box)));
							} else {
								return $author$project$Timeline$Action$noAction(box);
							}
						default:
							break _v4$5;
					}
				}
				return $author$project$Timeline$Action$noAction(box);
			default:
				var posix = msg.a;
				return $author$project$Timeline$Action$noAction(
					_Utils_update(
						box,
						{currentPosix: posix}));
		}
	});
var $author$project$Widget$timelineUpdate = F2(
	function (tmsg, model) {
		var totalsSize = $elm$core$Basics$round(
			model.totalState.lineSize * ($elm$core$List$length(model.totalFields) + (model.options.countMoments ? 1 : 0)));
		var groupFieldEditable = A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function (field) {
					return !field.isFormula;
				},
				A2($elm$core$Dict$get, model.groupId, model.fields)));
		var box = _Utils_eq(model.options.direction, $author$project$Timeline$Models$Horizontal) ? {height: model.box.height - totalsSize, width: model.box.width} : {height: model.box.height, width: model.box.width - totalsSize};
		var _v0 = A3($author$project$Timeline$update, tmsg, model.timelineState, box);
		var state = _v0.a;
		var action = _v0.b;
		var tcmd = _v0.c;
		var updateFieldCmd = function () {
			if ($elm$core$String$isEmpty(model.focus)) {
				return $elm$core$Platform$Cmd$none;
			} else {
				var _v11 = _Utils_Tuple2(
					action,
					A2($elm$core$Dict$get, model.focus, model.editableStates));
				if (((_v11.a.$ === 'SelectSections') && (_v11.b.$ === 'Just')) && (_v11.b.a.$ === 'Val')) {
					var str = _v11.b.a.a;
					return A3($author$project$Widget$makeFieldUpdate, model, model.focus, str);
				} else {
					return $elm$core$Platform$Cmd$none;
				}
			}
		}();
		var _v1 = function () {
			if ((action.$ === 'CreateSection') && (action.a.$ === 'Nothing')) {
				var _v3 = action.a;
				var start = action.b;
				var end = action.c;
				return _Utils_Tuple2(
					$author$project$Widget$New,
					A5($author$project$Widget$fieldsFromDates, model.timelineState.zone, model.durationUnit, start, end, model.groupsStates));
			} else {
				return _Utils_Tuple2(model.showModal, model.groupsStates);
			}
		}();
		var modal = _v1.a;
		var groupsStates = _v1.b;
		var _v4 = function () {
			switch (action.$) {
				case 'ModifySections':
					var ids = action.a;
					var _v6 = action.b;
					var addstart = _v6.a;
					var addend = _v6.b;
					return _Utils_Tuple2(
						model,
						$author$project$Widget$modifyRecordsDelta(
							{
								changeAmplitude: ($author$project$Moment$fromDuration(addend) / 1000) | 0,
								changeDebut: ($author$project$Moment$fromDuration(addstart) / 1000) | 0,
								ids: A2(
									$elm$core$List$filterMap,
									$elm$core$String$toInt,
									$elm$core$Set$toList(
										$author$project$Timeline$Models$selectionToSet(ids)))
							}));
				case 'CloneSections':
					var ids = action.a;
					var addstart = action.b;
					var mbgroup = action.c;
					var mbg = A2($elm$core$Maybe$map, $author$project$Widget$unwrapGroupeId, mbgroup);
					return _Utils_Tuple2(
						model,
						$author$project$Widget$cloneRecords(
							{
								changeDebut: ($author$project$Moment$fromDuration(addstart) / 1000) | 0,
								groupeId: A2(
									$elm$core$Maybe$withDefault,
									'',
									A2(
										$elm$core$Maybe$map,
										function ($) {
											return $.groupeId;
										},
										mbg)),
								ids: A2(
									$elm$core$List$filterMap,
									$elm$core$String$toInt,
									$elm$core$Set$toList(
										$author$project$Timeline$Models$selectionToSet(ids))),
								sousGroupeId: A2(
									$elm$core$Maybe$withDefault,
									'',
									A2(
										$elm$core$Maybe$map,
										A2(
											$elm$core$Basics$composeR,
											function ($) {
												return $.sousGroupeId;
											},
											$elm$core$Maybe$withDefault('')),
										mbg))
							}));
				case 'DuplicateSections':
					var ids = action.a;
					return _Utils_Tuple2(
						model,
						$author$project$Widget$cloneRecords(
							{
								changeDebut: 0,
								groupeId: '',
								ids: A2(
									$elm$core$List$filterMap,
									$elm$core$String$toInt,
									$elm$core$Set$toList(
										$author$project$Timeline$Models$selectionToSet(ids))),
								sousGroupeId: ''
							}));
				case 'DeleteSections':
					var ids = action.a;
					return _Utils_Tuple2(
						model,
						$author$project$Widget$deleteRecords(
							{
								ids: A2($elm$core$List$filterMap, $elm$core$String$toInt, ids)
							}));
				case 'MoveSections':
					var ids = action.a;
					var gid = action.b;
					if (groupFieldEditable) {
						var g = $author$project$Widget$unwrapGroupeId(gid);
						return _Utils_Tuple2(
							model,
							$author$project$Widget$modifyRecordsGroup(
								{
									groupeId: g.groupeId,
									ids: A2(
										$elm$core$List$filterMap,
										$elm$core$String$toInt,
										$elm$core$Set$toList(
											$author$project$Timeline$Models$selectionToSet(ids))),
									sousGroupeId: A2($elm$core$Maybe$withDefault, '', g.sousGroupeId)
								}));
					} else {
						return _Utils_Tuple2(
							A2($author$project$Widget$addError, 'Group is not editable (formula column)', model),
							$elm$core$Platform$Cmd$none);
					}
				case 'CreateSection':
					var maybe = action.a;
					var from = action.b;
					var to = action.c;
					if (groupFieldEditable) {
						if (maybe.$ === 'Just') {
							var gid = maybe.a;
							var g = $author$project$Widget$unwrapGroupeId(gid);
							return _Utils_Tuple2(
								_Utils_update(
									model,
									{hasCreated: true}),
								$author$project$Widget$createRecord(
									{
										date: A2($f0i$iso8601$Iso8601$toDateTimeString, model.timelineState.zone, from),
										duree: ($author$project$Moment$fromDuration(
											A2($author$project$Moment$durationBetween, from, to)) / 1000) | 0,
										groupeId: g.groupeId,
										sousGroupeId: A2($elm$core$Maybe$withDefault, '', g.sousGroupeId)
									}));
						} else {
							return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
						}
					} else {
						return _Utils_Tuple2(
							A2($author$project$Widget$addError, 'Group is not editable (formula column)', model),
							$elm$core$Platform$Cmd$none);
					}
				case 'ChangeZoom':
					var start = action.a.start;
					var zoom = action.a.zoom;
					var sectionOffsetY = action.a.sectionOffsetY;
					var lineSize = action.a.lineSize;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								options: {
									colorScheme: model.options.colorScheme,
									countMoments: model.options.countMoments,
									direction: model.timelineState.direction,
									displaySubtotals: model.options.displaySubtotals,
									durationUnit: model.durationUnit,
									lineSize: _Utils_eq(state.direction, $author$project$Timeline$Models$Vertical) ? (lineSize / 2) : lineSize,
									sectionOffsetY: sectionOffsetY,
									start: start,
									wrapText: model.timelineState.wrapText,
									zoom: zoom
								},
								totalState: A3($author$project$Timeline$changeStartAndZoom, start, zoom, model.totalState)
							}),
						A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg));
				case 'SelectSections':
					var sel = action.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								editableStates: _Utils_eq(sel, model.timelineState.selection) ? model.editableStates : A5($author$project$Widget$fieldsFromSelection, model.timelineState.zone, model.durationUnit, sel, model.records, model.editableFields)
							}),
						$author$project$Widget$selectRecords(
							A2(
								$elm$core$List$filterMap,
								$elm$core$String$toInt,
								$elm$core$Set$toList(
									$author$project$Timeline$Models$selectionToSet(sel)))));
				case 'Split':
					var sel = action.a;
					var date = action.b;
					return $author$project$Timeline$Models$selectionIsEmpty(sel) ? _Utils_Tuple2(model, $elm$core$Platform$Cmd$none) : _Utils_Tuple2(
						model,
						$author$project$Widget$splitRecords(
							{
								date: A2($f0i$iso8601$Iso8601$toDateTimeString, model.timelineState.zone, date),
								ids: A2(
									$elm$core$List$filterMap,
									$elm$core$String$toInt,
									$elm$core$Set$toList(
										$author$project$Timeline$Models$selectionToSet(sel)))
							}));
				default:
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			}
		}();
		var modif = _v4.a;
		var cmd = _v4.b;
		return _Utils_Tuple2(
			_Utils_update(
				modif,
				{
					groupsStates: groupsStates,
					showInspector: model.showInspector ? (!$author$project$Timeline$Models$selectionIsEmpty(state.selection)) : (function () {
						var _v8 = state.interaction;
						if (_v8.$ === 'MouseOver') {
							return true;
						} else {
							return false;
						}
					}() ? (!$author$project$Timeline$Models$selectionIsEmpty(state.selection)) : false),
					showModal: modal,
					timelineState: function () {
						var _v9 = _Utils_Tuple2(action, groupFieldEditable);
						if ((_v9.a.$ === 'MoveSections') && (!_v9.b)) {
							var _v10 = _v9.a;
							return state;
						} else {
							return A2($author$project$Timeline$applyAction, action, state);
						}
					}()
				}),
			$elm$core$Platform$Cmd$batch(
				_List_fromArray(
					[
						cmd,
						updateFieldCmd,
						A2($elm$core$Platform$Cmd$map, $author$project$Widget$TimelineMsg, tcmd)
					])));
	});
var $author$project$Widget$totalsUpdate = F2(
	function (tmsg, model) {
		var options = model.options;
		var totalsSize = $elm$core$Basics$round(
			model.totalState.lineSize * ($elm$core$List$length(model.totalFields) + (model.options.countMoments ? 1 : 0)));
		var box = _Utils_eq(model.options.direction, $author$project$Timeline$Models$Horizontal) ? {height: totalsSize, width: model.box.width} : {height: model.box.height, width: totalsSize};
		var _v0 = A3($author$project$Timeline$update, tmsg, model.totalState, box);
		var state = _v0.a;
		var action = _v0.b;
		var tcmd = _v0.c;
		if (action.$ === 'ChangeZoom') {
			var start = action.a.start;
			var zoom = action.a.zoom;
			return _Utils_Tuple2(
				_Utils_update(
					model,
					{
						options: _Utils_update(
							options,
							{start: start, zoom: zoom}),
						timelineState: A3($author$project$Timeline$changeStartAndZoom, start, zoom, model.timelineState),
						totalState: state
					}),
				$elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg),
							A2($elm$core$Platform$Cmd$map, $author$project$Widget$TotalsMsg, tcmd)
						])));
		} else {
			return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
		}
	});
var $author$project$Widget$totalsVertSize = 44;
var $author$project$Selectize$Internal$ChangeSelection = F2(
	function (a, b) {
		return {$: 'ChangeSelection', a: a, b: b};
	});
var $author$project$Selectize$Internal$NoAction = {$: 'NoAction'};
var $author$project$Selectize$Internal$NoOp = {$: 'NoOp'};
var $author$project$Selectize$Internal$textfieldId = function (id) {
	return id + '__textfield';
};
var $author$project$Selectize$Internal$blur = function (id) {
	return A2(
		$elm$core$Task$attempt,
		function (_v0) {
			return $author$project$Selectize$Internal$NoOp;
		},
		$elm$browser$Browser$Dom$blur(
			$author$project$Selectize$Internal$textfieldId(id)));
};
var $author$project$Selectize$Internal$currentEntry = function (_v0) {
	var current = _v0.current;
	if (current.a.$ === 'Entry') {
		var a = current.a.a;
		return $elm$core$Maybe$Just(a);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Selectize$Internal$focus = function (id) {
	return A2(
		$elm$core$Task$attempt,
		function (_v0) {
			return $author$project$Selectize$Internal$NoOp;
		},
		$elm$browser$Browser$Dom$focus(
			$author$project$Selectize$Internal$textfieldId(id)));
};
var $author$project$Selectize$Internal$Divider = function (a) {
	return {$: 'Divider', a: a};
};
var $author$project$Selectize$Internal$removeLabel = function (labeledEntry) {
	if (labeledEntry.$ === 'LEntry') {
		var a = labeledEntry.a;
		return $author$project$Selectize$Internal$Entry(a);
	} else {
		var text = labeledEntry.a;
		return $author$project$Selectize$Internal$Divider(text);
	}
};
var $author$project$Selectize$Internal$zipHelper = F3(
	function (listA, listB, sum) {
		zipHelper:
		while (true) {
			var _v0 = _Utils_Tuple2(listA, listB);
			if (_v0.a.b && _v0.b.b) {
				var _v1 = _v0.a;
				var a = _v1.a;
				var restA = _v1.b;
				var _v2 = _v0.b;
				var b = _v2.a;
				var restB = _v2.b;
				var $temp$listA = restA,
					$temp$listB = restB,
					$temp$sum = A2(
					$elm$core$List$cons,
					_Utils_Tuple2(a, b),
					sum);
				listA = $temp$listA;
				listB = $temp$listB;
				sum = $temp$sum;
				continue zipHelper;
			} else {
				return sum;
			}
		}
	});
var $author$project$Selectize$Internal$zip = F2(
	function (listA, listB) {
		return $elm$core$List$reverse(
			A3($author$project$Selectize$Internal$zipHelper, listA, listB, _List_Nil));
	});
var $author$project$Selectize$Internal$zipFirst = function (zipList) {
	var front = zipList.front;
	var current = zipList.current;
	var back = zipList.back;
	var currentTop = zipList.currentTop;
	if (current.a.$ === 'Divider') {
		if (!back.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var next = back.a;
			var rest = back.b;
			return $author$project$Selectize$Internal$zipFirst(
				{
					back: rest,
					current: next,
					currentTop: currentTop + current.b,
					front: A2($elm$core$List$cons, current, front)
				});
		}
	} else {
		return $elm$core$Maybe$Just(zipList);
	}
};
var $author$project$Selectize$Internal$fromList = F2(
	function (entries, entryHeights) {
		var _v0 = _Utils_Tuple2(
			A2($elm$core$List$map, $author$project$Selectize$Internal$removeLabel, entries),
			entryHeights);
		if (_v0.a.b && _v0.b.b) {
			var _v1 = _v0.a;
			var firstEntry = _v1.a;
			var restEntries = _v1.b;
			var _v2 = _v0.b;
			var firstHeight = _v2.a;
			var restHeights = _v2.b;
			return $author$project$Selectize$Internal$zipFirst(
				{
					back: A2($author$project$Selectize$Internal$zip, restEntries, restHeights),
					current: _Utils_Tuple2(firstEntry, firstHeight),
					currentTop: 0,
					front: _List_Nil
				});
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Selectize$Internal$contains = F2(
	function (query, label) {
		return A2(
			$elm$core$String$contains,
			$elm$core$String$toLower(query),
			$elm$core$String$toLower(label));
	});
var $author$project$Selectize$Internal$fromListWithFilter = F3(
	function (query, entries, entryHeights) {
		var filtered = A2(
			$elm$core$List$filterMap,
			function (_v1) {
				var e = _v1.a;
				var height = _v1.b;
				if (e.$ === 'LEntry') {
					var a = e.a;
					var label = e.b;
					return A2($author$project$Selectize$Internal$contains, query, label) ? $elm$core$Maybe$Just(
						_Utils_Tuple2(
							$author$project$Selectize$Internal$Entry(a),
							height)) : $elm$core$Maybe$Nothing;
				} else {
					var text = e.a;
					return $elm$core$Maybe$Just(
						_Utils_Tuple2(
							$author$project$Selectize$Internal$Divider(text),
							height));
				}
			},
			A2($author$project$Selectize$Internal$zip, entries, entryHeights));
		if (filtered.b) {
			var first = filtered.a;
			var rest = filtered.b;
			return $author$project$Selectize$Internal$zipFirst(
				{back: rest, current: first, currentTop: 0, front: _List_Nil});
		} else {
			return $elm$core$Maybe$Nothing;
		}
	});
var $author$project$Selectize$Internal$zipNext = function (zipList) {
	var front = zipList.front;
	var current = zipList.current;
	var back = zipList.back;
	var currentTop = zipList.currentTop;
	if (!back.b) {
		return zipList;
	} else {
		var next = back.a;
		var rest = back.b;
		return A2(
			$elm$core$Maybe$withDefault,
			zipList,
			$author$project$Selectize$Internal$zipFirst(
				{
					back: rest,
					current: next,
					currentTop: currentTop + current.b,
					front: A2($elm$core$List$cons, current, front)
				}));
	}
};
var $author$project$Selectize$Internal$moveForwardToHelper = F2(
	function (a, zipList) {
		if (_Utils_eq(
			zipList.current.a,
			$author$project$Selectize$Internal$Entry(a))) {
			return $elm$core$Maybe$Just(zipList);
		} else {
			var _v0 = zipList.back;
			if (!_v0.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				return A2(
					$author$project$Selectize$Internal$moveForwardToHelper,
					a,
					$author$project$Selectize$Internal$zipNext(zipList));
			}
		}
	});
var $author$project$Selectize$Internal$moveForwardTo = F2(
	function (a, zipList) {
		return A2(
			$elm$core$Maybe$withDefault,
			zipList,
			A2($author$project$Selectize$Internal$moveForwardToHelper, a, zipList));
	});
var $author$project$Selectize$Internal$reset = function (state) {
	return _Utils_update(
		state,
		{mouseFocus: $elm$core$Maybe$Nothing, open: false, query: '', zipList: $elm$core$Maybe$Nothing});
};
var $elm$browser$Browser$Dom$getViewportOf = _Browser_getViewportOf;
var $author$project$Selectize$Internal$menuId = function (id) {
	return id + '__menu';
};
var $elm$browser$Browser$Dom$setViewportOf = _Browser_setViewportOf;
var $author$project$Selectize$Internal$scroll = F2(
	function (id, y) {
		return A2(
			$elm$core$Task$attempt,
			function (_v0) {
				return $author$project$Selectize$Internal$NoOp;
			},
			A2(
				$elm$core$Task$andThen,
				function (_v1) {
					var viewport = _v1.viewport;
					return A3(
						$elm$browser$Browser$Dom$setViewportOf,
						$author$project$Selectize$Internal$menuId(id),
						viewport.x,
						y);
				},
				$elm$browser$Browser$Dom$getViewportOf(
					$author$project$Selectize$Internal$menuId(id))));
	});
var $author$project$Selectize$Internal$zipCurrentHeight = function (_v0) {
	var current = _v0.current;
	return current.b;
};
var $author$project$Selectize$Internal$scrollToKeyboardFocus = F3(
	function (id, scrollTop, _v0) {
		var state = _v0.a;
		var cmd = _v0.b;
		var maybeMsg = _v0.c;
		var _v1 = state.zipList;
		if (_v1.$ === 'Just') {
			var zipList = _v1.a;
			var top = zipList.currentTop;
			var height = $author$project$Selectize$Internal$zipCurrentHeight(zipList);
			var y = (_Utils_cmp(top, scrollTop) < 0) ? top : ((_Utils_cmp(top + height, scrollTop + state.menuHeight) > 0) ? ((top + height) - state.menuHeight) : scrollTop);
			return _Utils_Tuple3(
				state,
				$elm$core$Platform$Cmd$batch(
					_List_fromArray(
						[
							A2($author$project$Selectize$Internal$scroll, id, y),
							cmd
						])),
				maybeMsg);
		} else {
			return _Utils_Tuple3(state, cmd, maybeMsg);
		}
	});
var $author$project$Selectize$Internal$zipReverseFirst = function (zipList) {
	var front = zipList.front;
	var current = zipList.current;
	var back = zipList.back;
	var currentTop = zipList.currentTop;
	if (current.a.$ === 'Divider') {
		if (!front.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var previous = front.a;
			var rest = front.b;
			return $author$project$Selectize$Internal$zipReverseFirst(
				{
					back: A2($elm$core$List$cons, current, back),
					current: previous,
					currentTop: currentTop - previous.b,
					front: rest
				});
		}
	} else {
		return $elm$core$Maybe$Just(zipList);
	}
};
var $author$project$Selectize$Internal$zipPrevious = function (zipList) {
	var front = zipList.front;
	var current = zipList.current;
	var back = zipList.back;
	var currentTop = zipList.currentTop;
	if (!front.b) {
		return zipList;
	} else {
		var previous = front.a;
		var rest = front.b;
		return A2(
			$elm$core$Maybe$withDefault,
			zipList,
			$author$project$Selectize$Internal$zipReverseFirst(
				{
					back: A2($elm$core$List$cons, current, back),
					current: previous,
					currentTop: currentTop - previous.b,
					front: rest
				}));
	}
};
var $author$project$Selectize$Internal$updateKeyboardFocus = F2(
	function (movement, state) {
		var newZipList = function () {
			switch (movement.$) {
				case 'Up':
					return A2($elm$core$Maybe$map, $author$project$Selectize$Internal$zipPrevious, state.zipList);
				case 'Down':
					return A2($elm$core$Maybe$map, $author$project$Selectize$Internal$zipNext, state.zipList);
				default:
					return state.zipList;
			}
		}();
		return _Utils_Tuple3(
			_Utils_update(
				state,
				{zipList: newZipList}),
			$elm$core$Platform$Cmd$none,
			A2($author$project$Selectize$Internal$ChangeSelection, false, $elm$core$Maybe$Nothing));
	});
var $author$project$Selectize$Internal$update = F3(
	function (maybeSelection, state, msg) {
		switch (msg.$) {
			case 'NoOp':
				return _Utils_Tuple3(state, $elm$core$Platform$Cmd$none, $author$project$Selectize$Internal$NoAction);
			case 'OpenMenu':
				var heights = msg.a;
				var scrollTop = msg.b;
				var newZipList = A2(
					$elm$core$Maybe$map,
					function () {
						if (maybeSelection.$ === 'Just') {
							var a = maybeSelection.a;
							return $author$project$Selectize$Internal$moveForwardTo(a);
						} else {
							return $elm$core$Basics$identity;
						}
					}(),
					A2($author$project$Selectize$Internal$fromList, state.entries, heights.entries));
				var top = A2(
					$elm$core$Maybe$withDefault,
					0,
					A2(
						$elm$core$Maybe$map,
						function ($) {
							return $.currentTop;
						},
						newZipList));
				var height = A2(
					$elm$core$Maybe$withDefault,
					0,
					A2($elm$core$Maybe$map, $author$project$Selectize$Internal$zipCurrentHeight, newZipList));
				return _Utils_Tuple3(
					_Utils_update(
						state,
						{entryHeights: heights.entries, menuHeight: heights.menu, mouseFocus: $elm$core$Maybe$Nothing, open: true, query: '', scrollTop: scrollTop, zipList: newZipList}),
					A2($author$project$Selectize$Internal$scroll, state.id, top - ((heights.menu - height) / 2)),
					$author$project$Selectize$Internal$NoAction);
			case 'CloseMenu':
				return state.preventBlur ? _Utils_Tuple3(state, $elm$core$Platform$Cmd$none, $author$project$Selectize$Internal$NoAction) : _Utils_Tuple3(
					$author$project$Selectize$Internal$reset(state),
					$elm$core$Platform$Cmd$none,
					$author$project$Selectize$Internal$NoAction);
			case 'FocusTextfield':
				return _Utils_Tuple3(
					state,
					$author$project$Selectize$Internal$focus(state.id),
					$author$project$Selectize$Internal$NoAction);
			case 'BlurTextfield':
				return _Utils_Tuple3(
					state,
					$author$project$Selectize$Internal$blur(state.id),
					$author$project$Selectize$Internal$NoAction);
			case 'PreventClosing':
				var preventBlur = msg.a;
				return _Utils_Tuple3(
					_Utils_update(
						state,
						{preventBlur: preventBlur}),
					$elm$core$Platform$Cmd$none,
					$author$project$Selectize$Internal$NoAction);
			case 'SetQuery':
				var newQuery = msg.a;
				var newZipList = A3($author$project$Selectize$Internal$fromListWithFilter, newQuery, state.entries, state.entryHeights);
				return _Utils_Tuple3(
					_Utils_update(
						state,
						{mouseFocus: $elm$core$Maybe$Nothing, query: newQuery, zipList: newZipList}),
					A2($author$project$Selectize$Internal$scroll, state.id, 0),
					$author$project$Selectize$Internal$NoAction);
			case 'SetMouseFocus':
				var newFocus = msg.a;
				return _Utils_Tuple3(
					_Utils_update(
						state,
						{mouseFocus: newFocus}),
					$elm$core$Platform$Cmd$none,
					$author$project$Selectize$Internal$NoAction);
			case 'Select':
				var a = msg.a;
				return _Utils_Tuple3(
					$author$project$Selectize$Internal$reset(state),
					$elm$core$Platform$Cmd$none,
					A2(
						$author$project$Selectize$Internal$ChangeSelection,
						true,
						$elm$core$Maybe$Just(a)));
			case 'SetKeyboardFocus':
				var movement = msg.a;
				var scrollTop = msg.b;
				return A3(
					$author$project$Selectize$Internal$scrollToKeyboardFocus,
					state.id,
					scrollTop,
					A2($author$project$Selectize$Internal$updateKeyboardFocus, movement, state));
			case 'SelectKeyboardFocusAndBlur':
				return _Utils_Tuple3(
					$author$project$Selectize$Internal$reset(state),
					$author$project$Selectize$Internal$blur(state.id),
					A2(
						$author$project$Selectize$Internal$ChangeSelection,
						true,
						A2($elm$core$Maybe$andThen, $author$project$Selectize$Internal$currentEntry, state.zipList)));
			default:
				return _Utils_Tuple3(
					state,
					$elm$core$Platform$Cmd$none,
					A2($author$project$Selectize$Internal$ChangeSelection, true, $elm$core$Maybe$Nothing));
		}
	});
var $author$project$Selectize$update = F3(
	function (selection, state, msg) {
		return A3($author$project$Selectize$Internal$update, selection, state, msg);
	});
var $author$project$Widget$fieldStateToMaybe = function (fs) {
	if (fs.$ === 'Val') {
		var str = fs.a;
		return $elm$core$Maybe$Just(str);
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Widget$updateGroupsField = F5(
	function (zone, durationUnit, field, str, fields) {
		var resfin = A2(
			$elm$core$Maybe$andThen,
			function (s) {
				return $elm$core$Result$toMaybe(
					A2($elm$json$Json$Decode$decodeString, $elm_community$json_extra$Json$Decode$Extra$datetime, '\"' + (s + '\"')));
			},
			A2(
				$elm$core$Maybe$andThen,
				$author$project$Widget$fieldStateToMaybe,
				A2($elm$core$Dict$get, $author$project$Widget$finFieldId, fields)));
		var resdebut = A2(
			$elm$core$Maybe$andThen,
			function (s) {
				return $elm$core$Result$toMaybe(
					A2($elm$json$Json$Decode$decodeString, $elm_community$json_extra$Json$Decode$Extra$datetime, '\"' + (s + '\"')));
			},
			A2(
				$elm$core$Maybe$andThen,
				$author$project$Widget$fieldStateToMaybe,
				A2($elm$core$Dict$get, $author$project$Widget$debutFieldId, fields)));
		if (_Utils_eq(field, $author$project$Widget$debutFieldId)) {
			var _v0 = _Utils_Tuple2(
				A2($elm$json$Json$Decode$decodeString, $elm_community$json_extra$Json$Decode$Extra$datetime, '\"' + (str + '\"')),
				resfin);
			if ((_v0.a.$ === 'Ok') && (_v0.b.$ === 'Just')) {
				var debut = _v0.a.a;
				var fin = _v0.b.a;
				var dureeVal = $author$project$Widget$Val(
					$elm$core$String$fromFloat(
						$author$project$Moment$fromDuration(
							A2($author$project$Moment$durationBetween, debut, fin)) / $author$project$Widget$msForDurationUnit(durationUnit)));
				return A3($elm$core$Dict$insert, $author$project$Widget$dureeFieldId, dureeVal, fields);
			} else {
				return fields;
			}
		} else {
			if (_Utils_eq(field, $author$project$Widget$finFieldId)) {
				var _v1 = _Utils_Tuple2(
					resdebut,
					A2($elm$json$Json$Decode$decodeString, $elm_community$json_extra$Json$Decode$Extra$datetime, '\"' + (str + '\"')));
				if ((_v1.a.$ === 'Just') && (_v1.b.$ === 'Ok')) {
					var debut = _v1.a.a;
					var fin = _v1.b.a;
					var dureeVal = $author$project$Widget$Val(
						$elm$core$String$fromFloat(
							$author$project$Moment$fromDuration(
								A2($author$project$Moment$durationBetween, debut, fin)) / $author$project$Widget$msForDurationUnit(durationUnit)));
					return A3($elm$core$Dict$insert, $author$project$Widget$dureeFieldId, dureeVal, fields);
				} else {
					return fields;
				}
			} else {
				if (_Utils_eq(field, $author$project$Widget$dureeFieldId)) {
					var _v2 = _Utils_Tuple2(
						resdebut,
						$elm$core$String$toFloat(str));
					if ((_v2.a.$ === 'Just') && (_v2.b.$ === 'Just')) {
						var debut = _v2.a.a;
						var duree = _v2.b.a;
						var finVal = $author$project$Widget$Val(
							A2(
								$f0i$iso8601$Iso8601$toDateTimeString,
								zone,
								$elm$time$Time$millisToPosix(
									$elm$time$Time$posixToMillis(debut) + $elm$core$Basics$round(
										duree * $author$project$Widget$msForDurationUnit(durationUnit)))));
						return A3($elm$core$Dict$insert, $author$project$Widget$finFieldId, finVal, fields);
					} else {
						return fields;
					}
				} else {
					return fields;
				}
			}
		}
	});
var $author$project$Widget$updateOptions = _Platform_outgoingPort('updateOptions', $elm$core$Basics$identity);
var $author$project$Field$choiceIdToRawString = function (cid) {
	if (cid.$ === 'ChoiceString') {
		var str = cid.a;
		return str;
	} else {
		var _int = cid.a;
		return $elm$core$String$fromInt(_int);
	}
};
var $author$project$Field$stringToChoiceId = function (str) {
	return A2($elm$core$String$startsWith, '_Int:', str) ? A2(
		$elm$core$Maybe$map,
		$author$project$Field$ChoiceInt,
		$elm$core$String$toInt(
			A2($elm$core$String$dropLeft, 5, str))) : $elm$core$Maybe$Just(
		$author$project$Field$ChoiceString(str));
};
var $author$project$Widget$validateNewMoment = function (model) {
	var mbsubgroup = A2(
		$elm$core$Maybe$map,
		$author$project$Field$choiceIdToRawString,
		A2(
			$elm$core$Maybe$andThen,
			$author$project$Field$stringToChoiceId,
			A2(
				$elm$core$Maybe$andThen,
				$author$project$Widget$fieldStateToMaybe,
				A2(
					$elm$core$Maybe$andThen,
					function (subgroupId) {
						return A2($elm$core$Dict$get, subgroupId, model.groupsStates);
					},
					model.subgroupId))));
	var mbgroup = A2(
		$elm$core$Maybe$map,
		$author$project$Field$choiceIdToRawString,
		A2(
			$elm$core$Maybe$andThen,
			$author$project$Field$stringToChoiceId,
			A2(
				$elm$core$Maybe$andThen,
				$author$project$Widget$fieldStateToMaybe,
				A2($elm$core$Dict$get, model.groupId, model.groupsStates))));
	var mbduree = A2(
		$elm$core$Maybe$andThen,
		$elm$core$String$toFloat,
		A2(
			$elm$core$Maybe$andThen,
			$author$project$Widget$fieldStateToMaybe,
			A2($elm$core$Dict$get, $author$project$Widget$dureeFieldId, model.groupsStates)));
	var mbdebut = A2(
		$elm$core$Maybe$andThen,
		function (s) {
			return $elm$core$Result$toMaybe(
				A2($elm$json$Json$Decode$decodeString, $elm_community$json_extra$Json$Decode$Extra$datetime, '\"' + (s + '\"')));
		},
		A2(
			$elm$core$Maybe$andThen,
			$author$project$Widget$fieldStateToMaybe,
			A2($elm$core$Dict$get, $author$project$Widget$debutFieldId, model.groupsStates)));
	var _v0 = _Utils_Tuple3(mbgroup, mbdebut, mbduree);
	if (((_v0.a.$ === 'Just') && (_v0.b.$ === 'Just')) && (_v0.c.$ === 'Just')) {
		var group = _v0.a.a;
		var debut = _v0.b.a;
		var duree = _v0.c.a;
		var args = {
			date: A2($f0i$iso8601$Iso8601$toDateTimeString, model.timelineState.zone, debut),
			duree: $elm$core$Basics$round(
				duree * $author$project$Widget$secondsForDurationUnit(model.durationUnit)),
			groupeId: group,
			sousGroupeId: A2($elm$core$Maybe$withDefault, '', mbsubgroup)
		};
		return $elm$core$Maybe$Just(
			$author$project$Widget$createRecord(args));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Widget$update = F2(
	function (msg, model) {
		switch (msg.$) {
			case 'TimelineMsg':
				var tmsg = msg.a;
				return A2($author$project$Widget$timelineUpdate, tmsg, model);
			case 'TotalsMsg':
				var tmsg = msg.a;
				return A2($author$project$Widget$totalsUpdate, tmsg, model);
			case 'Receive':
				var data = msg.a;
				return A2($author$project$Widget$receiveData, data, model);
			case 'ChangeSelection':
				var data = msg.a;
				var _v1 = A2(
					$elm$json$Json$Decode$decodeValue,
					$elm$json$Json$Decode$list(
						A2($elm$json$Json$Decode$field, 'id', $elm$json$Json$Decode$int)),
					data);
				if (_v1.$ === 'Err') {
					var err = _v1.a;
					return _Utils_Tuple2(
						A2(
							$author$project$Widget$addError,
							$elm$json$Json$Decode$errorToString(err),
							model),
						$elm$core$Platform$Cmd$none);
				} else {
					var ids = _v1.a;
					var groups = model.timelineState.srcgroups;
					var selection = A2($author$project$Widget$sectionIdsToSelection, groups, ids);
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								timelineState: A2($author$project$Timeline$Update$updateSelection, selection, model.timelineState)
							}),
						A2(
							$elm$core$Maybe$withDefault,
							$elm$core$Platform$Cmd$none,
							A2(
								$elm$core$Maybe$map,
								function (id) {
									return A2(
										$elm$core$Task$attempt,
										function (_v2) {
											return $author$project$Widget$NoOp;
										},
										$elm$browser$Browser$Dom$focus(id));
								},
								$elm$core$List$head(
									$elm$core$Dict$keys(model.editableStates)))));
				}
			case 'ChangeOptions':
				var data = msg.a;
				var _v3 = A2($elm$json$Json$Decode$decodeValue, $author$project$Widget$optionsDecoder, data);
				if (_v3.$ === 'Err') {
					var err = _v3.a;
					return _Utils_Tuple2(
						A2(
							$author$project$Widget$addError,
							$elm$json$Json$Decode$errorToString(err),
							model),
						$elm$core$Platform$Cmd$none);
				} else {
					var options = _v3.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								durationUnit: options.durationUnit,
								options: options,
								timelineState: A2(
									$author$project$Timeline$setWrapText,
									options.wrapText,
									A2(
										$author$project$Timeline$changeDirection,
										options.direction,
										A2(
											$author$project$Timeline$changeLineSize,
											_Utils_eq(options.direction, $author$project$Timeline$Models$Vertical) ? (options.lineSize * 2) : options.lineSize,
											A2(
												$author$project$Timeline$changeYOffset,
												options.sectionOffsetY,
												A3($author$project$Timeline$changeStartAndZoom, options.start, options.zoom, model.timelineState))))),
								totalState: A2(
									$author$project$Timeline$changeLineSize,
									_Utils_eq(options.direction, $author$project$Timeline$Models$Vertical) ? $author$project$Widget$totalsVertSize : $author$project$Widget$totalsHorizSize,
									A2(
										$author$project$Timeline$changeDirection,
										options.direction,
										A3($author$project$Timeline$changeStartAndZoom, options.start, options.zoom, model.totalState)))
							}),
						$elm$core$Platform$Cmd$none);
				}
			case 'WindowResize':
				var b = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{box: b}),
					$elm$core$Platform$Cmd$none);
			case 'OptionsBounceMsg':
				return _Utils_Tuple2(
					model,
					$author$project$Widget$updateOptions(
						$author$project$Widget$encodeOptions(model.options)));
			case 'ChangeText':
				var v = msg.a;
				var field = msg.b;
				var str = msg.c;
				return _Utils_Tuple2(
					function () {
						if (v.$ === 'Inspector') {
							return _Utils_update(
								model,
								{
									editableStates: A3(
										$elm$core$Dict$insert,
										field,
										$author$project$Widget$Val(str),
										model.editableStates)
								});
						} else {
							return _Utils_update(
								model,
								{
									groupsStates: A3(
										$elm$core$Dict$insert,
										field,
										$author$project$Widget$Val(str),
										model.groupsStates)
								});
						}
					}(),
					$elm$core$Platform$Cmd$none);
			case 'ValidateText':
				var v = msg.a;
				var field = msg.b;
				var str = msg.c;
				if (v.$ === 'Inspector') {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								editableStates: A3(
									$elm$core$Dict$insert,
									field,
									$author$project$Widget$Val(str),
									model.editableStates),
								focus: _Utils_eq(model.focus, field) ? '' : model.focus
							}),
						A3($author$project$Widget$makeFieldUpdate, model, field, str));
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								focus: _Utils_eq(model.focus, field) ? '' : model.focus,
								groupsStates: A5($author$project$Widget$updateGroupsField, model.timelineState.zone, model.durationUnit, field, str, model.groupsStates)
							}),
						$elm$core$Platform$Cmd$none);
				}
			case 'CreateNew':
				var _v6 = $author$project$Widget$validateNewMoment(model);
				if (_v6.$ === 'Just') {
					var cmd = _v6.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{showModal: $author$project$Widget$None}),
						cmd);
				} else {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
			case 'CancelChange':
				var v = msg.a;
				var field = msg.b;
				if (v.$ === 'Inspector') {
					var upd = A3(
						$elm$core$Dict$update,
						field,
						$elm$core$Maybe$andThen(
							function (_v8) {
								return A2(
									$elm$core$Dict$get,
									field,
									A5(
										$author$project$Widget$fieldsFromSelection,
										model.timelineState.zone,
										model.durationUnit,
										model.timelineState.selection,
										model.records,
										_List_fromArray(
											[field])));
							}),
						model.editableStates);
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{editableStates: upd, focus: ''}),
						A2(
							$elm$core$Task$attempt,
							$elm$core$Basics$always($author$project$Widget$NoOp),
							$elm$browser$Browser$Dom$blur(field)));
				} else {
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{focus: ''}),
						A2(
							$elm$core$Task$attempt,
							$elm$core$Basics$always($author$project$Widget$NoOp),
							$elm$browser$Browser$Dom$blur(field)));
				}
			case 'NoOp':
				return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
			case 'SelectizeMsg':
				var v = msg.a;
				var field = msg.b;
				var selectedItem = msg.c;
				var selectizeMsg = msg.d;
				var _v9 = A2($elm$core$Dict$get, field, model.selectStates);
				if (_v9.$ === 'Just') {
					var selectState = _v9.a;
					var _v10 = A3($author$project$Selectize$update, selectedItem, selectState, selectizeMsg);
					var newMenu = _v10.a;
					var menuCmd = _v10.b;
					var action = _v10.c;
					var cmd = A2(
						$elm$core$Platform$Cmd$map,
						A3($author$project$Widget$SelectizeMsg, v, field, selectedItem),
						menuCmd);
					var newModel = _Utils_update(
						model,
						{
							selectStates: A3($elm$core$Dict$insert, field, newMenu, model.selectStates)
						});
					if (action.$ === 'ChangeSelection') {
						var validate = action.a;
						var maybechoice = action.b;
						var updsel = function (fields) {
							if (maybechoice.$ === 'Just') {
								var choice = maybechoice.a;
								return _Utils_Tuple2(
									A3(
										$elm$core$Dict$insert,
										field,
										$author$project$Widget$Val(
											$author$project$Field$choiceIdToString(choice.id)),
										fields),
									validate ? A3(
										$author$project$Widget$makeFieldUpdate_,
										model.timelineState.selection,
										field,
										$author$project$Field$encodeChoiceId(choice.id)) : $elm$core$Platform$Cmd$none);
							} else {
								if (v.$ === 'Inspector') {
									return _Utils_Tuple2(
										A3(
											$elm$core$Dict$insert,
											field,
											A2($author$project$Widget$Error, $author$project$Widget$NoValue, ''),
											fields),
										validate ? A3(
											$author$project$Widget$makeFieldUpdate_,
											model.timelineState.selection,
											field,
											$elm$json$Json$Encode$string('')) : $elm$core$Platform$Cmd$none);
								} else {
									return _Utils_Tuple2(
										A3(
											$elm$core$Dict$insert,
											field,
											A2($author$project$Widget$Error, $author$project$Widget$NoValue, ''),
											fields),
										$elm$core$Platform$Cmd$none);
								}
							}
						};
						if (v.$ === 'Inspector') {
							var _v13 = updsel(newModel.editableStates);
							var newDict = _v13.a;
							var updMsg = _v13.b;
							return _Utils_Tuple2(
								_Utils_update(
									newModel,
									{editableStates: newDict}),
								$elm$core$Platform$Cmd$batch(
									_List_fromArray(
										[
											updMsg,
											A2(
											$elm$core$Platform$Cmd$map,
											A3($author$project$Widget$SelectizeMsg, v, field, maybechoice),
											menuCmd)
										])));
						} else {
							var _v14 = updsel(newModel.groupsStates);
							var newDict = _v14.a;
							return _Utils_Tuple2(
								_Utils_update(
									newModel,
									{groupsStates: newDict}),
								A2(
									$elm$core$Platform$Cmd$map,
									A3($author$project$Widget$SelectizeMsg, v, field, maybechoice),
									menuCmd));
						}
					} else {
						return _Utils_Tuple2(newModel, cmd);
					}
				} else {
					return _Utils_Tuple2(model, $elm$core$Platform$Cmd$none);
				}
			case 'FocusField':
				var field = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{focus: field}),
					$elm$core$Platform$Cmd$none);
			case 'CloseError':
				var id = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							error: A2(
								$elm$core$List$filter,
								function (_v17) {
									var iderr = _v17.a;
									return !_Utils_eq(iderr, id);
								},
								model.error)
						}),
					$elm$core$Platform$Cmd$none);
			case 'AddError':
				var str = msg.a;
				return _Utils_Tuple2(
					A2($author$project$Widget$addError, str, model),
					$elm$core$Platform$Cmd$none);
			case 'GotHelp':
				var res = msg.a;
				if (res.$ === 'Ok') {
					var str = res.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{help: str}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						A2($author$project$Widget$addError, 'Can\'t load help file : Http error', model),
						$elm$core$Platform$Cmd$none);
				}
			case 'GotTranslations':
				var res = msg.a;
				if (res.$ === 'Ok') {
					var trans = res.a;
					return _Utils_Tuple2(
						_Utils_update(
							model,
							{
								translations: A2($elm$core$List$cons, trans, model.translations)
							}),
						$elm$core$Platform$Cmd$none);
				} else {
					return _Utils_Tuple2(
						A2($author$project$Widget$addError, 'Can\'t load translation file : Http error', model),
						$elm$core$Platform$Cmd$none);
				}
			case 'ShowModal':
				var modal = msg.a;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{showModal: modal}),
					$elm$core$Platform$Cmd$none);
			case 'UpdateDirection':
				var dir = msg.a;
				var size = function () {
					if (dir.$ === 'Horizontal') {
						return model.options.lineSize;
					} else {
						return model.options.lineSize * 2;
					}
				}();
				var options = model.options;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							options: _Utils_update(
								options,
								{direction: dir}),
							timelineState: A2(
								$author$project$Timeline$changeYOffset,
								0,
								A2(
									$author$project$Timeline$changeLineSize,
									size,
									A2($author$project$Timeline$changeDirection, dir, model.timelineState))),
							totalState: A2(
								$author$project$Timeline$changeLineSize,
								_Utils_eq(dir, $author$project$Timeline$Models$Vertical) ? $author$project$Widget$totalsVertSize : $author$project$Widget$totalsHorizSize,
								A2($author$project$Timeline$changeDirection, dir, model.totalState))
						}),
					A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg));
			case 'UpdateWrap':
				var bool = msg.a;
				var options = model.options;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							options: _Utils_update(
								options,
								{wrapText: bool}),
							timelineState: A2($author$project$Timeline$setWrapText, bool, model.timelineState)
						}),
					A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg));
			case 'UpdateCountMoments':
				var bool = msg.a;
				var options = model.options;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							options: _Utils_update(
								options,
								{countMoments: bool}),
							timelineState: A2(
								$author$project$Timeline$reinit,
								(model.options.displaySubtotals ? $author$project$Widget$addSubtotals(
									_Utils_update(
										model,
										{
											options: _Utils_update(
												options,
												{countMoments: bool})
										})) : $elm$core$Basics$identity)(
									$author$project$Widget$removeSubtotals(model.timelineState.srcgroups)),
								model.timelineState),
							totalState: A2(
								$author$project$Timeline$reinit,
								$author$project$Widget$addTotals(
									_Utils_update(
										model,
										{
											options: _Utils_update(
												options,
												{countMoments: bool})
										})),
								model.totalState)
						}),
					A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg));
			case 'UpdateShowSubtotals':
				var bool = msg.a;
				var options = model.options;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							options: _Utils_update(
								options,
								{displaySubtotals: bool}),
							timelineState: A2(
								$author$project$Timeline$reinit,
								(bool ? $author$project$Widget$addSubtotals(model) : $elm$core$Basics$identity)(
									$author$project$Widget$removeSubtotals(model.timelineState.srcgroups)),
								model.timelineState)
						}),
					A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg));
			case 'UpdateDurationUnit':
				var du = msg.a;
				var options = model.options;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							durationUnit: du,
							editableStates: A5($author$project$Widget$fieldsFromSelection, model.timelineState.zone, du, model.timelineState.selection, model.records, model.editableFields),
							options: _Utils_update(
								options,
								{durationUnit: du})
						}),
					A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg));
			default:
				var maybe = msg.a;
				var options = model.options;
				return _Utils_Tuple2(
					_Utils_update(
						model,
						{
							options: _Utils_update(
								options,
								{colorScheme: maybe})
						}),
					A2($grotsev$elm_debouncer$Bounce$delay, 500, $author$project$Widget$OptionsBounceMsg));
		}
	});
var $phosphor_icons$phosphor_elm$Phosphor$Bold = {$: 'Bold'};
var $author$project$Widget$CloseError = function (a) {
	return {$: 'CloseError', a: a};
};
var $author$project$Widget$CreateNew = {$: 'CreateNew'};
var $author$project$Widget$Help = {$: 'Help'};
var $author$project$Widget$NewMoment = {$: 'NewMoment'};
var $phosphor_icons$phosphor_elm$Phosphor$Regular = {$: 'Regular'};
var $author$project$Widget$Settings = {$: 'Settings'};
var $elm$html$Html$button = _VirtualDom_node('button');
var $elm$html$Html$Attributes$stringProperty = F2(
	function (key, string) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$string(string));
	});
var $elm$html$Html$Attributes$class = $elm$html$Html$Attributes$stringProperty('className');
var $author$project$Widget$Translations$create = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'create');
};
var $author$project$Widget$darkStyle = '\nbody {\n    background-color: rgb(50, 50, 63);\n}  \n.controls button {\n        background-color: #555;\n        color: #efefef;\n\n        &:hover {\n            background-color: #777;\n        }\n    }\n\n.timeline {\n    .group {\n        color: #efefef;\n    }\n    .group.even, .group.veven {\n            background-color: rgba(0,0,0,0.1);\n            border-color: rgb(60, 60, 75);\n        }\n\n    .group.odd {\n        background-color: inherit;\n    }\n\n    .axis-text {\n        fill: #efefef;\n    }\n    .axis-line-5 {\n        stroke: #404040;\n    }\n    .axis-line-10 {\n        stroke: #666;\n    }\n    .axis-line-20 {\n        stroke: #999;\n    }\n\n}\n';
var $elm$html$Html$Attributes$boolProperty = F2(
	function (key, bool) {
		return A2(
			_VirtualDom_property,
			key,
			$elm$json$Json$Encode$bool(bool));
	});
var $elm$html$Html$Attributes$disabled = $elm$html$Html$Attributes$boolProperty('disabled');
var $elm$html$Html$div = _VirtualDom_node('div');
var $author$project$Widget$CancelChange = F2(
	function (a, b) {
		return {$: 'CancelChange', a: a, b: b};
	});
var $author$project$Widget$ChangeText = F3(
	function (a, b, c) {
		return {$: 'ChangeText', a: a, b: b, c: c};
	});
var $author$project$Widget$FocusField = function (a) {
	return {$: 'FocusField', a: a};
};
var $author$project$Widget$Inspector = {$: 'Inspector'};
var $author$project$Widget$ValidateText = F3(
	function (a, b, c) {
		return {$: 'ValidateText', a: a, b: b, c: c};
	});
var $author$project$Selectize$Internal$CloseMenu = {$: 'CloseMenu'};
var $author$project$Selectize$Internal$SetQuery = function (a) {
	return {$: 'SetQuery', a: a};
};
var $author$project$Selectize$Internal$BlurTextfield = {$: 'BlurTextfield'};
var $author$project$Selectize$Internal$ClearSelection = {$: 'ClearSelection'};
var $author$project$Selectize$Internal$FocusTextfield = {$: 'FocusTextfield'};
var $elm$virtual_dom$VirtualDom$map = _VirtualDom_map;
var $elm$html$Html$map = $elm$virtual_dom$VirtualDom$map;
var $author$project$Selectize$Internal$mapToNoOp = $elm$html$Html$map(
	function (_v0) {
		return $author$project$Selectize$Internal$NoOp;
	});
var $elm$html$Html$Events$onClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$virtual_dom$VirtualDom$text = _VirtualDom_text;
var $elm$html$Html$text = $elm$virtual_dom$VirtualDom$text;
var $author$project$Selectize$Internal$buttons = F4(
	function (clearButton, toggleButton, sthSelected, open) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
					A2($elm$html$Html$Attributes$style, 'right', '0'),
					A2($elm$html$Html$Attributes$style, 'top', '0'),
					A2($elm$html$Html$Attributes$style, 'display', 'flex')
				]),
			_List_fromArray(
				[
					function () {
					var _v0 = _Utils_Tuple2(clearButton, sthSelected);
					if ((_v0.a.$ === 'Just') && _v0.b) {
						var clear = _v0.a.a;
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Events$onClick($author$project$Selectize$Internal$ClearSelection)
								]),
							_List_fromArray(
								[
									$author$project$Selectize$Internal$mapToNoOp(clear)
								]));
					} else {
						return $elm$html$Html$text('');
					}
				}(),
					function () {
					if (toggleButton.$ === 'Just') {
						var toggle = toggleButton.a;
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									open ? A2(
									$elm$html$Html$Events$preventDefaultOn,
									'click',
									$elm$json$Json$Decode$succeed(
										_Utils_Tuple2($author$project$Selectize$Internal$BlurTextfield, true))) : A2(
									$elm$html$Html$Events$preventDefaultOn,
									'click',
									$elm$json$Json$Decode$succeed(
										_Utils_Tuple2($author$project$Selectize$Internal$FocusTextfield, true)))
								]),
							_List_fromArray(
								[
									$author$project$Selectize$Internal$mapToNoOp(
									toggle(open))
								]));
					} else {
						return A2($elm$html$Html$div, _List_Nil, _List_Nil);
					}
				}()
				]));
	});
var $author$project$Selectize$Internal$OpenMenu = F2(
	function (a, b) {
		return {$: 'OpenMenu', a: a, b: b};
	});
var $author$project$Selectize$Internal$entryHeightsDecoder = function () {
	var loop = F2(
		function (idx, xs) {
			return A2(
				$elm$json$Json$Decode$andThen,
				A2(
					$elm$core$Basics$composeR,
					$elm$core$Maybe$map(
						function (x) {
							return A2(
								loop,
								idx + 1,
								A2($elm$core$List$cons, x, xs));
						}),
					$elm$core$Maybe$withDefault(
						$elm$json$Json$Decode$succeed(xs))),
				$elm$json$Json$Decode$maybe(
					A2(
						$elm$json$Json$Decode$at,
						_List_fromArray(
							[
								$elm$core$String$fromInt(idx),
								'offsetHeight'
							]),
						$elm$json$Json$Decode$float)));
		});
	return A2(
		$elm$json$Json$Decode$map,
		$elm$core$List$reverse,
		A2(
			$elm$json$Json$Decode$at,
			_List_fromArray(
				['target', 'parentElement', 'parentElement', 'childNodes', '1', 'childNodes', '0', 'childNodes']),
			A2(loop, 0, _List_Nil)));
}();
var $elm$json$Json$Decode$map3 = _Json_map3;
var $author$project$Selectize$Internal$menuHeightDecoder = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'parentElement', 'parentElement', 'childNodes', '1', 'clientHeight']),
	$elm$json$Json$Decode$float);
var $author$project$Selectize$Internal$scrollTopDecoder = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'parentElement', 'parentElement', 'childNodes', '1', 'scrollTop']),
	$elm$json$Json$Decode$float);
var $author$project$Selectize$Internal$focusDecoder = A4(
	$elm$json$Json$Decode$map3,
	F3(
		function (entryHeights, menuHeight, scrollTop) {
			return A2(
				$author$project$Selectize$Internal$OpenMenu,
				{entries: entryHeights, menu: menuHeight},
				scrollTop);
		}),
	$author$project$Selectize$Internal$entryHeightsDecoder,
	$author$project$Selectize$Internal$menuHeightDecoder,
	$author$project$Selectize$Internal$scrollTopDecoder);
var $elm$html$Html$Attributes$id = $elm$html$Html$Attributes$stringProperty('id');
var $elm$html$Html$input = _VirtualDom_node('input');
var $author$project$Selectize$Internal$Down = {$: 'Down'};
var $author$project$Selectize$Internal$SelectKeyboardFocusAndBlur = {$: 'SelectKeyboardFocusAndBlur'};
var $author$project$Selectize$Internal$SetKeyboardFocus = F2(
	function (a, b) {
		return {$: 'SetKeyboardFocus', a: a, b: b};
	});
var $author$project$Selectize$Internal$Up = {$: 'Up'};
var $author$project$Selectize$Internal$fromResult = function (result) {
	if (result.$ === 'Ok') {
		var val = result.a;
		return $elm$json$Json$Decode$succeed(val);
	} else {
		var reason = result.a;
		return $elm$json$Json$Decode$fail(reason);
	}
};
var $elm$html$Html$Events$keyCode = A2($elm$json$Json$Decode$field, 'keyCode', $elm$json$Json$Decode$int);
var $author$project$Selectize$Internal$keydownDecoder = A2(
	$elm$json$Json$Decode$andThen,
	$author$project$Selectize$Internal$fromResult,
	A3(
		$elm$json$Json$Decode$map2,
		F2(
			function (code, scrollTop) {
				switch (code) {
					case 38:
						return $elm$core$Result$Ok(
							_Utils_Tuple2(
								A2($author$project$Selectize$Internal$SetKeyboardFocus, $author$project$Selectize$Internal$Up, scrollTop),
								true));
					case 40:
						return $elm$core$Result$Ok(
							_Utils_Tuple2(
								A2($author$project$Selectize$Internal$SetKeyboardFocus, $author$project$Selectize$Internal$Down, scrollTop),
								true));
					case 13:
						return $elm$core$Result$Ok(
							_Utils_Tuple2($author$project$Selectize$Internal$SelectKeyboardFocusAndBlur, true));
					case 27:
						return $elm$core$Result$Ok(
							_Utils_Tuple2($author$project$Selectize$Internal$BlurTextfield, true));
					default:
						return $elm$core$Result$Err('not handling that key here');
				}
			}),
		$elm$html$Html$Events$keyCode,
		$author$project$Selectize$Internal$scrollTopDecoder));
var $elm$virtual_dom$VirtualDom$mapAttribute = _VirtualDom_mapAttribute;
var $elm$html$Html$Attributes$map = $elm$virtual_dom$VirtualDom$mapAttribute;
var $author$project$Selectize$Internal$noOp = function (attrs) {
	return A2(
		$elm$core$List$map,
		$elm$html$Html$Attributes$map(
			function (_v0) {
				return $author$project$Selectize$Internal$NoOp;
			}),
		attrs);
};
var $elm$html$Html$Events$onBlur = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'blur',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$alwaysStop = function (x) {
	return _Utils_Tuple2(x, true);
};
var $elm$virtual_dom$VirtualDom$MayStopPropagation = function (a) {
	return {$: 'MayStopPropagation', a: a};
};
var $elm$html$Html$Events$stopPropagationOn = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$MayStopPropagation(decoder));
	});
var $elm$html$Html$Events$targetValue = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'value']),
	$elm$json$Json$Decode$string);
var $elm$html$Html$Events$onInput = function (tagger) {
	return A2(
		$elm$html$Html$Events$stopPropagationOn,
		'input',
		A2(
			$elm$json$Json$Decode$map,
			$elm$html$Html$Events$alwaysStop,
			A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetValue)));
};
var $elm$html$Html$Attributes$placeholder = $elm$html$Html$Attributes$stringProperty('placeholder');
var $elm$html$Html$Attributes$value = $elm$html$Html$Attributes$stringProperty('value');
var $author$project$Selectize$Internal$autocomplete = F5(
	function (config, id, selection, query, open) {
		var inputAttrs = $elm$core$List$concat(
			_List_fromArray(
				[
					_List_fromArray(
					[
						$elm$html$Html$Attributes$value(query),
						$elm$html$Html$Attributes$id(
						$author$project$Selectize$Internal$textfieldId(id)),
						A2($elm$html$Html$Events$on, 'focus', $author$project$Selectize$Internal$focusDecoder)
					]),
					_Utils_eq(selection, $elm$core$Maybe$Nothing) ? _List_fromArray(
					[
						$elm$html$Html$Attributes$placeholder(config.placeholder)
					]) : _List_Nil,
					open ? _List_fromArray(
					[
						$elm$html$Html$Events$onBlur($author$project$Selectize$Internal$CloseMenu),
						A2($elm$html$Html$Events$preventDefaultOn, 'keydown', $author$project$Selectize$Internal$keydownDecoder),
						$elm$html$Html$Events$onInput($author$project$Selectize$Internal$SetQuery)
					]) : _List_Nil,
					$author$project$Selectize$Internal$noOp(
					A2(
						config.attrs,
						!_Utils_eq(selection, $elm$core$Maybe$Nothing),
						open))
				]));
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2($elm$html$Html$input, inputAttrs, _List_Nil),
					A2(
					$elm$html$Html$div,
					_Utils_ap(
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
								A2($elm$html$Html$Attributes$style, 'width', '100%'),
								A2($elm$html$Html$Attributes$style, 'height', '100%'),
								A2($elm$html$Html$Attributes$style, 'left', '0'),
								A2($elm$html$Html$Attributes$style, 'top', '0'),
								A2($elm$html$Html$Attributes$style, 'pointer-events', 'none'),
								A2($elm$html$Html$Attributes$style, 'border-color', 'transparent'),
								A2($elm$html$Html$Attributes$style, 'background-color', 'transparent'),
								A2($elm$html$Html$Attributes$style, 'box-shadow', 'none')
							]),
						$author$project$Selectize$Internal$noOp(
							A2(
								config.attrs,
								!_Utils_eq(selection, $elm$core$Maybe$Nothing),
								open))),
					_List_fromArray(
						[
							$elm$html$Html$text(
							$elm$core$String$isEmpty(query) ? A2($elm$core$Maybe$withDefault, '', selection) : '')
						])),
					A4(
					$author$project$Selectize$Internal$buttons,
					config.clearButton,
					config.toggleButton,
					!_Utils_eq(selection, $elm$core$Maybe$Nothing),
					open)
				]));
	});
var $author$project$Selectize$autocomplete = function (config) {
	return $author$project$Selectize$Internal$autocomplete(config);
};
var $elm$svg$Svg$Attributes$d = _VirtualDom_attribute('d');
var $phosphor_icons$phosphor_elm$Phosphor$IconVariant = function (a) {
	return {$: 'IconVariant', a: a};
};
var $phosphor_icons$phosphor_elm$Phosphor$defaultAttributes = {
	_class: $elm$core$Maybe$Just('ph-icon'),
	size: 1,
	sizeUnit: 'em'
};
var $phosphor_icons$phosphor_elm$Phosphor$makeBuilder = function (src) {
	return $phosphor_icons$phosphor_elm$Phosphor$IconVariant(
		{attrs: $phosphor_icons$phosphor_elm$Phosphor$defaultAttributes, src: src});
};
var $elm$svg$Svg$Attributes$opacity = _VirtualDom_attribute('opacity');
var $elm$svg$Svg$trustedNode = _VirtualDom_nodeNS('http://www.w3.org/2000/svg');
var $elm$svg$Svg$path = $elm$svg$Svg$trustedNode('path');
var $phosphor_icons$phosphor_elm$Phosphor$caretDown = function (weight) {
	var elements = function () {
		switch (weight.$) {
			case 'Bold':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M216.49,104.49l-80,80a12,12,0,0,1-17,0l-80-80a12,12,0,0,1,17-17L128,159l71.51-71.52a12,12,0,0,1,17,17Z')
							]),
						_List_Nil)
					]);
			case 'Duotone':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M208,96l-80,80L48,96Z'),
								$elm$svg$Svg$Attributes$opacity('0.2')
							]),
						_List_Nil),
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M215.39,92.94A8,8,0,0,0,208,88H48a8,8,0,0,0-5.66,13.66l80,80a8,8,0,0,0,11.32,0l80-80A8,8,0,0,0,215.39,92.94ZM128,164.69,67.31,104H188.69Z')
							]),
						_List_Nil)
					]);
			case 'Fill':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M213.66,101.66l-80,80a8,8,0,0,1-11.32,0l-80-80A8,8,0,0,1,48,88H208a8,8,0,0,1,5.66,13.66Z')
							]),
						_List_Nil)
					]);
			case 'Light':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M212.24,100.24l-80,80a6,6,0,0,1-8.48,0l-80-80a6,6,0,0,1,8.48-8.48L128,167.51l75.76-75.75a6,6,0,0,1,8.48,8.48Z')
							]),
						_List_Nil)
					]);
			case 'Regular':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M213.66,101.66l-80,80a8,8,0,0,1-11.32,0l-80-80A8,8,0,0,1,53.66,90.34L128,164.69l74.34-74.35a8,8,0,0,1,11.32,11.32Z')
							]),
						_List_Nil)
					]);
			default:
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M210.83,98.83l-80,80a4,4,0,0,1-5.66,0l-80-80a4,4,0,0,1,5.66-5.66L128,170.34l77.17-77.17a4,4,0,1,1,5.66,5.66Z')
							]),
						_List_Nil)
					]);
		}
	}();
	return $phosphor_icons$phosphor_elm$Phosphor$makeBuilder(elements);
};
var $elm$html$Html$Attributes$checked = $elm$html$Html$Attributes$boolProperty('checked');
var $elm$html$Html$Attributes$classList = function (classes) {
	return $elm$html$Html$Attributes$class(
		A2(
			$elm$core$String$join,
			' ',
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$first,
				A2($elm$core$List$filter, $elm$core$Tuple$second, classes))));
};
var $elm$html$Html$Attributes$cols = function (n) {
	return A2(
		_VirtualDom_attribute,
		'cols',
		$elm$core$String$fromInt(n));
};
var $author$project$Widget$Translations$cumulativeDuration = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'cumulativeDuration');
};
var $author$project$Widget$Translations$daysShort = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'daysShort');
};
var $author$project$Widget$Translations$empty = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'empty');
};
var $elm$html$Html$Attributes$for = $elm$html$Html$Attributes$stringProperty('htmlFor');
var $author$project$Widget$Translations$hoursShort = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'hoursShort');
};
var $elm$html$Html$label = _VirtualDom_node('label');
var $elm$core$List$maximum = function (list) {
	if (list.b) {
		var x = list.a;
		var xs = list.b;
		return $elm$core$Maybe$Just(
			A3($elm$core$List$foldl, $elm$core$Basics$max, x, xs));
	} else {
		return $elm$core$Maybe$Nothing;
	}
};
var $author$project$Widget$Translations$minutesShort = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'minutesShort');
};
var $author$project$Widget$Translations$moment = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'moment');
};
var $author$project$Widget$Translations$momentPlural = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'moment_plural');
};
var $author$project$Widget$Translations$multiple = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'multiple');
};
var $elm$html$Html$Attributes$name = $elm$html$Html$Attributes$stringProperty('name');
var $elm$html$Html$Events$onFocus = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'focus',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$virtual_dom$VirtualDom$property = F2(
	function (key, value) {
		return A2(
			_VirtualDom_property,
			_VirtualDom_noInnerHtmlOrFormAction(key),
			_VirtualDom_noJavaScriptOrHtmlJson(value));
	});
var $elm$html$Html$Attributes$property = $elm$virtual_dom$VirtualDom$property;
var $elm$html$Html$Attributes$rows = function (n) {
	return A2(
		_VirtualDom_attribute,
		'rows',
		$elm$core$String$fromInt(n));
};
var $elm$core$Set$size = function (_v0) {
	var dict = _v0.a;
	return $elm$core$Dict$size(dict);
};
var $author$project$Timeline$Models$selectionSize = function (_v0) {
	var dict = _v0.a;
	return A3(
		$elm$core$Dict$foldl,
		F3(
			function (_v1, set, out) {
				return $elm$core$Set$size(set) + out;
			}),
		0,
		dict);
};
var $elm$html$Html$span = _VirtualDom_node('span');
var $author$project$Widget$Translations$sum = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'sum');
};
var $elm$html$Html$textarea = _VirtualDom_node('textarea');
var $author$project$Widget$Translations$timeRange = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'timeRange');
};
var $elm$svg$Svg$Attributes$class = _VirtualDom_attribute('class');
var $elm$svg$Svg$Attributes$fill = _VirtualDom_attribute('fill');
var $elm$svg$Svg$Attributes$height = _VirtualDom_attribute('height');
var $elm$svg$Svg$map = $elm$virtual_dom$VirtualDom$map;
var $elm$svg$Svg$Attributes$stroke = _VirtualDom_attribute('stroke');
var $elm$svg$Svg$Attributes$strokeLinecap = _VirtualDom_attribute('stroke-linecap');
var $elm$svg$Svg$Attributes$strokeLinejoin = _VirtualDom_attribute('stroke-linejoin');
var $elm$svg$Svg$svg = $elm$svg$Svg$trustedNode('svg');
var $elm$svg$Svg$Attributes$viewBox = _VirtualDom_attribute('viewBox');
var $elm$svg$Svg$Attributes$width = _VirtualDom_attribute('width');
var $phosphor_icons$phosphor_elm$Phosphor$xmlns = function (s) {
	return A2(
		$elm$virtual_dom$VirtualDom$property,
		'xmlns',
		$elm$json$Json$Encode$string(s));
};
var $phosphor_icons$phosphor_elm$Phosphor$toHtml = F2(
	function (attributes, _v0) {
		var src = _v0.a.src;
		var attrs = _v0.a.attrs;
		var strSize = $elm$core$String$fromFloat(attrs.size);
		var baseAttributes = _List_fromArray(
			[
				$phosphor_icons$phosphor_elm$Phosphor$xmlns('http://www.w3.org/2000/svg'),
				$elm$svg$Svg$Attributes$fill('currentColor'),
				$elm$svg$Svg$Attributes$height(
				_Utils_ap(strSize, attrs.sizeUnit)),
				$elm$svg$Svg$Attributes$width(
				_Utils_ap(strSize, attrs.sizeUnit)),
				$elm$svg$Svg$Attributes$stroke('currentColor'),
				$elm$svg$Svg$Attributes$strokeLinecap('round'),
				$elm$svg$Svg$Attributes$strokeLinejoin('round'),
				$elm$svg$Svg$Attributes$viewBox('0 0 256 256')
			]);
		var combinedAttributes = _Utils_ap(
			function () {
				var _v1 = attrs._class;
				if (_v1.$ === 'Just') {
					var c = _v1.a;
					return A2(
						$elm$core$List$cons,
						$elm$svg$Svg$Attributes$class(c),
						baseAttributes);
				} else {
					return baseAttributes;
				}
			}(),
			attributes);
		return A2(
			$elm$svg$Svg$svg,
			combinedAttributes,
			A2(
				$elm$core$List$map,
				$elm$svg$Svg$map($elm$core$Basics$never),
				src));
	});
var $elm$html$Html$Attributes$type_ = $elm$html$Html$Attributes$stringProperty('type');
var $elm$virtual_dom$VirtualDom$lazy3 = _VirtualDom_lazy3;
var $elm$html$Html$Lazy$lazy3 = $elm$virtual_dom$VirtualDom$lazy3;
var $author$project$Selectize$Internal$PreventClosing = function (a) {
	return {$: 'PreventClosing', a: a};
};
var $elm$html$Html$Events$onMouseDown = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mousedown',
		$elm$json$Json$Decode$succeed(msg));
};
var $elm$html$Html$Events$onMouseUp = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseup',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Selectize$Internal$selectFirst = F2(
	function (entries, a) {
		selectFirst:
		while (true) {
			if (!entries.b) {
				return $elm$core$Maybe$Nothing;
			} else {
				var first = entries.a;
				var rest = entries.b;
				if (first.$ === 'LEntry') {
					var value = first.a;
					var label = first.b;
					if (_Utils_eq(a, value)) {
						return $elm$core$Maybe$Just(
							_Utils_Tuple2(a, label));
					} else {
						var $temp$entries = rest,
							$temp$a = a;
						entries = $temp$entries;
						a = $temp$a;
						continue selectFirst;
					}
				} else {
					var $temp$entries = rest,
						$temp$a = a;
					entries = $temp$entries;
					a = $temp$a;
					continue selectFirst;
				}
			}
		}
	});
var $elm$html$Html$ul = _VirtualDom_node('ul');
var $author$project$Selectize$Internal$Select = function (a) {
	return {$: 'Select', a: a};
};
var $author$project$Selectize$Internal$SetMouseFocus = function (a) {
	return {$: 'SetMouseFocus', a: a};
};
var $elm$html$Html$li = _VirtualDom_node('li');
var $author$project$Selectize$Internal$viewEntry = F4(
	function (config, keyboardFocused, mouseFocus, e) {
		var _v0 = function () {
			if (e.$ === 'Entry') {
				var actualEntry = e.a;
				return A3(
					config.entry,
					actualEntry,
					_Utils_eq(
						mouseFocus,
						$elm$core$Maybe$Just(actualEntry)),
					keyboardFocused);
			} else {
				var title = e.a;
				return config.divider(title);
			}
		}();
		var attributes = _v0.attributes;
		var children = _v0.children;
		var liAttrs = function (attrs) {
			return _Utils_ap(
				attrs,
				$author$project$Selectize$Internal$noOp(attributes));
		};
		return A2(
			$elm$html$Html$li,
			liAttrs(
				function () {
					if (e.$ === 'Entry') {
						var actualEntry = e.a;
						return _List_fromArray(
							[
								$elm$html$Html$Events$onClick(
								$author$project$Selectize$Internal$Select(actualEntry)),
								$elm$html$Html$Events$onMouseEnter(
								$author$project$Selectize$Internal$SetMouseFocus(
									$elm$core$Maybe$Just(actualEntry))),
								$elm$html$Html$Events$onMouseLeave(
								$author$project$Selectize$Internal$SetMouseFocus($elm$core$Maybe$Nothing))
							]);
					} else {
						return _List_Nil;
					}
				}()),
			A2($elm$core$List$map, $author$project$Selectize$Internal$mapToNoOp, children));
	});
var $author$project$Selectize$Internal$viewFocusedEntry = function (config) {
	return A2($author$project$Selectize$Internal$viewEntry, config, true);
};
var $author$project$Selectize$Internal$viewCurrentEntry = F3(
	function (config, state, current) {
		return A3($author$project$Selectize$Internal$viewFocusedEntry, config, state.mouseFocus, current.a);
	});
var $author$project$Selectize$Internal$viewUnfocusedEntry = function (config) {
	return A2($author$project$Selectize$Internal$viewEntry, config, false);
};
var $author$project$Selectize$Internal$viewEntries = F3(
	function (config, state, front) {
		return A2(
			$elm$core$List$map,
			A2(
				$elm$core$Basics$composeR,
				$elm$core$Tuple$first,
				A3($elm$html$Html$Lazy$lazy3, $author$project$Selectize$Internal$viewUnfocusedEntry, config, state.mouseFocus)),
			front);
	});
var $author$project$Selectize$Internal$view = F3(
	function (config, selection, state) {
		var selectionText = A2(
			$elm$core$Maybe$map,
			$elm$core$Tuple$second,
			A2(
				$elm$core$Maybe$andThen,
				$author$project$Selectize$Internal$selectFirst(state.entries),
				selection));
		var menuAttrs = _Utils_ap(
			_List_fromArray(
				[
					$elm$html$Html$Attributes$id(
					$author$project$Selectize$Internal$menuId(state.id)),
					$elm$html$Html$Events$onMouseDown(
					$author$project$Selectize$Internal$PreventClosing(true)),
					$elm$html$Html$Events$onMouseUp(
					$author$project$Selectize$Internal$PreventClosing(false)),
					A2($elm$html$Html$Attributes$style, 'position', 'absolute')
				]),
			$author$project$Selectize$Internal$noOp(
				config.menu(
					!_Utils_eq(state.zipList, $elm$core$Maybe$Nothing))));
		var _v0 = state.zipList;
		if (_v0.$ === 'Nothing') {
			return A2(
				$elm$html$Html$div,
				_Utils_ap(
					$author$project$Selectize$Internal$noOp(config.container),
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
							A2($elm$html$Html$Attributes$style, 'position', 'relative')
						])),
				_List_fromArray(
					[
						A4(config.input, state.id, selectionText, state.query, state.open),
						A2(
						$elm$html$Html$div,
						menuAttrs,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$ul,
								$author$project$Selectize$Internal$noOp(config.ul),
								A2(
									$elm$core$List$map,
									A2(
										$elm$core$Basics$composeR,
										$author$project$Selectize$Internal$removeLabel,
										A2($author$project$Selectize$Internal$viewUnfocusedEntry, config, $elm$core$Maybe$Nothing)),
									state.entries))
							]))
					]));
		} else {
			var zipList = _v0.a;
			return A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						A2($elm$html$Html$Attributes$style, 'position', 'relative')
					]),
				_List_fromArray(
					[
						A4(config.input, state.id, selectionText, state.query, state.open),
						A2(
						$elm$html$Html$div,
						menuAttrs,
						_List_fromArray(
							[
								A2(
								$elm$html$Html$ul,
								$author$project$Selectize$Internal$noOp(config.ul),
								$elm$core$List$concat(
									_List_fromArray(
										[
											$elm$core$List$reverse(
											A3($author$project$Selectize$Internal$viewEntries, config, state, zipList.front)),
											_List_fromArray(
											[
												A3($author$project$Selectize$Internal$viewCurrentEntry, config, state, zipList.current)
											]),
											A3($author$project$Selectize$Internal$viewEntries, config, state, zipList.back)
										])))
							]))
					]));
		}
	});
var $author$project$Selectize$view = $elm$html$Html$Lazy$lazy3($author$project$Selectize$Internal$view);
var $author$project$Selectize$viewConfig = function (config) {
	return {container: config.container, divider: config.divider, entry: config.entry, input: config.input, menu: config.menu, ul: config.ul};
};
var $author$project$Widget$Translations$workingDays = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'workingDays');
};
var $phosphor_icons$phosphor_elm$Phosphor$x = function (weight) {
	var elements = function () {
		switch (weight.$) {
			case 'Bold':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M208.49,191.51a12,12,0,0,1-17,17L128,145,64.49,208.49a12,12,0,0,1-17-17L111,128,47.51,64.49a12,12,0,0,1,17-17L128,111l63.51-63.52a12,12,0,0,1,17,17L145,128Z')
							]),
						_List_Nil)
					]);
			case 'Duotone':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M216,56V200a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V56A16,16,0,0,1,56,40H200A16,16,0,0,1,216,56Z'),
								$elm$svg$Svg$Attributes$opacity('0.2')
							]),
						_List_Nil),
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M205.66,194.34a8,8,0,0,1-11.32,11.32L128,139.31,61.66,205.66a8,8,0,0,1-11.32-11.32L116.69,128,50.34,61.66A8,8,0,0,1,61.66,50.34L128,116.69l66.34-66.35a8,8,0,0,1,11.32,11.32L139.31,128Z')
							]),
						_List_Nil)
					]);
			case 'Fill':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M208,32H48A16,16,0,0,0,32,48V208a16,16,0,0,0,16,16H208a16,16,0,0,0,16-16V48A16,16,0,0,0,208,32ZM181.66,170.34a8,8,0,0,1-11.32,11.32L128,139.31,85.66,181.66a8,8,0,0,1-11.32-11.32L116.69,128,74.34,85.66A8,8,0,0,1,85.66,74.34L128,116.69l42.34-42.35a8,8,0,0,1,11.32,11.32L139.31,128Z')
							]),
						_List_Nil)
					]);
			case 'Light':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M204.24,195.76a6,6,0,1,1-8.48,8.48L128,136.49,60.24,204.24a6,6,0,0,1-8.48-8.48L119.51,128,51.76,60.24a6,6,0,0,1,8.48-8.48L128,119.51l67.76-67.75a6,6,0,0,1,8.48,8.48L136.49,128Z')
							]),
						_List_Nil)
					]);
			case 'Regular':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M205.66,194.34a8,8,0,0,1-11.32,11.32L128,139.31,61.66,205.66a8,8,0,0,1-11.32-11.32L116.69,128,50.34,61.66A8,8,0,0,1,61.66,50.34L128,116.69l66.34-66.35a8,8,0,0,1,11.32,11.32L139.31,128Z')
							]),
						_List_Nil)
					]);
			default:
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M202.83,197.17a4,4,0,0,1-5.66,5.66L128,133.66,58.83,202.83a4,4,0,0,1-5.66-5.66L122.34,128,53.17,58.83a4,4,0,0,1,5.66-5.66L128,122.34l69.17-69.17a4,4,0,1,1,5.66,5.66L133.66,128Z')
							]),
						_List_Nil)
					]);
		}
	}();
	return $phosphor_icons$phosphor_elm$Phosphor$makeBuilder(elements);
};
var $author$project$Widget$fieldsView = F4(
	function (v, model, fields, states) {
		var translations = model.translations;
		var selSize = $author$project$Timeline$Models$selectionSize(model.timelineState.selection);
		var records = A2(
			$elm$core$List$filterMap,
			function (id) {
				return A2($elm$core$Dict$get, id, model.records);
			},
			$elm$core$Set$toList(
				$author$project$Timeline$Models$selectionToSet(model.timelineState.selection)));
		var workingDays = A3(
			$elm$core$Dict$foldl,
			F3(
				function (_v16, dict, acc) {
					return A3(
						$elm$core$Dict$foldl,
						F3(
							function (_v17, days, tot) {
								return days + tot;
							}),
						acc,
						dict);
				}),
			0,
			A3(
				$elm$core$List$foldl,
				F2(
					function (rec, dict) {
						var wd = $elm$core$Basics$round(
							A2($elm$core$Basics$max, 1, rec.amplitude / 86400));
						var ratadie = $justinmimbs$date$Date$toRataDie(
							A2(
								$justinmimbs$date$Date$fromPosix,
								model.timelineState.zone,
								$elm$time$Time$millisToPosix(rec.date)));
						return A3(
							$elm$core$Dict$update,
							$author$project$Widget$wrapGroupe(rec),
							function (mbdict) {
								return $elm$core$Maybe$Just(
									A3(
										$elm$core$Dict$update,
										ratadie,
										A2(
											$elm$core$Basics$composeR,
											$elm$core$Maybe$map(
												$elm$core$Basics$max(wd)),
											A2(
												$elm$core$Basics$composeR,
												$elm$core$Maybe$withDefault(wd),
												$elm$core$Maybe$Just)),
										A2($elm$core$Maybe$withDefault, $elm$core$Dict$empty, mbdict)));
							},
							dict);
					}),
				$elm$core$Dict$empty,
				records));
		var maybeStart = $elm$core$List$minimum(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.date;
				},
				records));
		var maybeEnd = $elm$core$List$maximum(
			A2(
				$elm$core$List$map,
				function (r) {
					return r.date + $elm$core$Basics$round(r.amplitude * 1000);
				},
				records));
		var locale = $author$project$Field$localeForLanguage(model.language);
		var isLocked = A3(
			$elm$core$List$foldl,
			F2(
				function (rec, bool) {
					return rec.isLocked || bool;
				}),
			false,
			records);
		var drawChoices = F2(
			function (field, choices) {
				var _v15 = A2($elm$core$Dict$get, field.name, model.selectStates);
				if (_v15.$ === 'Just') {
					var selectState = _v15.a;
					var selectedItem = A2(
						$elm$core$Maybe$andThen,
						function (choiceid) {
							return A2(
								$elm_community$list_extra$List$Extra$find,
								function (c) {
									return _Utils_eq(c.id, choiceid) || _Utils_eq(
										c.label,
										A2($elm$core$Maybe$withDefault, '', field.str));
								},
								choices);
						},
						A2($elm$core$Maybe$andThen, $author$project$Field$stringToChoiceId, field.str));
					return A2(
						$elm$html$Html$map,
						A3($author$project$Widget$SelectizeMsg, v, field.name, selectedItem),
						A3(
							$author$project$Selectize$view,
							$author$project$Selectize$viewConfig(
								{
									container: _List_fromArray(
										[
											$elm$html$Html$Attributes$class('selectize__container')
										]),
									divider: function (title) {
										return {
											attributes: _List_fromArray(
												[
													$elm$html$Html$Attributes$class('selectize__divider')
												]),
											children: _List_fromArray(
												[
													$elm$html$Html$text(title)
												])
										};
									},
									entry: F3(
										function (choice, mouseFocused, keyboardFocused) {
											return {
												attributes: _List_fromArray(
													[
														$elm$html$Html$Attributes$class('selectize__item'),
														$elm$html$Html$Attributes$classList(
														_List_fromArray(
															[
																_Utils_Tuple2('selectize__item--mouse-selected', mouseFocused),
																_Utils_Tuple2('selectize__item--key-selected', keyboardFocused)
															]))
													]),
												children: _List_fromArray(
													[
														A2(
														$elm$html$Html$span,
														_List_fromArray(
															[
																A2($elm$html$Html$Attributes$style, 'background-color', choice.backgroundColor),
																A2($elm$html$Html$Attributes$style, 'color', choice.textColor),
																A2($elm$html$Html$Attributes$style, 'padding', '3px'),
																A2($elm$html$Html$Attributes$style, 'border-radius', '3px')
															]),
														_List_fromArray(
															[
																$elm$html$Html$text(choice.label)
															]))
													])
											};
										}),
									input: $author$project$Selectize$autocomplete(
										{
											attrs: F2(
												function (sthSelected, open) {
													return _List_fromArray(
														[
															$elm$html$Html$Attributes$class('selectize__textfield'),
															$elm$html$Html$Attributes$classList(
															_List_fromArray(
																[
																	_Utils_Tuple2('selectize__textfield--selection', sthSelected),
																	_Utils_Tuple2('selectize__textfield--no-selection', !sthSelected),
																	_Utils_Tuple2('selectize__textfield--menu-open', open)
																]))
														]);
												}),
											clearButton: $elm$core$Maybe$Just(
												A2(
													$elm$html$Html$div,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('selectize__menu-clear')
														]),
													_List_fromArray(
														[
															A2(
															$phosphor_icons$phosphor_elm$Phosphor$toHtml,
															_List_Nil,
															$phosphor_icons$phosphor_elm$Phosphor$x($phosphor_icons$phosphor_elm$Phosphor$Regular))
														]))),
											placeholder: field.multi ? ('<' + ($author$project$Widget$Translations$multiple(model.translations) + '>')) : ('<' + ($author$project$Widget$Translations$empty(model.translations) + '>')),
											toggleButton: $elm$core$Maybe$Just(
												function (open) {
													return A2(
														$elm$html$Html$div,
														_List_fromArray(
															[
																$elm$html$Html$Attributes$class('selectize__menu-toggle')
															]),
														_List_fromArray(
															[
																A2(
																$phosphor_icons$phosphor_elm$Phosphor$toHtml,
																_List_Nil,
																open ? $phosphor_icons$phosphor_elm$Phosphor$caretDown($phosphor_icons$phosphor_elm$Phosphor$Regular) : $phosphor_icons$phosphor_elm$Phosphor$caretDown($phosphor_icons$phosphor_elm$Phosphor$Regular))
															]));
												})
										}),
									menu: function (open) {
										return _List_fromArray(
											[
												$elm$html$Html$Attributes$class('selectize__menu'),
												$elm$html$Html$Attributes$classList(
												_List_fromArray(
													[
														_Utils_Tuple2('open', open)
													]))
											]);
									},
									ul: _List_fromArray(
										[
											$elm$html$Html$Attributes$class('selectize__list')
										])
								}),
							selectedItem,
							selectState));
				} else {
					return $elm$html$Html$text('');
				}
			});
		var cumul = $elm$core$List$sum(
			A2(
				$elm$core$List$map,
				function ($) {
					return $.amplitude;
				},
				records)) / $author$project$Widget$secondsForDurationUnit(model.durationUnit);
		var amplitude = A2(
			$elm$core$Maybe$withDefault,
			0,
			A3(
				$elm$core$Maybe$map2,
				F2(
					function (start, end) {
						return (end - start) / $author$project$Widget$msForDurationUnit(model.durationUnit);
					}),
				maybeStart,
				maybeEnd));
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_Utils_ap(
				_Utils_eq(v, $author$project$Widget$Inspector) ? _List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('label')
							]),
						$elm$core$List$singleton(
							$elm$html$Html$text(
								(selSize > 1) ? ($elm$core$String$fromInt(selSize) + (' ' + $author$project$Widget$Translations$momentPlural(translations))) : ($elm$core$String$fromInt(selSize) + (' ' + $author$project$Widget$Translations$moment(translations)))))),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('calcul')
							]),
						$elm$core$List$singleton(
							$elm$html$Html$text(
								function () {
									var _v0 = model.durationUnit;
									if (_v0.$ === 'Hours') {
										return $author$project$Widget$Translations$cumulativeDuration(translations) + ($elm$core$String$fromFloat(
											$elm$core$Basics$round((cumul * 10) / 24) / 10) + (' ' + ($author$project$Widget$Translations$daysShort(translations) + (' / ' + ($elm$core$String$fromFloat(cumul) + (' ' + $author$project$Widget$Translations$hoursShort(translations)))))));
									} else {
										return $author$project$Widget$Translations$cumulativeDuration(translations) + ($elm$core$String$fromFloat(
											$elm$core$Basics$round((cumul * 10) / 60) / 10) + (' ' + ($author$project$Widget$Translations$hoursShort(translations) + (' / ' + ($elm$core$String$fromFloat(cumul) + (' ' + $author$project$Widget$Translations$minutesShort(translations)))))));
									}
								}()))),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('calcul')
							]),
						$elm$core$List$singleton(
							$elm$html$Html$text(
								function () {
									var _v1 = model.durationUnit;
									if (_v1.$ === 'Hours') {
										return $author$project$Widget$Translations$timeRange(translations) + ($elm$core$String$fromFloat(
											$elm$core$Basics$round((amplitude * 10) / 24) / 10) + (' ' + ($author$project$Widget$Translations$daysShort(translations) + (' / ' + ($elm$core$String$fromFloat(amplitude) + (' ' + $author$project$Widget$Translations$hoursShort(translations)))))));
									} else {
										return $author$project$Widget$Translations$timeRange(translations) + ($elm$core$String$fromFloat(
											$elm$core$Basics$round((amplitude * 10) / 60) / 10) + (' ' + ($author$project$Widget$Translations$hoursShort(translations) + (' / ' + ($elm$core$String$fromFloat(amplitude) + (' ' + $author$project$Widget$Translations$minutesShort(translations)))))));
									}
								}()))),
						A2(
						$elm$html$Html$div,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('calcul')
							]),
						$elm$core$List$singleton(
							$elm$html$Html$text(
								$author$project$Widget$Translations$workingDays(translations) + ($elm$core$String$fromInt(workingDays) + (' ' + $author$project$Widget$Translations$daysShort(translations))))))
					]) : _List_Nil,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						_List_Nil,
						A2(
							$elm$core$List$map,
							function (field) {
								return A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('field')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$label,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$for(field.name)
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(field.label),
													_Utils_eq(field.field.id, $author$project$Widget$dureeFieldId) ? A2(
													$elm$html$Html$span,
													_List_fromArray(
														[
															$elm$html$Html$Attributes$class('unit')
														]),
													_List_fromArray(
														[
															$elm$html$Html$text(
															' (' + (function () {
																var _v6 = model.durationUnit;
																if (_v6.$ === 'Hours') {
																	return $author$project$Widget$Translations$hoursShort(translations);
																} else {
																	return $author$project$Widget$Translations$minutesShort(translations);
																}
															}() + ')'))
														])) : $elm$html$Html$text('')
												])),
											function () {
											var _v7 = field.field.ofType;
											_v7$3:
											while (true) {
												switch (_v7.$) {
													case 'Choice':
														var choices = _v7.a;
														return A2(drawChoices, field, choices);
													case 'Ref':
														var choices = _v7.a;
														return A2(drawChoices, field, choices);
													case 'Text':
														if (_v7.a) {
															return A2(
																$elm$html$Html$textarea,
																_List_fromArray(
																	[
																		$elm$html$Html$Attributes$name(field.name),
																		$elm$html$Html$Attributes$id(field.name),
																		$elm$html$Html$Attributes$disabled(field.field.isFormula),
																		$elm$html$Html$Attributes$rows(4),
																		$elm$html$Html$Attributes$cols(18),
																		$elm$html$Html$Attributes$placeholder(
																		field.multi ? '<multiple>' : ''),
																		$elm$html$Html$Events$onInput(
																		A2($author$project$Widget$ChangeText, v, field.name)),
																		A2(
																		$elm$html$Html$Events$on,
																		'keyup',
																		A2(
																			$elm$json$Json$Decode$andThen,
																			function (key) {
																				var _v8 = _Utils_Tuple2(key, field.str);
																				if (_v8.a === 27) {
																					return $elm$json$Json$Decode$succeed(
																						A2($author$project$Widget$CancelChange, v, field.name));
																				} else {
																					return $elm$json$Json$Decode$fail('');
																				}
																			},
																			$elm$html$Html$Events$keyCode)),
																		$elm$html$Html$Events$onFocus(
																		$author$project$Widget$FocusField(field.name)),
																		_Utils_eq(field.name, model.focus) ? $elm$html$Html$Events$onBlur(
																		function () {
																			var _v9 = field.str;
																			if (_v9.$ === 'Just') {
																				var str = _v9.a;
																				return A3($author$project$Widget$ValidateText, v, field.name, str);
																			} else {
																				return $author$project$Widget$NoOp;
																			}
																		}()) : $elm$html$Html$Attributes$class('')
																	]),
																_List_fromArray(
																	[
																		$elm$html$Html$text(
																		A2($elm$core$Maybe$withDefault, '', field.str))
																	]));
														} else {
															break _v7$3;
														}
													default:
														break _v7$3;
												}
											}
											return A2(
												$elm$html$Html$input,
												_List_fromArray(
													[
														$elm$html$Html$Attributes$name(field.name),
														$elm$html$Html$Attributes$id(field.name),
														$elm$html$Html$Attributes$disabled(
														field.field.isFormula || ((_Utils_eq(field.field.id, $author$project$Widget$debutFieldId) || (_Utils_eq(field.field.id, $author$project$Widget$finFieldId) || _Utils_eq(field.field.id, $author$project$Widget$dureeFieldId))) ? isLocked : false)),
														$elm$html$Html$Attributes$placeholder(
														field.multi ? '<multiple>' : ''),
														A2(
														$elm$html$Html$Attributes$property,
														'indeterminate',
														$elm$json$Json$Encode$bool(field.multi)),
														$elm$html$Html$Attributes$type_(
														function () {
															var _v10 = field.field.ofType;
															switch (_v10.$) {
																case 'DateTime':
																	return 'datetime-local';
																case 'Bool':
																	return 'checkbox';
																case 'Float':
																	return 'number';
																case 'Int':
																	return 'number';
																default:
																	return 'text';
															}
														}()),
														A2(
														$elm$html$Html$Attributes$style,
														'text-align',
														function () {
															var _v11 = field.field.ofType;
															switch (_v11.$) {
																case 'Float':
																	return 'left';
																case 'Int':
																	return 'left';
																default:
																	return 'left';
															}
														}()),
														_Utils_eq(field.field.ofType, $author$project$Field$Bool) ? $elm$html$Html$Attributes$checked(
														A2(
															$elm$core$Maybe$withDefault,
															false,
															A2(
																$elm$core$Maybe$map,
																$elm$core$Basics$eq('true'),
																field.str))) : $elm$html$Html$Attributes$value(
														A2($elm$core$Maybe$withDefault, '', field.str)),
														_Utils_eq(field.field.ofType, $author$project$Field$Bool) ? $elm$html$Html$Events$onClick(
														A3(
															$author$project$Widget$ValidateText,
															v,
															field.name,
															A2(
																$elm$core$Maybe$withDefault,
																'true',
																A2(
																	$elm$core$Maybe$map,
																	function (b) {
																		return (b === 'true') ? 'false' : 'true';
																	},
																	field.str)))) : $elm$html$Html$Events$onInput(
														A2($author$project$Widget$ChangeText, v, field.name)),
														A2(
														$elm$html$Html$Events$on,
														'keyup',
														A2(
															$elm$json$Json$Decode$andThen,
															function (key) {
																var _v12 = _Utils_Tuple2(key, field.str);
																_v12$2:
																while (true) {
																	switch (_v12.a) {
																		case 27:
																			return $elm$json$Json$Decode$succeed(
																				A2($author$project$Widget$CancelChange, v, field.name));
																		case 13:
																			if (_v12.b.$ === 'Just') {
																				var str = _v12.b.a;
																				return $elm$json$Json$Decode$succeed(
																					A3($author$project$Widget$ValidateText, v, field.name, str));
																			} else {
																				break _v12$2;
																			}
																		default:
																			break _v12$2;
																	}
																}
																return $elm$json$Json$Decode$fail('');
															},
															$elm$html$Html$Events$keyCode)),
														$elm$html$Html$Events$onFocus(
														$author$project$Widget$FocusField(field.name)),
														_Utils_eq(field.name, model.focus) ? $elm$html$Html$Events$onBlur(
														function () {
															var _v13 = field.str;
															if (_v13.$ === 'Just') {
																var str = _v13.a;
																return A3($author$project$Widget$ValidateText, v, field.name, str);
															} else {
																return $author$project$Widget$NoOp;
															}
														}()) : $elm$html$Html$Attributes$class('')
													]),
												_List_Nil);
										}(),
											function () {
											if ((selSize <= 1) || _Utils_eq(field.field.id, $author$project$Widget$dureeFieldId)) {
												return $elm$html$Html$text('');
											} else {
												var _v14 = field.field.ofType;
												switch (_v14.$) {
													case 'Int':
														var format = _v14.a;
														return A2(
															$elm$html$Html$span,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('calcul')
																]),
															$elm$core$List$singleton(
																$elm$html$Html$text(
																	_Utils_ap(
																		$author$project$Widget$Translations$sum(translations),
																		A4(
																			$author$project$Field$floatToString,
																			locale,
																			model.currency,
																			format,
																			A3(
																				$elm$core$List$foldl,
																				F2(
																					function (rec, acc) {
																						return acc + A2(
																							$elm$core$Maybe$withDefault,
																							0,
																							A2(
																								$elm$core$Maybe$andThen,
																								$elm$core$String$toInt,
																								A2($elm$core$Dict$get, field.field.id, rec.fields)));
																					}),
																				0,
																				records))))));
													case 'Float':
														var format = _v14.a;
														var _float = A3(
															$elm$core$List$foldl,
															F2(
																function (rec, acc) {
																	return acc + A2(
																		$elm$core$Maybe$withDefault,
																		0,
																		A2(
																			$elm$core$Maybe$andThen,
																			$elm$core$String$toFloat,
																			A2($elm$core$Dict$get, field.field.id, rec.fields)));
																}),
															0,
															records);
														return A2(
															$elm$html$Html$span,
															_List_fromArray(
																[
																	$elm$html$Html$Attributes$class('calcul')
																]),
															$elm$core$List$singleton(
																$elm$html$Html$text(
																	_Utils_ap(
																		$author$project$Widget$Translations$sum(translations),
																		A4($author$project$Field$floatToString, locale, model.currency, format, _float)))));
													default:
														return $elm$html$Html$text('');
												}
											}
										}()
										]));
							},
							A2(
								$elm$core$List$filterMap,
								function (key) {
									var _v2 = _Utils_Tuple2(
										A2($elm$core$Dict$get, key, model.fields),
										A2($elm$core$Dict$get, key, states));
									if (_v2.a.$ === 'Just') {
										var field = _v2.a.a;
										var mbvalue = _v2.b;
										if (mbvalue.$ === 'Just') {
											switch (mbvalue.a.$) {
												case 'Val':
													var str = mbvalue.a.a;
													return $elm$core$Maybe$Just(
														{
															error: $elm$core$Maybe$Nothing,
															field: field,
															label: field.label,
															multi: false,
															name: key,
															str: $elm$core$Maybe$Just(str)
														});
												case 'Multi':
													var _v4 = mbvalue.a;
													return $elm$core$Maybe$Just(
														{error: $elm$core$Maybe$Nothing, field: field, label: field.label, multi: true, name: key, str: $elm$core$Maybe$Nothing});
												default:
													var _v5 = mbvalue.a;
													var str = _v5.b;
													return $elm$core$Maybe$Just(
														{
															error: $elm$core$Maybe$Just('Erreur : ' + str),
															field: field,
															label: field.label,
															multi: false,
															name: key,
															str: $elm$core$Maybe$Nothing
														});
											}
										} else {
											return $elm$core$Maybe$Just(
												{
													error: $elm$core$Maybe$Just('Erreur'),
													field: field,
													label: field.label,
													multi: false,
													name: key,
													str: $elm$core$Maybe$Nothing
												});
										}
									} else {
										return $elm$core$Maybe$Nothing;
									}
								},
								fields)))
					])));
	});
var $phosphor_icons$phosphor_elm$Phosphor$gearFine = function (weight) {
	var elements = function () {
		switch (weight.$) {
			case 'Bold':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M232,116H219.22A91.1,91.1,0,0,0,213,92.79l11.08-6.4a12,12,0,1,0-12-20.78L201,72a92.85,92.85,0,0,0-17-17l6.41-11.11a12,12,0,1,0-20.78-12L163.21,43A91.1,91.1,0,0,0,140,36.78V24a12,12,0,0,0-24,0V36.78A91.1,91.1,0,0,0,92.79,43l-6.4-11.08a12,12,0,0,0-20.78,12L72,55A92.85,92.85,0,0,0,55,72L43.93,65.61a12,12,0,0,0-12,20.78L43,92.79A91.1,91.1,0,0,0,36.78,116H24a12,12,0,0,0,0,24H36.78A91.1,91.1,0,0,0,43,163.21l-11.08,6.4a12,12,0,1,0,12,20.78L55,184a92.85,92.85,0,0,0,17,17l-6.41,11.11a12,12,0,1,0,20.78,12L92.79,213A91.1,91.1,0,0,0,116,219.22V232a12,12,0,0,0,24,0V219.22A91.1,91.1,0,0,0,163.21,213l6.4,11.08a12,12,0,0,0,20.78-12L184,201a92.85,92.85,0,0,0,17-17l11.11,6.41a12,12,0,1,0,12-20.78L213,163.21A91.1,91.1,0,0,0,219.22,140H232a12,12,0,0,0,0-24ZM128,60a68.1,68.1,0,0,1,66.92,56h-60l-30-52A67.61,67.61,0,0,1,128,60ZM60,128A67.9,67.9,0,0,1,84.16,76.07l30,51.93-30,51.93A67.9,67.9,0,0,1,60,128Zm68,68a67.61,67.61,0,0,1-23.07-4l30-52h60A68.1,68.1,0,0,1,128,196Z')
							]),
						_List_Nil)
					]);
			case 'Duotone':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M208,128a80,80,0,1,1-80-80A80,80,0,0,1,208,128Z'),
								$elm$svg$Svg$Attributes$opacity('0.2')
							]),
						_List_Nil),
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M232,120H215.63a87.27,87.27,0,0,0-7.74-28.88l14.18-8.19a8,8,0,0,0-8-13.86l-14.2,8.2a88.78,88.78,0,0,0-21.14-21.14l8.2-14.2a8,8,0,0,0-13.86-8l-8.19,14.18A87.27,87.27,0,0,0,136,40.37V24a8,8,0,0,0-16,0V40.37a87.27,87.27,0,0,0-28.88,7.74L82.93,33.93a8,8,0,0,0-13.86,8l8.2,14.2A88.78,88.78,0,0,0,56.13,77.27l-14.2-8.2a8,8,0,0,0-8,13.86l14.18,8.19A87.27,87.27,0,0,0,40.37,120H24a8,8,0,0,0,0,16H40.37a87.27,87.27,0,0,0,7.74,28.88l-14.18,8.19a8,8,0,0,0,4,14.93,7.92,7.92,0,0,0,4-1.07l14.2-8.2a88.78,88.78,0,0,0,21.14,21.14l-8.2,14.2a8,8,0,0,0,13.86,8l8.19-14.18A87.27,87.27,0,0,0,120,215.63V232a8,8,0,0,0,16,0V215.63a87.27,87.27,0,0,0,28.88-7.74l8.19,14.18a8,8,0,0,0,13.86-8l-8.2-14.2a88.78,88.78,0,0,0,21.14-21.14l14.2,8.2A8,8,0,0,0,225,184a8,8,0,0,0-2.92-10.93l-14.18-8.19A87.27,87.27,0,0,0,215.63,136H232a8,8,0,0,0,0-16ZM85.31,185.94a71.92,71.92,0,0,1,0-115.88L118.76,128ZM128,200A71.58,71.58,0,0,1,99.16,194L132.62,136h66.92A72.08,72.08,0,0,1,128,200Zm4.62-80L99.16,62.05a71.94,71.94,0,0,1,100.38,58Z')
							]),
						_List_Nil)
					]);
			case 'Fill':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M232,120h-8.34a95.07,95.07,0,0,0-8.82-32.9l7.23-4.17a8,8,0,0,0-8-13.86l-7.25,4.19a97,97,0,0,0-24.08-24.08l4.19-7.25a8,8,0,0,0-13.86-8l-4.17,7.23A95.07,95.07,0,0,0,136,32.34V24a8,8,0,0,0-16,0v8.34a95.07,95.07,0,0,0-32.9,8.82l-4.17-7.23a8,8,0,0,0-13.86,8l4.19,7.25A97,97,0,0,0,49.18,73.26l-7.25-4.19a8,8,0,0,0-8,13.86l7.23,4.17A95.07,95.07,0,0,0,32.34,120H24a8,8,0,0,0,0,16h8.34a95.07,95.07,0,0,0,8.82,32.9l-7.23,4.17a8,8,0,0,0,4,14.93,7.92,7.92,0,0,0,4-1.07l7.25-4.19a97,97,0,0,0,24.08,24.08l-4.19,7.25a8,8,0,0,0,13.86,8l4.17-7.23a95.07,95.07,0,0,0,32.9,8.82V232a8,8,0,0,0,16,0v-8.34a95.07,95.07,0,0,0,32.9-8.82l4.17,7.23a8,8,0,0,0,13.86-8l-4.19-7.25a97,97,0,0,0,24.08-24.08l7.25,4.19A8,8,0,0,0,225,184a8,8,0,0,0-2.92-10.93l-7.23-4.17a95.07,95.07,0,0,0,8.82-32.9H232a8,8,0,0,0,0-16ZM72,128A55.91,55.91,0,0,1,93.38,84l25.38,44L93.38,172A55.91,55.91,0,0,1,72,128Zm56,56a55.67,55.67,0,0,1-20.78-4l25.4-44h50.8A56.09,56.09,0,0,1,128,184Zm4.62-64-25.4-44a56,56,0,0,1,76.2,44Z')
							]),
						_List_Nil)
					]);
			case 'Light':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M232,122H213.77a85.56,85.56,0,0,0-8.49-31.69l15.79-9.11a6,6,0,0,0-6-10.4l-15.8,9.12a86.72,86.72,0,0,0-23.19-23.19l9.12-15.8a6,6,0,0,0-10.4-6l-9.11,15.79A85.56,85.56,0,0,0,134,42.23V24a6,6,0,0,0-12,0V42.23a85.56,85.56,0,0,0-31.69,8.49L81.2,34.93a6,6,0,0,0-10.4,6l9.12,15.8A86.72,86.72,0,0,0,56.73,79.92L40.93,70.8a6,6,0,0,0-6,10.4l15.79,9.11A85.56,85.56,0,0,0,42.23,122H24a6,6,0,0,0,0,12H42.23a85.56,85.56,0,0,0,8.49,31.69L34.93,174.8a6,6,0,0,0,6,10.4l15.8-9.12a86.72,86.72,0,0,0,23.19,23.19l-9.12,15.8a6,6,0,0,0,10.4,6l9.11-15.79A85.56,85.56,0,0,0,122,213.77V232a6,6,0,0,0,12,0V213.77a85.56,85.56,0,0,0,31.69-8.49l9.11,15.79a6,6,0,0,0,5.21,3,5.93,5.93,0,0,0,3-.81,6,6,0,0,0,2.2-8.19l-9.12-15.8a86.72,86.72,0,0,0,23.19-23.19l15.8,9.12a6,6,0,0,0,6-10.4l-15.79-9.11A85.56,85.56,0,0,0,213.77,134H232a6,6,0,0,0,0-12ZM86,188.84A73.9,73.9,0,0,1,86,67.16L121.07,128ZM128,202a73.5,73.5,0,0,1-31.67-7.14L131.46,134h70.28A74.09,74.09,0,0,1,128,202Zm3.46-80L96.33,61.14A73.95,73.95,0,0,1,201.74,122Z')
							]),
						_List_Nil)
					]);
			case 'Regular':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M232,120H215.63a87.27,87.27,0,0,0-7.74-28.88l14.18-8.19a8,8,0,0,0-8-13.86l-14.2,8.2a88.78,88.78,0,0,0-21.14-21.14l8.2-14.2a8,8,0,0,0-13.86-8l-8.19,14.18A87.27,87.27,0,0,0,136,40.37V24a8,8,0,0,0-16,0V40.37a87.27,87.27,0,0,0-28.88,7.74L82.93,33.93a8,8,0,0,0-13.86,8l8.2,14.2A88.78,88.78,0,0,0,56.13,77.27l-14.2-8.2a8,8,0,0,0-8,13.86l14.18,8.19A87.27,87.27,0,0,0,40.37,120H24a8,8,0,0,0,0,16H40.37a87.27,87.27,0,0,0,7.74,28.88l-14.18,8.19a8,8,0,0,0,4,14.93,7.92,7.92,0,0,0,4-1.07l14.2-8.2a88.78,88.78,0,0,0,21.14,21.14l-8.2,14.2a8,8,0,0,0,13.86,8l8.19-14.18A87.27,87.27,0,0,0,120,215.63V232a8,8,0,0,0,16,0V215.63a87.27,87.27,0,0,0,28.88-7.74l8.19,14.18a8,8,0,0,0,13.86-8l-8.2-14.2a88.78,88.78,0,0,0,21.14-21.14l14.2,8.2A8,8,0,0,0,225,184a8,8,0,0,0-2.92-10.93l-14.18-8.19A87.27,87.27,0,0,0,215.63,136H232a8,8,0,0,0,0-16ZM128,56a72.08,72.08,0,0,1,71.54,64H132.62L99.16,62.05A71.58,71.58,0,0,1,128,56ZM56,128A72,72,0,0,1,85.31,70.06L118.76,128,85.31,185.94A72,72,0,0,1,56,128Zm72,72A71.58,71.58,0,0,1,99.16,194L132.62,136h66.92A72.08,72.08,0,0,1,128,200Z')
							]),
						_List_Nil)
					]);
			default:
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M232,124H211.9a83.35,83.35,0,0,0-9.27-34.47l17.44-10.07a4,4,0,0,0-4-6.92L198.62,82.61a84.54,84.54,0,0,0-25.23-25.23l10.07-17.45a4,4,0,0,0-6.92-4L166.47,53.37A83.35,83.35,0,0,0,132,44.1V24a4,4,0,0,0-8,0V44.1a83.35,83.35,0,0,0-34.47,9.27L79.46,35.93a4,4,0,0,0-6.92,4L82.61,57.38A84.54,84.54,0,0,0,57.38,82.61L39.93,72.54a4,4,0,1,0-4,6.92L53.37,89.53A83.35,83.35,0,0,0,44.1,124H24a4,4,0,0,0,0,8H44.1a83.35,83.35,0,0,0,9.27,34.47L35.93,176.54a4,4,0,0,0,2,7.46,3.9,3.9,0,0,0,2-.54l17.45-10.07a84.54,84.54,0,0,0,25.23,25.23L72.54,216.07A4,4,0,0,0,74,221.53a4,4,0,0,0,5.46-1.46l10.07-17.44A83.35,83.35,0,0,0,124,211.9V232a4,4,0,0,0,8,0V211.9a83.35,83.35,0,0,0,34.47-9.27l10.07,17.44a4,4,0,0,0,6.92-4l-10.07-17.45a84.54,84.54,0,0,0,25.23-25.23l17.45,10.07a3.9,3.9,0,0,0,2,.54,4,4,0,0,0,2-7.46l-17.44-10.07A83.35,83.35,0,0,0,211.9,132H232a4,4,0,0,0,0-8ZM128,52a76.09,76.09,0,0,1,75.89,72H130.31L93.53,60.3A75.59,75.59,0,0,1,128,52ZM52,128A76,76,0,0,1,86.61,64.31L123.38,128,86.61,191.69A76,76,0,0,1,52,128Zm76,76a75.59,75.59,0,0,1-34.47-8.3L130.31,132h73.58A76.09,76.09,0,0,1,128,204Z')
							]),
						_List_Nil)
					]);
		}
	}();
	return $phosphor_icons$phosphor_elm$Phosphor$makeBuilder(elements);
};
var $elm$html$Html$h1 = _VirtualDom_node('h1');
var $author$project$Widget$inspectorView = F3(
	function (model, fields, states) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
					A2($elm$html$Html$Attributes$style, 'right', '0px'),
					A2($elm$html$Html$Attributes$style, 'top', '0px'),
					A2($elm$html$Html$Attributes$style, 'width', '200px'),
					A2(
					$elm$html$Html$Attributes$style,
					'height',
					$elm$core$String$fromInt(model.box.height) + 'px'),
					A2($elm$html$Html$Attributes$style, 'background-color', 'var(--grist-theme-page-panels-right-panel-bg, var(--grist-color-light-grey))'),
					A2($elm$html$Html$Attributes$style, 'font-family', '-apple-system, \"system-ui\", \"Segoe UI\", \"Liberation Sans\", Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\"'),
					A2($elm$html$Html$Attributes$style, 'font-size', '12px'),
					A2($elm$html$Html$Attributes$style, 'overflow-y', 'scroll'),
					A2($elm$html$Html$Attributes$style, 'z-index', '2'),
					A2($elm$html$Html$Attributes$style, 'box-shadow', 'rgba(0,0,0,0.1) 1px 0px 14px'),
					A2($elm$html$Html$Attributes$style, 'border-left', '1px solid var(--grist-theme-page-panels-border, var(--grist-color-medium-grey))'),
					A2($elm$html$Html$Attributes$style, 'padding', '10px'),
					A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box')
				]),
			$elm$core$List$singleton(
				A4($author$project$Widget$fieldsView, $author$project$Widget$Inspector, model, fields, states)));
	});
var $author$project$Widget$Translations$newMoment = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'newMoment');
};
var $elm$virtual_dom$VirtualDom$node = function (tag) {
	return _VirtualDom_node(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$node = $elm$virtual_dom$VirtualDom$node;
var $phosphor_icons$phosphor_elm$Phosphor$questionMark = function (weight) {
	var elements = function () {
		switch (weight.$) {
			case 'Bold':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M196,96c0,29.47-24.21,54.05-56,59.06V156a12,12,0,0,1-24,0V144a12,12,0,0,1,12-12c24.26,0,44-16.15,44-36s-19.74-36-44-36S84,76.15,84,96a12,12,0,0,1-24,0c0-33.08,30.5-60,68-60S196,62.92,196,96Zm-68,92a20,20,0,1,0,20,20A20,20,0,0,0,128,188Z')
							]),
						_List_Nil)
					]);
			case 'Duotone':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M216,40V216a16,16,0,0,1-16,16H56a16,16,0,0,1-16-16V40A16,16,0,0,1,56,24H200A16,16,0,0,1,216,40Z'),
								$elm$svg$Svg$Attributes$opacity('0.2')
							]),
						_List_Nil),
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M192,96c0,28.51-24.47,52.11-56,55.56V160a8,8,0,0,1-16,0V144a8,8,0,0,1,8-8c26.47,0,48-17.94,48-40s-21.53-40-48-40S80,73.94,80,96a8,8,0,0,1-16,0c0-30.88,28.71-56,64-56S192,65.12,192,96Zm-64,96a16,16,0,1,0,16,16A16,16,0,0,0,128,192Z')
							]),
						_List_Nil)
					]);
			case 'Fill':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M200,24H56A16,16,0,0,0,40,40V216a16,16,0,0,0,16,16H200a16,16,0,0,0,16-16V40A16,16,0,0,0,200,24ZM136,143.28V144a8,8,0,0,1-16,0v-8a8,8,0,0,1,8-8c13.23,0,24-9,24-20s-10.77-20-24-20-24,9-24,20v4a8,8,0,0,1-16,0v-4c0-19.85,17.94-36,40-36s40,16.15,40,36C168,125.38,154.23,139.93,136,143.28ZM140,180a12,12,0,1,1-12-12A12,12,0,0,1,140,180Z')
							]),
						_List_Nil)
					]);
			case 'Light':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M190,96c0,28-24.62,51.11-56,53.75V160a6,6,0,0,1-12,0V144a6,6,0,0,1,6-6c27.57,0,50-18.84,50-42s-22.43-42-50-42S78,72.84,78,96a6,6,0,0,1-12,0c0-29.78,27.81-54,62-54S190,66.22,190,96Zm-62,98a14,14,0,1,0,14,14A14,14,0,0,0,128,194Z')
							]),
						_List_Nil)
					]);
			case 'Regular':
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M192,96c0,28.51-24.47,52.11-56,55.56V160a8,8,0,0,1-16,0V144a8,8,0,0,1,8-8c26.47,0,48-17.94,48-40s-21.53-40-48-40S80,73.94,80,96a8,8,0,0,1-16,0c0-30.88,28.71-56,64-56S192,65.12,192,96Zm-64,96a16,16,0,1,0,16,16A16,16,0,0,0,128,192Z')
							]),
						_List_Nil)
					]);
			default:
				return _List_fromArray(
					[
						A2(
						$elm$svg$Svg$path,
						_List_fromArray(
							[
								$elm$svg$Svg$Attributes$d('M188,96c0,27.51-24.77,50.09-56,51.89V160a4,4,0,0,1-8,0V144a4,4,0,0,1,4-4c28.67,0,52-19.74,52-44s-23.33-44-52-44S76,71.74,76,96a4,4,0,0,1-8,0c0-28.67,26.92-52,60-52S188,67.33,188,96ZM128,196a12,12,0,1,0,12,12A12,12,0,0,0,128,196Z')
							]),
						_List_Nil)
					]);
		}
	}();
	return $phosphor_icons$phosphor_elm$Phosphor$makeBuilder(elements);
};
var $author$project$Widget$UpdateColorScheme = function (a) {
	return {$: 'UpdateColorScheme', a: a};
};
var $author$project$Widget$UpdateCountMoments = function (a) {
	return {$: 'UpdateCountMoments', a: a};
};
var $author$project$Widget$UpdateDirection = function (a) {
	return {$: 'UpdateDirection', a: a};
};
var $author$project$Widget$UpdateDurationUnit = function (a) {
	return {$: 'UpdateDurationUnit', a: a};
};
var $author$project$Widget$UpdateShowSubtotals = function (a) {
	return {$: 'UpdateShowSubtotals', a: a};
};
var $author$project$Widget$UpdateWrap = function (a) {
	return {$: 'UpdateWrap', a: a};
};
var $author$project$Widget$Translations$auto = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'auto');
};
var $author$project$Widget$Translations$colorScheme = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'colorScheme');
};
var $author$project$Widget$Translations$countMoments = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'countMoments');
};
var $author$project$Widget$Translations$dark = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'dark');
};
var $author$project$Widget$Translations$displaySubtotals = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'displaySubtotals');
};
var $author$project$Widget$Translations$horizontal = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'horizontal');
};
var $author$project$Widget$Translations$hours = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'Hours');
};
var $author$project$Widget$Translations$light = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'light');
};
var $author$project$Widget$Translations$minutes = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'minutes');
};
var $elm$html$Html$Events$targetChecked = A2(
	$elm$json$Json$Decode$at,
	_List_fromArray(
		['target', 'checked']),
	$elm$json$Json$Decode$bool);
var $elm$html$Html$Events$onCheck = function (tagger) {
	return A2(
		$elm$html$Html$Events$on,
		'change',
		A2($elm$json$Json$Decode$map, tagger, $elm$html$Html$Events$targetChecked));
};
var $author$project$View$Segment$Radio = {$: 'Radio'};
var $author$project$View$Segment$view = F4(
	function (style, toMsg, sel, opts) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					function () {
					if (style.$ === 'Menu') {
						return $elm$html$Html$Attributes$class('segment-menu');
					} else {
						return $elm$html$Html$Attributes$class('segment-radio');
					}
				}()
				]),
			A2(
				$elm$core$List$map,
				function (opt) {
					return A2(
						$elm$html$Html$span,
						_List_fromArray(
							[
								_Utils_eq(opt.value, sel) ? $elm$html$Html$Attributes$class('selected') : $elm$html$Html$Attributes$class(''),
								$elm$html$Html$Events$onClick(
								toMsg(opt.value))
							]),
						_List_fromArray(
							[opt.label]));
				},
				opts));
	});
var $author$project$View$Segment$radio = $author$project$View$Segment$view($author$project$View$Segment$Radio);
var $author$project$Widget$Translations$settings = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'settings');
};
var $author$project$Widget$Translations$timeUnit = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'timeUnit');
};
var $author$project$Widget$Translations$timelineDirection = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'timelineDirection');
};
var $author$project$Widget$Translations$totals = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'totals');
};
var $author$project$Widget$Translations$vertical = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'vertical');
};
var $phosphor_icons$phosphor_elm$Phosphor$withSize = F2(
	function (size, _v0) {
		var attrs = _v0.a.attrs;
		var src = _v0.a.src;
		return $phosphor_icons$phosphor_elm$Phosphor$IconVariant(
			{
				attrs: _Utils_update(
					attrs,
					{size: size}),
				src: src
			});
	});
var $phosphor_icons$phosphor_elm$Phosphor$withSizeUnit = F2(
	function (sizeUnit, _v0) {
		var attrs = _v0.a.attrs;
		var src = _v0.a.src;
		return $phosphor_icons$phosphor_elm$Phosphor$IconVariant(
			{
				attrs: _Utils_update(
					attrs,
					{sizeUnit: sizeUnit}),
				src: src
			});
	});
var $author$project$Widget$Translations$wrapText = function (translations) {
	return A2($ChristophP$elm_i18next$I18Next$tf, translations, 'wrapText');
};
var $author$project$Widget$settingsView = function (model) {
	return A2(
		$elm$html$Html$div,
		_List_Nil,
		_List_fromArray(
			[
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('modal-background'),
						$elm$html$Html$Events$onClick(
						$author$project$Widget$ShowModal($author$project$Widget$None))
					]),
				_List_Nil),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('modal settings')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Attributes$class('close-button'),
								$elm$html$Html$Events$onClick(
								$author$project$Widget$ShowModal($author$project$Widget$None))
							]),
						_List_fromArray(
							[
								A2(
								$phosphor_icons$phosphor_elm$Phosphor$toHtml,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'vertical-align', 'sub')
									]),
								A2(
									$phosphor_icons$phosphor_elm$Phosphor$withSizeUnit,
									'px',
									A2(
										$phosphor_icons$phosphor_elm$Phosphor$withSize,
										14,
										$phosphor_icons$phosphor_elm$Phosphor$x($phosphor_icons$phosphor_elm$Phosphor$Bold))))
							])),
						A2(
						$elm$html$Html$h1,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(
								$author$project$Widget$Translations$settings(model.translations))
							])),
						A2(
						$elm$html$Html$label,
						_List_Nil,
						_List_fromArray(
							[
								$elm$html$Html$text(
								$author$project$Widget$Translations$timeUnit(model.translations))
							])),
						A3(
						$author$project$View$Segment$radio,
						$author$project$Widget$UpdateDurationUnit,
						model.durationUnit,
						_List_fromArray(
							[
								{
								label: $elm$html$Html$text(
									$author$project$Widget$Translations$hours(model.translations)),
								value: $author$project$Widget$Hours
							},
								{
								label: $elm$html$Html$text(
									$author$project$Widget$Translations$minutes(model.translations)),
								value: $author$project$Widget$Minutes
							}
							])),
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'margin-top', '20px')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								$author$project$Widget$Translations$timelineDirection(model.translations))
							])),
						A3(
						$author$project$View$Segment$radio,
						$author$project$Widget$UpdateDirection,
						model.timelineState.direction,
						_List_fromArray(
							[
								{
								label: $elm$html$Html$text(
									$author$project$Widget$Translations$horizontal(model.translations)),
								value: $author$project$Timeline$Models$Horizontal
							},
								{
								label: $elm$html$Html$text(
									$author$project$Widget$Translations$vertical(model.translations)),
								value: $author$project$Timeline$Models$Vertical
							}
							])),
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'margin-top', '20px')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								$author$project$Widget$Translations$colorScheme(model.translations))
							])),
						A3(
						$author$project$View$Segment$radio,
						$author$project$Widget$UpdateColorScheme,
						model.options.colorScheme,
						_List_fromArray(
							[
								{
								label: $elm$html$Html$text(
									$author$project$Widget$Translations$light(model.translations)),
								value: $elm$core$Maybe$Just($author$project$Widget$Light)
							},
								{
								label: $elm$html$Html$text(
									$author$project$Widget$Translations$dark(model.translations)),
								value: $elm$core$Maybe$Just($author$project$Widget$Dark)
							},
								{
								label: $elm$html$Html$text(
									$author$project$Widget$Translations$auto(model.translations)),
								value: $elm$core$Maybe$Nothing
							}
							])),
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'margin-top', '20px')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$input,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('checkbox'),
										$elm$html$Html$Attributes$checked(model.timelineState.wrapText),
										$elm$html$Html$Events$onCheck($author$project$Widget$UpdateWrap)
									]),
								_List_Nil),
								$elm$html$Html$text(
								$author$project$Widget$Translations$wrapText(model.translations))
							])),
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'margin-top', '20px')
							]),
						_List_fromArray(
							[
								$elm$html$Html$text(
								$author$project$Widget$Translations$totals(model.translations))
							])),
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'margin-top', '10px')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$input,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('checkbox'),
										$elm$html$Html$Attributes$checked(model.options.countMoments),
										$elm$html$Html$Events$onCheck($author$project$Widget$UpdateCountMoments)
									]),
								_List_Nil),
								$elm$html$Html$text(
								$author$project$Widget$Translations$countMoments(model.translations))
							])),
						A2(
						$elm$html$Html$label,
						_List_fromArray(
							[
								A2($elm$html$Html$Attributes$style, 'margin-top', '5px')
							]),
						_List_fromArray(
							[
								A2(
								$elm$html$Html$input,
								_List_fromArray(
									[
										$elm$html$Html$Attributes$type_('checkbox'),
										$elm$html$Html$Attributes$checked(model.options.displaySubtotals),
										$elm$html$Html$Events$onCheck($author$project$Widget$UpdateShowSubtotals)
									]),
								_List_Nil),
								$elm$html$Html$text(
								$author$project$Widget$Translations$displaySubtotals(model.translations))
							]))
					]))
			]));
};
var $author$project$Timeline$sister = F3(
	function (selector, list, parent) {
		var fullsel = _Utils_ap(parent, selector);
		var _v0 = A3(
			$elm$core$List$foldl,
			F2(
				function (func, _v1) {
					var resRules = _v1.a;
					var resRule = _v1.b;
					var _v2 = func(fullsel);
					var fc = _v2.a;
					var fr = _v2.b;
					return _Utils_Tuple2(
						_Utils_ap(resRules, fc),
						_Utils_ap(resRule, fr));
				}),
			_Utils_Tuple2('', fullsel + '{'),
			list);
		var rules = _v0.a;
		var rule = _v0.b;
		return _Utils_Tuple2(rule + ('}' + rules), '');
	});
var $author$project$Timeline$child = F3(
	function (selector, list, parent) {
		return A3($author$project$Timeline$sister, selector, list, parent + ' ');
	});
var $author$project$Timeline$darken = F4(
	function (r, g, b, d) {
		return 'rgb(' + ($elm$core$String$fromInt(
			$elm$core$Basics$round(r * d)) + (',' + ($elm$core$String$fromInt(
			$elm$core$Basics$round(g * d)) + (',' + ($elm$core$String$fromInt(
			$elm$core$Basics$round(b * d)) + ')')))));
	});
var $author$project$Timeline$prop = F3(
	function (property, value, _v0) {
		return _Utils_Tuple2('', property + (':' + (value + ';')));
	});
var $author$project$Timeline$rgba = F4(
	function (r, g, b, a) {
		return 'rgba(' + ($elm$core$String$fromInt(r) + (',' + ($elm$core$String$fromInt(g) + (',' + ($elm$core$String$fromInt(b) + (',' + ($elm$core$String$fromFloat(a) + ')')))))));
	});
var $author$project$Timeline$root = F2(
	function (selector, list) {
		return A3($author$project$Timeline$sister, selector, list, '').a;
	});
var $escherlies$elm_color$Color$Utils$fractionalModBy = F2(
	function (modulus, x) {
		return x - (modulus * $elm$core$Basics$floor(x / modulus));
	});
var $escherlies$elm_color$Color$Hsl$hsla = F4(
	function (hue, saturation, lightness, alpha) {
		var s = $escherlies$elm_color$Color$Utils$clamp01(saturation);
		var l = $escherlies$elm_color$Color$Utils$clamp01(lightness);
		var h = A2($escherlies$elm_color$Color$Utils$fractionalModBy, 360, hue);
		var f = function (n) {
			var k = A2($escherlies$elm_color$Color$Utils$fractionalModBy, 12, n + (h / 30));
			var a = s * A2($elm$core$Basics$min, l, 1 - l);
			return l - (a * A2(
				$elm$core$Basics$max,
				-1,
				A2(
					$elm$core$Basics$min,
					k - 3,
					A2($elm$core$Basics$min, 9 - k, 1))));
		};
		return A4(
			$escherlies$elm_color$Color$Internal$rgba,
			f(0),
			f(8),
			f(4),
			alpha);
	});
var $escherlies$elm_color$Color$Transform$mapLightnessHsl = F2(
	function (fn, hsl) {
		return A4(
			$escherlies$elm_color$Color$Hsl$hsla,
			hsl.hue,
			hsl.saturation,
			fn(hsl.lightness),
			hsl.alpha);
	});
var $escherlies$elm_color$Color$Hsl$toHsla = function (_v0) {
	var red = _v0.a;
	var green = _v0.b;
	var blue = _v0.c;
	var alpha = _v0.d;
	var colorMin = A2(
		$elm$core$Basics$min,
		blue,
		A2($elm$core$Basics$min, green, red));
	var colorMax = A2(
		$elm$core$Basics$max,
		blue,
		A2($elm$core$Basics$max, green, red));
	var l = (colorMax + colorMin) / 2;
	var chroma = colorMax - colorMin;
	var h = _Utils_eq(colorMax, colorMin) ? 0 : (_Utils_eq(colorMax, red) ? (60 * (0 + ((green - blue) / chroma))) : (_Utils_eq(colorMax, green) ? (60 * (2 + ((blue - red) / chroma))) : (_Utils_eq(colorMax, blue) ? (60 * (4 + ((red - green) / chroma))) : 0)));
	var s = _Utils_eq(colorMax, colorMin) ? 0 : (chroma / (1 - $elm$core$Basics$abs((colorMax + colorMin) - 1)));
	return {
		alpha: alpha,
		hue: A2($escherlies$elm_color$Color$Utils$fractionalModBy, 360, h),
		lightness: l,
		saturation: s
	};
};
var $escherlies$elm_color$Color$Transform$mapLightness = function (fn) {
	return A2(
		$elm$core$Basics$composeL,
		$escherlies$elm_color$Color$Transform$mapLightnessHsl(fn),
		$escherlies$elm_color$Color$Hsl$toHsla);
};
var $escherlies$elm_color$Color$mapLightness = $escherlies$elm_color$Color$Transform$mapLightness;
var $escherlies$elm_color$Color$Hex$dropAlpha = function (rgbas) {
	if ((((rgbas.b && rgbas.b.b) && rgbas.b.b.b) && rgbas.b.b.b.b) && (!rgbas.b.b.b.b.b)) {
		var r = rgbas.a;
		var _v1 = rgbas.b;
		var g = _v1.a;
		var _v2 = _v1.b;
		var b = _v2.a;
		var _v3 = _v2.b;
		var a = _v3.a;
		return (a === 255) ? _List_fromArray(
			[r, g, b]) : rgbas;
	} else {
		return rgbas;
	}
};
var $elm$core$String$padLeft = F3(
	function (n, _char, string) {
		return _Utils_ap(
			A2(
				$elm$core$String$repeat,
				n - $elm$core$String$length(string),
				$elm$core$String$fromChar(_char)),
			string);
	});
var $escherlies$elm_color$Color$Hex$toRgba255List = function (_v0) {
	var r = _v0.a;
	var g = _v0.b;
	var b = _v0.c;
	var a = _v0.d;
	return _List_fromArray(
		[
			$elm$core$Basics$round(r * 255),
			$elm$core$Basics$round(g * 255),
			$elm$core$Basics$round(b * 255),
			$elm$core$Basics$round(a * 255)
		]);
};
var $rtfeldman$elm_hex$Hex$unsafeToDigit = function (num) {
	unsafeToDigit:
	while (true) {
		switch (num) {
			case 0:
				return _Utils_chr('0');
			case 1:
				return _Utils_chr('1');
			case 2:
				return _Utils_chr('2');
			case 3:
				return _Utils_chr('3');
			case 4:
				return _Utils_chr('4');
			case 5:
				return _Utils_chr('5');
			case 6:
				return _Utils_chr('6');
			case 7:
				return _Utils_chr('7');
			case 8:
				return _Utils_chr('8');
			case 9:
				return _Utils_chr('9');
			case 10:
				return _Utils_chr('a');
			case 11:
				return _Utils_chr('b');
			case 12:
				return _Utils_chr('c');
			case 13:
				return _Utils_chr('d');
			case 14:
				return _Utils_chr('e');
			case 15:
				return _Utils_chr('f');
			default:
				var $temp$num = num;
				num = $temp$num;
				continue unsafeToDigit;
		}
	}
};
var $rtfeldman$elm_hex$Hex$unsafePositiveToDigits = F2(
	function (digits, num) {
		unsafePositiveToDigits:
		while (true) {
			if (num < 16) {
				return A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(num),
					digits);
			} else {
				var $temp$digits = A2(
					$elm$core$List$cons,
					$rtfeldman$elm_hex$Hex$unsafeToDigit(
						A2($elm$core$Basics$modBy, 16, num)),
					digits),
					$temp$num = (num / 16) | 0;
				digits = $temp$digits;
				num = $temp$num;
				continue unsafePositiveToDigits;
			}
		}
	});
var $rtfeldman$elm_hex$Hex$toString = function (num) {
	return $elm$core$String$fromList(
		(num < 0) ? A2(
			$elm$core$List$cons,
			_Utils_chr('-'),
			A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, -num)) : A2($rtfeldman$elm_hex$Hex$unsafePositiveToDigits, _List_Nil, num));
};
var $escherlies$elm_color$Color$Hex$toHexString = A2(
	$elm$core$Basics$composeL,
	A2(
		$elm$core$Basics$composeL,
		A2(
			$elm$core$Basics$composeL,
			$elm$core$String$concat,
			$elm$core$List$map(
				A2(
					$elm$core$Basics$composeL,
					A2(
						$elm$core$String$padLeft,
						2,
						_Utils_chr('0')),
					$rtfeldman$elm_hex$Hex$toString))),
		$escherlies$elm_color$Color$Hex$dropAlpha),
	$escherlies$elm_color$Color$Hex$toRgba255List);
var $escherlies$elm_color$Color$Hex$toCssString = function (s) {
	return '#' + $escherlies$elm_color$Color$Hex$toHexString(s);
};
var $escherlies$elm_color$Color$toCssString = $escherlies$elm_color$Color$Hex$toCssString;
var $author$project$Timeline$sisterColor = function (colname) {
	var color = $author$project$Timeline$Models$findColor(colname);
	return A2(
		$author$project$Timeline$sister,
		'.' + colname,
		_List_fromArray(
			[
				A2(
				$author$project$Timeline$prop,
				'border-color',
				$escherlies$elm_color$Color$toCssString(color)),
				A2(
				$author$project$Timeline$sister,
				'.selected',
				_List_fromArray(
					[
						A2(
						$author$project$Timeline$prop,
						'color',
						$escherlies$elm_color$Color$toCssString(
							A2(
								$escherlies$elm_color$Color$mapAlpha,
								$elm$core$Basics$always(1.0),
								A2(
									$escherlies$elm_color$Color$mapLightness,
									$elm$core$Basics$mul(1.1),
									color))))
					]))
			]));
};
var $author$project$Timeline$styles = A2(
	$author$project$Timeline$root,
	'.timeline',
	_List_fromArray(
		[
			A2($author$project$Timeline$prop, 'user-select', 'none'),
			A2($author$project$Timeline$prop, '-webkit-user-select', 'none'),
			A2($author$project$Timeline$prop, 'position', 'relative'),
			A2($author$project$Timeline$prop, 'font-family', 'sans-serif'),
			A2($author$project$Timeline$prop, 'overflow', 'hidden'),
			A2(
			$author$project$Timeline$child,
			'.axis-text',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'fill', 'black')
				])),
			A2(
			$author$project$Timeline$child,
			'.axis-line-5',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'stroke', '#DDD')
				])),
			A2(
			$author$project$Timeline$child,
			'.axis-line-10',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'stroke', '#AAA')
				])),
			A2(
			$author$project$Timeline$child,
			'.axis-line-20',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'stroke', '#666')
				])),
			A2(
			$author$project$Timeline$child,
			'.group div',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'white-space', 'wrap')
				])),
			A2(
			$author$project$Timeline$child,
			'.group.move',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'background-color', '#77f')
				])),
			A2(
			$author$project$Timeline$child,
			'.group.even',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'background-color', '#f7f7f7'),
					A2($author$project$Timeline$prop, 'box-sizing', 'border-box'),
					A2($author$project$Timeline$prop, 'border-top', 'solid 1px'),
					A2($author$project$Timeline$prop, 'border-bottom', 'solid 1px'),
					A2($author$project$Timeline$prop, 'border-color', '#eaeaea')
				])),
			A2(
			$author$project$Timeline$child,
			'.group.veven',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'background-color', '#f7f7f7'),
					A2($author$project$Timeline$prop, 'box-sizing', 'border-box'),
					A2($author$project$Timeline$prop, 'border-left', 'solid 1px'),
					A2($author$project$Timeline$prop, 'border-right', 'solid 1px'),
					A2($author$project$Timeline$prop, 'border-color', '#eaeaea')
				])),
			A2(
			$author$project$Timeline$child,
			'.group.odd',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'background-color', 'white')
				])),
			A2(
			$author$project$Timeline$child,
			'.group.selected',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'font-weight', '800')
				])),
			A2(
			$author$project$Timeline$sister,
			':focus-visible',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'outline', 'none')
				])),
			A2(
			$author$project$Timeline$sister,
			':focus',
			_List_fromArray(
				[
					A2(
					$author$project$Timeline$child,
					'.group >div',
					_List_fromArray(
						[
							A2($author$project$Timeline$prop, 'background-color', 'rgba(70, 130, 180, 0.2)')
						]))
				])),
			A2(
			$author$project$Timeline$child,
			'g.section',
			_List_fromArray(
				[
					A2(
					$author$project$Timeline$child,
					'text',
					_List_fromArray(
						[
							A2($author$project$Timeline$prop, 'fill', 'black'),
							A2($author$project$Timeline$prop, 'stroke-width', '0')
						])),
					A2(
					$author$project$Timeline$child,
					'text.dates',
					_List_fromArray(
						[
							A2($author$project$Timeline$prop, 'fill', 'rgba(0,0,0,0.5)'),
							A2($author$project$Timeline$prop, 'stroke-width', '0')
						])),
					A2(
					$author$project$Timeline$child,
					'rect',
					_List_fromArray(
						[
							A2(
							$author$project$Timeline$prop,
							'fill',
							A4($author$project$Timeline$rgba, 150, 150, 150, $author$project$Timeline$Models$alpha)),
							A2(
							$author$project$Timeline$prop,
							'stroke',
							A4($author$project$Timeline$rgba, 150, 150, 150, 1))
						])),
					A2(
					$author$project$Timeline$sister,
					'.selected',
					_List_fromArray(
						[
							A2(
							$author$project$Timeline$child,
							'rect',
							_List_fromArray(
								[
									A2(
									$author$project$Timeline$prop,
									'fill',
									A4($author$project$Timeline$darken, 150, 150, 150, 0.3))
								])),
							A2(
							$author$project$Timeline$child,
							'text',
							_List_fromArray(
								[
									A2(
									$author$project$Timeline$prop,
									'fill',
									A4($author$project$Timeline$rgba, 150, 150, 150, 1))
								]))
						]))
				])),
			A2(
			$author$project$Timeline$child,
			'div.section',
			_List_fromArray(
				[
					A2($author$project$Timeline$prop, 'color', 'black'),
					A2($author$project$Timeline$prop, 'position', 'absolute'),
					A2($author$project$Timeline$prop, 'overflow', 'hidden'),
					A2($author$project$Timeline$prop, 'font-family', 'Arial, Helvetica, sans-serif'),
					A2($author$project$Timeline$prop, 'box-sizing', 'border-box'),
					A2(
					$author$project$Timeline$child,
					'.dates',
					_List_fromArray(
						[
							A2($author$project$Timeline$prop, 'color', 'rgba(0,0,0,0.5)'),
							A2(
							$author$project$Timeline$child,
							'div.h-end-date',
							_List_fromArray(
								[
									A2($author$project$Timeline$prop, 'position', 'absolute'),
									A2($author$project$Timeline$prop, 'width', '100%'),
									A2($author$project$Timeline$prop, 'padding-right', '3px'),
									A2($author$project$Timeline$prop, 'box-sizing', 'border-box'),
									A2($author$project$Timeline$prop, 'top', '2px'),
									A2($author$project$Timeline$prop, 'text-align', 'end')
								])),
							A2(
							$author$project$Timeline$child,
							'div.v-end-date',
							_List_fromArray(
								[
									A2($author$project$Timeline$prop, 'position', 'absolute'),
									A2($author$project$Timeline$prop, 'left', '2px'),
									A2($author$project$Timeline$prop, 'text-align', 'end')
								]))
						])),
					A2(
					$author$project$Timeline$sister,
					'.selected',
					_List_fromArray(
						[
							A2(
							$author$project$Timeline$prop,
							'color',
							A4($author$project$Timeline$rgba, 150, 150, 150, 1)),
							A2(
							$author$project$Timeline$child,
							'.dates',
							_List_fromArray(
								[
									A2($author$project$Timeline$prop, 'color', 'rgba(255,255,255,0.4)')
								]))
						])),
					A2(
					$author$project$Timeline$sister,
					'.new',
					_List_fromArray(
						[
							A2(
							$author$project$Timeline$prop,
							'background-color',
							A4($author$project$Timeline$rgba, 200, 200, 255, 0.9)),
							A2($author$project$Timeline$prop, 'border-color', 'grey'),
							A2($author$project$Timeline$prop, 'box-shadow', '0px 0px 5px grey'),
							A2($author$project$Timeline$prop, 'border-radius', '5px'),
							A2(
							$author$project$Timeline$child,
							'.dates',
							_List_fromArray(
								[
									A2($author$project$Timeline$prop, 'color', 'black')
								]))
						])),
					$author$project$Timeline$sisterColor('rose'),
					$author$project$Timeline$sisterColor('rose-pale'),
					$author$project$Timeline$sisterColor('magenta'),
					$author$project$Timeline$sisterColor('magenta-pale'),
					$author$project$Timeline$sisterColor('violet'),
					$author$project$Timeline$sisterColor('violet-pale'),
					$author$project$Timeline$sisterColor('bleu'),
					$author$project$Timeline$sisterColor('bleu-pale'),
					$author$project$Timeline$sisterColor('azur'),
					$author$project$Timeline$sisterColor('azur-pale'),
					$author$project$Timeline$sisterColor('cyan'),
					$author$project$Timeline$sisterColor('cyan-pale'),
					$author$project$Timeline$sisterColor('turquoise'),
					$author$project$Timeline$sisterColor('turquoise-pale'),
					$author$project$Timeline$sisterColor('vert'),
					$author$project$Timeline$sisterColor('vert-pale'),
					$author$project$Timeline$sisterColor('anis'),
					$author$project$Timeline$sisterColor('anis-pale'),
					$author$project$Timeline$sisterColor('jaune'),
					$author$project$Timeline$sisterColor('jaune-pale'),
					$author$project$Timeline$sisterColor('orange'),
					$author$project$Timeline$sisterColor('orange-pale'),
					$author$project$Timeline$sisterColor('rouge'),
					$author$project$Timeline$sisterColor('rouge-pale'),
					$author$project$Timeline$sisterColor('error'),
					$author$project$Timeline$sisterColor('problem'),
					$author$project$Timeline$sisterColor('warning'),
					$author$project$Timeline$sisterColor('ok')
				]))
		]));
var $author$project$View$Segment$styles = '\n.segment-radio {\n    margin-top: 6px;\n    user-select: none;\n}\n\n.segment-radio > span {\n    display: inline-block;\n    cursor: pointer;\n    padding: 4px 8px;\n    border: 1px solid #BBB;\n    border-right: 0px;\n    user-select: none;\n    &.selected {\n        background-color: steelblue;\n        color: white;\n    }\n    &:first-child {\n        border-radius: 5px 0 0 5px;\n    }\n    &:last-child {\n        border-right: 1px solid #BBB;\n        border-radius: 0 5px 5px 0;\n    }\n\n}\n\n\n.segment-menu {\n    width: 100%;\n    border-bottom: 1px solid lightgrey;\n    user-select: none;\n    margin-bottom: 6px\n}\n\n.segment-menu > span {\n    padding: 12px 8px;\n    border-bottom: 1px solid lightgrey;\n    display: inline-block;\n    color: steelblue;\n    cursor: pointer;\n    opacity: 0.7;\n\n    position: relative;\n    top: 1px;\n\n    &:hover {\n        opacity: 1;\n    }\n    &.selected {\n        color: black;\n        border-color: black;\n        opacity: 1;\n    }\n}\n';
var $author$project$Widget$styles = '\n\nbody {\n    margin: 0;\n    padding: 0;\n    overflow: hidden;\n    color: black;\n}\n\ninput[type="checkbox"] {\n    accent-color: steelblue;\n}\n\n.label {\n    color: var(--grist-theme-text, var(--grist-color-dark));\n}\n\n.field {\n    padding-top: 10px;\n}\n\n.field label {\n    text-transform: uppercase;\n    font-size: 10px;\n    color: var(--grist-theme-text, var(--grist-color-dark));\n    display: block;\n    margin-bottom: 5px;\n    .unit {\n        text-transform: none;\n    }\n}\n\n.field > input,textarea{\n    display: block;\n    margin-top: 5px;\n    color: var(--grist-theme-input-fg, black);\n    outline: none;\n    font-size: 13px;\n    border: 1px solid var(--grist-theme-input-border, var(--grist-color-dark-grey));\n    background-color: var(--grist-theme-input-bg, white);\n    border-radius: 3px;\n    padding: 6px;\n\n}\n\n\n.modal-background {\n    position: absolute;\n    left: 0;\n    top: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0,0,0,.2);\n    \n}\n\n.modal {\n    position: absolute;\n    top: 20px;\n    background-color: var(--grist-theme-menu-bg, white);\n    color: var(--grist-theme-text, var(--grist-color-dark));\n    padding: 10px 30px 30px 30px;\n    max-width: 80%;\n    max-height: 90%;\n    font-family: sans-serif;\n    font-size: 13px;\n    box-shadow: 0px 10px 24px 0px rgba(0,0,0,0.34);\n\n    h1 {\n        font-size: 20px;\n    }\n\n    h2 {\n        font-size: 16px;\n    }\n\n    label {\n        text-transform: uppercase;\n        font-size: 10px;\n        color: var(--grist-theme-text, var(--grist-color-dark));\n        display: block;\n    }\n}\n\n.help {\n    left: 40px;\n    \n}\n\n.help div {\n    height: 100%;\n    overflow: auto;\n}\n\n.settings {\n    padding: 10px 30px 20px 30px;\n    left: 68px;\n}\n\n.create-new {\n    > button {\n        margin-top: 15px;\n    }\n}\n\n.errors {\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    z-index: 200;\n    \n}\n\n.error {\n    background-color: #F00;\n    padding: 8px 20px 8px 0px;\n    margin: 5px;\n    border: 1px solid #F00;\n    font-family: sans-serif;\n    font-size: 13px;\n    color: white;\n}\n\n.error button {\n    margin-left: 6px;\n    border: none;\n    font-size: 10px;\n    background: none;\n    color: white;\n}\n\n.controls  button {\n    margin-left: 6px;\n    border: none;\n    font-size: 10px;\n    background-color: #DDD;\n    color: black;\n    border-radius: 50px;\n    padding: 5px;\n    cursor: pointer;\n\n    &:hover {\n        background-color: #B4CCE1;\n    }\n}\n\n.close-button {\n    display: block;\n    position: absolute;\n    left: 0;\n    top: 3px;\n    width: 16px;\n    height: 16px;\n    cursor: pointer;\n    border: none;\n    background: none;\n    \n}\n\n.calcul {\n    color: var(--grist-theme-text-light, var(--grist-color-slate));\n    font-size: 11px;\n}\n\n\n\n.selectize__textfield {\n    display: block;\n    box-sizing: border-box;\n    width: 100%;\n    color: var(--grist-theme-input-fg, black);\n    outline: none;\n    font-size: 13px;\n    border: 1px solid var(--grist-theme-input-border, var(--grist-color-dark-grey));\n    background-color: var(--grist-theme-input-bg, white);\n    border-radius: 3px;\n    padding: 6px;\n    padding-right: 30px;\n    white-space: nowrap;\n    cursor: pointer;\n}\n\n.selectize__menu-toggle {\n    color: var(--grist-theme-input-fg, black);\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    height: 30px;\n    width: 20px;\n    cursor: pointer;\n}\n.selectize__menu-clear {\n    color: var(--grist-theme-input-fg, black);\n    display: flex;\n    flex-flow: column;\n    justify-content: center;\n    height: 30px;\n    width: 15px;\n    cursor: pointer;\n}\n\n.selectize__menu {\n    z-index: 2000;\n    width: 100%;\n    margin-top: 5px;\n    background: white;\n    color: black;\n    max-height: 20rem;\n    overflow: scroll;\n    padding: 0;\n    margin: 2px 0 0 0;\n    color: var(--grist-theme-input-fg, black);\n    background-color: var(--grist-theme-input-bg, white);\n    border-radius: 2px;\n    box-sizing: border-box;\n    \n    &.open {\n        box-shadow: 0 2px 20px 0 var(--grist-theme-menu-shadow, rgba(38, 38, 51, 0.6));\n    }\n    \n}\n\n.selectize__list {\n    font-family: "Source Sans Pro", "Helvetica Neue", Arial, sans-serif;\n    font-weight: normal;\n}\n\n.selectize__list {\n    list-style: none;\n    padding: 0;\n    margin: auto;\n    overflow-y: auto;\n}\n\n.selectize__item {\n    display: block;\n    padding: 0px 3px;\n    cursor: pointer;\n    line-height: 24px;\n}\n\n.selectize__item--key-selected {\n    background-color: steelblue;\n    color: white;\n}\n\n.selectize__item--mouse-selected {\n    background-color: rgba(70, 130, 180, 0.3);\n}\n';
var $elm_explorations$markdown$Markdown$defaultOptions = {
	defaultHighlighting: $elm$core$Maybe$Nothing,
	githubFlavored: $elm$core$Maybe$Just(
		{breaks: false, tables: false}),
	sanitize: true,
	smartypants: false
};
var $elm_explorations$markdown$Markdown$toHtmlWith = _Markdown_toHtml;
var $elm_explorations$markdown$Markdown$toHtml = $elm_explorations$markdown$Markdown$toHtmlWith($elm_explorations$markdown$Markdown$defaultOptions);
var $author$project$Timeline$GroupsWheel = function (a) {
	return {$: 'GroupsWheel', a: a};
};
var $author$project$Timeline$Keypress = function (a) {
	return {$: 'Keypress', a: a};
};
var $author$project$Timeline$SectionsMove = function (a) {
	return {$: 'SectionsMove', a: a};
};
var $author$project$Timeline$SectionsUp = function (a) {
	return {$: 'SectionsUp', a: a};
};
var $enkidatron$elm_cldr$Cldr$Format$Length$Short = {$: 'Short'};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$TimeOnly = function (a) {
	return {$: 'TimeOnly', a: a};
};
var $author$project$Timeline$SectionsWheel = function (a) {
	return {$: 'SectionsWheel', a: a};
};
var $elm$virtual_dom$VirtualDom$Custom = function (a) {
	return {$: 'Custom', a: a};
};
var $elm$html$Html$Events$custom = F2(
	function (event, decoder) {
		return A2(
			$elm$virtual_dom$VirtualDom$on,
			event,
			$elm$virtual_dom$VirtualDom$Custom(decoder));
	});
var $author$project$Timeline$Event$Event = function (x) {
	return function (y) {
		return function (altKey) {
			return function (ctrlKey) {
				return function (metaKey) {
					return function (shiftKey) {
						return function (dx) {
							return function (dy) {
								return function (button) {
									return function (clientX) {
										return function (clientY) {
											return {altKey: altKey, button: button, clientX: clientX, clientY: clientY, ctrlKey: ctrlKey, dx: dx, dy: dy, metaKey: metaKey, shiftKey: shiftKey, x: x, y: y};
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $author$project$Timeline$Event$eventDecoder = A3(
	$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
	'clientY',
	$elm$json$Json$Decode$float,
	A3(
		$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
		'clientX',
		$elm$json$Json$Decode$float,
		A4(
			$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
			'button',
			$elm$json$Json$Decode$int,
			0,
			A4(
				$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
				'deltaY',
				$elm$json$Json$Decode$float,
				0,
				A4(
					$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$optional,
					'deltaX',
					$elm$json$Json$Decode$float,
					0,
					A3(
						$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
						'shiftKey',
						$elm$json$Json$Decode$bool,
						A3(
							$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
							'metaKey',
							$elm$json$Json$Decode$bool,
							A3(
								$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
								'ctrlKey',
								$elm$json$Json$Decode$bool,
								A3(
									$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
									'altKey',
									$elm$json$Json$Decode$bool,
									A3(
										$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
										'offsetY',
										$elm$json$Json$Decode$float,
										A3(
											$NoRedInk$elm_json_decode_pipeline$Json$Decode$Pipeline$required,
											'offsetX',
											$elm$json$Json$Decode$float,
											$elm$json$Json$Decode$succeed($author$project$Timeline$Event$Event))))))))))));
var $author$project$Timeline$Event$preventDefault = $elm$json$Json$Decode$map(
	function (msg) {
		return {message: msg, preventDefault: true, stopPropagation: true};
	});
var $author$project$Timeline$Event$moveY0Event = function (message) {
	return A2(
		$elm$html$Html$Events$custom,
		'mousemove',
		$author$project$Timeline$Event$preventDefault(
			A2(
				$elm$json$Json$Decode$map,
				message,
				A2(
					$elm$json$Json$Decode$map,
					function (evt) {
						return _Utils_update(
							evt,
							{y: 0});
					},
					$author$project$Timeline$Event$eventDecoder))));
};
var $author$project$Timeline$Event$wheelEvent = function (message) {
	return A2(
		$elm$html$Html$Events$custom,
		'wheel',
		$author$project$Timeline$Event$preventDefault(
			A2($elm$json$Json$Decode$map, message, $author$project$Timeline$Event$eventDecoder)));
};
var $author$project$Timeline$axisAttrs = _List_fromArray(
	[
		$author$project$Timeline$Event$wheelEvent($author$project$Timeline$SectionsWheel),
		$author$project$Timeline$Event$moveY0Event($author$project$Timeline$SectionsMove)
	]);
var $author$project$Timeline$Models$isGroupSelected = F2(
	function (gid, _v0) {
		var sel = _v0.a;
		return A2(
			$elm$core$Maybe$withDefault,
			false,
			A2(
				$elm$core$Maybe$map,
				function (set) {
					return !$elm$core$Set$isEmpty(set);
				},
				A2($elm$core$Dict$get, gid, sel)));
	});
var $author$project$Timeline$drawColsBackground = F3(
	function (groups, lineSize, sel) {
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					A2($elm$html$Html$Attributes$style, 'height', '100%')
				]),
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (j, _v0) {
						var id = _v0.a;
						var g = _v0.b;
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									(!A2($elm$core$Basics$modBy, 2, j)) ? $elm$html$Html$Attributes$class('group veven') : $elm$html$Html$Attributes$class('group odd'),
									A2($author$project$Timeline$Models$isGroupSelected, id, sel) ? $elm$html$Html$Attributes$class('selected') : $elm$html$Html$Attributes$class(''),
									A2(
									$elm$html$Html$Attributes$style,
									'width',
									$elm$core$String$fromFloat(lineSize * g.size) + 'px'),
									A2($elm$html$Html$Attributes$style, 'height', '100%'),
									A2($elm$html$Html$Attributes$style, 'display', 'inline-block')
								]),
							_List_Nil);
					}),
				A2(
					$elm$core$List$sortBy,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Tuple$second,
						function ($) {
							return $.position;
						}),
					$elm$core$Dict$toList(groups))));
	});
var $author$project$Timeline$groupLabelsToHtml = function (labels) {
	return A2(
		$elm$core$List$map,
		function (label) {
			return A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(label)
					]));
		},
		labels);
};
var $author$project$Timeline$handleStyle = _List_fromArray(
	[
		A2($elm$html$Html$Attributes$style, 'width', '15px'),
		A2($elm$html$Html$Attributes$style, 'height', '80%'),
		A2($elm$html$Html$Attributes$style, 'border-radius', '20px'),
		A2($elm$html$Html$Attributes$style, 'color', 'grey'),
		A2($elm$html$Html$Attributes$style, 'margin-right', '5px'),
		A2($elm$html$Html$Attributes$style, 'margin-left', '5px'),
		A2($elm$html$Html$Attributes$style, 'font-size', '1.5em'),
		A2($elm$html$Html$Attributes$style, 'justify-content', 'center'),
		A2($elm$html$Html$Attributes$style, 'display', 'flex'),
		A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
		A2($elm$html$Html$Attributes$style, 'color', '#AAA'),
		$elm$html$Html$Attributes$class('handle')
	]);
var $author$project$Timeline$ghostView = F5(
	function (dnd, direction, width, lineSize, items) {
		var maybeDragItem = A2(
			$elm$core$Maybe$andThen,
			function (_v1) {
				var dragIndex = _v1.dragIndex;
				return $elm$core$List$head(
					A2($elm$core$List$drop, dragIndex, items));
			},
			$author$project$Timeline$system(direction).info(dnd));
		if (maybeDragItem.$ === 'Just') {
			var item = maybeDragItem.a;
			return A2(
				$elm$html$Html$div,
				_Utils_ap(
					_List_fromArray(
						[
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(lineSize * item.size) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'max-width',
							$elm$core$String$fromInt(width) + 'px'),
							A2($elm$html$Html$Attributes$style, 'background-color', 'rgba(100,100,200,.6)'),
							A2($elm$html$Html$Attributes$style, 'z-index', '100'),
							A2($elm$html$Html$Attributes$style, 'display', 'flex'),
							A2($elm$html$Html$Attributes$style, 'align-items', 'center')
						]),
					$author$project$Timeline$system(direction).ghostStyles(dnd)),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$div,
						$author$project$Timeline$handleStyle,
						_List_fromArray(
							[
								$elm$html$Html$text('⋮')
							])),
						A2(
						$elm$html$Html$div,
						_List_Nil,
						$author$project$Timeline$groupLabelsToHtml(item.label))
					]));
		} else {
			return $elm$html$Html$text('');
		}
	});
var $author$project$Timeline$CancelGroupLabelEdit = {$: 'CancelGroupLabelEdit'};
var $author$project$Timeline$DoubleClickGroup = function (a) {
	return {$: 'DoubleClickGroup', a: a};
};
var $author$project$Timeline$SelectGroup = F2(
	function (a, b) {
		return {$: 'SelectGroup', a: a, b: b};
	});
var $author$project$Timeline$UpdateGroupLabel = F2(
	function (a, b) {
		return {$: 'UpdateGroupLabel', a: a, b: b};
	});
var $author$project$Timeline$ValidateGroupLabel = F2(
	function (a, b) {
		return {$: 'ValidateGroupLabel', a: a, b: b};
	});
var $author$project$Timeline$Event$clickEvent = function (message) {
	return A2(
		$elm$html$Html$Events$on,
		'click',
		A2($elm$json$Json$Decode$map, message, $author$project$Timeline$Event$eventDecoder));
};
var $author$project$Timeline$Event$keyEvent = function (message) {
	return A2(
		$elm$html$Html$Events$custom,
		'keydown',
		$author$project$Timeline$Event$preventDefault(
			A2(
				$elm$json$Json$Decode$andThen,
				message,
				A2($elm$json$Json$Decode$field, 'keyCode', $elm$json$Json$Decode$int))));
};
var $elm$html$Html$Events$onDoubleClick = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'dblclick',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Timeline$groupView = function (dnd) {
	return function (direction) {
		return function (lineSize) {
			return function (size) {
				return function (fullSize) {
					return function (mbedit) {
						return function (index) {
							return function (group) {
								return function (canEditG) {
									return function (canSortG) {
										return function (selected) {
											var itemId = 'id-' + group.id;
											var fontSize = function () {
												if (direction.$ === 'Horizontal') {
													return A2(
														$elm$html$Html$Attributes$style,
														'font-size',
														$elm$core$String$fromFloat(
															A2(
																$elm$core$Basics$min,
																15,
																A2($elm$core$Basics$logBase, 5, lineSize) * 5)) + 'px');
												} else {
													return A2(
														$elm$html$Html$Attributes$style,
														'font-size',
														$elm$core$String$fromFloat(
															A2(
																$elm$core$Basics$min,
																15,
																A2($elm$core$Basics$logBase, 6, lineSize) * 4)) + 'px');
												}
											}();
											var _v0 = _Utils_eq(direction, $author$project$Timeline$Models$Horizontal) ? _Utils_Tuple2(
												_Utils_Tuple3(fullSize, lineSize * group.size, 'block'),
												_Utils_Tuple2(
													$elm$core$String$fromInt(size) + 'px',
													'100%')) : _Utils_Tuple2(
												_Utils_Tuple3(lineSize * group.size, fullSize, 'inline-block'),
												_Utils_Tuple2(
													'100%',
													$elm$core$String$fromInt(size) + 'px'));
											var _v1 = _v0.a;
											var w = _v1.a;
											var h = _v1.b;
											var disp = _v1.c;
											var _v2 = _v0.b;
											var nw = _v2.a;
											var nh = _v2.b;
											return A2(
												$elm$core$Tuple$pair,
												itemId,
												function () {
													var _v3 = $author$project$Timeline$system(direction).info(dnd);
													if (_v3.$ === 'Just') {
														var dragIndex = _v3.a.dragIndex;
														var dropIndex = _v3.a.dropIndex;
														return (!_Utils_eq(dragIndex, index)) ? A2(
															$elm$html$Html$div,
															_List_fromArray(
																[
																	A2(
																	$elm$html$Html$Attributes$style,
																	'height',
																	$elm$core$String$fromFloat(h) + 'px'),
																	A2(
																	$elm$html$Html$Attributes$style,
																	'width',
																	$elm$core$String$fromFloat(w) + 'px'),
																	$elm$html$Html$Attributes$class(
																	_Utils_eq(index, dropIndex) ? 'group move' : ((!A2($elm$core$Basics$modBy, 2, index)) ? (_Utils_eq(direction, $author$project$Timeline$Models$Horizontal) ? 'group even' : 'group veven') : 'group odd')),
																	selected ? $elm$html$Html$Attributes$class('selected') : $elm$html$Html$Attributes$class(''),
																	$elm$html$Html$Attributes$id(itemId)
																]),
															_List_fromArray(
																[
																	A2(
																	$elm$html$Html$div,
																	_Utils_ap(
																		_List_fromArray(
																			[
																				A2($elm$html$Html$Attributes$style, 'height', nh),
																				A2($elm$html$Html$Attributes$style, 'width', nw),
																				A2($elm$html$Html$Attributes$style, 'background-color', 'rgba(100,100,255,0.1)'),
																				A2($elm$html$Html$Attributes$style, 'display', 'flex'),
																				A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
																				fontSize
																			]),
																		A2(
																			$author$project$Timeline$system(direction).dropEvents,
																			index,
																			itemId)),
																	_List_fromArray(
																		[
																			A2(
																			$elm$html$Html$div,
																			$author$project$Timeline$handleStyle,
																			_List_fromArray(
																				[
																					$elm$html$Html$text('⋮')
																				])),
																			A2(
																			$elm$html$Html$div,
																			_List_Nil,
																			$author$project$Timeline$groupLabelsToHtml(group.label))
																		]))
																])) : A2(
															$elm$html$Html$div,
															_Utils_ap(
																_List_fromArray(
																	[
																		A2(
																		$elm$html$Html$Attributes$style,
																		'height',
																		$elm$core$String$fromFloat(h) + 'px'),
																		A2(
																		$elm$html$Html$Attributes$style,
																		'width',
																		$elm$core$String$fromFloat(w) + 'px'),
																		A2($elm$html$Html$Attributes$style, 'background-color', '#aaa')
																	]),
																A2(
																	$author$project$Timeline$system(direction).dropEvents,
																	index,
																	itemId)),
															_List_Nil);
													} else {
														return A2(
															$elm$html$Html$div,
															_List_fromArray(
																[
																	A2(
																	$elm$html$Html$Attributes$style,
																	'height',
																	$elm$core$String$fromFloat(h) + 'px'),
																	A2(
																	$elm$html$Html$Attributes$style,
																	'width',
																	$elm$core$String$fromFloat(w) + 'px'),
																	$elm$html$Html$Attributes$class(
																	(!A2($elm$core$Basics$modBy, 2, index)) ? (_Utils_eq(direction, $author$project$Timeline$Models$Horizontal) ? 'group even' : 'group veven') : 'group odd'),
																	selected ? $elm$html$Html$Attributes$class('selected') : $elm$html$Html$Attributes$class(''),
																	$elm$html$Html$Attributes$id(itemId),
																	A2($elm$html$Html$Attributes$style, 'display', disp)
																]),
															_List_fromArray(
																[
																	A2(
																	$elm$html$Html$div,
																	canEditG ? _List_fromArray(
																		[
																			$elm$html$Html$Events$onDoubleClick(
																			$author$project$Timeline$DoubleClickGroup(group.id))
																		]) : _List_fromArray(
																		[
																			A2($elm$html$Html$Attributes$style, 'width', nw),
																			A2($elm$html$Html$Attributes$style, 'height', nh),
																			A2($elm$html$Html$Attributes$style, 'display', 'flex'),
																			A2($elm$html$Html$Attributes$style, 'align-items', 'center'),
																			A2($elm$html$Html$Attributes$style, 'white-space', 'nowrap'),
																			A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
																			fontSize,
																			$author$project$Timeline$Event$clickEvent(
																			function (_v4) {
																				var shiftKey = _v4.shiftKey;
																				return A2($author$project$Timeline$SelectGroup, group.id, shiftKey);
																			})
																		]),
																	_List_fromArray(
																		[
																			canSortG ? A2(
																			$elm$html$Html$div,
																			_Utils_ap(
																				$author$project$Timeline$handleStyle,
																				A2(
																					$author$project$Timeline$system(direction).dragEvents,
																					index,
																					itemId)),
																			_List_fromArray(
																				[
																					$elm$html$Html$text('⋮')
																				])) : A2(
																			$elm$html$Html$div,
																			_List_fromArray(
																				[
																					A2($elm$html$Html$Attributes$style, 'width', '10px')
																				]),
																			_List_fromArray(
																				[
																					$elm$html$Html$text('')
																				])),
																			function () {
																			if (mbedit.$ === 'Just') {
																				var str = mbedit.a;
																				return A2(
																					$elm$html$Html$input,
																					_List_fromArray(
																						[
																							$elm$html$Html$Attributes$value(str),
																							$elm$html$Html$Attributes$id(group.id + 'label'),
																							$elm$html$Html$Events$onBlur($author$project$Timeline$CancelGroupLabelEdit),
																							$elm$html$Html$Events$onInput(
																							$author$project$Timeline$UpdateGroupLabel(group.id)),
																							$author$project$Timeline$Event$keyEvent(
																							function (code) {
																								switch (code) {
																									case 13:
																										return $elm$json$Json$Decode$succeed(
																											A2($author$project$Timeline$ValidateGroupLabel, group.id, str));
																									case 27:
																										return $elm$json$Json$Decode$succeed($author$project$Timeline$CancelGroupLabelEdit);
																									default:
																										return $elm$json$Json$Decode$fail('');
																								}
																							})
																						]),
																					_List_Nil);
																			} else {
																				return A2(
																					$elm$html$Html$div,
																					_List_Nil,
																					$author$project$Timeline$groupLabelsToHtml(group.label));
																			}
																		}()
																		]))
																]));
													}
												}());
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $elm$virtual_dom$VirtualDom$keyedNode = function (tag) {
	return _VirtualDom_keyedNode(
		_VirtualDom_noScript(tag));
};
var $elm$html$Html$Keyed$node = $elm$virtual_dom$VirtualDom$keyedNode;
var $author$project$Timeline$drawGroups = F2(
	function (box, size) {
		var groups = box.groups;
		return A2(
			$elm$html$Html$div,
			_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? _List_fromArray(
				[
					A2(
					$elm$html$Html$Attributes$style,
					'top',
					$elm$core$String$fromInt(
						$elm$core$Basics$round(box.sectionOffsetY)) + 'px'),
					A2($elm$html$Html$Attributes$style, 'position', 'relative')
				]) : _List_fromArray(
				[
					A2(
					$elm$html$Html$Attributes$style,
					'left',
					$elm$core$String$fromInt(
						$elm$core$Basics$round(box.sectionOffsetY)) + 'px'),
					A2($elm$html$Html$Attributes$style, 'position', 'relative'),
					A2(
					$elm$html$Html$Attributes$style,
					'width',
					$elm$core$String$fromInt(
						$elm$core$Basics$ceiling(
							box.lineSize * $elm$core$List$sum(
								A2(
									$elm$core$List$map,
									function ($) {
										return $.size;
									},
									$elm$core$Dict$values(groups))))) + 'px')
				]),
			_List_fromArray(
				[
					A3(
					$elm$html$Html$node,
					'style',
					_List_Nil,
					_List_fromArray(
						[
							$elm$html$Html$text('.handle:hover {background-color:rgba(0,0,250,0.05);}')
						])),
					A3(
					$elm$html$Html$Keyed$node,
					'div',
					function () {
						if (_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal)) {
							var _v2 = box.interaction;
							if (_v2.$ === 'MouseOver') {
								return _List_Nil;
							} else {
								return _List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
									]);
							}
						} else {
							return _Utils_ap(
								function () {
									var _v3 = box.interaction;
									if (_v3.$ === 'MouseOver') {
										return _List_Nil;
									} else {
										return _List_fromArray(
											[
												A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
											]);
									}
								}(),
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'display', 'flex'),
										A2($elm$html$Html$Attributes$style, 'flex-wrap', 'wrap'),
										A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
									]));
						}
					}(),
					A2(
						$elm$core$List$indexedMap,
						F2(
							function (idx, _v0) {
								var id = _v0.a;
								var grp = _v0.b;
								return $author$project$Timeline$groupView(box.dnd)(box.direction)(box.lineSize)(size)(size)(
									function () {
										var _v1 = box.interaction;
										if (_v1.$ === 'EditGroupLabel') {
											var gid = _v1.a;
											var str = _v1.b;
											return _Utils_eq(grp.id, gid) ? $elm$core$Maybe$Just(str) : $elm$core$Maybe$Nothing;
										} else {
											return $elm$core$Maybe$Nothing;
										}
									}())(idx)(grp)(box.canEditGroups)(box.canSortGroups)(
									A2($author$project$Timeline$Models$isGroupSelected, id, box.selection));
							}),
						A2(
							$elm$core$List$sortBy,
							A2(
								$elm$core$Basics$composeR,
								$elm$core$Tuple$second,
								function ($) {
									return $.position;
								}),
							$elm$core$Dict$toList(groups)))),
					A5(
					$author$project$Timeline$ghostView,
					box.dnd,
					box.direction,
					size,
					$elm$core$Basics$round(box.lineSize),
					A2(
						$elm$core$List$sortBy,
						function ($) {
							return $.position;
						},
						$elm$core$Dict$values(groups)))
				]));
	});
var $author$project$Timeline$drawRowsBackground = F3(
	function (groups, lineSize, sel) {
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (j, _v0) {
						var id = _v0.a;
						var g = _v0.b;
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									(!A2($elm$core$Basics$modBy, 2, j)) ? $elm$html$Html$Attributes$class('group even') : $elm$html$Html$Attributes$class('group odd'),
									A2($author$project$Timeline$Models$isGroupSelected, id, sel) ? $elm$html$Html$Attributes$class('selected') : $elm$html$Html$Attributes$class(''),
									A2($elm$html$Html$Attributes$style, 'width', '100%'),
									A2(
									$elm$html$Html$Attributes$style,
									'height',
									$elm$core$String$fromFloat(lineSize * g.size) + 'px')
								]),
							_List_Nil);
					}),
				A2(
					$elm$core$List$sortBy,
					A2(
						$elm$core$Basics$composeR,
						$elm$core$Tuple$second,
						function ($) {
							return $.position;
						}),
					$elm$core$Dict$toList(groups))));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$getOffsets = F2(
	function (zone, posix) {
		var secondOffset = A2($elm$time$Time$toSecond, zone, posix) - A2($elm$time$Time$toSecond, $elm$time$Time$utc, posix);
		var rataDieOffset = $justinmimbs$date$Date$toRataDie(
			A2($justinmimbs$date$Date$fromPosix, zone, posix)) - $justinmimbs$date$Date$toRataDie(
			A2($justinmimbs$date$Date$fromPosix, $elm$time$Time$utc, posix));
		var minuteOffset = A2($elm$time$Time$toMinute, zone, posix) - A2($elm$time$Time$toMinute, $elm$time$Time$utc, posix);
		var hourOffset = A2($elm$time$Time$toHour, zone, posix) - A2($elm$time$Time$toHour, $elm$time$Time$utc, posix);
		var totalSecondsOffset = (((((rataDieOffset * 24) * 60) * 60) + ((hourOffset * 60) * 60)) + (minuteOffset * 60)) + secondOffset;
		return {
			hours: $elm$core$Basics$abs((totalSecondsOffset / 3600) | 0),
			minutes: $elm$core$Basics$abs(((totalSecondsOffset % 3600) / 60) | 0),
			offsetIsPositive: totalSecondsOffset >= 0,
			seconds: $elm$core$Basics$abs(totalSecondsOffset % 60)
		};
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$iso8601BasicFormatOffsets = function (offsets) {
	var showSeconds = !(!offsets.seconds);
	return $elm$core$String$concat(
		A2(
			$elm$core$List$map,
			$elm$core$Tuple$second,
			A2(
				$elm$core$List$filter,
				$elm$core$Tuple$first,
				_List_fromArray(
					[
						_Utils_Tuple2(offsets.offsetIsPositive, '+'),
						_Utils_Tuple2(
						true,
						A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(offsets.hours))),
						_Utils_Tuple2(
						true,
						A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(offsets.minutes))),
						_Utils_Tuple2(
						showSeconds,
						A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(offsets.seconds)))
					]))));
};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$foramtZoneIso8601Basic = F2(
	function (zone, posix) {
		return $enkidatron$elm_cldr$Cldr$Format$DateTime$iso8601BasicFormatOffsets(
			A2($enkidatron$elm_cldr$Cldr$Format$DateTime$getOffsets, zone, posix));
	});
var $enkidatron$elm_cldr$Internal$Format$number = F2(
	function (numberWidth, num) {
		if (numberWidth.$ === 'MinimumDigits') {
			return $elm$core$String$fromInt(num);
		} else {
			return A3(
				$elm$core$String$padLeft,
				2,
				_Utils_chr('0'),
				A2(
					$elm$core$String$right,
					2,
					$elm$core$String$fromInt(num)));
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatDay = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			A2($elm$time$Time$toDay, zone, posix));
	});
var $enkidatron$elm_cldr$Internal$Format$era = F2(
	function (eraNames, yr) {
		return (yr > 0) ? eraNames.ad : eraNames.bc;
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatEra = F3(
	function (eraNames, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$era,
			eraNames,
			A2($elm$time$Time$toYear, zone, posix));
	});
var $enkidatron$elm_cldr$Internal$DayPeriodRule$bestMatch = F2(
	function (ruleA, ruleB) {
		var _v0 = _Utils_Tuple2(ruleA, ruleB);
		if (_v0.a.$ === 'At') {
			if (_v0.b.$ === 'At') {
				var _v1 = _v0.a;
				var _v2 = _v0.b;
				return $elm$core$Basics$EQ;
			} else {
				var _v3 = _v0.a;
				var _v4 = _v0.b;
				return $elm$core$Basics$GT;
			}
		} else {
			if (_v0.b.$ === 'At') {
				var _v5 = _v0.a;
				var _v6 = _v0.b;
				return $elm$core$Basics$LT;
			} else {
				var _v7 = _v0.a;
				var _v8 = _v0.b;
				return $elm$core$Basics$EQ;
			}
		}
	});
var $enkidatron$elm_cldr$Internal$DayPeriodRule$dayPeriod = function (rule) {
	if (rule.$ === 'At') {
		var name = rule.b;
		return name;
	} else {
		var name = rule.c;
		return name;
	}
};
var $enkidatron$elm_cldr$Internal$Format$period = F2(
	function (periodNames, hour) {
		return (hour > 11) ? periodNames.pm : periodNames.am;
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatPeriod = F3(
	function (periodNames, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$period,
			periodNames,
			A2($elm$time$Time$toHour, zone, posix));
	});
var $enkidatron$elm_cldr$Internal$DayPeriodRule$compareHelper = F4(
	function (gran, _v0, zone, posix) {
		var hour = _v0.a;
		var minute = _v0.b;
		switch (gran.$) {
			case 'MatchHour':
				return A2(
					$elm$core$Basics$compare,
					A2($elm$time$Time$toHour, zone, posix),
					hour);
			case 'MatchMinute':
				return A2(
					$elm$core$Basics$compare,
					_Utils_Tuple2(
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix)),
					_Utils_Tuple2(hour, minute));
			default:
				return A2(
					$elm$core$Basics$compare,
					_Utils_Tuple3(
						A2($elm$time$Time$toHour, zone, posix),
						A2($elm$time$Time$toMinute, zone, posix),
						A2($elm$time$Time$toSecond, zone, posix)),
					_Utils_Tuple3(hour, minute, 0));
		}
	});
var $enkidatron$elm_cldr$Internal$DayPeriodRule$isMatch = F4(
	function (gran, zone, posix, rule) {
		if (rule.$ === 'At') {
			var at = rule.a;
			return _Utils_eq(
				A4($enkidatron$elm_cldr$Internal$DayPeriodRule$compareHelper, gran, at, zone, posix),
				$elm$core$Basics$EQ);
		} else {
			var from = rule.a;
			var before = rule.b;
			return (!_Utils_eq(
				A4($enkidatron$elm_cldr$Internal$DayPeriodRule$compareHelper, gran, from, zone, posix),
				$elm$core$Basics$LT)) && _Utils_eq(
				A4($enkidatron$elm_cldr$Internal$DayPeriodRule$compareHelper, gran, before, zone, posix),
				$elm$core$Basics$LT);
		}
	});
var $elm_community$list_extra$List$Extra$foldl1 = F2(
	function (func, list) {
		if (!list.b) {
			return $elm$core$Maybe$Nothing;
		} else {
			var x = list.a;
			var xs = list.b;
			return $elm$core$Maybe$Just(
				A3($elm$core$List$foldl, func, x, xs));
		}
	});
var $elm_community$list_extra$List$Extra$maximumWith = F2(
	function (comparator, list) {
		return A2(
			$elm_community$list_extra$List$Extra$foldl1,
			F2(
				function (x, y) {
					var _v0 = A2(comparator, x, y);
					if (_v0.$ === 'GT') {
						return x;
					} else {
						return y;
					}
				}),
			list);
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatFlexibleDayPeriod = F5(
	function (rules, granularity, periodNames, zone, posix) {
		return A2(
			$elm$core$Maybe$withDefault,
			A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatPeriod, periodNames, zone, posix),
			A2(
				$elm$core$Maybe$andThen,
				function (dayPeriod) {
					return A2($elm$core$Dict$get, dayPeriod, periodNames.dayPeriods);
				},
				A2(
					$elm$core$Maybe$map,
					$enkidatron$elm_cldr$Internal$DayPeriodRule$dayPeriod,
					A2(
						$elm_community$list_extra$List$Extra$maximumWith,
						$enkidatron$elm_cldr$Internal$DayPeriodRule$bestMatch,
						A2(
							$elm$core$List$filter,
							A3($enkidatron$elm_cldr$Internal$DayPeriodRule$isMatch, granularity, zone, posix),
							rules)))));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$doThreeDigitRounding = F2(
	function (decimals, millis) {
		return $elm$core$Basics$round(
			millis / A2($elm$core$Basics$pow, 10, 3 - decimals));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatFractionalSeconds = F3(
	function (decimals, zone, posix) {
		return $elm$core$String$fromInt(
			A2(
				$enkidatron$elm_cldr$Cldr$Format$DateTime$doThreeDigitRounding,
				decimals,
				A2($elm$time$Time$toMillis, zone, posix)));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour12From0 = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			A2(
				$elm$core$Basics$modBy,
				12,
				A2($elm$time$Time$toHour, zone, posix)));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$replaceZeroWith = F2(
	function (_default, num) {
		return (!num) ? _default : num;
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour12From1 = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			A2(
				$enkidatron$elm_cldr$Cldr$Format$DateTime$replaceZeroWith,
				12,
				A2(
					$elm$core$Basics$modBy,
					12,
					A2($elm$time$Time$toHour, zone, posix))));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour24From0 = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			A2($elm$time$Time$toHour, zone, posix));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour24From1 = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			A2(
				$enkidatron$elm_cldr$Cldr$Format$DateTime$replaceZeroWith,
				24,
				A2($elm$time$Time$toHour, zone, posix)));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatMinute = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			A2($elm$time$Time$toMinute, zone, posix));
	});
var $enkidatron$elm_cldr$Internal$Format$month = F2(
	function (monthNames, mnth) {
		switch (mnth.$) {
			case 'Jan':
				return monthNames.jan;
			case 'Feb':
				return monthNames.feb;
			case 'Mar':
				return monthNames.mar;
			case 'Apr':
				return monthNames.apr;
			case 'May':
				return monthNames.may;
			case 'Jun':
				return monthNames.jun;
			case 'Jul':
				return monthNames.jul;
			case 'Aug':
				return monthNames.aug;
			case 'Sep':
				return monthNames.sep;
			case 'Oct':
				return monthNames.oct;
			case 'Nov':
				return monthNames.nov;
			default:
				return monthNames.dec;
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatMonthHelper = F3(
	function (monthNames, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$month,
			monthNames,
			A2($elm$time$Time$toMonth, zone, posix));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatMonthNumberHelper = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			$justinmimbs$date$Date$monthToNumber(
				A2($elm$time$Time$toMonth, zone, posix)));
	});
var $enkidatron$elm_cldr$Internal$Structures$getPattern3 = F2(
	function (pattern, textWidth) {
		switch (textWidth.$) {
			case 'Abbreviated':
				return pattern.abbreviated;
			case 'Wide':
				return pattern.wide;
			default:
				return pattern.narrow;
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatTextWidthHelper = F3(
	function (formatFun, patterns, textWidth) {
		return formatFun(
			A2($enkidatron$elm_cldr$Internal$Structures$getPattern3, patterns, textWidth));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatMonth = F2(
	function (monthPattern3, width) {
		if (width.$ === 'Text') {
			var textWidth = width.a;
			return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatTextWidthHelper, $enkidatron$elm_cldr$Cldr$Format$DateTime$formatMonthHelper, monthPattern3, textWidth);
		} else {
			var numberWidth = width.a;
			return $enkidatron$elm_cldr$Cldr$Format$DateTime$formatMonthNumberHelper(numberWidth);
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatSecond = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			A2($elm$time$Time$toSecond, zone, posix));
	});
var $elm$time$Time$toWeekday = F2(
	function (zone, time) {
		var _v0 = A2(
			$elm$core$Basics$modBy,
			7,
			A2(
				$elm$time$Time$flooredDiv,
				A2($elm$time$Time$toAdjustedMinutes, zone, time),
				60 * 24));
		switch (_v0) {
			case 0:
				return $elm$time$Time$Thu;
			case 1:
				return $elm$time$Time$Fri;
			case 2:
				return $elm$time$Time$Sat;
			case 3:
				return $elm$time$Time$Sun;
			case 4:
				return $elm$time$Time$Mon;
			case 5:
				return $elm$time$Time$Tue;
			default:
				return $elm$time$Time$Wed;
		}
	});
var $enkidatron$elm_cldr$Internal$Format$weekday = F2(
	function (weekdayNames, wkday) {
		switch (wkday.$) {
			case 'Mon':
				return weekdayNames.mon;
			case 'Tue':
				return weekdayNames.tue;
			case 'Wed':
				return weekdayNames.wed;
			case 'Thu':
				return weekdayNames.thu;
			case 'Fri':
				return weekdayNames.fri;
			case 'Sat':
				return weekdayNames.sat;
			default:
				return weekdayNames.sun;
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatWeekday = F3(
	function (weekdayNames, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$weekday,
			weekdayNames,
			A2($elm$time$Time$toWeekday, zone, posix));
	});
var $enkidatron$elm_cldr$Internal$Format$year = F2(
	function (numberWidth, yr) {
		var yearNum = (yr > 0) ? yr : ((yr * (-1)) + 1);
		return A2($enkidatron$elm_cldr$Internal$Format$number, numberWidth, yearNum);
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatYear = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$year,
			numberWidth,
			A2($elm$time$Time$toYear, zone, posix));
	});
var $justinmimbs$date$Date$daysBeforeWeekYear = function (y) {
	var jan4 = $justinmimbs$date$Date$daysBeforeYear(y) + 4;
	return jan4 - $justinmimbs$date$Date$weekdayNumber(
		$justinmimbs$date$Date$RD(jan4));
};
var $justinmimbs$date$Date$numberToWeekday = function (wdn) {
	var _v0 = A2($elm$core$Basics$max, 1, wdn);
	switch (_v0) {
		case 1:
			return $elm$time$Time$Mon;
		case 2:
			return $elm$time$Time$Tue;
		case 3:
			return $elm$time$Time$Wed;
		case 4:
			return $elm$time$Time$Thu;
		case 5:
			return $elm$time$Time$Fri;
		case 6:
			return $elm$time$Time$Sat;
		default:
			return $elm$time$Time$Sun;
	}
};
var $justinmimbs$date$Date$toWeekDate = function (_v0) {
	var rd = _v0.a;
	var wdn = $justinmimbs$date$Date$weekdayNumber(
		$justinmimbs$date$Date$RD(rd));
	var wy = $justinmimbs$date$Date$year(
		$justinmimbs$date$Date$RD(rd + (4 - wdn)));
	var week1Day1 = $justinmimbs$date$Date$daysBeforeWeekYear(wy) + 1;
	return {
		weekNumber: 1 + (((rd - week1Day1) / 7) | 0),
		weekYear: wy,
		weekday: $justinmimbs$date$Date$numberToWeekday(wdn)
	};
};
var $justinmimbs$date$Date$weekYear = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toWeekDate,
	function ($) {
		return $.weekYear;
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatYearOfWeek = F3(
	function (numberWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$year,
			numberWidth,
			$justinmimbs$date$Date$weekYear(
				A2($justinmimbs$date$Date$fromPosix, zone, posix)));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$gmtFormatOffsets = F2(
	function (nameWidth, offsets) {
		var showSeconds = !(!offsets.seconds);
		var showMinutes = (!(!offsets.minutes)) || ((!(!offsets.seconds)) || ((!(!offsets.hours)) && _Utils_eq(nameWidth, $enkidatron$elm_cldr$Internal$FormatSymbols$Long)));
		var showHours = (!(!offsets.hours)) || ((!(!offsets.minutes)) || (!(!offsets.seconds)));
		return $elm$core$String$concat(
			A2(
				$elm$core$List$map,
				$elm$core$Tuple$second,
				A2(
					$elm$core$List$filter,
					$elm$core$Tuple$first,
					_List_fromArray(
						[
							_Utils_Tuple2(true, 'GMT'),
							_Utils_Tuple2(showHours && offsets.offsetIsPositive, '+'),
							_Utils_Tuple2(showHours && (!offsets.offsetIsPositive), '-'),
							_Utils_Tuple2(
							showHours,
							$elm$core$String$fromInt(offsets.hours)),
							_Utils_Tuple2(showMinutes, ':'),
							_Utils_Tuple2(
							showMinutes,
							A3(
								$elm$core$String$padLeft,
								2,
								_Utils_chr('0'),
								$elm$core$String$fromInt(offsets.minutes))),
							_Utils_Tuple2(showSeconds, ':'),
							_Utils_Tuple2(
							showSeconds,
							A3(
								$elm$core$String$padLeft,
								2,
								_Utils_chr('0'),
								$elm$core$String$fromInt(offsets.seconds)))
						]))));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneGmtFormat = F3(
	function (nameWidth, zone, posix) {
		return A2(
			$enkidatron$elm_cldr$Cldr$Format$DateTime$gmtFormatOffsets,
			nameWidth,
			A2($enkidatron$elm_cldr$Cldr$Format$DateTime$getOffsets, zone, posix));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneGenericNonLocationFormat = $enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneGmtFormat;
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneNonLocationFormat = $enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneGmtFormat;
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatSymbol = F5(
	function (granularity, internal, zone, posix, symbol) {
		if (symbol.$ === 'Date') {
			switch (symbol.a.$) {
				case 'Era':
					var textWidth = symbol.a.a;
					return A5($enkidatron$elm_cldr$Cldr$Format$DateTime$formatTextWidthHelper, $enkidatron$elm_cldr$Cldr$Format$DateTime$formatEra, internal.eraNames, textWidth, zone, posix);
				case 'Year':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatYear, numberWidth, zone, posix);
				case 'YearOfWeek':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatYearOfWeek, numberWidth, zone, posix);
				case 'Month':
					var width = symbol.a.a;
					return A4($enkidatron$elm_cldr$Cldr$Format$DateTime$formatMonth, internal.monthFormatNames, width, zone, posix);
				case 'MonthStandalone':
					var width = symbol.a.a;
					return A4($enkidatron$elm_cldr$Cldr$Format$DateTime$formatMonth, internal.monthStandaloneNames, width, zone, posix);
				case 'Weekday':
					var textWidth = symbol.a.a;
					return A5($enkidatron$elm_cldr$Cldr$Format$DateTime$formatTextWidthHelper, $enkidatron$elm_cldr$Cldr$Format$DateTime$formatWeekday, internal.weekdayFormatNames, textWidth, zone, posix);
				case 'WeekdayStandalone':
					var textWidth = symbol.a.a;
					return A5($enkidatron$elm_cldr$Cldr$Format$DateTime$formatTextWidthHelper, $enkidatron$elm_cldr$Cldr$Format$DateTime$formatWeekday, internal.weekdayStandaloneNames, textWidth, zone, posix);
				default:
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatDay, numberWidth, zone, posix);
			}
		} else {
			switch (symbol.a.$) {
				case 'Period':
					var textWidth = symbol.a.a;
					return A5($enkidatron$elm_cldr$Cldr$Format$DateTime$formatTextWidthHelper, $enkidatron$elm_cldr$Cldr$Format$DateTime$formatPeriod, internal.periodNames, textWidth, zone, posix);
				case 'FlexibleDayPeriod':
					var textWidth = symbol.a.a;
					return A5(
						$enkidatron$elm_cldr$Cldr$Format$DateTime$formatTextWidthHelper,
						A2($enkidatron$elm_cldr$Cldr$Format$DateTime$formatFlexibleDayPeriod, internal.dayPeriodRuleSet, granularity),
						internal.periodNames,
						textWidth,
						zone,
						posix);
				case 'Hour12From1':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour12From1, numberWidth, zone, posix);
				case 'Hour24From0':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour24From0, numberWidth, zone, posix);
				case 'Hour12From0':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour12From0, numberWidth, zone, posix);
				case 'Hour24From1':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatHour24From1, numberWidth, zone, posix);
				case 'Minute':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatMinute, numberWidth, zone, posix);
				case 'Second':
					var numberWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatSecond, numberWidth, zone, posix);
				case 'FractionalSeconds':
					var decimals = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatFractionalSeconds, decimals, zone, posix);
				case 'ZoneNonLocationFormat':
					var nameWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneNonLocationFormat, nameWidth, zone, posix);
				case 'ZoneIso8601Basic':
					var _v1 = symbol.a;
					return A2($enkidatron$elm_cldr$Cldr$Format$DateTime$foramtZoneIso8601Basic, zone, posix);
				case 'ZoneGmtFormat':
					var nameWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneGmtFormat, nameWidth, zone, posix);
				default:
					var nameWidth = symbol.a.a;
					return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$formatZoneGenericNonLocationFormat, nameWidth, zone, posix);
			}
		}
	});
var $enkidatron$elm_cldr$Internal$DayPeriodRule$MatchHour = {$: 'MatchHour'};
var $enkidatron$elm_cldr$Internal$DayPeriodRule$MatchMinute = {$: 'MatchMinute'};
var $enkidatron$elm_cldr$Internal$DayPeriodRule$MatchSecond = {$: 'MatchSecond'};
var $enkidatron$elm_cldr$Internal$DayPeriodRule$granularityHelper = F2(
	function (granSoFar, symbols) {
		granularityHelper:
		while (true) {
			_v0$3:
			while (true) {
				if (!symbols.b) {
					return granSoFar;
				} else {
					if ((symbols.a.$ === 'Symbol') && (symbols.a.a.$ === 'Time')) {
						switch (symbols.a.a.a.$) {
							case 'Minute':
								var rest = symbols.b;
								var $temp$granSoFar = $enkidatron$elm_cldr$Internal$DayPeriodRule$MatchMinute,
									$temp$symbols = rest;
								granSoFar = $temp$granSoFar;
								symbols = $temp$symbols;
								continue granularityHelper;
							case 'Second':
								return $enkidatron$elm_cldr$Internal$DayPeriodRule$MatchSecond;
							default:
								break _v0$3;
						}
					} else {
						break _v0$3;
					}
				}
			}
			var rest = symbols.b;
			var $temp$granSoFar = granSoFar,
				$temp$symbols = rest;
			granSoFar = $temp$granSoFar;
			symbols = $temp$symbols;
			continue granularityHelper;
		}
	});
var $enkidatron$elm_cldr$Internal$DayPeriodRule$granularity = $enkidatron$elm_cldr$Internal$DayPeriodRule$granularityHelper($enkidatron$elm_cldr$Internal$DayPeriodRule$MatchHour);
var $enkidatron$elm_cldr$Internal$FormatSymbols$unwrap = F2(
	function (fun, withLiteral) {
		if (withLiteral.$ === 'Literal') {
			var words = withLiteral.a;
			return words;
		} else {
			var a = withLiteral.a;
			return fun(a);
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatDateTime = F4(
	function (internal, symbols, zone, posix) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$map,
				$enkidatron$elm_cldr$Internal$FormatSymbols$unwrap(
					A4(
						$enkidatron$elm_cldr$Cldr$Format$DateTime$formatSymbol,
						$enkidatron$elm_cldr$Internal$DayPeriodRule$granularity(symbols),
						internal,
						zone,
						posix)),
				symbols));
	});
var $enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral = F2(
	function (fun, withLiteral) {
		if (withLiteral.$ === 'Literal') {
			var words = withLiteral.a;
			return $enkidatron$elm_cldr$Internal$FormatSymbols$Literal(words);
		} else {
			var a = withLiteral.a;
			return $enkidatron$elm_cldr$Internal$FormatSymbols$Symbol(
				fun(a));
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$expandDateTimeTokenToFormatSymbols = F3(
	function (dateSymbols, timeSymbols, token) {
		switch (token.$) {
			case 'DateGoesHere':
				return A2(
					$elm$core$List$map,
					$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral($enkidatron$elm_cldr$Internal$FormatSymbols$Date),
					dateSymbols);
			case 'TimeGoesHere':
				return A2(
					$elm$core$List$map,
					$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral($enkidatron$elm_cldr$Internal$FormatSymbols$Time),
					timeSymbols);
			default:
				var words = token.a;
				return _List_fromArray(
					[
						$enkidatron$elm_cldr$Internal$FormatSymbols$Literal(words)
					]);
		}
	});
var $enkidatron$elm_cldr$Internal$Options$rankNumber = function (opt) {
	if (opt.$ === 'TwoDigit') {
		return 0;
	} else {
		return 1;
	}
};
var $enkidatron$elm_cldr$Internal$Options$rankText = function (opt) {
	switch (opt.$) {
		case 'Narrow':
			return 2;
		case 'Short':
			return 3;
		default:
			return 4;
	}
};
var $enkidatron$elm_cldr$Internal$Options$rankNumberOrText = function (opt) {
	if (opt.$ === 'Text') {
		var textOpt = opt.a;
		return $enkidatron$elm_cldr$Internal$Options$rankText(textOpt);
	} else {
		var numOpt = opt.a;
		return $enkidatron$elm_cldr$Internal$Options$rankNumber(numOpt);
	}
};
var $enkidatron$elm_cldr$Internal$Options$additionPenalty = -20;
var $enkidatron$elm_cldr$Internal$Options$removalPenalty = -120;
var $enkidatron$elm_cldr$Internal$Options$longLessPenalty = -8;
var $enkidatron$elm_cldr$Internal$Options$longMorePenalty = -6;
var $enkidatron$elm_cldr$Internal$Options$shortLessPenalty = -6;
var $enkidatron$elm_cldr$Internal$Options$shortMorePenalty = -3;
var $enkidatron$elm_cldr$Internal$Options$scoreForDistance = function (distance) {
	return (distance >= 2) ? $enkidatron$elm_cldr$Internal$Options$longMorePenalty : ((distance === 1) ? $enkidatron$elm_cldr$Internal$Options$shortMorePenalty : ((!distance) ? 0 : (_Utils_eq(distance, -1) ? $enkidatron$elm_cldr$Internal$Options$shortLessPenalty : $enkidatron$elm_cldr$Internal$Options$longLessPenalty)));
};
var $enkidatron$elm_cldr$Internal$Options$score = F3(
	function (scoreFun, requested, candidate) {
		var _v0 = _Utils_Tuple2(requested, candidate);
		if (_v0.a.$ === 'Nothing') {
			if (_v0.b.$ === 'Nothing') {
				var _v1 = _v0.a;
				var _v2 = _v0.b;
				return 0;
			} else {
				var _v4 = _v0.a;
				return $enkidatron$elm_cldr$Internal$Options$additionPenalty;
			}
		} else {
			if (_v0.b.$ === 'Nothing') {
				var _v3 = _v0.b;
				return $enkidatron$elm_cldr$Internal$Options$removalPenalty;
			} else {
				var req = _v0.a.a;
				var can = _v0.b.a;
				return $enkidatron$elm_cldr$Internal$Options$scoreForDistance(
					scoreFun(can) - scoreFun(req));
			}
		}
	});
var $enkidatron$elm_cldr$Internal$Options$dateMatchScore = F2(
	function (requested, candidate) {
		return $elm$core$List$sum(
			_List_fromArray(
				[
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankText, requested.era, candidate.era),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankNumber, requested.year, candidate.year),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankNumberOrText, requested.month, candidate.month),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankNumber, requested.day, candidate.day),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankText, requested.weekday, candidate.weekday)
				]));
	});
var $enkidatron$elm_cldr$Internal$Options$rankFractionalDigits = function (digits) {
	switch (digits.$) {
		case 'One':
			return 1;
		case 'Two':
			return 2;
		default:
			return 3;
	}
};
var $enkidatron$elm_cldr$Internal$Options$rankName = function (name) {
	if (name.$ === 'ShortName') {
		return 4;
	} else {
		return 5;
	}
};
var $enkidatron$elm_cldr$Internal$Options$scoreHour12 = F2(
	function (requested, candidate) {
		var _v0 = _Utils_Tuple2(requested, candidate);
		if ((_v0.a.$ === 'Just') && (_v0.b.$ === 'Just')) {
			var req = _v0.a.a;
			var can = _v0.b.a;
			return (!_Utils_eq(req, can)) ? (-1000) : 0;
		} else {
			return 0;
		}
	});
var $enkidatron$elm_cldr$Internal$Options$timeMatchScore = F2(
	function (requested, candidate) {
		return $elm$core$List$sum(
			_List_fromArray(
				[
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankText, requested.period, candidate.period),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankNumber, requested.hour, candidate.hour),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankNumber, requested.minute, candidate.minute),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankNumber, requested.second, candidate.second),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankFractionalDigits, requested.fractionalSecondDigits, candidate.fractionalSecondDigits),
					A3($enkidatron$elm_cldr$Internal$Options$score, $enkidatron$elm_cldr$Internal$Options$rankName, requested.zone, candidate.zone),
					A2($enkidatron$elm_cldr$Internal$Options$scoreHour12, requested.hour12, candidate.hour12)
				]));
	});
var $enkidatron$elm_cldr$Internal$Options$dateTimeMatchScore = F2(
	function (requested, candidate) {
		return A2($enkidatron$elm_cldr$Internal$Options$dateMatchScore, requested, candidate) + A2($enkidatron$elm_cldr$Internal$Options$timeMatchScore, requested, candidate);
	});
var $enkidatron$elm_cldr$Internal$Options$dateToDateTime = function (opts) {
	return {day: opts.day, dayPeriod: $elm$core$Maybe$Nothing, era: opts.era, fractionalSecondDigits: $elm$core$Maybe$Nothing, hour: $elm$core$Maybe$Nothing, hour12: $elm$core$Maybe$Nothing, minute: $elm$core$Maybe$Nothing, month: opts.month, period: $elm$core$Maybe$Nothing, second: $elm$core$Maybe$Nothing, weekday: opts.weekday, year: opts.year, zone: $elm$core$Maybe$Nothing};
};
var $enkidatron$elm_cldr$Internal$Options$timeToDateTime = function (opts) {
	return {day: $elm$core$Maybe$Nothing, dayPeriod: opts.dayPeriod, era: $elm$core$Maybe$Nothing, fractionalSecondDigits: opts.fractionalSecondDigits, hour: opts.hour, hour12: opts.hour12, minute: opts.minute, month: $elm$core$Maybe$Nothing, period: opts.period, second: opts.second, weekday: $elm$core$Maybe$Nothing, year: $elm$core$Maybe$Nothing, zone: opts.zone};
};
var $enkidatron$elm_cldr$Internal$Locale$toDateTimeAvailableFormat = function (af) {
	switch (af.$) {
		case 'DateTimeAF':
			var format = af.a;
			return format;
		case 'TimeAF':
			var options = af.a.options;
			var formatSymbols = af.a.formatSymbols;
			return {
				formatSymbols: A2(
					$elm$core$List$map,
					$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral($enkidatron$elm_cldr$Internal$FormatSymbols$Time),
					formatSymbols),
				options: $enkidatron$elm_cldr$Internal$Options$timeToDateTime(options)
			};
		default:
			var options = af.a.options;
			var formatSymbols = af.a.formatSymbols;
			return {
				formatSymbols: A2(
					$elm$core$List$map,
					$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral($enkidatron$elm_cldr$Internal$FormatSymbols$Date),
					formatSymbols),
				options: $enkidatron$elm_cldr$Internal$Options$dateToDateTime(options)
			};
	}
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth = function (opt) {
	if (opt.$ === 'Numeric') {
		return $enkidatron$elm_cldr$Internal$FormatSymbols$MinimumDigits;
	} else {
		return $enkidatron$elm_cldr$Internal$FormatSymbols$TwoDigit;
	}
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$textWidth = function (opt) {
	switch (opt.$) {
		case 'Short':
			return $enkidatron$elm_cldr$Internal$FormatSymbols$Abbreviated;
		case 'Long':
			return $enkidatron$elm_cldr$Internal$FormatSymbols$Wide;
		default:
			return $enkidatron$elm_cldr$Internal$FormatSymbols$Narrow;
	}
};
var $elm_community$maybe_extra$Maybe$Extra$unwrap = F3(
	function (_default, f, m) {
		if (m.$ === 'Nothing') {
			return _default;
		} else {
			var a = m.a;
			return f(a);
		}
	});
var $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$width = function (opt) {
	if (opt.$ === 'Text') {
		var text = opt.a;
		return $enkidatron$elm_cldr$Internal$FormatSymbols$Text(
			$enkidatron$elm_cldr$Internal$FormatSymbols$Convert$textWidth(text));
	} else {
		var number = opt.a;
		return $enkidatron$elm_cldr$Internal$FormatSymbols$Number(
			$enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth(number));
	}
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Expand$date = F2(
	function (requested, symbol) {
		switch (symbol.$) {
			case 'Era':
				var era = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Era(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, era, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$textWidth, requested.era));
			case 'Year':
				var year = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Year(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, year, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth, requested.year));
			case 'YearOfWeek':
				var year = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$YearOfWeek(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, year, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth, requested.year));
			case 'Month':
				var month = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Month(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, month, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$width, requested.month));
			case 'MonthStandalone':
				var month = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$MonthStandalone(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, month, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$width, requested.month));
			case 'Weekday':
				var weekday = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Weekday(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, weekday, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$textWidth, requested.weekday));
			case 'WeekdayStandalone':
				var weekday = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$WeekdayStandalone(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, weekday, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$textWidth, requested.weekday));
			default:
				var day = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Day(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, day, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth, requested.day));
		}
	});
var $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$fractionalSeconds = function (opt) {
	switch (opt.$) {
		case 'One':
			return 1;
		case 'Two':
			return 2;
		default:
			return 3;
	}
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Expand$hourHelper = F4(
	function (requestedHourType, info, currentWidth, requested) {
		var width = A3($elm_community$maybe_extra$Maybe$Extra$unwrap, currentWidth, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth, requested);
		if (requestedHourType.$ === 'Just') {
			if (requestedHourType.a.$ === 'Hour12') {
				var _v1 = requestedHourType.a;
				return info.hour12(width);
			} else {
				var _v2 = requestedHourType.a;
				return info.hour24(width);
			}
		} else {
			return info._default(width);
		}
	});
var $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$nameWidth = function (opt) {
	if (opt.$ === 'LongName') {
		return $enkidatron$elm_cldr$Internal$FormatSymbols$Long;
	} else {
		return $enkidatron$elm_cldr$Internal$FormatSymbols$Short;
	}
};
var $enkidatron$elm_cldr$Internal$FormatSymbols$Expand$time = F2(
	function (requested, symbol) {
		switch (symbol.$) {
			case 'Period':
				var period = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Period(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, period, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$textWidth, requested.period));
			case 'FlexibleDayPeriod':
				var flexDayPeriod = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$FlexibleDayPeriod(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, flexDayPeriod, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$textWidth, requested.dayPeriod));
			case 'Hour12From1':
				var hour = symbol.a;
				return A4(
					$enkidatron$elm_cldr$Internal$FormatSymbols$Expand$hourHelper,
					requested.hour12,
					{_default: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From1, hour12: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From1, hour24: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From1},
					hour,
					requested.hour);
			case 'Hour24From0':
				var hour = symbol.a;
				return A4(
					$enkidatron$elm_cldr$Internal$FormatSymbols$Expand$hourHelper,
					requested.hour12,
					{_default: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From0, hour12: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From0, hour24: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From0},
					hour,
					requested.hour);
			case 'Hour12From0':
				var hour = symbol.a;
				return A4(
					$enkidatron$elm_cldr$Internal$FormatSymbols$Expand$hourHelper,
					requested.hour12,
					{_default: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From0, hour12: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From0, hour24: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From0},
					hour,
					requested.hour);
			case 'Hour24From1':
				var hour = symbol.a;
				return A4(
					$enkidatron$elm_cldr$Internal$FormatSymbols$Expand$hourHelper,
					requested.hour12,
					{_default: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From1, hour12: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour12From1, hour24: $enkidatron$elm_cldr$Internal$FormatSymbols$Hour24From1},
					hour,
					requested.hour);
			case 'Minute':
				var minute = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Minute(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, minute, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth, requested.minute));
			case 'Second':
				var second = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$Second(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, second, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$numberWidth, requested.second));
			case 'FractionalSeconds':
				var frac = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$FractionalSeconds(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, frac, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$fractionalSeconds, requested.fractionalSecondDigits));
			case 'ZoneNonLocationFormat':
				var zone = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneNonLocationFormat(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, zone, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$nameWidth, requested.zone));
			case 'ZoneIso8601Basic':
				return $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneIso8601Basic;
			case 'ZoneGmtFormat':
				var zone = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGmtFormat(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, zone, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$nameWidth, requested.zone));
			default:
				var zone = symbol.a;
				return $enkidatron$elm_cldr$Internal$FormatSymbols$ZoneGenericNonLocationFormat(
					A3($elm_community$maybe_extra$Maybe$Extra$unwrap, zone, $enkidatron$elm_cldr$Internal$FormatSymbols$Convert$nameWidth, requested.zone));
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$expandSymbol = F2(
	function (requested, symbol) {
		if (symbol.$ === 'Date') {
			var dateSymbol = symbol.a;
			return $enkidatron$elm_cldr$Internal$FormatSymbols$Date(
				A2($enkidatron$elm_cldr$Internal$FormatSymbols$Expand$date, requested, dateSymbol));
		} else {
			var timeSymbol = symbol.a;
			return $enkidatron$elm_cldr$Internal$FormatSymbols$Time(
				A2($enkidatron$elm_cldr$Internal$FormatSymbols$Expand$time, requested, timeSymbol));
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe = F2(
	function (left, right) {
		var _v0 = _Utils_Tuple2(left, right);
		_v0$2:
		while (true) {
			if (_v0.a.$ === 'Just') {
				if (_v0.b.$ === 'Just') {
					return true;
				} else {
					break _v0$2;
				}
			} else {
				if (_v0.b.$ === 'Nothing') {
					var _v1 = _v0.a;
					var _v2 = _v0.b;
					return true;
				} else {
					break _v0$2;
				}
			}
		}
		return false;
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$fieldsDoNotMatch = F2(
	function (a, b) {
		return !A2(
			$elm$core$List$all,
			$elm$core$Basics$identity,
			_List_fromArray(
				[
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.era, b.era),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.year, b.year),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.month, b.month),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.day, b.day),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.weekday, b.weekday),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.period, b.period),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.hour, b.hour),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.minute, b.minute),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.second, b.second),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.fractionalSecondDigits, b.fractionalSecondDigits),
					A2($enkidatron$elm_cldr$Cldr$Format$DateTime$matchMaybe, a.zone, b.zone)
				]));
	});
var $enkidatron$elm_cldr$Internal$Structures$getPattern = F2(
	function (patterns, length) {
		switch (length.$) {
			case 'Short':
				return patterns._short;
			case 'Medium':
				return patterns.medium;
			case 'Long':
				return patterns._long;
			default:
				return patterns.full;
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$FoundNeither = {$: 'FoundNeither'};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$FoundWeekday = {$: 'FoundWeekday'};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$FoundWideMonth = {$: 'FoundWideMonth'};
var $enkidatron$elm_cldr$Cldr$Format$Length$Full = {$: 'Full'};
var $enkidatron$elm_cldr$Cldr$Format$Length$Long = {$: 'Long'};
var $enkidatron$elm_cldr$Cldr$Format$Length$Medium = {$: 'Medium'};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$lengthForDatePatternHelper = F2(
	function (foundSoFar, symbols) {
		lengthForDatePatternHelper:
		while (true) {
			var _v0 = _Utils_Tuple2(foundSoFar, symbols);
			_v0$7:
			while (true) {
				if (!_v0.b.b) {
					if (_v0.a.$ === 'FoundWideMonth') {
						var _v1 = _v0.a;
						return $enkidatron$elm_cldr$Cldr$Format$Length$Long;
					} else {
						return $enkidatron$elm_cldr$Cldr$Format$Length$Short;
					}
				} else {
					if (_v0.b.a.$ === 'Symbol') {
						switch (_v0.b.a.a.$) {
							case 'Weekday':
								if (_v0.a.$ === 'FoundWideMonth') {
									var _v7 = _v0.a;
									var _v8 = _v0.b;
									return $enkidatron$elm_cldr$Cldr$Format$Length$Full;
								} else {
									var _v9 = _v0.b;
									var rest = _v9.b;
									var $temp$foundSoFar = $enkidatron$elm_cldr$Cldr$Format$DateTime$FoundWeekday,
										$temp$symbols = rest;
									foundSoFar = $temp$foundSoFar;
									symbols = $temp$symbols;
									continue lengthForDatePatternHelper;
								}
							case 'Month':
								if (_v0.b.a.a.a.$ === 'Text') {
									switch (_v0.b.a.a.a.a.$) {
										case 'Wide':
											if (_v0.a.$ === 'FoundWeekday') {
												var _v2 = _v0.a;
												var _v3 = _v0.b;
												var _v4 = _v3.a.a.a.a;
												return $enkidatron$elm_cldr$Cldr$Format$Length$Full;
											} else {
												var _v5 = _v0.b;
												var _v6 = _v5.a.a.a.a;
												var rest = _v5.b;
												var $temp$foundSoFar = $enkidatron$elm_cldr$Cldr$Format$DateTime$FoundWideMonth,
													$temp$symbols = rest;
												foundSoFar = $temp$foundSoFar;
												symbols = $temp$symbols;
												continue lengthForDatePatternHelper;
											}
										case 'Abbreviated':
											var _v10 = _v0.b;
											var _v11 = _v10.a.a.a.a;
											return $enkidatron$elm_cldr$Cldr$Format$Length$Medium;
										default:
											break _v0$7;
									}
								} else {
									break _v0$7;
								}
							default:
								break _v0$7;
						}
					} else {
						break _v0$7;
					}
				}
			}
			var _v12 = _v0.b;
			var rest = _v12.b;
			var $temp$foundSoFar = foundSoFar,
				$temp$symbols = rest;
			foundSoFar = $temp$foundSoFar;
			symbols = $temp$symbols;
			continue lengthForDatePatternHelper;
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$lengthForDatePattern = $enkidatron$elm_cldr$Cldr$Format$DateTime$lengthForDatePatternHelper($enkidatron$elm_cldr$Cldr$Format$DateTime$FoundNeither);
var $enkidatron$elm_cldr$Cldr$Format$DateTime$combineBestFormats = F3(
	function (internal, dateSymbols, timeSymbols) {
		return A2(
			$elm$core$List$concatMap,
			A2($enkidatron$elm_cldr$Cldr$Format$DateTime$expandDateTimeTokenToFormatSymbols, dateSymbols, timeSymbols),
			A2(
				$enkidatron$elm_cldr$Internal$Structures$getPattern,
				internal.dateTimeTokens,
				$enkidatron$elm_cldr$Cldr$Format$DateTime$lengthForDatePattern(dateSymbols)));
	});
var $enkidatron$elm_cldr$Internal$Locale$toDateAvailableFormat = function (af) {
	switch (af.$) {
		case 'DateAF':
			var format = af.a;
			return $elm$core$Maybe$Just(format);
		case 'DateTimeAF':
			return $elm$core$Maybe$Nothing;
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$findBestDateFormat = F2(
	function (internal, requestedDateOptions) {
		return A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.formatSymbols;
				},
				A2(
					$elm_community$list_extra$List$Extra$maximumBy,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.options;
						},
						$enkidatron$elm_cldr$Internal$Options$dateMatchScore(requestedDateOptions)),
					A2($elm$core$List$filterMap, $enkidatron$elm_cldr$Internal$Locale$toDateAvailableFormat, internal.availableFormats))));
	});
var $enkidatron$elm_cldr$Internal$Locale$toTimeAvailableFormat = function (af) {
	switch (af.$) {
		case 'TimeAF':
			var format = af.a;
			return $elm$core$Maybe$Just(format);
		case 'DateTimeAF':
			return $elm$core$Maybe$Nothing;
		default:
			return $elm$core$Maybe$Nothing;
	}
};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$findBestTimeFormat = F2(
	function (internal, requestedTimeOptions) {
		return A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				function ($) {
					return $.formatSymbols;
				},
				A2(
					$elm_community$list_extra$List$Extra$maximumBy,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.options;
						},
						$enkidatron$elm_cldr$Internal$Options$timeMatchScore(requestedTimeOptions)),
					A2($elm$core$List$filterMap, $enkidatron$elm_cldr$Internal$Locale$toTimeAvailableFormat, internal.availableFormats))));
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$findAndCombineBestFormats = F3(
	function (internal, dateOptions, timeOptions) {
		return A3(
			$enkidatron$elm_cldr$Cldr$Format$DateTime$combineBestFormats,
			internal,
			A2(
				$elm$core$List$map,
				$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral(
					$enkidatron$elm_cldr$Internal$FormatSymbols$Expand$date(dateOptions)),
				A2($enkidatron$elm_cldr$Cldr$Format$DateTime$findBestDateFormat, internal, dateOptions)),
			A2(
				$elm$core$List$map,
				$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral(
					$enkidatron$elm_cldr$Internal$FormatSymbols$Expand$time(timeOptions)),
				A2($enkidatron$elm_cldr$Cldr$Format$DateTime$findBestTimeFormat, internal, timeOptions)));
	});
var $enkidatron$elm_cldr$Internal$Options$splitOptions = function (fullOptions) {
	return ($enkidatron$elm_cldr$Internal$Options$hasDateFields(fullOptions) && $enkidatron$elm_cldr$Internal$Options$hasTimeFields(fullOptions)) ? $elm$core$Maybe$Just(
		_Utils_Tuple2(
			$enkidatron$elm_cldr$Internal$Options$dateSubset(fullOptions),
			$enkidatron$elm_cldr$Internal$Options$timeSubset(fullOptions))) : $elm$core$Maybe$Nothing;
};
var $enkidatron$elm_cldr$Cldr$Format$DateTime$useCombinedFormatsIfNecessary = F3(
	function (internal, requestedOptions, bestMatch) {
		var _v0 = _Utils_Tuple2(
			$enkidatron$elm_cldr$Internal$Options$splitOptions(requestedOptions),
			A2($enkidatron$elm_cldr$Cldr$Format$DateTime$fieldsDoNotMatch, requestedOptions, bestMatch.options));
		if ((_v0.a.$ === 'Just') && _v0.b) {
			var _v1 = _v0.a.a;
			var dateOptions = _v1.a;
			var timeOptions = _v1.b;
			return A3($enkidatron$elm_cldr$Cldr$Format$DateTime$findAndCombineBestFormats, internal, dateOptions, timeOptions);
		} else {
			return A2(
				$elm$core$List$map,
				$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral(
					$enkidatron$elm_cldr$Cldr$Format$DateTime$expandSymbol(requestedOptions)),
				bestMatch.formatSymbols);
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatSymbolsFromOptions = F2(
	function (internal, requestedOptions) {
		return A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				A2($enkidatron$elm_cldr$Cldr$Format$DateTime$useCombinedFormatsIfNecessary, internal, requestedOptions),
				A2(
					$elm_community$list_extra$List$Extra$maximumBy,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.options;
						},
						$enkidatron$elm_cldr$Internal$Options$dateTimeMatchScore(requestedOptions)),
					A2($elm$core$List$map, $enkidatron$elm_cldr$Internal$Locale$toDateTimeAvailableFormat, internal.availableFormats))));
	});
var $enkidatron$elm_cldr$Internal$Options$toHourType = function (hour12ByDefault) {
	return hour12ByDefault ? $enkidatron$elm_cldr$Cldr$Format$Options$Hour12 : $enkidatron$elm_cldr$Cldr$Format$Options$Hour24;
};
var $enkidatron$elm_cldr$Internal$Options$setLocaleDefaultHourType = F2(
	function (hour12ByDefault, opts) {
		return _Utils_update(
			opts,
			{
				hour12: $elm$core$Maybe$Just(
					A2(
						$elm$core$Maybe$withDefault,
						$enkidatron$elm_cldr$Internal$Options$toHourType(hour12ByDefault),
						opts.hour12))
			});
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$formatSymbolsForType = F2(
	function (internal, formatType) {
		switch (formatType.$) {
			case 'DateOnly':
				var length = formatType.a;
				return A2(
					$elm$core$List$map,
					$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral($enkidatron$elm_cldr$Internal$FormatSymbols$Date),
					A2($enkidatron$elm_cldr$Internal$Structures$getPattern, internal.dateSymbols, length));
			case 'TimeOnly':
				var length = formatType.a;
				return A2(
					$elm$core$List$map,
					$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral($enkidatron$elm_cldr$Internal$FormatSymbols$Time),
					A2($enkidatron$elm_cldr$Internal$Structures$getPattern, internal.timeSymbols, length));
			case 'DateAndTime':
				var date = formatType.a.date;
				var time = formatType.a.time;
				return A2(
					$elm$core$List$concatMap,
					A2(
						$enkidatron$elm_cldr$Cldr$Format$DateTime$expandDateTimeTokenToFormatSymbols,
						A2($enkidatron$elm_cldr$Internal$Structures$getPattern, internal.dateSymbols, date),
						A2($enkidatron$elm_cldr$Internal$Structures$getPattern, internal.timeSymbols, time)),
					A2($enkidatron$elm_cldr$Internal$Structures$getPattern, internal.dateTimeTokens, date));
			default:
				var options = formatType.a;
				return A2(
					$enkidatron$elm_cldr$Cldr$Format$DateTime$formatSymbolsFromOptions,
					internal,
					A2($enkidatron$elm_cldr$Internal$Options$setLocaleDefaultHourType, internal.hour12ByDefault, options));
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$DateTime$format = F2(
	function (formatType, _v0) {
		var internal = _v0.a;
		return A2(
			$enkidatron$elm_cldr$Cldr$Format$DateTime$formatDateTime,
			internal,
			A2($enkidatron$elm_cldr$Cldr$Format$DateTime$formatSymbolsForType, internal, formatType));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$WithOptions = function (a) {
	return {$: 'WithOptions', a: a};
};
var $justinmimbs$date$Date$day = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toCalendarDate,
	function ($) {
		return $.day;
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatDay = F2(
	function (numberWidth, date) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			$justinmimbs$date$Date$day(date));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatEraHelper = F2(
	function (eraNames, date) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$era,
			eraNames,
			$justinmimbs$date$Date$year(date));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatTextWidthHelper = F3(
	function (formatFun, patterns, textWidth) {
		return formatFun(
			A2($enkidatron$elm_cldr$Internal$Structures$getPattern3, patterns, textWidth));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatEra = $enkidatron$elm_cldr$Cldr$Format$Date$formatTextWidthHelper($enkidatron$elm_cldr$Cldr$Format$Date$formatEraHelper);
var $enkidatron$elm_cldr$Cldr$Format$Date$formatMonthHelper = F2(
	function (monthNames, date) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$month,
			monthNames,
			$justinmimbs$date$Date$month(date));
	});
var $justinmimbs$date$Date$monthNumber = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$month, $justinmimbs$date$Date$monthToNumber);
var $enkidatron$elm_cldr$Cldr$Format$Date$formatMonthNumberHelper = F2(
	function (numberWidth, date) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$number,
			numberWidth,
			$justinmimbs$date$Date$monthNumber(date));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatMonth = F2(
	function (monthPattern3, width) {
		if (width.$ === 'Text') {
			var textWidth = width.a;
			return A3($enkidatron$elm_cldr$Cldr$Format$Date$formatTextWidthHelper, $enkidatron$elm_cldr$Cldr$Format$Date$formatMonthHelper, monthPattern3, textWidth);
		} else {
			var numberWidth = width.a;
			return $enkidatron$elm_cldr$Cldr$Format$Date$formatMonthNumberHelper(numberWidth);
		}
	});
var $justinmimbs$date$Date$weekday = A2($elm$core$Basics$composeR, $justinmimbs$date$Date$weekdayNumber, $justinmimbs$date$Date$numberToWeekday);
var $enkidatron$elm_cldr$Cldr$Format$Date$formatWeekdayHelper = F2(
	function (weekdayNames, date) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$weekday,
			weekdayNames,
			$justinmimbs$date$Date$weekday(date));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatWeekday = $enkidatron$elm_cldr$Cldr$Format$Date$formatTextWidthHelper($enkidatron$elm_cldr$Cldr$Format$Date$formatWeekdayHelper);
var $enkidatron$elm_cldr$Cldr$Format$Date$formatYear = F2(
	function (numberWidth, date) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$year,
			numberWidth,
			$justinmimbs$date$Date$year(date));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatYearOfWeek = F2(
	function (numberWidth, date) {
		return A2(
			$enkidatron$elm_cldr$Internal$Format$year,
			numberWidth,
			$justinmimbs$date$Date$weekYear(date));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatSymbol = F3(
	function (internal, date, symbol) {
		switch (symbol.$) {
			case 'Era':
				var textWidth = symbol.a;
				return A3($enkidatron$elm_cldr$Cldr$Format$Date$formatEra, internal.eraNames, textWidth, date);
			case 'Year':
				var numberWidth = symbol.a;
				return A2($enkidatron$elm_cldr$Cldr$Format$Date$formatYear, numberWidth, date);
			case 'YearOfWeek':
				var numberWidth = symbol.a;
				return A2($enkidatron$elm_cldr$Cldr$Format$Date$formatYearOfWeek, numberWidth, date);
			case 'Month':
				var width = symbol.a;
				return A3($enkidatron$elm_cldr$Cldr$Format$Date$formatMonth, internal.monthFormatNames, width, date);
			case 'MonthStandalone':
				var width = symbol.a;
				return A3($enkidatron$elm_cldr$Cldr$Format$Date$formatMonth, internal.monthStandaloneNames, width, date);
			case 'Weekday':
				var textWidth = symbol.a;
				return A3($enkidatron$elm_cldr$Cldr$Format$Date$formatWeekday, internal.weekdayFormatNames, textWidth, date);
			case 'WeekdayStandalone':
				var textWidth = symbol.a;
				return A3($enkidatron$elm_cldr$Cldr$Format$Date$formatWeekday, internal.weekdayStandaloneNames, textWidth, date);
			default:
				var numberWidth = symbol.a;
				return A2($enkidatron$elm_cldr$Cldr$Format$Date$formatDay, numberWidth, date);
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatDate = F3(
	function (internal, symbols, date) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$map,
				$enkidatron$elm_cldr$Internal$FormatSymbols$unwrap(
					A2($enkidatron$elm_cldr$Cldr$Format$Date$formatSymbol, internal, date)),
				symbols));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$expandFormatDateSymbols = F2(
	function (requested, formatSymbols) {
		return A2(
			$elm$core$List$map,
			$enkidatron$elm_cldr$Internal$FormatSymbols$mapLiteral(
				$enkidatron$elm_cldr$Internal$FormatSymbols$Expand$date(requested)),
			formatSymbols);
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatDateSymbolsFromOptions = F2(
	function (internal, requestedOptions) {
		return A2(
			$elm$core$Maybe$withDefault,
			_List_Nil,
			A2(
				$elm$core$Maybe$map,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.formatSymbols;
					},
					$enkidatron$elm_cldr$Cldr$Format$Date$expandFormatDateSymbols(requestedOptions)),
				A2(
					$elm_community$list_extra$List$Extra$maximumBy,
					A2(
						$elm$core$Basics$composeR,
						function ($) {
							return $.options;
						},
						$enkidatron$elm_cldr$Internal$Options$dateMatchScore(requestedOptions)),
					A2($elm$core$List$filterMap, $enkidatron$elm_cldr$Internal$Locale$toDateAvailableFormat, internal.availableFormats))));
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$formatDateSymbolsForType = F2(
	function (internal, formatType) {
		if (formatType.$ === 'WithLength') {
			var length = formatType.a;
			return A2($enkidatron$elm_cldr$Internal$Structures$getPattern, internal.dateSymbols, length);
		} else {
			var options = formatType.a;
			return A2($enkidatron$elm_cldr$Cldr$Format$Date$formatDateSymbolsFromOptions, internal, options);
		}
	});
var $enkidatron$elm_cldr$Cldr$Format$Date$format = F2(
	function (formatType, _v0) {
		var internal = _v0.a;
		return A2(
			$enkidatron$elm_cldr$Cldr$Format$Date$formatDate,
			internal,
			A2($enkidatron$elm_cldr$Cldr$Format$Date$formatDateSymbolsForType, internal, formatType));
	});
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$OptionsBuilder = function (a) {
	return {$: 'OptionsBuilder', a: a};
};
var $enkidatron$elm_cldr$Cldr$Format$Options$defaultDateOptions = {day: $elm$core$Maybe$Nothing, era: $elm$core$Maybe$Nothing, month: $elm$core$Maybe$Nothing, weekday: $elm$core$Maybe$Nothing, year: $elm$core$Maybe$Nothing};
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate = $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$OptionsBuilder($enkidatron$elm_cldr$Cldr$Format$Options$defaultDateOptions);
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setDay = F2(
	function (opt, _v0) {
		var record = _v0.a;
		return $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$OptionsBuilder(
			_Utils_update(
				record,
				{
					day: $elm$core$Maybe$Just(opt)
				}));
	});
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthNumber = F2(
	function (opt, _v0) {
		var record = _v0.a;
		return $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$OptionsBuilder(
			_Utils_update(
				record,
				{
					month: $elm$core$Maybe$Just(
						$enkidatron$elm_cldr$Cldr$Format$Options$Number(opt))
				}));
	});
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthText = F2(
	function (opt, _v0) {
		var record = _v0.a;
		return $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$OptionsBuilder(
			_Utils_update(
				record,
				{
					month: $elm$core$Maybe$Just(
						$enkidatron$elm_cldr$Cldr$Format$Options$Text(opt))
				}));
	});
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setWeekday = F2(
	function (opt, _v0) {
		var record = _v0.a;
		return $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$OptionsBuilder(
			_Utils_update(
				record,
				{
					weekday: $elm$core$Maybe$Just(opt)
				}));
	});
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setYear = F2(
	function (opt, _v0) {
		var record = _v0.a;
		return $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$OptionsBuilder(
			_Utils_update(
				record,
				{
					year: $elm$core$Maybe$Just(opt)
				}));
	});
var $author$project$Moment$stringPadLeft20 = function (i) {
	return A3(
		$elm$core$String$padLeft,
		2,
		_Utils_chr('0'),
		$elm$core$String$fromInt(i));
};
var $author$project$Moment$stringTake = F2(
	function (n, i) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$take,
				n,
				A2(
					$elm$core$String$split,
					'',
					$elm$core$String$fromInt(i))));
	});
var $author$project$Moment$to12hour = function (n) {
	return (n === 12) ? 12 : A2($elm$core$Basics$modBy, 12, n);
};
var $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions = function (_v0) {
	var record = _v0.a;
	return record;
};
var $author$project$Moment$formatPart = F4(
	function (locale, zone, time, part) {
		switch (part) {
			case 'd':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toDay, zone, time));
			case 'dd':
				return $author$project$Moment$stringPadLeft20(
					A2($elm$time$Time$toDay, zone, time));
			case 'ddd':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setWeekday, $enkidatron$elm_cldr$Cldr$Format$Options$Short, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			case 'dddd':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setWeekday, $enkidatron$elm_cldr$Cldr$Format$Options$Long, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			case 'h':
				return $elm$core$String$fromInt(
					$author$project$Moment$to12hour(
						A2($elm$time$Time$toHour, zone, time)));
			case 'hh':
				return $author$project$Moment$stringPadLeft20(
					$author$project$Moment$to12hour(
						A2($elm$time$Time$toHour, zone, time)));
			case 'H':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toHour, zone, time));
			case 'HH':
				return $author$project$Moment$stringPadLeft20(
					A2($elm$time$Time$toHour, zone, time));
			case 'm':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toMinute, zone, time));
			case 'mm':
				return $author$project$Moment$stringPadLeft20(
					A2($elm$time$Time$toMinute, zone, time));
			case 'M':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthNumber, $enkidatron$elm_cldr$Cldr$Format$Options$Numeric, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			case 'MM':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthNumber, $enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			case 'MMM':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthText, $enkidatron$elm_cldr$Cldr$Format$Options$Short, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			case 'MMMM':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthText, $enkidatron$elm_cldr$Cldr$Format$Options$Long, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			case 's':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toSecond, zone, time));
			case 'ss':
				return $author$project$Moment$stringPadLeft20(
					A2($elm$time$Time$toSecond, zone, time));
			case 't':
				return (A2($elm$time$Time$toHour, zone, time) < 12) ? 'A' : 'P';
			case 'tt':
				return (A2($elm$time$Time$toHour, zone, time) < 12) ? 'AM' : 'PM';
			case 'yy':
				return $author$project$Moment$stringPadLeft20(
					A2(
						$elm$core$Basics$modBy,
						100,
						A2($elm$time$Time$toYear, zone, time)));
			case 'yyyy':
				return $elm$core$String$fromInt(
					A2($elm$time$Time$toYear, zone, time));
			case 'f':
				return A2(
					$author$project$Moment$stringTake,
					1,
					A2($elm$time$Time$toMillis, zone, time));
			case 'ff':
				return A2(
					$author$project$Moment$stringTake,
					2,
					A2($elm$time$Time$toMillis, zone, time));
			case 'fff':
				return A2(
					$author$project$Moment$stringTake,
					3,
					A2($elm$time$Time$toMillis, zone, time));
			case 'x':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2(
								$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setYear,
								$enkidatron$elm_cldr$Cldr$Format$Options$TwoDigit,
								A2(
									$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthNumber,
									$enkidatron$elm_cldr$Cldr$Format$Options$Numeric,
									A2(
										$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setDay,
										$enkidatron$elm_cldr$Cldr$Format$Options$Numeric,
										A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setWeekday, $enkidatron$elm_cldr$Cldr$Format$Options$Short, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate)))))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			case 'xx':
				return A3(
					$enkidatron$elm_cldr$Cldr$Format$Date$format,
					$enkidatron$elm_cldr$Cldr$Format$Date$WithOptions(
						$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$toOptions(
							A2(
								$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setYear,
								$enkidatron$elm_cldr$Cldr$Format$Options$Numeric,
								A2(
									$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setMonthText,
									$enkidatron$elm_cldr$Cldr$Format$Options$Short,
									A2(
										$enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setDay,
										$enkidatron$elm_cldr$Cldr$Format$Options$Numeric,
										A2($enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$setWeekday, $enkidatron$elm_cldr$Cldr$Format$Options$Short, $enkidatron$elm_cldr$Cldr$Format$OptionsBuilder$initDate)))))),
					locale,
					A2($justinmimbs$date$Date$fromPosix, zone, time));
			default:
				var a = part;
				return a;
		}
	});
var $author$project$Moment$group_ = F2(
	function (acc, fmt) {
		group_:
		while (true) {
			if (!fmt.b) {
				return $elm$core$List$reverse(acc);
			} else {
				var a = fmt.a;
				var bs = fmt.b;
				if (!acc.b) {
					var $temp$acc = _List_fromArray(
						[
							_List_fromArray(
							[a])
						]),
						$temp$fmt = bs;
					acc = $temp$acc;
					fmt = $temp$fmt;
					continue group_;
				} else {
					if (acc.a.b) {
						var _v2 = acc.a;
						var y = _v2.a;
						var ys = _v2.b;
						var xs = acc.b;
						if (_Utils_eq(a, y)) {
							var $temp$acc = A2(
								$elm$core$List$cons,
								A2(
									$elm$core$List$cons,
									a,
									A2($elm$core$List$cons, y, ys)),
								xs),
								$temp$fmt = bs;
							acc = $temp$acc;
							fmt = $temp$fmt;
							continue group_;
						} else {
							var $temp$acc = A2(
								$elm$core$List$cons,
								_List_fromArray(
									[a]),
								A2(
									$elm$core$List$cons,
									A2($elm$core$List$cons, y, ys),
									xs)),
								$temp$fmt = bs;
							acc = $temp$acc;
							fmt = $temp$fmt;
							continue group_;
						}
					} else {
						return acc;
					}
				}
			}
		}
	});
var $author$project$Moment$group = $author$project$Moment$group_(_List_Nil);
var $author$project$Moment$formatI18n = F4(
	function (lang, zone, fmt, time) {
		return $elm$core$String$concat(
			A2(
				$elm$core$List$map,
				A3($author$project$Moment$formatPart, lang, zone, time),
				A2(
					$elm$core$List$map,
					$elm$core$String$concat,
					$author$project$Moment$group(
						A2($elm$core$String$split, '', fmt)))));
	});
var $author$project$Timeline$Axis$DrawLine = F3(
	function (a, b, c) {
		return {$: 'DrawLine', a: a, b: b, c: c};
	});
var $author$project$Timeline$Axis$DrawText = F4(
	function (a, b, c, d) {
		return {$: 'DrawText', a: a, b: b, c: c, d: d};
	});
var $justinmimbs$time_extra$Time$Extra$Day = {$: 'Day'};
var $justinmimbs$time_extra$Time$Extra$Hour = {$: 'Hour'};
var $justinmimbs$time_extra$Time$Extra$Minute = {$: 'Minute'};
var $justinmimbs$time_extra$Time$Extra$Month = {$: 'Month'};
var $justinmimbs$time_extra$Time$Extra$Year = {$: 'Year'};
var $justinmimbs$date$Date$Days = {$: 'Days'};
var $justinmimbs$time_extra$Time$Extra$Millisecond = {$: 'Millisecond'};
var $justinmimbs$date$Date$Months = {$: 'Months'};
var $justinmimbs$date$Date$add = F3(
	function (unit, n, _v0) {
		var rd = _v0.a;
		switch (unit.$) {
			case 'Years':
				return A3(
					$justinmimbs$date$Date$add,
					$justinmimbs$date$Date$Months,
					12 * n,
					$justinmimbs$date$Date$RD(rd));
			case 'Months':
				var date = $justinmimbs$date$Date$toCalendarDate(
					$justinmimbs$date$Date$RD(rd));
				var wholeMonths = ((12 * (date.year - 1)) + ($justinmimbs$date$Date$monthToNumber(date.month) - 1)) + n;
				var m = $justinmimbs$date$Date$numberToMonth(
					A2($elm$core$Basics$modBy, 12, wholeMonths) + 1);
				var y = A2($justinmimbs$date$Date$floorDiv, wholeMonths, 12) + 1;
				return $justinmimbs$date$Date$RD(
					($justinmimbs$date$Date$daysBeforeYear(y) + A2($justinmimbs$date$Date$daysBeforeMonth, y, m)) + A2(
						$elm$core$Basics$min,
						date.day,
						A2($justinmimbs$date$Date$daysInMonth, y, m)));
			case 'Weeks':
				return $justinmimbs$date$Date$RD(rd + (7 * n));
			default:
				return $justinmimbs$date$Date$RD(rd + n);
		}
	});
var $justinmimbs$time_extra$Time$Extra$add = F4(
	function (interval, n, zone, posix) {
		add:
		while (true) {
			switch (interval.$) {
				case 'Millisecond':
					return $elm$time$Time$millisToPosix(
						$elm$time$Time$posixToMillis(posix) + n);
				case 'Second':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Millisecond,
						$temp$n = n * 1000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Minute':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Millisecond,
						$temp$n = n * 60000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Hour':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Millisecond,
						$temp$n = n * 3600000,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Day':
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							$justinmimbs$date$Date$Days,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 'Month':
					return A3(
						$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
						zone,
						A3(
							$justinmimbs$date$Date$add,
							$justinmimbs$date$Date$Months,
							n,
							A2($justinmimbs$date$Date$fromPosix, zone, posix)),
						A2($justinmimbs$time_extra$Time$Extra$timeFromPosix, zone, posix));
				case 'Year':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Month,
						$temp$n = n * 12,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Quarter':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Month,
						$temp$n = n * 3,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				case 'Week':
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Day,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
				default:
					var weekday = interval;
					var $temp$interval = $justinmimbs$time_extra$Time$Extra$Day,
						$temp$n = n * 7,
						$temp$zone = zone,
						$temp$posix = posix;
					interval = $temp$interval;
					n = $temp$n;
					zone = $temp$zone;
					posix = $temp$posix;
					continue add;
			}
		}
	});
var $author$project$Moment$add = F4(
	function (unit, plus, zone, date) {
		switch (unit.$) {
			case 'Year':
				return A4($justinmimbs$time_extra$Time$Extra$add, $justinmimbs$time_extra$Time$Extra$Year, plus, zone, date);
			case 'Month':
				return A4($justinmimbs$time_extra$Time$Extra$add, $justinmimbs$time_extra$Time$Extra$Month, plus, zone, date);
			case 'Week':
				return A4($justinmimbs$time_extra$Time$Extra$add, $justinmimbs$time_extra$Time$Extra$Week, plus, zone, date);
			case 'Day':
				return A4($justinmimbs$time_extra$Time$Extra$add, $justinmimbs$time_extra$Time$Extra$Day, plus, zone, date);
			case 'Hour':
				return A4($justinmimbs$time_extra$Time$Extra$add, $justinmimbs$time_extra$Time$Extra$Hour, plus, zone, date);
			default:
				return A4($justinmimbs$time_extra$Time$Extra$add, $justinmimbs$time_extra$Time$Extra$Minute, plus, zone, date);
		}
	});
var $elm$core$Array$fromListHelp = F3(
	function (list, nodeList, nodeListSize) {
		fromListHelp:
		while (true) {
			var _v0 = A2($elm$core$Elm$JsArray$initializeFromList, $elm$core$Array$branchFactor, list);
			var jsArray = _v0.a;
			var remainingItems = _v0.b;
			if (_Utils_cmp(
				$elm$core$Elm$JsArray$length(jsArray),
				$elm$core$Array$branchFactor) < 0) {
				return A2(
					$elm$core$Array$builderToArray,
					true,
					{nodeList: nodeList, nodeListSize: nodeListSize, tail: jsArray});
			} else {
				var $temp$list = remainingItems,
					$temp$nodeList = A2(
					$elm$core$List$cons,
					$elm$core$Array$Leaf(jsArray),
					nodeList),
					$temp$nodeListSize = nodeListSize + 1;
				list = $temp$list;
				nodeList = $temp$nodeList;
				nodeListSize = $temp$nodeListSize;
				continue fromListHelp;
			}
		}
	});
var $elm$core$Array$fromList = function (list) {
	if (!list.b) {
		return $elm$core$Array$empty;
	} else {
		return A3($elm$core$Array$fromListHelp, list, _List_Nil, 0);
	}
};
var $author$project$Timeline$Axis$axisWeight = $elm$core$Array$fromList(
	_List_fromArray(
		[0.5, 1, 2]));
var $author$project$Timeline$Axis$fontSize = $elm$core$Array$fromList(
	_List_fromArray(
		[9, 10, 11]));
var $justinmimbs$date$Date$ordinalDay = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toOrdinalDate,
	function ($) {
		return $.ordinalDay;
	});
var $justinmimbs$date$Date$padSignedInt = F2(
	function (length, _int) {
		return _Utils_ap(
			(_int < 0) ? '-' : '',
			A3(
				$elm$core$String$padLeft,
				length,
				_Utils_chr('0'),
				$elm$core$String$fromInt(
					$elm$core$Basics$abs(_int))));
	});
var $justinmimbs$date$Date$weekNumber = A2(
	$elm$core$Basics$composeR,
	$justinmimbs$date$Date$toWeekDate,
	function ($) {
		return $.weekNumber;
	});
var $justinmimbs$date$Date$ordinalSuffix = function (n) {
	var nn = A2($elm$core$Basics$modBy, 100, n);
	var _v0 = A2(
		$elm$core$Basics$min,
		(nn < 20) ? nn : A2($elm$core$Basics$modBy, 10, nn),
		4);
	switch (_v0) {
		case 1:
			return 'st';
		case 2:
			return 'nd';
		case 3:
			return 'rd';
		default:
			return 'th';
	}
};
var $justinmimbs$date$Date$withOrdinalSuffix = function (n) {
	return _Utils_ap(
		$elm$core$String$fromInt(n),
		$justinmimbs$date$Date$ordinalSuffix(n));
};
var $justinmimbs$date$Date$formatField = F4(
	function (language, _char, length, date) {
		switch (_char.valueOf()) {
			case 'y':
				if (length === 2) {
					return A2(
						$elm$core$String$right,
						2,
						A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$year(date))));
				} else {
					return A2(
						$justinmimbs$date$Date$padSignedInt,
						length,
						$justinmimbs$date$Date$year(date));
				}
			case 'Y':
				if (length === 2) {
					return A2(
						$elm$core$String$right,
						2,
						A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$weekYear(date))));
				} else {
					return A2(
						$justinmimbs$date$Date$padSignedInt,
						length,
						$justinmimbs$date$Date$weekYear(date));
				}
			case 'Q':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					case 2:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					case 3:
						return 'Q' + $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					case 4:
						return $justinmimbs$date$Date$withOrdinalSuffix(
							$justinmimbs$date$Date$quarter(date));
					case 5:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$quarter(date));
					default:
						return '';
				}
			case 'M':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$monthNumber(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$monthNumber(date)));
					case 3:
						return language.monthNameShort(
							$justinmimbs$date$Date$month(date));
					case 4:
						return language.monthName(
							$justinmimbs$date$Date$month(date));
					case 5:
						return A2(
							$elm$core$String$left,
							1,
							language.monthNameShort(
								$justinmimbs$date$Date$month(date)));
					default:
						return '';
				}
			case 'w':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$weekNumber(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$weekNumber(date)));
					default:
						return '';
				}
			case 'd':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$day(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$day(date)));
					case 3:
						return language.dayWithSuffix(
							$justinmimbs$date$Date$day(date));
					default:
						return '';
				}
			case 'D':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$ordinalDay(date));
					case 2:
						return A3(
							$elm$core$String$padLeft,
							2,
							_Utils_chr('0'),
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$ordinalDay(date)));
					case 3:
						return A3(
							$elm$core$String$padLeft,
							3,
							_Utils_chr('0'),
							$elm$core$String$fromInt(
								$justinmimbs$date$Date$ordinalDay(date)));
					default:
						return '';
				}
			case 'E':
				switch (length) {
					case 1:
						return language.weekdayNameShort(
							$justinmimbs$date$Date$weekday(date));
					case 2:
						return language.weekdayNameShort(
							$justinmimbs$date$Date$weekday(date));
					case 3:
						return language.weekdayNameShort(
							$justinmimbs$date$Date$weekday(date));
					case 4:
						return language.weekdayName(
							$justinmimbs$date$Date$weekday(date));
					case 5:
						return A2(
							$elm$core$String$left,
							1,
							language.weekdayNameShort(
								$justinmimbs$date$Date$weekday(date)));
					case 6:
						return A2(
							$elm$core$String$left,
							2,
							language.weekdayNameShort(
								$justinmimbs$date$Date$weekday(date)));
					default:
						return '';
				}
			case 'e':
				switch (length) {
					case 1:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$weekdayNumber(date));
					case 2:
						return $elm$core$String$fromInt(
							$justinmimbs$date$Date$weekdayNumber(date));
					default:
						return A4(
							$justinmimbs$date$Date$formatField,
							language,
							_Utils_chr('E'),
							length,
							date);
				}
			default:
				return '';
		}
	});
var $justinmimbs$date$Date$formatWithTokens = F3(
	function (language, tokens, date) {
		return A3(
			$elm$core$List$foldl,
			F2(
				function (token, formatted) {
					if (token.$ === 'Field') {
						var _char = token.a;
						var length = token.b;
						return _Utils_ap(
							A4($justinmimbs$date$Date$formatField, language, _char, length, date),
							formatted);
					} else {
						var str = token.a;
						return _Utils_ap(str, formatted);
					}
				}),
			'',
			tokens);
	});
var $justinmimbs$date$Pattern$Literal = function (a) {
	return {$: 'Literal', a: a};
};
var $elm$parser$Parser$token = function (str) {
	return $elm$parser$Parser$Advanced$token(
		$elm$parser$Parser$toToken(str));
};
var $justinmimbs$date$Pattern$escapedQuote = A2(
	$elm$parser$Parser$ignorer,
	$elm$parser$Parser$succeed(
		$justinmimbs$date$Pattern$Literal('\'')),
	$elm$parser$Parser$token('\'\''));
var $justinmimbs$date$Pattern$Field = F2(
	function (a, b) {
		return {$: 'Field', a: a, b: b};
	});
var $elm$parser$Parser$Advanced$getOffset = $elm$parser$Parser$Advanced$Parser(
	function (s) {
		return A3($elm$parser$Parser$Advanced$Good, false, s.offset, s);
	});
var $elm$parser$Parser$getOffset = $elm$parser$Parser$Advanced$getOffset;
var $justinmimbs$date$Pattern$fieldRepeats = function (str) {
	var _v0 = $elm$core$String$toList(str);
	if (_v0.b && (!_v0.b.b)) {
		var _char = _v0.a;
		return A2(
			$elm$parser$Parser$keeper,
			A2(
				$elm$parser$Parser$keeper,
				$elm$parser$Parser$succeed(
					F2(
						function (x, y) {
							return A2($justinmimbs$date$Pattern$Field, _char, 1 + (y - x));
						})),
				A2(
					$elm$parser$Parser$ignorer,
					$elm$parser$Parser$getOffset,
					$elm$parser$Parser$chompWhile(
						$elm$core$Basics$eq(_char)))),
			$elm$parser$Parser$getOffset);
	} else {
		return $elm$parser$Parser$problem('expected exactly one char');
	}
};
var $justinmimbs$date$Pattern$field = A2(
	$elm$parser$Parser$andThen,
	$justinmimbs$date$Pattern$fieldRepeats,
	$elm$parser$Parser$getChompedString(
		$elm$parser$Parser$chompIf($elm$core$Char$isAlpha)));
var $justinmimbs$date$Pattern$finalize = A2(
	$elm$core$List$foldl,
	F2(
		function (token, tokens) {
			var _v0 = _Utils_Tuple2(token, tokens);
			if (((_v0.a.$ === 'Literal') && _v0.b.b) && (_v0.b.a.$ === 'Literal')) {
				var x = _v0.a.a;
				var _v1 = _v0.b;
				var y = _v1.a.a;
				var rest = _v1.b;
				return A2(
					$elm$core$List$cons,
					$justinmimbs$date$Pattern$Literal(
						_Utils_ap(x, y)),
					rest);
			} else {
				return A2($elm$core$List$cons, token, tokens);
			}
		}),
	_List_Nil);
var $elm$parser$Parser$Advanced$lazy = function (thunk) {
	return $elm$parser$Parser$Advanced$Parser(
		function (s) {
			var _v0 = thunk(_Utils_Tuple0);
			var parse = _v0.a;
			return parse(s);
		});
};
var $elm$parser$Parser$lazy = $elm$parser$Parser$Advanced$lazy;
var $justinmimbs$date$Pattern$isLiteralChar = function (_char) {
	return (!_Utils_eq(
		_char,
		_Utils_chr('\''))) && (!$elm$core$Char$isAlpha(_char));
};
var $justinmimbs$date$Pattern$literal = A2(
	$elm$parser$Parser$map,
	$justinmimbs$date$Pattern$Literal,
	$elm$parser$Parser$getChompedString(
		A2(
			$elm$parser$Parser$ignorer,
			A2(
				$elm$parser$Parser$ignorer,
				$elm$parser$Parser$succeed(_Utils_Tuple0),
				$elm$parser$Parser$chompIf($justinmimbs$date$Pattern$isLiteralChar)),
			$elm$parser$Parser$chompWhile($justinmimbs$date$Pattern$isLiteralChar))));
var $justinmimbs$date$Pattern$quotedHelp = function (result) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$andThen,
				function (str) {
					return $justinmimbs$date$Pattern$quotedHelp(
						_Utils_ap(result, str));
				},
				$elm$parser$Parser$getChompedString(
					A2(
						$elm$parser$Parser$ignorer,
						A2(
							$elm$parser$Parser$ignorer,
							$elm$parser$Parser$succeed(_Utils_Tuple0),
							$elm$parser$Parser$chompIf(
								$elm$core$Basics$neq(
									_Utils_chr('\'')))),
						$elm$parser$Parser$chompWhile(
							$elm$core$Basics$neq(
								_Utils_chr('\'')))))),
				A2(
				$elm$parser$Parser$andThen,
				function (_v0) {
					return $justinmimbs$date$Pattern$quotedHelp(result + '\'');
				},
				$elm$parser$Parser$token('\'\'')),
				$elm$parser$Parser$succeed(result)
			]));
};
var $justinmimbs$date$Pattern$quoted = A2(
	$elm$parser$Parser$keeper,
	A2(
		$elm$parser$Parser$ignorer,
		$elm$parser$Parser$succeed($justinmimbs$date$Pattern$Literal),
		$elm$parser$Parser$chompIf(
			$elm$core$Basics$eq(
				_Utils_chr('\'')))),
	A2(
		$elm$parser$Parser$ignorer,
		$justinmimbs$date$Pattern$quotedHelp(''),
		$elm$parser$Parser$oneOf(
			_List_fromArray(
				[
					$elm$parser$Parser$chompIf(
					$elm$core$Basics$eq(
						_Utils_chr('\''))),
					$elm$parser$Parser$end
				]))));
var $justinmimbs$date$Pattern$patternHelp = function (tokens) {
	return $elm$parser$Parser$oneOf(
		_List_fromArray(
			[
				A2(
				$elm$parser$Parser$andThen,
				function (token) {
					return $justinmimbs$date$Pattern$patternHelp(
						A2($elm$core$List$cons, token, tokens));
				},
				$elm$parser$Parser$oneOf(
					_List_fromArray(
						[$justinmimbs$date$Pattern$field, $justinmimbs$date$Pattern$literal, $justinmimbs$date$Pattern$escapedQuote, $justinmimbs$date$Pattern$quoted]))),
				$elm$parser$Parser$lazy(
				function (_v0) {
					return $elm$parser$Parser$succeed(
						$justinmimbs$date$Pattern$finalize(tokens));
				})
			]));
};
var $elm$core$Result$withDefault = F2(
	function (def, result) {
		if (result.$ === 'Ok') {
			var a = result.a;
			return a;
		} else {
			return def;
		}
	});
var $justinmimbs$date$Pattern$fromString = function (str) {
	return A2(
		$elm$core$Result$withDefault,
		_List_fromArray(
			[
				$justinmimbs$date$Pattern$Literal(str)
			]),
		A2(
			$elm$parser$Parser$run,
			$justinmimbs$date$Pattern$patternHelp(_List_Nil),
			str));
};
var $justinmimbs$date$Date$formatWithLanguage = F2(
	function (language, pattern) {
		var tokens = $elm$core$List$reverse(
			$justinmimbs$date$Pattern$fromString(pattern));
		return A2($justinmimbs$date$Date$formatWithTokens, language, tokens);
	});
var $author$project$Moment$fr = {
	dayWithSuffix: function (day) {
		return (day === 1) ? 'er' : '';
	},
	monthName: function (month) {
		switch (month.$) {
			case 'Jan':
				return 'janvier';
			case 'Feb':
				return 'février';
			case 'Mar':
				return 'mars';
			case 'Apr':
				return 'avril';
			case 'May':
				return 'mai';
			case 'Jun':
				return 'juin';
			case 'Jul':
				return 'juillet';
			case 'Aug':
				return 'août';
			case 'Sep':
				return 'septembre';
			case 'Oct':
				return 'octobre';
			case 'Nov':
				return 'novembre';
			default:
				return 'décembre';
		}
	},
	monthNameShort: function (month) {
		switch (month.$) {
			case 'Jan':
				return 'jan';
			case 'Feb':
				return 'fév';
			case 'Mar':
				return 'mar';
			case 'Apr':
				return 'avr';
			case 'May':
				return 'mai';
			case 'Jun':
				return 'juin';
			case 'Jul':
				return 'juil';
			case 'Aug':
				return 'aoû';
			case 'Sep':
				return 'sep';
			case 'Oct':
				return 'oct';
			case 'Nov':
				return 'nov';
			default:
				return 'déc';
		}
	},
	weekdayName: function (weekday) {
		switch (weekday.$) {
			case 'Mon':
				return 'lundi';
			case 'Tue':
				return 'mardi';
			case 'Wed':
				return 'mercredi';
			case 'Thu':
				return 'jeudi';
			case 'Fri':
				return 'vendredi';
			case 'Sat':
				return 'samdi';
			default:
				return 'dimanche';
		}
	},
	weekdayNameShort: function (weekday) {
		switch (weekday.$) {
			case 'Mon':
				return 'lun';
			case 'Tue':
				return 'mar';
			case 'Wed':
				return 'mer';
			case 'Thu':
				return 'jeu';
			case 'Fri':
				return 'ven';
			case 'Sat':
				return 'sam';
			default:
				return 'dim';
		}
	}
};
var $elm$core$String$replace = F3(
	function (before, after, string) {
		return A2(
			$elm$core$String$join,
			after,
			A2($elm$core$String$split, before, string));
	});
var $author$project$Moment$format = F5(
	function (locale, zone, unit, mbformat, posix) {
		if (_Utils_eq(
			mbformat,
			$elm$core$Maybe$Just(''))) {
			return '';
		} else {
			switch (unit.$) {
				case 'Year':
					return A4(
						$author$project$Moment$formatI18n,
						locale,
						zone,
						A2($elm$core$Maybe$withDefault, 'yyyy', mbformat),
						posix);
				case 'Month':
					return A4(
						$author$project$Moment$formatI18n,
						locale,
						zone,
						A2($elm$core$Maybe$withDefault, 'MMMM', mbformat),
						posix);
				case 'Week':
					return _Utils_ap(
						_Utils_eq(mbformat, $elm$core$Maybe$Nothing) ? 'w' : '',
						A3(
							$justinmimbs$date$Date$formatWithLanguage,
							$author$project$Moment$fr,
							A2($elm$core$Maybe$withDefault, 'ww', mbformat),
							A2($justinmimbs$date$Date$fromPosix, zone, posix)));
				case 'Day':
					return A4(
						$author$project$Moment$formatI18n,
						locale,
						zone,
						A2($elm$core$Maybe$withDefault, 'ddd dd', mbformat),
						posix);
				case 'Hour':
					return A3(
						$elm$core$String$replace,
						':00',
						'',
						A4(
							$enkidatron$elm_cldr$Cldr$Format$DateTime$format,
							$enkidatron$elm_cldr$Cldr$Format$DateTime$TimeOnly($enkidatron$elm_cldr$Cldr$Format$Length$Short),
							locale,
							zone,
							posix));
				default:
					return A3(
						$elm$core$String$padLeft,
						2,
						_Utils_chr('0'),
						$elm$core$String$fromInt(
							A2($elm$time$Time$toMinute, zone, posix)));
			}
		}
	});
var $elm$core$Array$bitMask = 4294967295 >>> (32 - $elm$core$Array$shiftStep);
var $elm$core$Elm$JsArray$unsafeGet = _JsArray_unsafeGet;
var $elm$core$Array$getHelp = F3(
	function (shift, index, tree) {
		getHelp:
		while (true) {
			var pos = $elm$core$Array$bitMask & (index >>> shift);
			var _v0 = A2($elm$core$Elm$JsArray$unsafeGet, pos, tree);
			if (_v0.$ === 'SubTree') {
				var subTree = _v0.a;
				var $temp$shift = shift - $elm$core$Array$shiftStep,
					$temp$index = index,
					$temp$tree = subTree;
				shift = $temp$shift;
				index = $temp$index;
				tree = $temp$tree;
				continue getHelp;
			} else {
				var values = _v0.a;
				return A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, values);
			}
		}
	});
var $elm$core$Bitwise$shiftLeftBy = _Bitwise_shiftLeftBy;
var $elm$core$Array$tailIndex = function (len) {
	return (len >>> 5) << 5;
};
var $elm$core$Array$get = F2(
	function (index, _v0) {
		var len = _v0.a;
		var startShift = _v0.b;
		var tree = _v0.c;
		var tail = _v0.d;
		return ((index < 0) || (_Utils_cmp(index, len) > -1)) ? $elm$core$Maybe$Nothing : ((_Utils_cmp(
			index,
			$elm$core$Array$tailIndex(len)) > -1) ? $elm$core$Maybe$Just(
			A2($elm$core$Elm$JsArray$unsafeGet, $elm$core$Array$bitMask & index, tail)) : $elm$core$Maybe$Just(
			A3($elm$core$Array$getHelp, startShift, index, tree)));
	});
var $justinmimbs$time_extra$Time$Extra$partsToPosix = F2(
	function (zone, _v0) {
		var year = _v0.year;
		var month = _v0.month;
		var day = _v0.day;
		var hour = _v0.hour;
		var minute = _v0.minute;
		var second = _v0.second;
		var millisecond = _v0.millisecond;
		return A3(
			$justinmimbs$time_extra$Time$Extra$posixFromDateTime,
			zone,
			A3($justinmimbs$date$Date$fromCalendarDate, year, month, day),
			A4(
				$justinmimbs$time_extra$Time$Extra$timeFromClock,
				A3($elm$core$Basics$clamp, 0, 23, hour),
				A3($elm$core$Basics$clamp, 0, 59, minute),
				A3($elm$core$Basics$clamp, 0, 59, second),
				A3($elm$core$Basics$clamp, 0, 999, millisecond)));
	});
var $justinmimbs$time_extra$Time$Extra$posixToParts = F2(
	function (zone, posix) {
		return {
			day: A2($elm$time$Time$toDay, zone, posix),
			hour: A2($elm$time$Time$toHour, zone, posix),
			millisecond: A2($elm$time$Time$toMillis, zone, posix),
			minute: A2($elm$time$Time$toMinute, zone, posix),
			month: A2($elm$time$Time$toMonth, zone, posix),
			second: A2($elm$time$Time$toSecond, zone, posix),
			year: A2($elm$time$Time$toYear, zone, posix)
		};
	});
var $author$project$Moment$startOf = F4(
	function (unit, zone, delta, date) {
		switch (unit.$) {
			case 'Year':
				return A3($justinmimbs$time_extra$Time$Extra$floor, $justinmimbs$time_extra$Time$Extra$Year, zone, date);
			case 'Month':
				return A3($justinmimbs$time_extra$Time$Extra$floor, $justinmimbs$time_extra$Time$Extra$Month, zone, date);
			case 'Week':
				return A3($justinmimbs$time_extra$Time$Extra$floor, $justinmimbs$time_extra$Time$Extra$Week, zone, date);
			case 'Day':
				return A3($justinmimbs$time_extra$Time$Extra$floor, $justinmimbs$time_extra$Time$Extra$Day, zone, date);
			case 'Hour':
				var parts = A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, date);
				return A2(
					$justinmimbs$time_extra$Time$Extra$partsToPosix,
					zone,
					_Utils_update(
						parts,
						{
							hour: parts.hour - A2($elm$core$Basics$modBy, delta, parts.hour),
							millisecond: 0,
							minute: 0,
							second: 0
						}));
			default:
				var parts = A2($justinmimbs$time_extra$Time$Extra$posixToParts, zone, date);
				return A2(
					$justinmimbs$time_extra$Time$Extra$partsToPosix,
					zone,
					_Utils_update(
						parts,
						{
							millisecond: 0,
							minute: parts.minute - A2($elm$core$Basics$modBy, delta, parts.minute),
							second: 0
						}));
		}
	});
var $author$project$Timeline$Axis$axis = F6(
	function (dir, locale, zone, from, to, size) {
		var safe = _Utils_eq(dir, $author$project$Timeline$Models$Horizontal) ? 120 : 25;
		var duration = to - from;
		var fac = size / duration;
		var grid = $author$project$Timeline$Axis$getGrid(duration / size);
		return $elm$core$List$concat(
			A2(
				$elm$core$List$indexedMap,
				F2(
					function (wi, div) {
						var makei = F2(
							function (list, last) {
								makei:
								while (true) {
									var pos = ($elm$time$Time$posixToMillis(last) - from) * fac;
									var _new = A2(
										$elm$core$List$append,
										list,
										_List_fromArray(
											[
												A3(
												$author$project$Timeline$Axis$DrawLine,
												pos,
												wi,
												A2(
													$elm$core$Maybe$withDefault,
													0.05,
													A2($elm$core$Array$get, wi, $author$project$Timeline$Axis$axisWeight))),
												A4(
												$author$project$Timeline$Axis$DrawText,
												pos,
												wi,
												A2(
													$elm$core$Maybe$withDefault,
													10,
													A2($elm$core$Array$get, wi, $author$project$Timeline$Axis$fontSize)),
												A5(
													$author$project$Moment$format,
													locale,
													zone,
													div.unit,
													_Utils_eq(dir, $author$project$Timeline$Models$Horizontal) ? div.hformat : div.vformat,
													last))
											]));
									var date = A4($author$project$Moment$add, div.unit, div.delta, zone, last);
									if (_Utils_cmp(
										$elm$time$Time$posixToMillis(date),
										$elm$core$Basics$round(to)) < 0) {
										var $temp$list = _new,
											$temp$last = date;
										list = $temp$list;
										last = $temp$last;
										continue makei;
									} else {
										return _new;
									}
								}
							});
						var dt = $elm$time$Time$millisToPosix(
							$elm$core$Basics$round(from));
						var start = A4($author$project$Moment$startOf, div.unit, zone, div.delta, dt);
						var inslist = A2(makei, _List_Nil, start);
						if ((inslist.b && inslist.b.b) && (inslist.b.a.$ === 'DrawText')) {
							if ((inslist.b.b.b && inslist.b.b.b.b) && (inslist.b.b.b.a.$ === 'DrawText')) {
								var l1 = inslist.a;
								var _v1 = inslist.b;
								var _v2 = _v1.a;
								var timepos1 = _v2.a;
								var indexpos1 = _v2.b;
								var size1 = _v2.c;
								var label1 = _v2.d;
								var _v3 = _v1.b;
								var l2 = _v3.a;
								var _v4 = _v3.b;
								var t2 = _v4.a;
								var timepos2 = t2.a;
								var xs = _v4.b;
								return A2(
									$elm$core$List$cons,
									l1,
									A2(
										$elm$core$List$cons,
										A4(
											$author$project$Timeline$Axis$DrawText,
											A2(
												$elm$core$Basics$max,
												timepos1,
												A2(
													$elm$core$Basics$min,
													timepos2 - safe,
													A2($elm$core$Basics$max, 0, timepos1))),
											indexpos1,
											size1,
											label1),
										A2(
											$elm$core$List$cons,
											l2,
											A2($elm$core$List$cons, t2, xs))));
							} else {
								var l1 = inslist.a;
								var _v5 = inslist.b;
								var _v6 = _v5.a;
								var timepos1 = _v6.a;
								var indexpos1 = _v6.b;
								var size1 = _v6.c;
								var label1 = _v6.d;
								var xs = _v5.b;
								return A2(
									$elm$core$List$cons,
									l1,
									A2(
										$elm$core$List$cons,
										A4(
											$author$project$Timeline$Axis$DrawText,
											A2($elm$core$Basics$max, 0, timepos1),
											indexpos1,
											size1,
											label1),
										xs));
							}
						} else {
							return inslist;
						}
					}),
				grid.divs));
	});
var $elm$svg$Svg$g = $elm$svg$Svg$trustedNode('g');
var $elm$svg$Svg$line = $elm$svg$Svg$trustedNode('line');
var $elm$svg$Svg$Attributes$strokeWidth = _VirtualDom_attribute('stroke-width');
var $elm$svg$Svg$Attributes$style = _VirtualDom_attribute('style');
var $elm$svg$Svg$text = $elm$virtual_dom$VirtualDom$text;
var $elm$svg$Svg$text_ = $elm$svg$Svg$trustedNode('text');
var $elm$svg$Svg$Attributes$x = _VirtualDom_attribute('x');
var $elm$svg$Svg$Attributes$x1 = _VirtualDom_attribute('x1');
var $elm$svg$Svg$Attributes$x2 = _VirtualDom_attribute('x2');
var $elm$svg$Svg$Attributes$y = _VirtualDom_attribute('y');
var $elm$svg$Svg$Attributes$y1 = _VirtualDom_attribute('y1');
var $elm$svg$Svg$Attributes$y2 = _VirtualDom_attribute('y2');
var $author$project$Timeline$Axis$hview = F8(
	function (attrs, locale, zone, displayAxis, width, height, from, to) {
		var instructions = A6($author$project$Timeline$Axis$axis, $author$project$Timeline$Models$Horizontal, locale, zone, from, to, width);
		return A2(
			$elm$svg$Svg$svg,
			_Utils_ap(
				attrs,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$width(
						$elm$core$String$fromInt(width)),
						$elm$svg$Svg$Attributes$height(
						$elm$core$String$fromInt(height)),
						$elm$svg$Svg$Attributes$viewBox(
						'0 0 ' + ($elm$core$String$fromInt(width) + (' ' + $elm$core$String$fromInt(height)))),
						$elm$svg$Svg$Attributes$style(
						'position:absolute;top:0px;left:0px;width:' + ($elm$core$String$fromInt(width) + ('px;height:' + ($elm$core$String$fromInt(height) + 'px;user-select: none;'))))
					])),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$g,
					_List_Nil,
					A2(
						$elm$core$List$map,
						function (ins) {
							if (ins.$ === 'DrawLine') {
								var left = ins.a;
								var top = ins.b;
								var weight = ins.c;
								return A2(
									$elm$svg$Svg$line,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$x1(
											$elm$core$String$fromFloat(left)),
											$elm$svg$Svg$Attributes$x2(
											$elm$core$String$fromFloat(left)),
											$elm$svg$Svg$Attributes$y1(
											$elm$core$String$fromFloat(
												displayAxis ? (((-15) * top) + 35) : 0)),
											$elm$svg$Svg$Attributes$y2(
											$elm$core$String$fromInt(height)),
											$elm$svg$Svg$Attributes$class(
											'axis-line-' + $elm$core$String$fromInt(
												$elm$core$Basics$round(weight * 10))),
											$elm$svg$Svg$Attributes$strokeWidth('1')
										]),
									_List_Nil);
							} else {
								var left = ins.a;
								var top = ins.b;
								var size = ins.c;
								var label = ins.d;
								return displayAxis ? A2(
									$elm$svg$Svg$text_,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$x(
											$elm$core$String$fromFloat(2 + left)),
											$elm$svg$Svg$Attributes$y(
											$elm$core$String$fromFloat(((-15) * top) + 45)),
											$elm$svg$Svg$Attributes$style(
											'font-size:' + ($elm$core$String$fromFloat(size) + 'px')),
											$elm$svg$Svg$Attributes$class('axis-text')
										]),
									_List_fromArray(
										[
											$elm$svg$Svg$text(label)
										])) : A2($elm$svg$Svg$g, _List_Nil, _List_Nil);
							}
						},
						instructions))
				]));
	});
var $elm$virtual_dom$VirtualDom$lazy2 = _VirtualDom_lazy2;
var $elm$html$Html$Lazy$lazy2 = $elm$virtual_dom$VirtualDom$lazy2;
var $elm$virtual_dom$VirtualDom$lazy8 = _VirtualDom_lazy8;
var $elm$html$Html$Lazy$lazy8 = $elm$virtual_dom$VirtualDom$lazy8;
var $author$project$Timeline$Event$mouseUpEvent = function (message) {
	return A2(
		$elm$html$Html$Events$custom,
		'mouseup',
		$author$project$Timeline$Event$preventDefault(
			A2($elm$json$Json$Decode$map, message, $author$project$Timeline$Event$eventDecoder)));
};
var $author$project$Timeline$SectionsDown = function (a) {
	return {$: 'SectionsDown', a: a};
};
var $author$project$Timeline$SectionsOut = {$: 'SectionsOut'};
var $author$project$Timeline$SectionsOver = function (a) {
	return {$: 'SectionsOver', a: a};
};
var $elm_explorations$webgl$WebGL$Internal$Alpha = function (a) {
	return {$: 'Alpha', a: a};
};
var $elm_explorations$webgl$WebGL$alpha = $elm_explorations$webgl$WebGL$Internal$Alpha;
var $elm_explorations$webgl$WebGL$Internal$Antialias = {$: 'Antialias'};
var $elm_explorations$webgl$WebGL$antialias = $elm_explorations$webgl$WebGL$Internal$Antialias;
var $elm_explorations$webgl$WebGL$Internal$DepthTest = F4(
	function (a, b, c, d) {
		return {$: 'DepthTest', a: a, b: b, c: c, d: d};
	});
var $elm_explorations$webgl$WebGL$Settings$DepthTest$less = function (_v0) {
	var write = _v0.write;
	var near = _v0.near;
	var far = _v0.far;
	return A4($elm_explorations$webgl$WebGL$Internal$DepthTest, 513, write, near, far);
};
var $elm_explorations$webgl$WebGL$Settings$DepthTest$default = $elm_explorations$webgl$WebGL$Settings$DepthTest$less(
	{far: 1, near: 0, write: true});
var $elm_explorations$webgl$WebGL$Internal$enableOption = F2(
	function (ctx, option) {
		switch (option.$) {
			case 'Alpha':
				return A2(_WebGL_enableAlpha, ctx, option);
			case 'Depth':
				return A2(_WebGL_enableDepth, ctx, option);
			case 'Stencil':
				return A2(_WebGL_enableStencil, ctx, option);
			case 'Antialias':
				return A2(_WebGL_enableAntialias, ctx, option);
			case 'ClearColor':
				return A2(_WebGL_enableClearColor, ctx, option);
			default:
				return A2(_WebGL_enablePreserveDrawingBuffer, ctx, option);
		}
	});
var $elm_explorations$webgl$WebGL$Internal$enableSetting = F2(
	function (cache, setting) {
		switch (setting.$) {
			case 'Blend':
				return A2(_WebGL_enableBlend, cache, setting);
			case 'DepthTest':
				return A2(_WebGL_enableDepthTest, cache, setting);
			case 'StencilTest':
				return A2(_WebGL_enableStencilTest, cache, setting);
			case 'Scissor':
				return A2(_WebGL_enableScissor, cache, setting);
			case 'ColorMask':
				return A2(_WebGL_enableColorMask, cache, setting);
			case 'CullFace':
				return A2(_WebGL_enableCullFace, cache, setting);
			case 'PolygonOffset':
				return A2(_WebGL_enablePolygonOffset, cache, setting);
			case 'SampleCoverage':
				return A2(_WebGL_enableSampleCoverage, cache, setting);
			default:
				return _WebGL_enableSampleAlphaToCoverage(cache);
		}
	});
var $elm_explorations$webgl$WebGL$entityWith = _WebGL_entity;
var $elm_explorations$webgl$WebGL$entity = $elm_explorations$webgl$WebGL$entityWith(
	_List_fromArray(
		[$elm_explorations$webgl$WebGL$Settings$DepthTest$default]));
var $author$project$Timeline$fragmentShaderHoriz = {
	src: '\n        precision lowp float;\n        uniform vec3 iResolution;\n        varying vec4 vcolor;\n        varying vec4 bcolor;\n        varying float borderSize;\n        varying vec2 location;\n        varying vec2 size;\n        varying float hasPoint;\n        \n\n\n\n        // from https://iquilezles.org/articles/distfunctions\n        // additional thanks to iq for optimizing my conditional block for individual corner radii!\n        float roundedBoxSDF(vec2 CenterPosition, vec2 Size, vec4 Radius) {\n            Radius.xy = (CenterPosition.x>0.0)?Radius.xy : Radius.zw;\n            Radius.x  = (CenterPosition.y>0.0)?Radius.x  : Radius.y;\n            \n            vec2 q = abs(CenterPosition)-Size+Radius.x;\n            return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - Radius.x;\n        }\n        void main( ) {\n\n            // How soft the edges should be (in pixels). Higher values could be used to simulate a drop shadow.\n            float edgeSoftness  = 1.0;\n            \n            // The radius of the corners (in pixels) clockwise starting in the top left.\n            vec4 radius =  (borderSize == 128.0) ? vec4(0.0)\n                    : (hasPoint > 0.0 ? vec4(5.0, 4.0, 5.0, 5.0) : vec4(5.0));\n            \n            // Calculate distance to edge.   \n            vec2 center = gl_FragCoord.xy - ((location+vec2(1.0)) * iResolution.xy/2.0);\n            vec2 sizepix = (size * iResolution.xy / 2.0 - vec2(0.0, 3.0));\n            float distance = roundedBoxSDF( center, sizepix, radius);\n            \n            // Smooth the result (free antialiasing).\n            float smoothedAlpha =  1.0-smoothstep(0.0, edgeSoftness,distance);\n            \n            // Border.  \n            float borderThickness = (borderSize == 128.0) ? 1.0 : borderSize;\n            float borderSoftness  = 1.0;\n            float borderAlpha     = 1.0-smoothstep(borderThickness - borderSoftness, borderThickness, abs(distance));\n\n            // has point\n            float pointSize = 2.5;\n            float pointSoftness = 1.0;\n            float pointDistance = (hasPoint > 0.0)  ?  length(sizepix+vec2(-center.x, center.y)-2.5) : pointSize;\n            float pointAlpha = 1.0 - smoothstep(pointSize - pointSoftness, pointSize, abs(pointDistance));\n            vec4 pointColor = (vcolor.a == 1.0) ? bcolor : vec4(0.0, 0.0, 0.0, 1.0);\n\n            // Colors\n            vec4 rectColor =  vcolor;\n            vec4 borderColor = (borderSize == 128.0) ? vec4(0.4,0.4,0.4,1.0): bcolor;\n            vec4 bgColor = vec4(1.0,1.0,1.0,0.0);\n            \n            vec4 rgba = mix(bgColor, mix(mix(rectColor, pointColor, pointAlpha), borderColor, borderAlpha), smoothedAlpha);\n            float a = rgba.a;\n            gl_FragColor = vec4(rgba.r * a, rgba.g * a, rgba.b * a, a);\n        }\n   \n\n\n    ',
	attributes: {},
	uniforms: {iResolution: 'iResolution'}
};
var $author$project$Timeline$fragmentShaderVert = {
	src: '\n        precision lowp float;\n        uniform vec3 iResolution;\n        varying vec4 vcolor;\n        varying vec4 bcolor;\n        varying float borderSize;\n        varying vec2 location;\n        varying vec2 size;\n        varying float hasPoint;\n        \n\n\n\n        // from https://iquilezles.org/articles/distfunctions\n        // additional thanks to iq for optimizing my conditional block for individual corner radii!\n        float roundedBoxSDF(vec2 CenterPosition, vec2 Size, vec4 Radius) {\n            Radius.xy = (CenterPosition.x>0.0)?Radius.xy : Radius.zw;\n            Radius.x  = (CenterPosition.y>0.0)?Radius.x  : Radius.y;\n            \n            vec2 q = abs(CenterPosition)-Size+Radius.x;\n            return min(max(q.x,q.y),0.0) + length(max(q,0.0)) - Radius.x;\n        }\n        void main( ) {\n\n            // How soft the edges should be (in pixels). Higher values could be used to simulate a drop shadow.\n            float edgeSoftness  = 1.0;\n            \n            // The radius of the corners (in pixels) clockwise starting in the top left.\n            vec4 radius =  (borderSize == 128.0) ? vec4(0.0)\n                    : (hasPoint > 0.0 ? vec4(5.0, 4.0, 5.0, 5.0) : vec4(5.0));\n            \n            // Calculate distance to edge.   \n            vec2 center = gl_FragCoord.xy - ((location+vec2(1.0)) * iResolution.xy/2.0);\n            vec2 sizepix = size * iResolution.xy / 2.0 - vec2(3.0, 0.0);\n            float distance = roundedBoxSDF( center, sizepix, radius);\n            \n            // Smooth the result (free antialiasing).\n            float smoothedAlpha =  1.0-smoothstep(0.0, edgeSoftness,distance);\n            \n            // Border.  \n            float borderThickness = (borderSize == 128.0) ? 1.0 : borderSize;\n            float borderSoftness  = 1.0;\n            float borderAlpha     = 1.0-smoothstep(borderThickness - borderSoftness, borderThickness, abs(distance));\n\n            // has point\n            float pointSize = 2.5;\n            float pointSoftness = 1.0;\n            float pointDistance = (hasPoint > 0.0) ?  length(sizepix+vec2(-center.x, center.y)-2.5) : pointSize;\n            float pointAlpha = 1.0 - smoothstep(pointSize - pointSoftness, pointSize, abs(pointDistance));\n            vec4 pointColor = (vcolor.a == 1.0) ? bcolor : vec4(0.0, 0.0, 0.0, 1.0);\n\n            // Colors\n            vec4 rectColor =  vcolor;\n            vec4 borderColor = (borderSize == 128.0) ? vec4(0.4,0.4,0.4,1.4): bcolor;\n            vec4 bgColor = vec4(1.0,1.0,1.0,0.0);\n            \n            vec4 rgba = mix(bgColor, mix(mix(rectColor, pointColor, pointAlpha), borderColor, borderAlpha), smoothedAlpha);\n            float a = rgba.a;\n            gl_FragColor = vec4(rgba.r * a, rgba.g * a, rgba.b * a, a);\n        }\n   \n\n\n    ',
	attributes: {},
	uniforms: {iResolution: 'iResolution'}
};
var $elm_explorations$linear_algebra$Math$Vector2$getX = _MJS_v2getX;
var $elm$html$Html$Attributes$height = function (n) {
	return A2(
		_VirtualDom_attribute,
		'height',
		$elm$core$String$fromInt(n));
};
var $elm_explorations$linear_algebra$Math$Matrix4$makeOrtho2D = _MJS_m4x4makeOrtho2D;
var $elm_explorations$linear_algebra$Math$Vector2$setX = _MJS_v2setX;
var $elm_explorations$webgl$WebGL$toHtmlWith = F3(
	function (options, attributes, entities) {
		return A3(_WebGL_toHtml, options, attributes, entities);
	});
var $elm_explorations$linear_algebra$Math$Matrix4$translate3 = _MJS_m4x4translate3;
var $elm_explorations$linear_algebra$Math$Vector3$vec3 = _MJS_v3;
var $author$project$Timeline$vertexShaderHoriz = {
	src: '\n        \n        attribute vec2 position;\n        attribute vec4 color;\n        attribute float selected;\n        attribute float border;\n        attribute vec2 middle;\n        attribute float comment;\n\n\n        uniform mat4 perspective;\n        uniform vec2 move;\n        uniform float resize;\n        varying vec4 vcolor;\n        varying vec4 bcolor;\n        varying float borderSize;\n        varying vec2 location;\n        varying vec2 size;\n        varying float hasPoint;\n\n\n\n        void main () {\n\n            vec4 coord;\n            vec2 moved = move * selected;\n            float resized = resize * selected;\n            if(position.x < middle.x) {\n                coord = perspective * vec4(position.xy+moved.xy, 0.0, 1.0);\n            } else {\n                coord = perspective * vec4(position.x+moved.x+resized, position.y+moved.y, 0.0, 1.0);\n            }\n            \n            gl_Position = coord;\n\n            location = (perspective * vec4(middle.x + moved.x + (resized * 0.5), middle.y+moved.y, 0.0, 1.0)).xy;\n            size = abs(location.xy-coord.xy);\n\n       \n            vcolor = selected > 0.0 ? vec4(color.rgb * color.a * 0.4, 1)  : color;\n            bcolor = vec4(color.rgb*0.8, 1);\n            borderSize = border;\n            hasPoint = comment;\n\n           \n        }\n\n    ',
	attributes: {border: 'border', color: 'color', comment: 'comment', middle: 'middle', position: 'position', selected: 'selected'},
	uniforms: {move: 'move', perspective: 'perspective', resize: 'resize'}
};
var $author$project$Timeline$vertexShaderVert = {
	src: '\n        \n        attribute vec2 position;\n        attribute vec4 color;\n        attribute float selected;\n        attribute float border;\n        attribute vec2 middle;\n        attribute float comment;\n\n\n        uniform mat4 perspective;\n        uniform vec2 move;\n        uniform float resize;\n        varying vec4 vcolor;\n        varying vec4 bcolor;\n        varying float borderSize;\n        varying vec2 location;\n        varying vec2 size;\n        varying float hasPoint;\n\n\n\n        void main () {\n\n            vec4 coord;\n            vec2 moved = move * selected;\n            float resized = resize * selected;\n            if(position.x < middle.x) {\n                coord = perspective * vec4(position.xy+moved.xy, 0.0, 1.0);\n            } else {\n                coord = perspective * vec4(position.x+moved.x+resized, position.y+moved.y, 0.0, 1.0);\n            }\n            \n            gl_Position = coord;\n\n            location = (perspective * vec4(middle.x + moved.x + (resized * 0.5), middle.y+moved.y, 0.0, 1.0)).xy;\n            size = abs(location.xy-coord.xy);\n\n       \n            vcolor = selected > 0.0 ? vec4(color.rgb * color.a * 0.4, 1)  : color;\n            bcolor = vec4(color.rgb*0.8, 1);\n            borderSize = border;\n            hasPoint = comment;\n\n            // inversion de position\n            location = vec2(-location.y, -location.x);\n            size = vec2(size.y, size.x);\n            gl_Position = vec4(-coord.y, -coord.x, coord.z, coord.a);\n        }\n\n    ',
	attributes: {border: 'border', color: 'color', comment: 'comment', middle: 'middle', position: 'position', selected: 'selected'},
	uniforms: {move: 'move', perspective: 'perspective', resize: 'resize'}
};
var $elm$html$Html$Attributes$width = function (n) {
	return A2(
		_VirtualDom_attribute,
		'width',
		$elm$core$String$fromInt(n));
};
var $author$project$Timeline$drawAllGlSections = F8(
	function (dir, width, height, firstDate, move, resize, visible, meshesDict) {
		var firstms = $elm$time$Time$posixToMillis(firstDate);
		return A3(
			$elm_explorations$webgl$WebGL$toHtmlWith,
			_List_fromArray(
				[
					$elm_explorations$webgl$WebGL$alpha(true),
					$elm_explorations$webgl$WebGL$antialias
				]),
			_List_fromArray(
				[
					$elm$html$Html$Attributes$width(width),
					$elm$html$Html$Attributes$height(height),
					A2($elm$html$Html$Attributes$style, 'display', 'block')
				]),
			A2(
				$elm$core$List$map,
				function (_v0) {
					var meshes = _v0.meshes;
					var position = _v0.position;
					return A4(
						$elm_explorations$webgl$WebGL$entity,
						_Utils_eq(dir, $author$project$Timeline$Models$Horizontal) ? $author$project$Timeline$vertexShaderHoriz : $author$project$Timeline$vertexShaderVert,
						_Utils_eq(dir, $author$project$Timeline$Models$Horizontal) ? $author$project$Timeline$fragmentShaderHoriz : $author$project$Timeline$fragmentShaderVert,
						meshes,
						{
							iResolution: A3($elm_explorations$linear_algebra$Math$Vector3$vec3, width, height, 0),
							move: A2(
								$elm_explorations$linear_algebra$Math$Vector2$setX,
								$elm_explorations$linear_algebra$Math$Vector2$getX(move) / 300000,
								move),
							perspective: A4(
								$elm_explorations$linear_algebra$Math$Matrix4$translate3,
								0,
								position,
								0,
								A4($elm_explorations$linear_algebra$Math$Matrix4$makeOrtho2D, (visible.left - firstms) / 300000, (visible.right - firstms) / 300000, visible.top, visible.bottom)),
							resize: resize / 300000
						});
				},
				$elm$core$Dict$values(meshesDict)));
	});
var $escherlies$elm_color$Color$fromRgba = function (_v0) {
	var red = _v0.red;
	var green = _v0.green;
	var blue = _v0.blue;
	var alpha = _v0.alpha;
	return A4($escherlies$elm_color$Color$Internal$rgba, red, green, blue, alpha);
};
var $escherlies$elm_color$Color$Lightness$lStar = function (c) {
	return (c > 0.008856451679035631) ? ((A2($elm$core$Basics$pow, c, 1 / 3) * 116) - 16) : (903.2962962962963 * c);
};
var $escherlies$elm_color$Color$Lightness$linear = function (c) {
	return (c <= 0.04045) ? (c / 12.92) : A2($elm$core$Basics$pow, (c + 0.055) / 1.055, 2.4);
};
var $escherlies$elm_color$Color$Lightness$luminance = function (_v0) {
	var r = _v0.a;
	var g = _v0.b;
	var b = _v0.c;
	return ((0.2126 * $escherlies$elm_color$Color$Lightness$linear(r)) + (0.7152 * $escherlies$elm_color$Color$Lightness$linear(g))) + (0.0722 * $escherlies$elm_color$Color$Lightness$linear(b));
};
var $escherlies$elm_color$Color$Lightness$normalize = function (x) {
	return x / 100;
};
var $escherlies$elm_color$Color$Lightness$lightness = A2(
	$elm$core$Basics$composeL,
	A2($elm$core$Basics$composeL, $escherlies$elm_color$Color$Lightness$normalize, $escherlies$elm_color$Color$Lightness$lStar),
	$escherlies$elm_color$Color$Lightness$luminance);
var $escherlies$elm_color$Color$lightness = $escherlies$elm_color$Color$Lightness$lightness;
var $author$project$Timeline$sectionBox2html = F8(
	function (_v0, direction, _v1, _v2, isSelected, wrapText, _v3, drawTime) {
		var locale = _v0.a;
		var zone = _v0.b;
		var positionh = _v1.a;
		var positionv = _v1.b;
		var sizeh = _v2.a;
		var sizev = _v2.b;
		var color = _v3.color;
		var labels = _v3.labels;
		var start = _v3.start;
		var end = _v3.end;
		var isGlobal = _v3.isGlobal;
		var posy = positionv;
		var posx = positionh;
		var maxLabelsSel = $elm$core$List$length(labels) - 1;
		var labelsSel = A2(
			$elm$core$List$take,
			$elm$core$Basics$ceiling(
				(sizev < 25) ? (sizev / 13) : ((sizev - 13) / 13)),
			(wrapText ? $elm$core$List$concatMap(
				$elm$core$String$split('\n')) : $elm$core$Basics$identity)(labels));
		var hideTimeBox = drawTime ? ((_Utils_eq(direction, $author$project$Timeline$Models$Horizontal) && (sizev < 25)) || (_Utils_eq(direction, $author$project$Timeline$Models$Vertical) && (sizeh < 25))) : true;
		var hideTime = (_Utils_eq(direction, $author$project$Timeline$Models$Horizontal) && (sizeh < 55)) || (_Utils_eq(direction, $author$project$Timeline$Models$Vertical) && (sizev < 35));
		var dy = 0;
		var dx = 0;
		var color_ = $author$project$Timeline$Models$findColor(color);
		var cssColor = isSelected ? $escherlies$elm_color$Color$toCssString(
			A2(
				$escherlies$elm_color$Color$mapAlpha,
				$elm$core$Basics$always(1.0),
				A2(
					$escherlies$elm_color$Color$mapLightness,
					$elm$core$Basics$always(0.8),
					color_))) : (($escherlies$elm_color$Color$lightness(color_) > 0.5) ? 'black' : '#FFF');
		return A2(
			$elm$html$Html$div,
			_List_fromArray(
				[
					$elm$html$Html$Attributes$class('section'),
					$elm$html$Html$Attributes$class(
					isSelected ? 'selected' : ''),
					A2($elm$html$Html$Attributes$style, 'color', cssColor),
					(color === 'new') ? $elm$html$Html$Attributes$class(color) : $elm$html$Html$Attributes$class(''),
					isGlobal ? A2(
					$elm$html$Html$Attributes$style,
					'background-color',
					isSelected ? $escherlies$elm_color$Color$toCssString(
						$escherlies$elm_color$Color$fromRgba(
							function (_v4) {
								var red = _v4.red;
								var green = _v4.green;
								var blue = _v4.blue;
								var alpha = _v4.alpha;
								return {alpha: 1, blue: (blue * 0.4) * alpha, green: (green * 0.4) * alpha, red: (red * 0.4) * alpha};
							}(
								$escherlies$elm_color$Color$toRgba(color_)))) : $escherlies$elm_color$Color$toCssString(color_)) : $elm$html$Html$Attributes$class(''),
					A2(
					$elm$html$Html$Attributes$style,
					'left',
					$elm$core$String$fromFloat(posx) + 'px'),
					A2(
					$elm$html$Html$Attributes$style,
					'top',
					$elm$core$String$fromFloat(posy) + 'px'),
					A2(
					$elm$html$Html$Attributes$style,
					'width',
					$elm$core$String$fromFloat(
						A2($elm$core$Basics$max, 5, sizeh + dx)) + 'px'),
					A2(
					$elm$html$Html$Attributes$style,
					'height',
					$elm$core$String$fromFloat(
						A2($elm$core$Basics$max, 5, sizev + dy)) + 'px')
				]),
			_Utils_ap(
				_List_Nil,
				A2(
					$elm$core$List$filterMap,
					$elm$core$Basics$identity,
					_List_fromArray(
						[
							hideTimeBox ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
							A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'font-size', '10px'),
										$elm$html$Html$Attributes$class('dates'),
										A2($elm$html$Html$Attributes$style, 'padding-top', '2px')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$style, 'padding-left', '2px')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(
												A5($author$project$Moment$format, locale, zone, $author$project$Moment$Hour, $elm$core$Maybe$Nothing, start))
											])),
										hideTime ? $elm$html$Html$text('') : A2(
										$elm$html$Html$div,
										_Utils_eq(direction, $author$project$Timeline$Models$Horizontal) ? _List_fromArray(
											[
												$elm$html$Html$Attributes$class('h-end-date')
											]) : _List_fromArray(
											[
												$elm$html$Html$Attributes$class('v-end-date'),
												A2(
												$elm$html$Html$Attributes$style,
												'top',
												$elm$core$String$fromInt(
													$elm$core$Basics$round(sizev - 12)) + 'px'),
												A2($elm$html$Html$Attributes$style, 'right', '2px')
											]),
										_List_fromArray(
											[
												$elm$html$Html$text(
												A5($author$project$Moment$format, locale, zone, $author$project$Moment$Hour, $elm$core$Maybe$Nothing, end))
											]))
									]))),
							$elm$core$Maybe$Just(
							A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2(
										$elm$html$Html$Attributes$style,
										'font-size',
										(sizev < 15) ? '10px' : '12px'),
										A2($elm$html$Html$Attributes$style, 'padding-left', '2px'),
										A2(
										$elm$html$Html$Attributes$style,
										'padding-top',
										hideTimeBox ? '2px' : '0'),
										A2(
										$elm$html$Html$Attributes$style,
										'height',
										$elm$core$String$fromFloat(
											A2(
												$elm$core$Basics$max,
												5,
												(sizev + dy) - (hideTimeBox ? 0 : 11))) + 'px'),
										A2($elm$html$Html$Attributes$style, 'overflow', 'hidden')
									]),
								A2(
									$elm$core$List$indexedMap,
									F2(
										function (i, label) {
											return A2(
												$elm$html$Html$div,
												_List_fromArray(
													[
														A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
														A2(
														$elm$html$Html$Attributes$style,
														'white-space',
														((_Utils_cmp(i, maxLabelsSel) > -1) && wrapText) ? 'wrap' : 'nowrap')
													]),
												$elm$core$List$singleton(
													$elm$html$Html$text(label)));
										}),
									labelsSel)))
						]))));
	});
var $author$project$Timeline$drawHtmlSections = function (direction) {
	return function (locale) {
		return function (zone) {
			return function (_v0) {
				return function (_v1) {
					return function (scrollX) {
						return function (scrollY) {
							return function (allSections) {
								return function (mbselection) {
									return function (mbdraw) {
										return function (wrapText) {
											return A2(
												$elm$html$Html$div,
												_List_fromArray(
													[
														A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
														A2(
														$elm$html$Html$Attributes$style,
														'left',
														$elm$core$String$fromFloat(scrollX) + 'px'),
														A2(
														$elm$html$Html$Attributes$style,
														'top',
														$elm$core$String$fromFloat(scrollY) + 'px')
													]),
												_List_fromArray(
													[
														A3(
														$elm$html$Html$Keyed$node,
														'div',
														_List_Nil,
														A2(
															$elm$core$List$map,
															function (sbox) {
																var section = sbox.section;
																return _Utils_Tuple2(
																	sbox.section.id,
																	A9(
																		$elm$html$Html$Lazy$lazy8,
																		$author$project$Timeline$sectionBox2html,
																		_Utils_Tuple2(locale, zone),
																		direction,
																		_Utils_Tuple2(sbox.left, sbox.top),
																		_Utils_Tuple2(sbox.width, sbox.height),
																		sbox.selected,
																		wrapText,
																		section,
																		!sbox.isSubtotal));
															},
															allSections)),
														function () {
														var _v2 = _Utils_Tuple2(mbselection, mbdraw);
														_v2$2:
														while (true) {
															if (_v2.a.$ === 'Just') {
																if (_v2.b.$ === 'Nothing') {
																	var _v3 = _v2.a.a;
																	var _v4 = _v3.a;
																	var left = _v4.a;
																	var top = _v4.b;
																	var _v5 = _v3.b;
																	var w = _v5.a;
																	var h = _v5.b;
																	var _v6 = _v2.b;
																	return A2(
																		$elm$html$Html$div,
																		_List_fromArray(
																			[
																				A2(
																				$elm$html$Html$Attributes$style,
																				'left',
																				$elm$core$String$fromFloat(left) + 'px'),
																				A2(
																				$elm$html$Html$Attributes$style,
																				'top',
																				$elm$core$String$fromFloat(top) + 'px'),
																				A2(
																				$elm$html$Html$Attributes$style,
																				'width',
																				$elm$core$String$fromFloat(
																					A2($elm$core$Basics$max, 0, w)) + 'px'),
																				A2(
																				$elm$html$Html$Attributes$style,
																				'height',
																				$elm$core$String$fromFloat(
																					A2($elm$core$Basics$max, 0, h)) + 'px'),
																				A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
																				A2($elm$html$Html$Attributes$style, 'background-color', 'rgba(70, 130, 180, 0.1)'),
																				A2($elm$html$Html$Attributes$style, 'border', '1px solid steelblue')
																			]),
																		_List_Nil);
																} else {
																	break _v2$2;
																}
															} else {
																if (_v2.b.$ === 'Just') {
																	var _v7 = _v2.a;
																	var drawList = _v2.b.a;
																	return A2(
																		$elm$html$Html$div,
																		_List_Nil,
																		A2(
																			$elm$core$List$map,
																			function (draw) {
																				return A8(
																					$author$project$Timeline$sectionBox2html,
																					_Utils_Tuple2(locale, zone),
																					direction,
																					_Utils_Tuple2(draw.left, draw.top),
																					_Utils_Tuple2(draw.w, draw.h),
																					false,
																					wrapText,
																					{
																						color: 'new',
																						comment: $elm$core$Maybe$Nothing,
																						end: draw.end,
																						isGlobal: false,
																						isLocked: false,
																						labels: function () {
																							var _v8 = draw.section;
																							if (_v8.$ === 'Just') {
																								var s = _v8.a;
																								return s.labels;
																							} else {
																								return _List_Nil;
																							}
																						}(),
																						start: draw.start
																					},
																					true);
																			},
																			drawList));
																} else {
																	break _v2$2;
																}
															}
														}
														return $elm$html$Html$text('');
													}()
													]));
										};
									};
								};
							};
						};
					};
				};
			};
		};
	};
};
var $elm$core$Tuple$mapSecond = F2(
	function (func, _v0) {
		var x = _v0.a;
		var y = _v0.b;
		return _Utils_Tuple2(
			x,
			func(y));
	});
var $author$project$Timeline$Event$stopPropagation = $elm$json$Json$Decode$map(
	function (msg) {
		return {message: msg, preventDefault: false, stopPropagation: true};
	});
var $author$project$Timeline$Event$mouseDownEvent = function (message) {
	return A2(
		$elm$html$Html$Events$custom,
		'mousedown',
		$author$project$Timeline$Event$stopPropagation(
			A2($elm$json$Json$Decode$map, message, $author$project$Timeline$Event$eventDecoder)));
};
var $author$project$Timeline$Event$moveEvent = function (message) {
	return A2(
		$elm$html$Html$Events$custom,
		'mousemove',
		$author$project$Timeline$Event$preventDefault(
			A2($elm$json$Json$Decode$map, message, $author$project$Timeline$Event$eventDecoder)));
};
var $elm$html$Html$Events$onMouseOut = function (msg) {
	return A2(
		$elm$html$Html$Events$on,
		'mouseout',
		$elm$json$Json$Decode$succeed(msg));
};
var $author$project$Timeline$Event$overEvent = function (message) {
	return A2(
		$elm$html$Html$Events$custom,
		'mouseover',
		$author$project$Timeline$Event$preventDefault(
			A2($elm$json$Json$Decode$map, message, $author$project$Timeline$Event$eventDecoder)));
};
var $author$project$Timeline$sectionsView = F6(
	function (box, sections, width, height, fromTime, endTime) {
		var direction = box.direction;
		var selection = box.meshesSelection;
		var margin = $author$project$Moment$toDuration(
			$elm$core$Basics$round((6 * $author$project$Timeline$Models$duration.day) / box.zoom));
		var lastLine = $elm$core$Basics$ceiling(
			_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? (((-box.sectionOffsetY) + height) / box.lineSize) : (((-box.sectionOffsetY) + width) / box.lineSize));
		var grid = $author$project$Timeline$Axis$getGrid($author$project$Timeline$Models$duration.day / box.zoom);
		var unit = grid.snap * 3600000;
		var snapToGrid = $author$project$Moment$mapDuration(
			function (x) {
				return $elm$core$Basics$round(
					$elm$core$Basics$round(x / unit) * unit);
			});
		var getter = $author$project$Timeline$Models$directionGetter(direction);
		var scrollX = getter.h(
			_Utils_Tuple2(box.start, box.sectionOffsetY));
		var scrollY = getter.v(
			_Utils_Tuple2(box.start, box.sectionOffsetY));
		var firstLine = $elm$core$Basics$floor((-box.sectionOffsetY) / box.lineSize);
		var cursor = function () {
			var _v21 = box.interaction;
			switch (_v21.$) {
				case 'ResizeLeft':
					return _Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? 'ew-resize' : 'ns-resize';
				case 'ResizeRight':
					return _Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? 'ew-resize' : 'ns-resize';
				case 'Select':
					var _v22 = _v21.d;
					var _v23 = _v22.b;
					var sizeDuration = _v23.a;
					var sizeLine = _v23.b;
					return (_Utils_cmp(
						_Utils_Tuple2(
							$author$project$Moment$fromDuration(sizeDuration),
							sizeLine),
						_Utils_Tuple2(0, 0)) > 0) ? 'crosshair' : 'default';
				case 'MouseOver':
					var _v24 = _v21.a;
					var posix = _v24.a;
					var y = _v24.b;
					var mbsec = A3(
						$author$project$Timeline$Utils$findSection,
						posix,
						_Utils_Tuple2(y, 1 - (4 / box.lineSize)),
						box.sections);
					if (mbsec.$ === 'Just') {
						var sec = mbsec.a;
						return A2(
							$author$project$Moment$greaterThan,
							posix,
							A2($author$project$Moment$subtractDuration, sec.section.end, margin)) ? getter.h(
							_Utils_Tuple2('ew-resize', 'ns-resize')) : (A2(
							$author$project$Moment$lessThan,
							posix,
							A2($author$project$Moment$addDurationToPosix, sec.section.start, margin)) ? getter.h(
							_Utils_Tuple2('ew-resize', 'ns-resize')) : 'default');
					} else {
						return 'default';
					}
				default:
					return 'default';
			}
		}();
		var _v0 = function () {
			var _v1 = box.interaction;
			_v1$3:
			while (true) {
				switch (_v1.$) {
					case 'Move':
						if (_v1.a.$ === 'SimpleMove') {
							var _v2 = _v1.a;
							var _v3 = _v1.d;
							var deltaMoveT = _v3.a;
							var deltaMoveG = _v3.b;
							return _Utils_Tuple3(
								snapToGrid(deltaMoveT),
								deltaMoveG,
								$author$project$Moment$toDuration(0));
						} else {
							break _v1$3;
						}
					case 'ResizeLeft':
						var x = _v1.b;
						var minDuration = A2($author$project$Timeline$Models$minDurationOf, box.groups, selection);
						var minSnap = A2(
							$elm$core$Basics$min,
							$elm$core$Basics$round(unit),
							minDuration);
						return _Utils_Tuple3(
							snapToGrid(
								A2(
									$author$project$Moment$mapDuration,
									function (d) {
										return A2($elm$core$Basics$min, d, minDuration - minSnap);
									},
									x)),
							0,
							A2(
								$author$project$Moment$mapDuration,
								$elm$core$Basics$negate,
								snapToGrid(
									A2(
										$author$project$Moment$mapDuration,
										function (d) {
											return A2($elm$core$Basics$min, d, minDuration - minSnap);
										},
										x))));
					case 'ResizeRight':
						var x = _v1.b;
						var minDuration = A2($author$project$Timeline$Models$minDurationOf, box.groups, selection);
						var minSnap = A2(
							$elm$core$Basics$min,
							$elm$core$Basics$round(unit),
							minDuration);
						return _Utils_Tuple3(
							$author$project$Moment$toDuration(0),
							0,
							snapToGrid(
								A2(
									$author$project$Moment$mapDuration,
									function (d) {
										return A2($elm$core$Basics$max, d, minSnap - minDuration);
									},
									x)));
					default:
						break _v1$3;
				}
			}
			return _Utils_Tuple3(
				$author$project$Moment$toDuration(0),
				0,
				$author$project$Moment$toDuration(0));
		}();
		var moveTime = _v0.a;
		var moveGroup = _v0.b;
		var resize = _v0.c;
		var _v4 = A2(
			$elm$core$Tuple$mapSecond,
			$elm$core$List$partition(
				function ($) {
					return $.selected;
				}),
			A2(
				$elm$core$List$partition,
				A2(
					$elm$core$Basics$composeR,
					function ($) {
						return $.section;
					},
					function ($) {
						return $.isGlobal;
					}),
				A2(
					$elm$core$List$filterMap,
					function (sbox) {
						var section = sbox.section;
						if (A4(
							$author$project$Moment$intersect,
							section.start,
							section.end,
							$elm$time$Time$millisToPosix(
								$elm$core$Basics$round(fromTime)),
							$elm$time$Time$millisToPosix(
								$elm$core$Basics$round(endTime))) && (((_Utils_cmp(sbox.line, firstLine) > -1) && (_Utils_cmp(sbox.line, lastLine) < 1)) || sbox.section.isGlobal)) {
							var size = _Utils_Tuple2(
								($author$project$Moment$fromDuration(
									A2($author$project$Moment$durationBetween, section.start, section.end)) * box.zoom) / $author$project$Timeline$Models$duration.day,
								sbox.section.isGlobal ? (box.lines * box.lineSize) : (box.lineSize - 4));
							var pos = _Utils_Tuple2(
								($author$project$Moment$fromDuration(
									A2($author$project$Moment$durationBetween, box.first, section.start)) * box.zoom) / $author$project$Timeline$Models$duration.day,
								sbox.section.isGlobal ? 0 : ((sbox.line * box.lineSize) + 2));
							return ((getter.h(size) < 12) || (getter.v(size) < 14)) ? $elm$core$Maybe$Nothing : $elm$core$Maybe$Just(
								{
									height: getter.v(size),
									isSubtotal: sbox.isSubtotal,
									left: getter.h(pos),
									line: sbox.line,
									section: sbox.section,
									selected: sbox.selected,
									top: getter.v(pos),
									width: getter.h(size)
								});
						} else {
							return $elm$core$Maybe$Nothing;
						}
					},
					A3(
						$elm$core$List$foldr,
						F2(
							function (sbox, _v7) {
								var section = sbox.section;
								var _v8 = _v7.a;
								var ns = _v8.a;
								var line = _v8.b;
								var list = _v7.b;
								if (sbox.selected) {
									var sbox2 = _Utils_update(
										sbox,
										{
											section: _Utils_update(
												section,
												{
													end: ((!$elm$time$Time$posixToMillis(ns)) || (!_Utils_eq(line, sbox.line))) ? section.end : A2($author$project$Moment$minPosix, ns, section.end)
												})
										});
									return _Utils_Tuple2(
										_Utils_Tuple2(sbox2.section.start, sbox2.line),
										A2($elm$core$List$cons, sbox2, list));
								} else {
									return _Utils_Tuple2(
										_Utils_Tuple2(ns, line),
										A2($elm$core$List$cons, sbox, list));
								}
							}),
						_Utils_Tuple2(
							_Utils_Tuple2(
								$elm$time$Time$millisToPosix(0),
								-1),
							_List_Nil),
						A2(
							$elm$core$List$map,
							function (_v6) {
								var section = _v6.section;
								var groupId = _v6.groupId;
								var line = _v6.line;
								var isSubtotal = A2(
									$elm$core$Maybe$withDefault,
									false,
									A2(
										$elm$core$Maybe$map,
										function (gbox) {
											return gbox.isSubtotal;
										},
										A2($elm$core$Dict$get, groupId, box.groups)));
								if (A3($author$project$Timeline$Models$isSelected, groupId, section.id, selection)) {
									var start = $author$project$Moment$durationNotZero(resize) ? A2(
										$author$project$Moment$minPosix,
										A2($author$project$Moment$addDurationToPosix, section.start, moveTime),
										A2($author$project$Moment$subtractDuration, section.end, margin)) : A2($author$project$Moment$addDurationToPosix, section.start, moveTime);
									return {
										isSubtotal: isSubtotal,
										line: line + moveGroup,
										section: _Utils_update(
											section,
											{
												end: A2(
													$author$project$Moment$addDurationToPosix,
													start,
													$author$project$Moment$toDuration(
														A2(
															$elm$core$Basics$max,
															($author$project$Moment$fromDuration(resize) + $elm$time$Time$posixToMillis(section.end)) - $elm$time$Time$posixToMillis(section.start),
															0))),
												start: start
											}),
										selected: true
									};
								} else {
									return {isSubtotal: isSubtotal, line: line, section: section, selected: false};
								}
							},
							sections)).b)));
		var globalSections = _v4.a;
		var _v5 = _v4.b;
		var selectSections = _v5.a;
		var unselectSections = _v5.b;
		var _v9 = function () {
			var _v10 = box.interaction;
			_v10$3:
			while (true) {
				switch (_v10.$) {
					case 'Select':
						var _v11 = _v10.d;
						var _v12 = _v11.a;
						var posTime = _v12.a;
						var posLine = _v12.b;
						var _v13 = _v11.b;
						var sizeTime = _v13.a;
						var sizeLine = _v13.b;
						return _Utils_Tuple2(
							$elm$core$Maybe$Just(
								_Utils_Tuple2(
									getter.xy(
										_Utils_Tuple2(
											($author$project$Moment$fromDuration(
												A2($author$project$Moment$durationBetween, box.first, posTime)) * box.zoom) / $author$project$Timeline$Models$duration.day,
											(posLine * box.lineSize) + 2)),
									getter.xy(
										_Utils_Tuple2(
											($author$project$Moment$fromDuration(sizeTime) * box.zoom) / $author$project$Timeline$Models$duration.day,
											(sizeLine * box.lineSize) - 4)))),
							$elm$core$Maybe$Nothing);
					case 'Draw':
						var dstart = _v10.a;
						var dend = _v10.b;
						var line = _v10.c;
						return _Utils_Tuple2(
							$elm$core$Maybe$Nothing,
							function () {
								var _v14 = A2($author$project$Moment$greaterThan, dstart, dend) ? _Utils_Tuple2(dend, dstart) : _Utils_Tuple2(dstart, dend);
								var start = _v14.a;
								var end = _v14.b;
								var _v15 = getter.xy(
									_Utils_Tuple2(
										($author$project$Moment$fromDuration(
											A2($author$project$Moment$durationBetween, start, end)) * box.zoom) / $author$project$Timeline$Models$duration.day,
										box.lineSize - 4));
								var w = _v15.a;
								var h = _v15.b;
								var _v16 = getter.xy(
									_Utils_Tuple2(
										($author$project$Moment$fromDuration(
											A2($author$project$Moment$durationBetween, box.first, start)) * box.zoom) / $author$project$Timeline$Models$duration.day,
										(line * box.lineSize) + 2));
								var left = _v16.a;
								var top = _v16.b;
								return $elm$core$Maybe$Just(
									_List_fromArray(
										[
											{end: end, h: h, left: left, section: $elm$core$Maybe$Nothing, start: start, top: top, w: w}
										]));
							}());
					case 'Move':
						if (_v10.a.$ === 'Clone') {
							var _v17 = _v10.a;
							var _v18 = _v10.d;
							var deltaMoveT = _v18.a;
							var deltaMoveG = _v18.b;
							var _v19 = _Utils_Tuple2(
								snapToGrid(deltaMoveT),
								deltaMoveG);
							var moveCloneTime = _v19.a;
							var moveCloneGroup = _v19.b;
							var clones = A2(
								$elm$core$List$filterMap,
								function (sbox) {
									var section = sbox.section;
									if (A4(
										$author$project$Moment$intersect,
										section.start,
										section.end,
										$elm$time$Time$millisToPosix(
											$elm$core$Basics$round(fromTime)),
										$elm$time$Time$millisToPosix(
											$elm$core$Basics$round(endTime))) && ((_Utils_cmp(sbox.line, firstLine) > -1) && (_Utils_cmp(sbox.line, lastLine) < 1))) {
										var size = _Utils_Tuple2(
											($author$project$Moment$fromDuration(
												A2($author$project$Moment$durationBetween, section.start, section.end)) * box.zoom) / $author$project$Timeline$Models$duration.day,
											box.lineSize - 4);
										var pos = _Utils_Tuple2(
											($author$project$Moment$fromDuration(
												A2($author$project$Moment$durationBetween, box.first, section.start)) * box.zoom) / $author$project$Timeline$Models$duration.day,
											(sbox.line * box.lineSize) + 2);
										return $elm$core$Maybe$Just(
											{
												end: section.end,
												h: getter.v(size),
												left: getter.h(pos),
												section: $elm$core$Maybe$Just(section),
												start: section.start,
												top: getter.v(pos),
												w: getter.h(size)
											});
									} else {
										return $elm$core$Maybe$Nothing;
									}
								},
								A2(
									$elm$core$List$filterMap,
									function (_v20) {
										var section = _v20.section;
										var groupId = _v20.groupId;
										var line = _v20.line;
										var isSubtotal = A2(
											$elm$core$Maybe$withDefault,
											false,
											A2(
												$elm$core$Maybe$map,
												function ($) {
													return $.isSubtotal;
												},
												A2($elm$core$Dict$get, groupId, box.groups)));
										return (A3($author$project$Timeline$Models$isSelected, groupId, section.id, selection) && (!isSubtotal)) ? $elm$core$Maybe$Just(
											{
												line: line + moveCloneGroup,
												section: _Utils_update(
													section,
													{
														end: A2($author$project$Moment$addDurationToPosix, section.end, moveCloneTime),
														start: A2($author$project$Moment$addDurationToPosix, section.start, moveCloneTime)
													}),
												selected: true
											}) : $elm$core$Maybe$Nothing;
									},
									sections));
							return _Utils_Tuple2(
								$elm$core$Maybe$Nothing,
								$elm$core$Maybe$Just(clones));
						} else {
							break _v10$3;
						}
					default:
						break _v10$3;
				}
			}
			return _Utils_Tuple2($elm$core$Maybe$Nothing, $elm$core$Maybe$Nothing);
		}();
		var mbselection = _v9.a;
		var mbdraw = _v9.b;
		return A2(
			$elm$html$Html$div,
			_List_Nil,
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px'),
							A2($elm$html$Html$Attributes$style, 'left', '0'),
							A2($elm$html$Html$Attributes$style, 'top', '0'),
							A2($elm$html$Html$Attributes$style, 'position', 'absolute')
						]),
					_List_fromArray(
						[
							$author$project$Timeline$drawHtmlSections(direction)(box.locale)(box.zone)(width)(height)(scrollX)(scrollY)(globalSections)($elm$core$Maybe$Nothing)($elm$core$Maybe$Nothing)(box.wrapText)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px'),
							A2($elm$html$Html$Attributes$style, 'left', '0'),
							A2($elm$html$Html$Attributes$style, 'top', '0'),
							A2($elm$html$Html$Attributes$style, 'position', 'absolute')
						]),
					_List_fromArray(
						[
							A8(
							$author$project$Timeline$drawAllGlSections,
							direction,
							width,
							height,
							box.first,
							A2(
								$elm_explorations$linear_algebra$Math$Vector2$vec2,
								$author$project$Moment$fromDuration(moveTime),
								moveGroup),
							$author$project$Moment$fromDuration(resize),
							{
								bottom: (-box.sectionOffsetY) / box.lineSize,
								left: fromTime,
								right: endTime,
								top: _Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? (((-box.sectionOffsetY) + height) / box.lineSize) : (((-box.sectionOffsetY) + width) / box.lineSize)
							},
							box.meshes)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px'),
							A2($elm$html$Html$Attributes$style, 'left', '0'),
							A2($elm$html$Html$Attributes$style, 'top', '0'),
							A2($elm$html$Html$Attributes$style, 'position', 'absolute')
						]),
					_List_fromArray(
						[
							$author$project$Timeline$drawHtmlSections(direction)(box.locale)(box.zone)(width)(height)(scrollX)(scrollY)(unselectSections)($elm$core$Maybe$Nothing)($elm$core$Maybe$Nothing)(box.wrapText)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px'),
							A2($elm$html$Html$Attributes$style, 'left', '0'),
							A2($elm$html$Html$Attributes$style, 'top', '0'),
							A2($elm$html$Html$Attributes$style, 'position', 'absolute')
						]),
					_List_fromArray(
						[
							A8(
							$author$project$Timeline$drawAllGlSections,
							direction,
							width,
							height,
							box.first,
							A2(
								$elm_explorations$linear_algebra$Math$Vector2$vec2,
								$author$project$Moment$fromDuration(moveTime),
								moveGroup),
							$author$project$Moment$fromDuration(resize),
							{
								bottom: (-box.sectionOffsetY) / box.lineSize,
								left: fromTime,
								right: endTime,
								top: _Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? (((-box.sectionOffsetY) + height) / box.lineSize) : (((-box.sectionOffsetY) + width) / box.lineSize)
							},
							box.selectedMeshes)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px'),
							A2($elm$html$Html$Attributes$style, 'left', '0'),
							A2($elm$html$Html$Attributes$style, 'top', '0'),
							A2($elm$html$Html$Attributes$style, 'position', 'absolute')
						]),
					_List_fromArray(
						[
							$author$project$Timeline$drawHtmlSections(direction)(box.locale)(box.zone)(width)(height)(scrollX)(scrollY)(selectSections)(mbselection)(mbdraw)(box.wrapText)
						])),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2($elm$html$Html$Attributes$style, 'left', '0'),
							A2($elm$html$Html$Attributes$style, 'top', '0'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px'),
							A2($elm$html$Html$Attributes$style, 'cursor', cursor),
							$author$project$Timeline$Event$wheelEvent($author$project$Timeline$SectionsWheel),
							$author$project$Timeline$Event$moveEvent($author$project$Timeline$SectionsMove),
							$author$project$Timeline$Event$mouseDownEvent($author$project$Timeline$SectionsDown),
							$author$project$Timeline$Event$overEvent($author$project$Timeline$SectionsOver),
							$elm$html$Html$Events$onMouseOut($author$project$Timeline$SectionsOut)
						]),
					_List_Nil)
				]));
	});
var $elm$html$Html$Attributes$tabindex = function (n) {
	return A2(
		_VirtualDom_attribute,
		'tabIndex',
		$elm$core$String$fromInt(n));
};
var $author$project$Timeline$unscale = F2(
	function (zoom, delta) {
		return (delta * $author$project$Timeline$Models$duration.day) / zoom;
	});
var $elm$svg$Svg$Attributes$textAnchor = _VirtualDom_attribute('text-anchor');
var $author$project$Timeline$Axis$vposArray = $elm$core$Array$fromList(
	_List_fromArray(
		[0, -40, -100, -180]));
var $author$project$Timeline$Axis$vpos = function (idx) {
	return A2(
		$elm$core$Maybe$withDefault,
		0,
		A2(
			$elm$core$Array$get,
			$elm$core$Basics$round(idx),
			$author$project$Timeline$Axis$vposArray));
};
var $author$project$Timeline$Axis$vview = F8(
	function (attrs, locale, zone, displayAxis, width, height, from, to) {
		var instructions = A6($author$project$Timeline$Axis$axis, $author$project$Timeline$Models$Vertical, locale, zone, from, to, height);
		return A2(
			$elm$svg$Svg$svg,
			_Utils_ap(
				attrs,
				_List_fromArray(
					[
						$elm$svg$Svg$Attributes$width(
						$elm$core$String$fromInt(width)),
						$elm$svg$Svg$Attributes$height(
						$elm$core$String$fromInt(height)),
						$elm$svg$Svg$Attributes$viewBox(
						'0 0 ' + ($elm$core$String$fromInt(width) + (' ' + $elm$core$String$fromInt(height)))),
						$elm$svg$Svg$Attributes$style(
						'position:absolute;top:0px;left:0px;width:' + ($elm$core$String$fromInt(width) + ('px;height:' + ($elm$core$String$fromInt(height) + 'px;user-select: none;'))))
					])),
			_List_fromArray(
				[
					A2(
					$elm$svg$Svg$g,
					_List_Nil,
					A2(
						$elm$core$List$map,
						function (ins) {
							if (ins.$ === 'DrawLine') {
								var top = ins.a;
								var left = ins.b;
								var weight = ins.c;
								return A2(
									$elm$svg$Svg$line,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$y1(
											$elm$core$String$fromFloat(top)),
											$elm$svg$Svg$Attributes$y2(
											$elm$core$String$fromFloat(top)),
											$elm$svg$Svg$Attributes$x1(
											$elm$core$String$fromFloat(
												displayAxis ? ($author$project$Timeline$Axis$vpos(left) + 120) : 0)),
											$elm$svg$Svg$Attributes$x2(
											$elm$core$String$fromInt(width)),
											$elm$svg$Svg$Attributes$class(
											'axis-line-' + $elm$core$String$fromInt(
												$elm$core$Basics$round(weight * 10))),
											$elm$svg$Svg$Attributes$strokeWidth('1')
										]),
									_List_Nil);
							} else {
								var top = ins.a;
								var left = ins.b;
								var size = ins.c;
								var label = ins.d;
								return displayAxis ? A2(
									$elm$svg$Svg$text_,
									_List_fromArray(
										[
											$elm$svg$Svg$Attributes$y(
											$elm$core$String$fromFloat(12 + top)),
											$elm$svg$Svg$Attributes$x(
											$elm$core$String$fromFloat(
												$author$project$Timeline$Axis$vpos(left) + 175)),
											$elm$svg$Svg$Attributes$textAnchor('end'),
											$elm$svg$Svg$Attributes$style(
											'font-size:' + ($elm$core$String$fromFloat(size) + 'px')),
											$elm$svg$Svg$Attributes$class('axis-text')
										]),
									_List_fromArray(
										[
											$elm$svg$Svg$text(label)
										])) : A2($elm$svg$Svg$g, _List_Nil, _List_Nil);
							}
						},
						instructions))
				]));
	});
var $author$project$Timeline$view = F3(
	function (attrs, box, rect) {
		var top = _Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? 0 : 50;
		var lateral = _Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? $author$project$Timeline$groupsWidth : 0;
		var width = rect.width - lateral;
		var height = rect.height - top;
		var grid = $author$project$Timeline$Axis$getGrid($author$project$Timeline$Models$duration.day / box.zoom);
		var unit = $elm$core$Basics$round(grid.snap * 3600000);
		var from = A2($author$project$Timeline$unscale, box.zoom, -box.start) + $elm$time$Time$posixToMillis(box.first);
		var end = from + A2(
			$author$project$Timeline$unscale,
			box.zoom,
			_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? width : height);
		var mbcursor = A2(
			$elm$core$Maybe$map,
			function (snapped) {
				var _v9 = box.direction;
				if (_v9.$ === 'Horizontal') {
					return A2(
						$elm$core$Tuple$pair,
						snapped,
						$elm$core$Basics$round(
							(($elm$time$Time$posixToMillis(snapped) - from) * width) / (end - from)));
				} else {
					return A2(
						$elm$core$Tuple$pair,
						snapped,
						$elm$core$Basics$round(
							(($elm$time$Time$posixToMillis(snapped) - from) * height) / (end - from)));
				}
			},
			function () {
				var _v4 = box.interaction;
				switch (_v4.$) {
					case 'MouseOver':
						var _v5 = _v4.a;
						var time = _v5.a;
						return $elm$core$Maybe$Just(
							A3($author$project$Timeline$Update$snapToGridForZoom, box.zoom, box.zone, time));
					case 'Draw':
						var time = _v4.b;
						return $elm$core$Maybe$Just(time);
					case 'Move':
						var sbox = _v4.b;
						var _v6 = _v4.d;
						var dur = _v6.a;
						return $elm$core$Maybe$Just(
							A3(
								$author$project$Timeline$Update$snapToGridForZoom,
								box.zoom,
								box.zone,
								A2($author$project$Moment$addDurationToPosix, sbox.section.start, dur)));
					case 'ResizeLeft':
						var _v7 = _v4.a;
						var time = _v7.a;
						var dur = _v4.b;
						return $elm$core$Maybe$Just(
							A3(
								$author$project$Timeline$Update$snapToGridForZoom,
								box.zoom,
								box.zone,
								A2(
									$author$project$Moment$addDurationToPosix,
									time,
									A2(
										$author$project$Moment$mapDuration,
										function (d) {
											return $elm$core$Basics$round(d / unit) * unit;
										},
										dur))));
					case 'ResizeRight':
						var _v8 = _v4.a;
						var time = _v8.a;
						var dur = _v4.b;
						return $elm$core$Maybe$Just(
							A3(
								$author$project$Timeline$Update$snapToGridForZoom,
								box.zoom,
								box.zone,
								A2(
									$author$project$Moment$addDurationToPosix,
									time,
									A2(
										$author$project$Moment$mapDuration,
										function (d) {
											return $elm$core$Basics$round(d / unit) * unit;
										},
										dur))));
					default:
						return $elm$core$Maybe$Nothing;
				}
			}());
		var currentTime = function () {
			var _v3 = box.direction;
			if (_v3.$ === 'Horizontal') {
				return $elm$core$Basics$round(
					(($elm$time$Time$posixToMillis(box.currentPosix) - from) * width) / (end - from));
			} else {
				return $elm$core$Basics$round(
					(($elm$time$Time$posixToMillis(box.currentPosix) - from) * height) / (end - from));
			}
		}();
		var axisSize = box.displayAxis ? (_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? $author$project$Timeline$axisHeight : $author$project$Timeline$axisWidth) : 0;
		return A2(
			$elm$html$Html$div,
			_Utils_ap(
				_List_fromArray(
					[
						A2(
						$elm$html$Html$Attributes$style,
						'width',
						$elm$core$String$fromInt(rect.width) + 'px'),
						A2(
						$elm$html$Html$Attributes$style,
						'height',
						$elm$core$String$fromInt(rect.height) + 'px'),
						$elm$html$Html$Attributes$class('timeline'),
						$elm$html$Html$Attributes$tabindex(0),
						A2(
						$elm$html$Html$Events$on,
						'keyup',
						A2($elm$json$Json$Decode$map, $author$project$Timeline$Keypress, $elm$html$Html$Events$keyCode)),
						$author$project$Timeline$Event$mouseUpEvent($author$project$Timeline$SectionsUp)
					]),
				attrs),
			_List_fromArray(
				[
					A2(
					$elm$html$Html$div,
					_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(lateral) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(rect.height - axisSize) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(axisSize) + 'px'),
							A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
							$author$project$Timeline$Event$wheelEvent($author$project$Timeline$GroupsWheel),
							$author$project$Timeline$Event$moveY0Event($author$project$Timeline$SectionsMove)
						]) : _List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(rect.width - axisSize) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(top) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(axisSize) + 'px'),
							A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
							$author$project$Timeline$Event$wheelEvent($author$project$Timeline$GroupsWheel),
							$author$project$Timeline$Event$moveY0Event($author$project$Timeline$SectionsMove)
						]),
					_List_fromArray(
						[
							_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? A3($elm$html$Html$Lazy$lazy2, $author$project$Timeline$drawGroups, box, lateral) : A3($elm$html$Html$Lazy$lazy2, $author$project$Timeline$drawGroups, box, top)
						])),
					_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(lateral) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(top + axisSize) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height - axisSize) + 'px')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
									A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
									A2($elm$html$Html$Attributes$style, 'left', '0px'),
									A2(
									$elm$html$Html$Attributes$style,
									'width',
									$elm$core$String$fromInt(width) + 'px'),
									A2(
									$elm$html$Html$Attributes$style,
									'top',
									$elm$core$String$fromFloat(box.sectionOffsetY) + 'px')
								]),
							_List_fromArray(
								[
									A4($elm$html$Html$Lazy$lazy3, $author$project$Timeline$drawRowsBackground, box.groups, box.lineSize, box.selection)
								]))
						])) : A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(lateral + axisSize) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(top) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width - axisSize) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px')
						]),
					_List_fromArray(
						[
							A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
									A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
									A2($elm$html$Html$Attributes$style, 'top', '0px'),
									A2(
									$elm$html$Html$Attributes$style,
									'width',
									$elm$core$String$fromInt(
										$elm$core$Basics$ceiling(
											box.lineSize * $elm$core$List$sum(
												A2(
													$elm$core$List$map,
													function ($) {
														return $.size;
													},
													$elm$core$Dict$values(box.groups))))) + 'px'),
									A2(
									$elm$html$Html$Attributes$style,
									'height',
									$elm$core$String$fromInt(height) + 'px'),
									A2(
									$elm$html$Html$Attributes$style,
									'left',
									$elm$core$String$fromFloat(box.sectionOffsetY) + 'px')
								]),
							_List_fromArray(
								[
									A4($elm$html$Html$Lazy$lazy3, $author$project$Timeline$drawColsBackground, box.groups, box.lineSize, box.selection)
								]))
						])),
					function () {
					var _v0 = _Utils_Tuple2(mbcursor, box.standby);
					if ((_v0.a.$ === 'Just') && (!_v0.b)) {
						var _v1 = _v0.a.a;
						var posix = _v1.a;
						var pos = _v1.b;
						var time = A4(
							$enkidatron$elm_cldr$Cldr$Format$DateTime$format,
							$enkidatron$elm_cldr$Cldr$Format$DateTime$TimeOnly($enkidatron$elm_cldr$Cldr$Format$Length$Short),
							box.locale,
							box.zone,
							posix);
						var date = A4($author$project$Moment$formatI18n, box.locale, box.zone, 'yyyy-MM-dd ', posix);
						var _v2 = box.direction;
						if (_v2.$ === 'Horizontal') {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
										A2(
										$elm$html$Html$Attributes$style,
										'left',
										$elm$core$String$fromInt(pos + lateral) + 'px'),
										A2(
										$elm$html$Html$Attributes$style,
										'top',
										$elm$core$String$fromInt(top) + 'px'),
										A2(
										$elm$html$Html$Attributes$style,
										'height',
										$elm$core$String$fromInt(height) + 'px'),
										A2($elm$html$Html$Attributes$style, 'border-left', '1px solid steelblue'),
										A2($elm$html$Html$Attributes$style, 'z-index', '1'),
										A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$style, 'font-size', '12px'),
												A2($elm$html$Html$Attributes$style, 'text-wrap', 'nowrap'),
												A2($elm$html$Html$Attributes$style, 'line-height', '1.2'),
												A2($elm$html$Html$Attributes$style, 'background-color', 'steelblue'),
												A2($elm$html$Html$Attributes$style, 'color', 'white'),
												A2($elm$html$Html$Attributes$style, 'padding', '3px'),
												A2($elm$html$Html$Attributes$style, 'position', 'relative')
											]),
										_List_fromArray(
											[
												A2(
												$elm$html$Html$div,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(date)
													])),
												A2(
												$elm$html$Html$div,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(time)
													]))
											]))
									]));
						} else {
							return A2(
								$elm$html$Html$div,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
										A2(
										$elm$html$Html$Attributes$style,
										'left',
										$elm$core$String$fromInt(lateral + 5) + 'px'),
										A2(
										$elm$html$Html$Attributes$style,
										'top',
										$elm$core$String$fromInt(top + pos) + 'px'),
										A2(
										$elm$html$Html$Attributes$style,
										'width',
										$elm$core$String$fromInt(width) + 'px'),
										A2($elm$html$Html$Attributes$style, 'height', '0'),
										A2($elm$html$Html$Attributes$style, 'border-top', '1px solid steelblue'),
										A2($elm$html$Html$Attributes$style, 'z-index', '1'),
										A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
									]),
								_List_fromArray(
									[
										A2(
										$elm$html$Html$div,
										_List_fromArray(
											[
												A2($elm$html$Html$Attributes$style, 'font-size', '12px'),
												A2($elm$html$Html$Attributes$style, 'text-wrap', 'nowrap'),
												A2($elm$html$Html$Attributes$style, 'line-height', '1.5'),
												A2($elm$html$Html$Attributes$style, 'background-color', 'steelblue'),
												A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box'),
												A2($elm$html$Html$Attributes$style, 'color', 'white'),
												A2($elm$html$Html$Attributes$style, 'padding', '3px'),
												A2($elm$html$Html$Attributes$style, 'width', '75px')
											]),
										_List_fromArray(
											[
												A2(
												$elm$html$Html$div,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(date)
													])),
												A2(
												$elm$html$Html$div,
												_List_Nil,
												_List_fromArray(
													[
														$elm$html$Html$text(time)
													]))
											]))
									]));
						}
					} else {
						return $elm$html$Html$text('');
					}
				}(),
					A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(lateral) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(top) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px')
						]),
					_List_fromArray(
						[
							_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? A9($elm$html$Html$Lazy$lazy8, $author$project$Timeline$Axis$hview, $author$project$Timeline$axisAttrs, box.locale, box.zone, box.displayAxis, width, height, from, end) : A9($elm$html$Html$Lazy$lazy8, $author$project$Timeline$Axis$vview, $author$project$Timeline$axisAttrs, box.locale, box.zone, box.displayAxis, width, height, from, end)
						])),
					_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(lateral) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(top + axisSize) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height - axisSize) + 'px')
						]),
					_List_fromArray(
						[
							A6($author$project$Timeline$sectionsView, box, box.sections, width, height - axisSize, from, end)
						])) : A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2($elm$html$Html$Attributes$style, 'overflow', 'hidden'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(lateral + axisSize) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(top) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px')
						]),
					_List_fromArray(
						[
							A6($author$project$Timeline$sectionsView, box, box.sections, width - axisSize, height, from, end)
						])),
					A3(
					$author$project$Moment$between,
					box.currentPosix,
					$elm$time$Time$millisToPosix(
						$elm$core$Basics$round(from)),
					$elm$time$Time$millisToPosix(
						$elm$core$Basics$round(end))) ? (_Utils_eq(box.direction, $author$project$Timeline$Models$Horizontal) ? A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(currentTime + lateral) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(top + 5) + 'px'),
							A2($elm$html$Html$Attributes$style, 'width', '0'),
							A2(
							$elm$html$Html$Attributes$style,
							'height',
							$elm$core$String$fromInt(height) + 'px'),
							A2($elm$html$Html$Attributes$style, 'border-left', '2px solid rgba(255,100,0,0.7)'),
							A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
						]),
					_List_Nil) : A2(
					$elm$html$Html$div,
					_List_fromArray(
						[
							A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
							A2(
							$elm$html$Html$Attributes$style,
							'left',
							$elm$core$String$fromInt(lateral + 5) + 'px'),
							A2(
							$elm$html$Html$Attributes$style,
							'top',
							$elm$core$String$fromInt(currentTime + top) + 'px'),
							A2($elm$html$Html$Attributes$style, 'height', '0'),
							A2(
							$elm$html$Html$Attributes$style,
							'width',
							$elm$core$String$fromInt(width) + 'px'),
							A2($elm$html$Html$Attributes$style, 'border-top', '2px solid rgba(255,100,0,0.7)'),
							A2($elm$html$Html$Attributes$style, 'pointer-events', 'none')
						]),
					_List_Nil)) : $elm$html$Html$text('')
				]));
	});
var $author$project$Widget$view = function (model) {
	var totalsSize = $elm$core$Basics$round(
		model.totalState.lineSize * ($elm$core$List$length(model.totalFields) + (model.options.countMoments ? 1 : 0)));
	var displayTotals = (!$elm$core$List$isEmpty(model.totalFields)) || model.options.countMoments;
	var cssDisplay = _Utils_eq(model.options.direction, $author$project$Timeline$Models$Horizontal) ? _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box')
		]) : _List_fromArray(
		[
			A2($elm$html$Html$Attributes$style, 'display', 'inline-block'),
			A2($elm$html$Html$Attributes$style, 'box-sizing', 'border-box')
		]);
	return {
		body: _List_fromArray(
			[
				A3(
				$elm$html$Html$node,
				'style',
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text($author$project$Timeline$styles)
					])),
				A3(
				$elm$html$Html$node,
				'style',
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(
						_Utils_ap($author$project$Widget$styles, $author$project$View$Segment$styles))
					])),
				A3(
				$elm$html$Html$node,
				'style',
				_List_Nil,
				_List_fromArray(
					[
						$elm$html$Html$text(
						function () {
							var _v0 = A2($elm$core$Maybe$withDefault, model.colorScheme, model.options.colorScheme);
							if (_v0.$ === 'Light') {
								return 'body {background-color: white;}';
							} else {
								return $author$project$Widget$darkStyle;
							}
						}())
					])),
				A2(
				$elm$html$Html$div,
				_List_Nil,
				_List_fromArray(
					[
						A2(
						$elm$html$Html$map,
						$author$project$Widget$TimelineMsg,
						A3(
							$author$project$Timeline$view,
							cssDisplay,
							model.timelineState,
							displayTotals ? (_Utils_eq(model.options.direction, $author$project$Timeline$Models$Horizontal) ? {height: model.box.height - totalsSize, width: model.box.width} : {height: model.box.height, width: model.box.width - totalsSize}) : model.box)),
						displayTotals ? A2(
						$elm$html$Html$map,
						$author$project$Widget$TotalsMsg,
						A3(
							$author$project$Timeline$view,
							A2(
								$elm$core$List$cons,
								A2(
									$elm$html$Html$Attributes$style,
									_Utils_eq(model.options.direction, $author$project$Timeline$Models$Horizontal) ? 'border-top' : 'border-left',
									'1px solid #CCC'),
								cssDisplay),
							model.totalState,
							_Utils_eq(model.options.direction, $author$project$Timeline$Models$Horizontal) ? {height: totalsSize, width: model.box.width} : {height: model.box.height, width: totalsSize})) : $elm$html$Html$text('')
					])),
				A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('controls'),
						A2($elm$html$Html$Attributes$style, 'position', 'absolute'),
						A2($elm$html$Html$Attributes$style, 'top', '5px')
					]),
				_List_fromArray(
					[
						A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick(
								$author$project$Widget$ShowModal($author$project$Widget$Help))
							]),
						_List_fromArray(
							[
								A2(
								$phosphor_icons$phosphor_elm$Phosphor$toHtml,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'vertical-align', 'sub')
									]),
								A2(
									$phosphor_icons$phosphor_elm$Phosphor$withSizeUnit,
									'px',
									A2(
										$phosphor_icons$phosphor_elm$Phosphor$withSize,
										14,
										$phosphor_icons$phosphor_elm$Phosphor$questionMark($phosphor_icons$phosphor_elm$Phosphor$Bold))))
							])),
						A2(
						$elm$html$Html$button,
						_List_fromArray(
							[
								$elm$html$Html$Events$onClick(
								$author$project$Widget$ShowModal($author$project$Widget$Settings))
							]),
						_List_fromArray(
							[
								A2(
								$phosphor_icons$phosphor_elm$Phosphor$toHtml,
								_List_fromArray(
									[
										A2($elm$html$Html$Attributes$style, 'vertical-align', 'sub')
									]),
								A2(
									$phosphor_icons$phosphor_elm$Phosphor$withSizeUnit,
									'px',
									A2(
										$phosphor_icons$phosphor_elm$Phosphor$withSize,
										14,
										$phosphor_icons$phosphor_elm$Phosphor$gearFine($phosphor_icons$phosphor_elm$Phosphor$Bold))))
							]))
					])),
				((!model.showInspector) || $author$project$Timeline$Models$selectionIsEmpty(model.timelineState.selection)) ? $elm$html$Html$text('') : A3($author$project$Widget$inspectorView, model, model.editableFields, model.editableStates),
				function () {
				var _v1 = model.showModal;
				switch (_v1.$) {
					case 'Help':
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('modal-background'),
									$elm$html$Html$Events$onClick(
									$author$project$Widget$ShowModal($author$project$Widget$None))
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('modal help')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('close-button'),
													$elm$html$Html$Events$onClick(
													$author$project$Widget$ShowModal($author$project$Widget$None))
												]),
											_List_fromArray(
												[
													A2(
													$phosphor_icons$phosphor_elm$Phosphor$toHtml,
													_List_fromArray(
														[
															A2($elm$html$Html$Attributes$style, 'vertical-align', 'sub')
														]),
													A2(
														$phosphor_icons$phosphor_elm$Phosphor$withSizeUnit,
														'px',
														A2(
															$phosphor_icons$phosphor_elm$Phosphor$withSize,
															14,
															$phosphor_icons$phosphor_elm$Phosphor$x($phosphor_icons$phosphor_elm$Phosphor$Bold))))
												])),
											A2($elm_explorations$markdown$Markdown$toHtml, _List_Nil, model.help)
										]))
								]));
					case 'Settings':
						return $author$project$Widget$settingsView(model);
					case 'None':
						return $elm$html$Html$text('');
					default:
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									A2($elm$html$Html$Attributes$style, 'display', 'flex'),
									A2($elm$html$Html$Attributes$style, 'justify-content', 'center')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('modal-background'),
											$elm$html$Html$Events$onClick(
											$author$project$Widget$ShowModal($author$project$Widget$None))
										]),
									_List_Nil),
									A2(
									$elm$html$Html$div,
									_List_fromArray(
										[
											$elm$html$Html$Attributes$class('modal create-new')
										]),
									_List_fromArray(
										[
											A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Attributes$class('close-button'),
													$elm$html$Html$Events$onClick(
													$author$project$Widget$ShowModal($author$project$Widget$None))
												]),
											_List_fromArray(
												[
													A2(
													$phosphor_icons$phosphor_elm$Phosphor$toHtml,
													_List_fromArray(
														[
															A2($elm$html$Html$Attributes$style, 'vertical-align', 'sub')
														]),
													A2(
														$phosphor_icons$phosphor_elm$Phosphor$withSizeUnit,
														'px',
														A2(
															$phosphor_icons$phosphor_elm$Phosphor$withSize,
															14,
															$phosphor_icons$phosphor_elm$Phosphor$x($phosphor_icons$phosphor_elm$Phosphor$Bold))))
												])),
											A2(
											$elm$html$Html$h1,
											_List_Nil,
											_List_fromArray(
												[
													$elm$html$Html$text(
													$author$project$Widget$Translations$newMoment(model.translations))
												])),
											A4($author$project$Widget$fieldsView, $author$project$Widget$NewMoment, model, model.groupsFields, model.groupsStates),
											A2(
											$elm$html$Html$button,
											_List_fromArray(
												[
													$elm$html$Html$Events$onClick($author$project$Widget$CreateNew),
													$elm$html$Html$Attributes$disabled(
													_Utils_eq(
														$author$project$Widget$validateNewMoment(model),
														$elm$core$Maybe$Nothing))
												]),
											_List_fromArray(
												[
													$elm$html$Html$text(
													$author$project$Widget$Translations$create(model.translations))
												]))
										]))
								]));
				}
			}(),
				$elm$core$List$isEmpty(model.error) ? $elm$html$Html$text('') : A2(
				$elm$html$Html$div,
				_List_fromArray(
					[
						$elm$html$Html$Attributes$class('errors')
					]),
				A2(
					$elm$core$List$map,
					function (_v2) {
						var iderr = _v2.a;
						var err = _v2.b;
						return A2(
							$elm$html$Html$div,
							_List_fromArray(
								[
									$elm$html$Html$Attributes$class('error')
								]),
							_List_fromArray(
								[
									A2(
									$elm$html$Html$button,
									_List_fromArray(
										[
											$elm$html$Html$Events$onClick(
											$author$project$Widget$CloseError(iderr))
										]),
									_List_fromArray(
										[
											A2(
											$phosphor_icons$phosphor_elm$Phosphor$toHtml,
											_List_fromArray(
												[
													A2($elm$html$Html$Attributes$style, 'vertical-align', 'sub')
												]),
											A2(
												$phosphor_icons$phosphor_elm$Phosphor$withSizeUnit,
												'px',
												A2(
													$phosphor_icons$phosphor_elm$Phosphor$withSize,
													14,
													$phosphor_icons$phosphor_elm$Phosphor$x($phosphor_icons$phosphor_elm$Phosphor$Regular))))
										])),
									$elm$html$Html$text(err)
								]));
					},
					model.error))
			]),
		title: 'WeSchedule'
	};
};
var $author$project$Widget$main = $elm$browser$Browser$document(
	{
		init: $author$project$Widget$init,
		subscriptions: function (model) {
			return $elm$core$Platform$Sub$batch(
				_List_fromArray(
					[
						$author$project$Widget$setRecords($author$project$Widget$Receive),
						$author$project$Widget$setSelection($author$project$Widget$ChangeSelection),
						$author$project$Widget$setOptions($author$project$Widget$ChangeOptions),
						$author$project$Widget$setError($author$project$Widget$AddError),
						$elm$browser$Browser$Events$onResize($author$project$Widget$sizeToMsg),
						A2(
						$elm$core$Platform$Sub$map,
						$author$project$Widget$TimelineMsg,
						$author$project$Timeline$subscriptions(model.timelineState)),
						A2(
						$elm$core$Platform$Sub$map,
						$author$project$Widget$TotalsMsg,
						$author$project$Timeline$subscriptions(model.totalState)),
						function () {
						var _v0 = model.showModal;
						if (_v0.$ === 'None') {
							return $elm$core$Platform$Sub$none;
						} else {
							return $elm$browser$Browser$Events$onKeyDown(
								A2(
									$elm$json$Json$Decode$andThen,
									function (key) {
										return (key === 'Escape') ? $elm$json$Json$Decode$succeed(
											$author$project$Widget$ShowModal($author$project$Widget$None)) : $elm$json$Json$Decode$fail('');
									},
									A2($elm$json$Json$Decode$field, 'key', $elm$json$Json$Decode$string)));
						}
					}()
					]));
		},
		update: $author$project$Widget$update,
		view: $author$project$Widget$view
	});
_Platform_export({'Widget':{'init':$author$project$Widget$main($elm$json$Json$Decode$value)(0)}});}(this));